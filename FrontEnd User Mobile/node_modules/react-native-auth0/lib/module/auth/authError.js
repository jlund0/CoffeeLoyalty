import BaseError from '../utils/baseError';
export default class AuthError extends BaseError {
  constructor(response) {
    const {
      status,
      json,
      text
    } = response;
    const {
      error,
      error_description: description
    } = json ?? {
      error: undefined,
      error_description: undefined
    };
    super(error || 'a0.response.invalid', description || text || handleInvalidToken(response) || 'unknown error');
    this.json = json;
    this.status = status;
  }
}
export const handleInvalidToken = response => {
  var _response$headers;
  return response !== null && response !== void 0 && (_response$headers = response.headers) !== null && _response$headers !== void 0 && (_response$headers = _response$headers.get('www-authenticate')) !== null && _response$headers !== void 0 && _response$headers.match(/error="invalid_token"/g) ? 'invalid_token' : null;
};
//# sourceMappingURL=authError.js.map