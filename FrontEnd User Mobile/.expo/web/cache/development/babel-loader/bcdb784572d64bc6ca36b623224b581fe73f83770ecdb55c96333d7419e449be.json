{"ast":null,"code":"import Platform from \"../Utilities/Platform\";\nif (__DEV__) {\n  require(\"./setUpReactDevTools\");\n  var JSInspector = require(\"../JSInspector/JSInspector\");\n  JSInspector.registerAgent(require(\"../JSInspector/NetworkAgent\"));\n  var isLikelyARealBrowser = global.navigator != null && global.navigator.appName === 'Netscape';\n  if (!Platform.isTesting) {\n    var HMRClient = require(\"../Utilities/HMRClient\");\n    if (console._isPolyfilled) {\n      ['trace', 'info', 'warn', 'error', 'log', 'group', 'groupCollapsed', 'groupEnd', 'debug'].forEach(function (level) {\n        var originalFunction = console[level];\n        console[level] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          HMRClient.log(level, args);\n          originalFunction.apply(console, args);\n        };\n      });\n    } else {\n      HMRClient.log('log', [`JavaScript logs will appear in your ${isLikelyARealBrowser ? 'browser' : 'environment'} console`]);\n    }\n  }\n  require(\"./setUpReactRefresh\");\n}","map":{"version":3,"names":["Platform","__DEV__","require","JSInspector","registerAgent","isLikelyARealBrowser","global","navigator","appName","isTesting","HMRClient","console","_isPolyfilled","forEach","level","originalFunction","_len","arguments","length","args","Array","_key","log","apply"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Core/setUpDeveloperTools.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport Platform from '../Utilities/Platform';\r\n\r\ndeclare var console: typeof console & {_isPolyfilled: boolean, ...};\r\n\r\n/**\r\n * Sets up developer tools for React Native.\r\n * You can use this module directly, or just require InitializeCore.\r\n */\r\nif (__DEV__) {\r\n  require('./setUpReactDevTools');\r\n\r\n  // Set up inspector\r\n  const JSInspector = require('../JSInspector/JSInspector');\r\n  JSInspector.registerAgent(require('../JSInspector/NetworkAgent'));\r\n\r\n  // Note we can't check if console is \"native\" because it would appear \"native\" in JSC and Hermes.\r\n  // We also can't check any properties that don't exist in the Chrome worker environment.\r\n  // So we check a navigator property that's set to a particular value (\"Netscape\") in all real browsers.\r\n  const isLikelyARealBrowser =\r\n    global.navigator != null &&\r\n    /*              _\r\n     *             | |\r\n     *   _ __   ___| |_ ___  ___ __ _ _ __   ___\r\n     *  | '_ \\ / _ \\ __/ __|/ __/ _` | '_ \\ / _ \\\r\n     *  | | | |  __/ |_\\__ \\ (_| (_| | |_) |  __/\r\n     *  |_| |_|\\___|\\__|___/\\___\\__,_| .__/ \\___|\r\n     *                               | |\r\n     *                               |_|\r\n     */\r\n    global.navigator.appName === 'Netscape'; // Any real browser\r\n\r\n  if (!Platform.isTesting) {\r\n    const HMRClient = require('../Utilities/HMRClient');\r\n\r\n    if (console._isPolyfilled) {\r\n      // We assume full control over the console and send JavaScript logs to Metro.\r\n      [\r\n        'trace',\r\n        'info',\r\n        'warn',\r\n        'error',\r\n        'log',\r\n        'group',\r\n        'groupCollapsed',\r\n        'groupEnd',\r\n        'debug',\r\n      ].forEach(level => {\r\n        const originalFunction = console[level];\r\n        console[level] = function (...args: $ReadOnlyArray<mixed>) {\r\n          HMRClient.log(level, args);\r\n          originalFunction.apply(console, args);\r\n        };\r\n      });\r\n    } else {\r\n      // We assume the environment has a real rich console (like Chrome), and don't hijack it to log to Metro.\r\n      // It's likely the developer is using rich console to debug anyway, and hijacking it would\r\n      // lose the filenames in console.log calls: https://github.com/facebook/react-native/issues/26788.\r\n      HMRClient.log('log', [\r\n        `JavaScript logs will appear in your ${\r\n          isLikelyARealBrowser ? 'browser' : 'environment'\r\n        } console`,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  require('./setUpReactRefresh');\r\n}\r\n"],"mappings":"AAUA,OAAOA,QAAQ;AAQf,IAAIC,OAAO,EAAE;EACXC,OAAO,uBAAuB,CAAC;EAG/B,IAAMC,WAAW,GAAGD,OAAO,6BAA6B,CAAC;EACzDC,WAAW,CAACC,aAAa,CAACF,OAAO,8BAA8B,CAAC,CAAC;EAKjE,IAAMG,oBAAoB,GACxBC,MAAM,CAACC,SAAS,IAAI,IAAI,IAUxBD,MAAM,CAACC,SAAS,CAACC,OAAO,KAAK,UAAU;EAEzC,IAAI,CAACR,QAAQ,CAACS,SAAS,EAAE;IACvB,IAAMC,SAAS,GAAGR,OAAO,yBAAyB,CAAC;IAEnD,IAAIS,OAAO,CAACC,aAAa,EAAE;MAEzB,CACE,OAAO,EACP,MAAM,EACN,MAAM,EACN,OAAO,EACP,KAAK,EACL,OAAO,EACP,gBAAgB,EAChB,UAAU,EACV,OAAO,CACR,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAI;QACjB,IAAMC,gBAAgB,GAAGJ,OAAO,CAACG,KAAK,CAAC;QACvCH,OAAO,CAACG,KAAK,CAAC,GAAG,YAA0C;UAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAA7BC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;YAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;UAAA;UAChCX,SAAS,CAACY,GAAG,CAACR,KAAK,EAAEK,IAAI,CAAC;UAC1BJ,gBAAgB,CAACQ,KAAK,CAACZ,OAAO,EAAEQ,IAAI,CAAC;QACvC,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,MAAM;MAILT,SAAS,CAACY,GAAG,CAAC,KAAK,EAAE,CAClB,uCACCjB,oBAAoB,GAAG,SAAS,GAAG,aACpC,UAAS,CACX,CAAC;IACJ;EACF;EAEAH,OAAO,sBAAsB,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}