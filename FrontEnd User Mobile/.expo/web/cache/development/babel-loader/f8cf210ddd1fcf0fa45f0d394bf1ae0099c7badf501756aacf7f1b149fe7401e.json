{"ast":null,"code":"import StatusBar from \"../../Components/StatusBar/StatusBar\";\nimport View from \"../../Components/View/View\";\nimport Image from \"../../Image/Image\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LogBoxInspectorHeader(props) {\n  if (props.level === 'syntax') {\n    return _jsx(View, {\n      style: [styles.safeArea, styles[props.level]],\n      children: _jsx(View, {\n        style: styles.header,\n        children: _jsx(View, {\n          style: styles.title,\n          children: _jsx(Text, {\n            style: styles.titleText,\n            children: \"Failed to compile\"\n          })\n        })\n      })\n    });\n  }\n  var prevIndex = props.selectedIndex - 1 < 0 ? props.total - 1 : props.selectedIndex - 1;\n  var nextIndex = props.selectedIndex + 1 > props.total - 1 ? 0 : props.selectedIndex + 1;\n  var titleText = `Log ${props.selectedIndex + 1} of ${props.total}`;\n  return _jsx(View, {\n    style: [styles.safeArea, styles[props.level]],\n    children: _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(LogBoxInspectorHeaderButton, {\n        disabled: props.total <= 1,\n        level: props.level,\n        image: require(\"./LogBoxImages/chevron-left.png\"),\n        onPress: function onPress() {\n          return props.onSelectIndex(prevIndex);\n        }\n      }), _jsx(View, {\n        style: styles.title,\n        children: _jsx(Text, {\n          style: styles.titleText,\n          children: titleText\n        })\n      }), _jsx(LogBoxInspectorHeaderButton, {\n        disabled: props.total <= 1,\n        level: props.level,\n        image: require(\"./LogBoxImages/chevron-right.png\"),\n        onPress: function onPress() {\n          return props.onSelectIndex(nextIndex);\n        }\n      })]\n    })\n  });\n}\nvar backgroundForLevel = function backgroundForLevel(level) {\n  return {\n    warn: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getWarningDarkColor()\n    },\n    error: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getErrorDarkColor()\n    },\n    fatal: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    syntax: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getFatalDarkColor()\n    }\n  }[level];\n};\nfunction LogBoxInspectorHeaderButton(props) {\n  return _jsx(LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? null : props.onPress,\n    style: headerStyles.button,\n    children: props.disabled ? null : _jsx(Image, {\n      source: props.image,\n      style: headerStyles.buttonImage\n    })\n  });\n}\nvar headerStyles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: -8,\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor()\n  }\n});\nvar styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor()\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor()\n  },\n  header: {\n    flexDirection: 'row',\n    height: Platform.select({\n      android: 48,\n      ios: 44\n    })\n  },\n  title: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  safeArea: {\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 40\n  }\n});\nexport default LogBoxInspectorHeader;","map":{"version":3,"names":["StatusBar","View","Image","StyleSheet","Text","Platform","LogBoxButton","LogBoxStyle","React","jsx","_jsx","jsxs","_jsxs","LogBoxInspectorHeader","props","level","style","styles","safeArea","children","header","title","titleText","prevIndex","selectedIndex","total","nextIndex","LogBoxInspectorHeaderButton","disabled","image","require","onPress","onSelectIndex","backgroundForLevel","warn","default","pressed","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","backgroundColor","headerStyles","button","source","buttonImage","create","alignItems","aspectRatio","justifyContent","marginTop","marginRight","marginLeft","marginBottom","borderRadius","height","width","tintColor","getTextColor","getFatalColor","getWarningColor","getErrorColor","flexDirection","select","android","ios","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","paddingTop","OS","currentHeight"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorHeader.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {ImageSource} from '../../Image/ImageSource';\r\nimport type {LogLevel} from '../Data/LogBoxLog';\r\n\r\nimport StatusBar from '../../Components/StatusBar/StatusBar';\r\nimport View from '../../Components/View/View';\r\nimport Image from '../../Image/Image';\r\nimport StyleSheet from '../../StyleSheet/StyleSheet';\r\nimport Text from '../../Text/Text';\r\nimport Platform from '../../Utilities/Platform';\r\nimport LogBoxButton from './LogBoxButton';\r\nimport * as LogBoxStyle from './LogBoxStyle';\r\nimport * as React from 'react';\r\ntype Props = $ReadOnly<{|\r\n  onSelectIndex: (selectedIndex: number) => void,\r\n  selectedIndex: number,\r\n  total: number,\r\n  level: LogLevel,\r\n|}>;\r\n\r\nfunction LogBoxInspectorHeader(props: Props): React.Node {\r\n  if (props.level === 'syntax') {\r\n    return (\r\n      <View style={[styles.safeArea, styles[props.level]]}>\r\n        <View style={styles.header}>\r\n          <View style={styles.title}>\r\n            <Text style={styles.titleText}>Failed to compile</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const prevIndex =\r\n    props.selectedIndex - 1 < 0 ? props.total - 1 : props.selectedIndex - 1;\r\n  const nextIndex =\r\n    props.selectedIndex + 1 > props.total - 1 ? 0 : props.selectedIndex + 1;\r\n\r\n  const titleText = `Log ${props.selectedIndex + 1} of ${props.total}`;\r\n\r\n  return (\r\n    <View style={[styles.safeArea, styles[props.level]]}>\r\n      <View style={styles.header}>\r\n        <LogBoxInspectorHeaderButton\r\n          disabled={props.total <= 1}\r\n          level={props.level}\r\n          image={require('./LogBoxImages/chevron-left.png')}\r\n          onPress={() => props.onSelectIndex(prevIndex)}\r\n        />\r\n        <View style={styles.title}>\r\n          <Text style={styles.titleText}>{titleText}</Text>\r\n        </View>\r\n        <LogBoxInspectorHeaderButton\r\n          disabled={props.total <= 1}\r\n          level={props.level}\r\n          image={require('./LogBoxImages/chevron-right.png')}\r\n          onPress={() => props.onSelectIndex(nextIndex)}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst backgroundForLevel = (level: LogLevel) =>\r\n  ({\r\n    warn: {\r\n      default: 'transparent',\r\n      pressed: LogBoxStyle.getWarningDarkColor(),\r\n    },\r\n    error: {\r\n      default: 'transparent',\r\n      pressed: LogBoxStyle.getErrorDarkColor(),\r\n    },\r\n    fatal: {\r\n      default: 'transparent',\r\n      pressed: LogBoxStyle.getFatalDarkColor(),\r\n    },\r\n    syntax: {\r\n      default: 'transparent',\r\n      pressed: LogBoxStyle.getFatalDarkColor(),\r\n    },\r\n  }[level]);\r\n\r\nfunction LogBoxInspectorHeaderButton(\r\n  props: $ReadOnly<{|\r\n    disabled: boolean,\r\n    image: ImageSource,\r\n    level: LogLevel,\r\n    onPress?: ?() => void,\r\n  |}>,\r\n): React.Node {\r\n  return (\r\n    <LogBoxButton\r\n      backgroundColor={backgroundForLevel(props.level)}\r\n      onPress={props.disabled ? null : props.onPress}\r\n      style={headerStyles.button}>\r\n      {props.disabled ? null : (\r\n        <Image source={props.image} style={headerStyles.buttonImage} />\r\n      )}\r\n    </LogBoxButton>\r\n  );\r\n}\r\n\r\nconst headerStyles = StyleSheet.create({\r\n  button: {\r\n    alignItems: 'center',\r\n    aspectRatio: 1,\r\n    justifyContent: 'center',\r\n    marginTop: 5,\r\n    marginRight: 6,\r\n    marginLeft: 6,\r\n    marginBottom: -8,\r\n    borderRadius: 3,\r\n  },\r\n  buttonImage: {\r\n    height: 14,\r\n    width: 8,\r\n    tintColor: LogBoxStyle.getTextColor(),\r\n  },\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  syntax: {\r\n    backgroundColor: LogBoxStyle.getFatalColor(),\r\n  },\r\n  fatal: {\r\n    backgroundColor: LogBoxStyle.getFatalColor(),\r\n  },\r\n  warn: {\r\n    backgroundColor: LogBoxStyle.getWarningColor(),\r\n  },\r\n  error: {\r\n    backgroundColor: LogBoxStyle.getErrorColor(),\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    height: Platform.select({\r\n      android: 48,\r\n      ios: 44,\r\n    }),\r\n  },\r\n  title: {\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  titleText: {\r\n    color: LogBoxStyle.getTextColor(),\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    includeFontPadding: false,\r\n    lineHeight: 20,\r\n  },\r\n  safeArea: {\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 40,\r\n  },\r\n});\r\n\r\nexport default LogBoxInspectorHeader;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}