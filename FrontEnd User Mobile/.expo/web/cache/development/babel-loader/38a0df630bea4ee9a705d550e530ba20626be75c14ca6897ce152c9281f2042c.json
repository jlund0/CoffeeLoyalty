{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { app } from \"../firebase\";\nimport { SocialButtons } from \"../components/socialSignin\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\nauth.languageCode = \"it\";\nvar handleEmailandPasswordLogin = function handleEmailandPasswordLogin(email, password) {\n  signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n    var user = userCredentials.user;\n    console.log(\"Logged in with:\", user.email);\n  }).catch(function (error) {\n    return alert(error.message);\n  });\n};\nexport default function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  console.log(\"Sign In Screen\");\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      backgroundColor: \"#FAF0E6\"\n    },\n    children: _jsxs(View, {\n      style: {\n        padding: 25\n      },\n      children: [_jsx(View, {\n        style: {\n          alignItems: \"center\",\n          marginBottom: 30\n        },\n        children: _jsx(Image, {\n          source: require(\"../assets/coffeelogin.png\"),\n          style: {\n            height: 300,\n            width: 300\n          },\n          resizeMode: \"contain\"\n        })\n      }), _jsx(Text, {\n        style: {\n          fontFamily: \"Roboto-Medium\",\n          fontSize: 28,\n          fontWeight: \"500\",\n          color: \"#333\",\n          marginBottom: 30\n        },\n        children: \"Login\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          borderBottomColor: \"#ccc\",\n          borderBottomWidth: 1,\n          paddingBottom: 8,\n          marginBottom: 25\n        },\n        children: [_jsx(FontAwesome, {\n          name: \"at\",\n          size: 20\n        }), _jsx(TextInput, {\n          placeholder: \" Email\",\n          value: email,\n          onChangeText: setEmail,\n          inputMode: \"email\",\n          style: {\n            flex: 1,\n            paddingVertical: 0,\n            paddingHorizontal: 10\n          }\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          borderBottomColor: \"#ccc\",\n          borderBottomWidth: 1,\n          paddingBottom: 8,\n          marginBottom: 25\n        },\n        children: [_jsx(FontAwesome, {\n          name: \"lock\",\n          size: 20\n        }), _jsx(TextInput, {\n          placeholder: \" Password\",\n          value: password,\n          onChangeText: setPassword,\n          secureTextEntry: true,\n          style: {\n            flex: 1,\n            paddingVertical: 0,\n            paddingHorizontal: 10\n          }\n        }), _jsx(TouchableOpacity, {\n          children: _jsx(Text, {\n            children: \"Forgot your password?\"\n          })\n        })]\n      }), _jsx(Button, {\n        title: \"Login\",\n        onPress: function onPress() {\n          return handleEmailandPasswordLogin(email, password);\n        }\n      }), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          marginBottom: 30\n        },\n        children: [_jsx(Text, {\n          children: \"New to the app?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"Register\");\n          },\n          children: _jsxs(Text, {\n            style: {\n              color: \"#AD40AF\",\n              fontWeight: \"700\"\n            },\n            children: [\" \", \"Register\"]\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 20\n  }\n});","map":{"version":3,"names":["React","View","TextInput","Button","Text","TouchableOpacity","StyleSheet","SafeAreaView","Image","FontAwesome","getAuth","signInWithEmailAndPassword","app","SocialButtons","jsx","_jsx","jsxs","_jsxs","auth","languageCode","handleEmailandPasswordLogin","email","password","then","userCredentials","user","console","log","catch","error","alert","message","SignInScreen","_ref","navigation","_React$useState","useState","_React$useState2","_slicedToArray","setEmail","_React$useState3","_React$useState4","setPassword","style","flex","justifyContent","backgroundColor","children","padding","alignItems","marginBottom","source","require","height","width","resizeMode","fontFamily","fontSize","fontWeight","color","flexDirection","borderBottomColor","borderBottomWidth","paddingBottom","name","size","placeholder","value","onChangeText","inputMode","paddingVertical","paddingHorizontal","secureTextEntry","title","onPress","navigate","styles","create","input","margin","borderWidth","borderRadius"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/FrontEnd User Mobile/screens/SignIn.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  TextInput,\n  Button,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  SafeAreaView,\n  Image,\n} from \"react-native\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { app } from \"../firebase\";\nimport { SocialButtons } from \"../components/socialSignin\";\n\nconst auth = getAuth(app);\nauth.languageCode = \"it\";\n\n//Sign Ins\nconst handleEmailandPasswordLogin = (email, password) => {\n  signInWithEmailAndPassword(auth, email, password)\n    .then((userCredentials) => {\n      const user = userCredentials.user;\n      console.log(\"Logged in with:\", user.email);\n    })\n    .catch((error) => alert(error.message));\n};\n\nexport default function SignInScreen({ navigation }) {\n  console.log(\"Sign In Screen\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  return (\n    <SafeAreaView\n      style={{ flex: 1, justifyContent: \"center\", backgroundColor: \"#FAF0E6\" }}\n    >\n      <View style={{ padding: 25 }}>\n        <View style={{ alignItems: \"center\", marginBottom: 30 }}>\n          {/*Animated card login image*/}\n          <Image\n            source={require(\"../assets/coffeelogin.png\")}\n            style={{ height: 300, width: 300 }}\n            resizeMode=\"contain\"\n          ></Image>\n        </View>\n        <Text\n          style={{\n            fontFamily: \"Roboto-Medium\",\n            fontSize: 28,\n            fontWeight: \"500\",\n            color: \"#333\",\n            marginBottom: 30,\n          }}\n        >\n          Login\n        </Text>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderBottomColor: \"#ccc\",\n            borderBottomWidth: 1,\n            paddingBottom: 8,\n            marginBottom: 25,\n          }}\n        >\n          <FontAwesome name=\"at\" size={20} />\n          <TextInput\n            placeholder={\" Email\"}\n            value={email}\n            onChangeText={setEmail}\n            inputMode=\"email\"\n            style={{ flex: 1, paddingVertical: 0, paddingHorizontal: 10 }}\n          />\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            borderBottomColor: \"#ccc\",\n            borderBottomWidth: 1,\n            paddingBottom: 8,\n            marginBottom: 25,\n          }}\n        >\n          <FontAwesome name=\"lock\" size={20} />\n          <TextInput\n            placeholder={\" Password\"}\n            value={password}\n            onChangeText={setPassword}\n            secureTextEntry\n            style={{ flex: 1, paddingVertical: 0, paddingHorizontal: 10 }}\n          />\n          <TouchableOpacity>\n            <Text>Forgot your password?</Text>\n          </TouchableOpacity>\n        </View>\n        <Button\n          title=\"Login\"\n          onPress={() => handleEmailandPasswordLogin(email, password)}\n        />\n\n        {/* <Text\n          style={{\n            textAlign: \"center\",\n            color: \"#666\",\n            marginBottom: 30,\n            marginTop: 30,\n          }}\n        >\n          Or, login with ...\n        </Text>\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"space-evenly\",\n            marginBottom: 30,\n          }}\n        >\n          <SocialButtons />\n        </View> */}\n\n        <View\n          style={{\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            marginBottom: 30,\n          }}\n        >\n          <Text>New to the app?</Text>\n          <TouchableOpacity onPress={() => navigation.navigate(\"Register\")}>\n            <Text style={{ color: \"#AD40AF\", fontWeight: \"700\" }}>\n              {\" \"}\n              Register\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\nconst styles = StyleSheet.create({\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    borderRadius: 20,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}