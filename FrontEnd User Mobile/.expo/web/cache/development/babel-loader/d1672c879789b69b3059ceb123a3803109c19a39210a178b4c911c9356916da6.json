{"ast":null,"code":"'use strict';\nvar matricesDiffer = function matricesDiffer(one, two) {\n  if (one === two) {\n    return false;\n  }\n  return !one || !two || one[12] !== two[12] || one[13] !== two[13] || one[14] !== two[14] || one[5] !== two[5] || one[10] !== two[10] || one[0] !== two[0] || one[1] !== two[1] || one[2] !== two[2] || one[3] !== two[3] || one[4] !== two[4] || one[6] !== two[6] || one[7] !== two[7] || one[8] !== two[8] || one[9] !== two[9] || one[11] !== two[11] || one[15] !== two[15];\n};\nmodule.exports = matricesDiffer;","map":{"version":3,"names":["matricesDiffer","one","two","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Utilities/differ/matricesDiffer.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Unrolls an array comparison specially for matrices. Prioritizes\r\n * checking of indices that are most likely to change so that the comparison\r\n * bails as early as possible.\r\n *\r\n * @param {MatrixMath.Matrix} one First matrix.\r\n * @param {MatrixMath.Matrix} two Second matrix.\r\n * @return {boolean} Whether or not the two matrices differ.\r\n */\r\nconst matricesDiffer = function (\r\n  one: ?Array<number>,\r\n  two: ?Array<number>,\r\n): boolean {\r\n  if (one === two) {\r\n    return false;\r\n  }\r\n  return (\r\n    !one ||\r\n    !two ||\r\n    one[12] !== two[12] ||\r\n    one[13] !== two[13] ||\r\n    one[14] !== two[14] ||\r\n    one[5] !== two[5] ||\r\n    one[10] !== two[10] ||\r\n    one[0] !== two[0] ||\r\n    one[1] !== two[1] ||\r\n    one[2] !== two[2] ||\r\n    one[3] !== two[3] ||\r\n    one[4] !== two[4] ||\r\n    one[6] !== two[6] ||\r\n    one[7] !== two[7] ||\r\n    one[8] !== two[8] ||\r\n    one[9] !== two[9] ||\r\n    one[11] !== two[11] ||\r\n    one[15] !== two[15]\r\n  );\r\n};\r\n\r\nmodule.exports = matricesDiffer;\r\n"],"mappings":"AAUA,YAAY;AAWZ,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAClBC,GAAmB,EACnBC,GAAmB,EACV;EACT,IAAID,GAAG,KAAKC,GAAG,EAAE;IACf,OAAO,KAAK;EACd;EACA,OACE,CAACD,GAAG,IACJ,CAACC,GAAG,IACJD,GAAG,CAAC,EAAE,CAAC,KAAKC,GAAG,CAAC,EAAE,CAAC,IACnBD,GAAG,CAAC,EAAE,CAAC,KAAKC,GAAG,CAAC,EAAE,CAAC,IACnBD,GAAG,CAAC,EAAE,CAAC,KAAKC,GAAG,CAAC,EAAE,CAAC,IACnBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,EAAE,CAAC,KAAKC,GAAG,CAAC,EAAE,CAAC,IACnBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,CAAC,CAAC,KAAKC,GAAG,CAAC,CAAC,CAAC,IACjBD,GAAG,CAAC,EAAE,CAAC,KAAKC,GAAG,CAAC,EAAE,CAAC,IACnBD,GAAG,CAAC,EAAE,CAAC,KAAKC,GAAG,CAAC,EAAE,CAAC;AAEvB,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGJ,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}