{"ast":null,"code":"import ScrollView from \"../../Components/ScrollView/ScrollView\";\nimport View from \"../../Components/View/View\";\nimport openFileInEditor from \"../../Core/Devtools/openFileInEditor\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport Platform from \"../../Utilities/Platform\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport AnsiHighlight from \"./AnsiHighlight\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport LogBoxInspectorSection from \"./LogBoxInspectorSection\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LogBoxInspectorCodeFrame(props) {\n  var codeFrame = props.codeFrame;\n  if (codeFrame == null) {\n    return null;\n  }\n  function getFileName() {\n    var matches = /[^/]*$/.exec(codeFrame.fileName);\n    if (matches && matches.length > 0) {\n      return matches[0];\n    }\n    return codeFrame.fileName;\n  }\n  function getLocation() {\n    var location = codeFrame.location;\n    if (location != null) {\n      return ` (${location.row}:${location.column + 1})`;\n    }\n    return null;\n  }\n  return _jsx(LogBoxInspectorSection, {\n    heading: \"Source\",\n    action: _jsx(AppInfo, {}),\n    children: _jsxs(View, {\n      style: styles.box,\n      children: [_jsx(View, {\n        style: styles.frame,\n        children: _jsx(ScrollView, {\n          horizontal: true,\n          children: _jsx(AnsiHighlight, {\n            style: styles.content,\n            text: codeFrame.content\n          })\n        })\n      }), _jsx(LogBoxButton, {\n        backgroundColor: {\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundDarkColor(1)\n        },\n        style: styles.button,\n        onPress: function onPress() {\n          var _codeFrame$location$r, _codeFrame$location;\n          openFileInEditor(codeFrame.fileName, (_codeFrame$location$r = (_codeFrame$location = codeFrame.location) == null ? void 0 : _codeFrame$location.row) != null ? _codeFrame$location$r : 0);\n        },\n        children: _jsxs(Text, {\n          style: styles.fileText,\n          children: [getFileName(), getLocation()]\n        })\n      })]\n    })\n  });\n}\nfunction AppInfo() {\n  var appInfo = LogBoxData.getAppInfo();\n  if (appInfo == null) {\n    return null;\n  }\n  return _jsx(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: appInfo.onPress ? LogBoxStyle.getBackgroundColor(1) : 'transparent'\n    },\n    style: appInfoStyles.buildButton,\n    onPress: appInfo.onPress,\n    children: _jsxs(Text, {\n      style: appInfoStyles.text,\n      children: [appInfo.appVersion, \" (\", appInfo.engine, \")\"]\n    })\n  });\n}\nvar appInfoStyles = StyleSheet.create({\n  text: {\n    color: LogBoxStyle.getTextColor(0.4),\n    fontSize: 12,\n    lineHeight: 12\n  },\n  buildButton: {\n    flex: 0,\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 5,\n    borderRadius: 5,\n    marginRight: -8\n  }\n});\nvar styles = StyleSheet.create({\n  box: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 5,\n    borderRadius: 3\n  },\n  frame: {\n    padding: 10,\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\n    borderBottomWidth: 1\n  },\n  button: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  content: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 20,\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  },\n  fileText: {\n    color: LogBoxStyle.getTextColor(0.5),\n    textAlign: 'center',\n    flex: 1,\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n    fontFamily: Platform.select({\n      android: 'monospace',\n      ios: 'Menlo'\n    })\n  }\n});\nexport default LogBoxInspectorCodeFrame;","map":{"version":3,"names":["ScrollView","View","openFileInEditor","StyleSheet","Text","Platform","LogBoxData","AnsiHighlight","LogBoxButton","LogBoxInspectorSection","LogBoxStyle","React","jsx","_jsx","jsxs","_jsxs","LogBoxInspectorCodeFrame","props","codeFrame","getFileName","matches","exec","fileName","length","getLocation","location","row","column","heading","action","AppInfo","children","style","styles","box","frame","horizontal","content","text","backgroundColor","default","pressed","getBackgroundDarkColor","button","onPress","_codeFrame$location$r","_codeFrame$location","fileText","appInfo","getAppInfo","getBackgroundColor","appInfoStyles","buildButton","appVersion","engine","create","color","getTextColor","fontSize","lineHeight","flex","flexGrow","paddingVertical","paddingHorizontal","borderRadius","marginRight","marginLeft","marginTop","padding","borderBottomColor","borderBottomWidth","paddingTop","paddingBottom","includeFontPadding","fontFamily","select","android","ios","textAlign"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorCodeFrame.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {CodeFrame} from '../Data/parseLogBoxLog';\r\n\r\nimport ScrollView from '../../Components/ScrollView/ScrollView';\r\nimport View from '../../Components/View/View';\r\nimport openFileInEditor from '../../Core/Devtools/openFileInEditor';\r\nimport StyleSheet from '../../StyleSheet/StyleSheet';\r\nimport Text from '../../Text/Text';\r\nimport Platform from '../../Utilities/Platform';\r\nimport * as LogBoxData from '../Data/LogBoxData';\r\nimport AnsiHighlight from './AnsiHighlight';\r\nimport LogBoxButton from './LogBoxButton';\r\nimport LogBoxInspectorSection from './LogBoxInspectorSection';\r\nimport * as LogBoxStyle from './LogBoxStyle';\r\nimport * as React from 'react';\r\ntype Props = $ReadOnly<{|\r\n  codeFrame: ?CodeFrame,\r\n|}>;\r\n\r\nfunction LogBoxInspectorCodeFrame(props: Props): React.Node {\r\n  const codeFrame = props.codeFrame;\r\n  if (codeFrame == null) {\r\n    return null;\r\n  }\r\n\r\n  function getFileName() {\r\n    // $FlowFixMe[incompatible-use]\r\n    const matches = /[^/]*$/.exec(codeFrame.fileName);\r\n    if (matches && matches.length > 0) {\r\n      return matches[0];\r\n    }\r\n\r\n    // $FlowFixMe[incompatible-use]\r\n    return codeFrame.fileName;\r\n  }\r\n\r\n  function getLocation() {\r\n    // $FlowFixMe[incompatible-use]\r\n    const location = codeFrame.location;\r\n    if (location != null) {\r\n      return ` (${location.row}:${\r\n        location.column + 1 /* Code frame columns are zero indexed */\r\n      })`;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <LogBoxInspectorSection heading=\"Source\" action={<AppInfo />}>\r\n      <View style={styles.box}>\r\n        <View style={styles.frame}>\r\n          <ScrollView horizontal>\r\n            <AnsiHighlight style={styles.content} text={codeFrame.content} />\r\n          </ScrollView>\r\n        </View>\r\n        <LogBoxButton\r\n          backgroundColor={{\r\n            default: 'transparent',\r\n            pressed: LogBoxStyle.getBackgroundDarkColor(1),\r\n          }}\r\n          style={styles.button}\r\n          onPress={() => {\r\n            openFileInEditor(codeFrame.fileName, codeFrame.location?.row ?? 0);\r\n          }}>\r\n          <Text style={styles.fileText}>\r\n            {getFileName()}\r\n            {getLocation()}\r\n          </Text>\r\n        </LogBoxButton>\r\n      </View>\r\n    </LogBoxInspectorSection>\r\n  );\r\n}\r\n\r\nfunction AppInfo() {\r\n  const appInfo = LogBoxData.getAppInfo();\r\n  if (appInfo == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <LogBoxButton\r\n      backgroundColor={{\r\n        default: 'transparent',\r\n        pressed: appInfo.onPress\r\n          ? LogBoxStyle.getBackgroundColor(1)\r\n          : 'transparent',\r\n      }}\r\n      style={appInfoStyles.buildButton}\r\n      onPress={appInfo.onPress}>\r\n      <Text style={appInfoStyles.text}>\r\n        {appInfo.appVersion} ({appInfo.engine})\r\n      </Text>\r\n    </LogBoxButton>\r\n  );\r\n}\r\n\r\nconst appInfoStyles = StyleSheet.create({\r\n  text: {\r\n    color: LogBoxStyle.getTextColor(0.4),\r\n    fontSize: 12,\r\n    lineHeight: 12,\r\n  },\r\n  buildButton: {\r\n    flex: 0,\r\n    flexGrow: 0,\r\n    paddingVertical: 4,\r\n    paddingHorizontal: 5,\r\n    borderRadius: 5,\r\n    marginRight: -8,\r\n  },\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n  box: {\r\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n    marginTop: 5,\r\n    borderRadius: 3,\r\n  },\r\n  frame: {\r\n    padding: 10,\r\n    borderBottomColor: LogBoxStyle.getTextColor(0.1),\r\n    borderBottomWidth: 1,\r\n  },\r\n  button: {\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  content: {\r\n    color: LogBoxStyle.getTextColor(1),\r\n    fontSize: 12,\r\n    includeFontPadding: false,\r\n    lineHeight: 20,\r\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\r\n  },\r\n  fileText: {\r\n    color: LogBoxStyle.getTextColor(0.5),\r\n    textAlign: 'center',\r\n    flex: 1,\r\n    fontSize: 12,\r\n    includeFontPadding: false,\r\n    lineHeight: 16,\r\n    fontFamily: Platform.select({android: 'monospace', ios: 'Menlo'}),\r\n  },\r\n});\r\n\r\nexport default LogBoxInspectorCodeFrame;\r\n"],"mappings":"AAYA,OAAOA,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,gBAAgB;AACvB,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAO,KAAKC,UAAU;AACtB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AACnB,OAAOC,sBAAsB;AAC7B,OAAO,KAAKC,WAAW;AACvB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAK/B,SAASC,wBAAwBA,CAACC,KAAY,EAAc;EAC1D,IAAMC,SAAS,GAAGD,KAAK,CAACC,SAAS;EACjC,IAAIA,SAAS,IAAI,IAAI,EAAE;IACrB,OAAO,IAAI;EACb;EAEA,SAASC,WAAWA,CAAA,EAAG;IAErB,IAAMC,OAAO,GAAG,QAAQ,CAACC,IAAI,CAACH,SAAS,CAACI,QAAQ,CAAC;IACjD,IAAIF,OAAO,IAAIA,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;MACjC,OAAOH,OAAO,CAAC,CAAC,CAAC;IACnB;IAGA,OAAOF,SAAS,CAACI,QAAQ;EAC3B;EAEA,SAASE,WAAWA,CAAA,EAAG;IAErB,IAAMC,QAAQ,GAAGP,SAAS,CAACO,QAAQ;IACnC,IAAIA,QAAQ,IAAI,IAAI,EAAE;MACpB,OAAQ,KAAIA,QAAQ,CAACC,GAAI,IACvBD,QAAQ,CAACE,MAAM,GAAG,CACnB,GAAE;IACL;IAEA,OAAO,IAAI;EACb;EAEA,OACEd,IAAA,CAACJ,sBAAsB;IAACmB,OAAO,EAAC,QAAQ;IAACC,MAAM,EAAEhB,IAAA,CAACiB,OAAO,IAAE,CAAE;IAAAC,QAAA,EAC3DhB,KAAA,CAACd,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACC,GAAI;MAAAH,QAAA,GACtBlB,IAAA,CAACZ,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACE,KAAM;QAAAJ,QAAA,EACxBlB,IAAA,CAACb,UAAU;UAACoC,UAAU;UAAAL,QAAA,EACpBlB,IAAA,CAACN,aAAa;YAACyB,KAAK,EAAEC,MAAM,CAACI,OAAQ;YAACC,IAAI,EAAEpB,SAAS,CAACmB;UAAQ,CAAE;QAAC,CACvD;MAAC,CACT,CAAC,EACPxB,IAAA,CAACL,YAAY;QACX+B,eAAe,EAAE;UACfC,OAAO,EAAE,aAAa;UACtBC,OAAO,EAAE/B,WAAW,CAACgC,sBAAsB,CAAC,CAAC;QAC/C,CAAE;QACFV,KAAK,EAAEC,MAAM,CAACU,MAAO;QACrBC,OAAO,EAAE,SAAAA,QAAA,EAAM;UAAA,IAAAC,qBAAA,EAAAC,mBAAA;UACb5C,gBAAgB,CAACgB,SAAS,CAACI,QAAQ,GAAAuB,qBAAA,IAAAC,mBAAA,GAAE5B,SAAS,CAACO,QAAQ,qBAAlBqB,mBAAA,CAAoBpB,GAAG,YAAAmB,qBAAA,GAAI,CAAC,CAAC;QACpE,CAAE;QAAAd,QAAA,EACFhB,KAAA,CAACX,IAAI;UAAC4B,KAAK,EAAEC,MAAM,CAACc,QAAS;UAAAhB,QAAA,GAC1BZ,WAAW,CAAC,CAAC,EACbK,WAAW,CAAC,CAAC;QAAA,CACV;MAAC,CACK,CAAC;IAAA,CACX;EAAC,CACe,CAAC;AAE7B;AAEA,SAASM,OAAOA,CAAA,EAAG;EACjB,IAAMkB,OAAO,GAAG1C,UAAU,CAAC2C,UAAU,CAAC,CAAC;EACvC,IAAID,OAAO,IAAI,IAAI,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACEnC,IAAA,CAACL,YAAY;IACX+B,eAAe,EAAE;MACfC,OAAO,EAAE,aAAa;MACtBC,OAAO,EAAEO,OAAO,CAACJ,OAAO,GACpBlC,WAAW,CAACwC,kBAAkB,CAAC,CAAC,CAAC,GACjC;IACN,CAAE;IACFlB,KAAK,EAAEmB,aAAa,CAACC,WAAY;IACjCR,OAAO,EAAEI,OAAO,CAACJ,OAAQ;IAAAb,QAAA,EACzBhB,KAAA,CAACX,IAAI;MAAC4B,KAAK,EAAEmB,aAAa,CAACb,IAAK;MAAAP,QAAA,GAC7BiB,OAAO,CAACK,UAAU,EAAC,IAAE,EAACL,OAAO,CAACM,MAAM,EAAC,GACxC;IAAA,CAAM;EAAC,CACK,CAAC;AAEnB;AAEA,IAAMH,aAAa,GAAGhD,UAAU,CAACoD,MAAM,CAAC;EACtCjB,IAAI,EAAE;IACJkB,KAAK,EAAE9C,WAAW,CAAC+C,YAAY,CAAC,GAAG,CAAC;IACpCC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDP,WAAW,EAAE;IACXQ,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,CAAC;IACXC,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,CAAC;EAChB;AACF,CAAC,CAAC;AAEF,IAAMhC,MAAM,GAAG9B,UAAU,CAACoD,MAAM,CAAC;EAC/BrB,GAAG,EAAE;IACHK,eAAe,EAAE7B,WAAW,CAACwC,kBAAkB,CAAC,CAAC;IACjDgB,UAAU,EAAE,EAAE;IACdD,WAAW,EAAE,EAAE;IACfE,SAAS,EAAE,CAAC;IACZH,YAAY,EAAE;EAChB,CAAC;EACD7B,KAAK,EAAE;IACLiC,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAE3D,WAAW,CAAC+C,YAAY,CAAC,GAAG,CAAC;IAChDa,iBAAiB,EAAE;EACrB,CAAC;EACD3B,MAAM,EAAE;IACN4B,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACDnC,OAAO,EAAE;IACPmB,KAAK,EAAE9C,WAAW,CAAC+C,YAAY,CAAC,CAAC,CAAC;IAClCC,QAAQ,EAAE,EAAE;IACZe,kBAAkB,EAAE,KAAK;IACzBd,UAAU,EAAE,EAAE;IACde,UAAU,EAAErE,QAAQ,CAACsE,MAAM,CAAC;MAACC,OAAO,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAO,CAAC;EAClE,CAAC;EACD9B,QAAQ,EAAE;IACRS,KAAK,EAAE9C,WAAW,CAAC+C,YAAY,CAAC,GAAG,CAAC;IACpCqB,SAAS,EAAE,QAAQ;IACnBlB,IAAI,EAAE,CAAC;IACPF,QAAQ,EAAE,EAAE;IACZe,kBAAkB,EAAE,KAAK;IACzBd,UAAU,EAAE,EAAE;IACde,UAAU,EAAErE,QAAQ,CAACsE,MAAM,CAAC;MAACC,OAAO,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAO,CAAC;EAClE;AACF,CAAC,CAAC;AAEF,eAAe7D,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}