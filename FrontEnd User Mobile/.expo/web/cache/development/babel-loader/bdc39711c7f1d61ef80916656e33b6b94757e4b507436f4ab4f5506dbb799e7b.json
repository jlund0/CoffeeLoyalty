{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport DecayAnimation from \"./animations/DecayAnimation\";\nimport SpringAnimation from \"./animations/SpringAnimation\";\nimport TimingAnimation from \"./animations/TimingAnimation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport AnimatedAddition from \"./nodes/AnimatedAddition\";\nimport AnimatedColor from \"./nodes/AnimatedColor\";\nimport AnimatedDiffClamp from \"./nodes/AnimatedDiffClamp\";\nimport AnimatedDivision from \"./nodes/AnimatedDivision\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedModulo from \"./nodes/AnimatedModulo\";\nimport AnimatedMultiplication from \"./nodes/AnimatedMultiplication\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedSubtraction from \"./nodes/AnimatedSubtraction\";\nimport AnimatedTracking from \"./nodes/AnimatedTracking\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete.apply(config, arguments);\n      callback && callback.apply(void 0, arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n    var configY = _objectSpread({}, config);\n    for (var key in config) {\n      var _config$key = config[key],\n        x = _config$key.x,\n        y = _config$key.y;\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY);\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  } else if (value instanceof AnimatedColor) {\n    var configR = _objectSpread({}, config);\n    var configG = _objectSpread({}, config);\n    var configB = _objectSpread({}, config);\n    var configA = _objectSpread({}, config);\n    for (var _key in config) {\n      var _config$_key = config[_key],\n        r = _config$_key.r,\n        g = _config$_key.g,\n        b = _config$_key.b,\n        a = _config$_key.a;\n      if (r !== undefined && g !== undefined && b !== undefined && a !== undefined) {\n        configR[_key] = r;\n        configG[_key] = g;\n        configB[_key] = b;\n        configA[_key] = a;\n      }\n    }\n    var aR = anim(value.r, configR);\n    var aG = anim(value.g, configG);\n    var aB = anim(value.b, configB);\n    var aA = anim(value.a, configA);\n    return parallel([aR, aG, aB, aA], {\n      stopTogether: false\n    });\n  }\n  return null;\n};\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations: iterations\n      });\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n        current++;\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n        animations[current].start(onComplete);\n      };\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0;\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n      animations.forEach(function (animation, idx) {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach(function (animation, idx) {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach(function (animation, idx) {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\nvar delay = function delay(time) {\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map(function (animation, i) {\n    return sequence([delay(time * i), animation]);\n  }));\n};\nvar loop = function loop(animation) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$iterations = _ref.iterations,\n    iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n    _ref$resetBeforeItera = _ref.resetBeforeIteration,\n    resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart() {\n        var result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          finished: true\n        };\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart();\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event.apply(void 0, arguments);\n      listener.apply(void 0, arguments);\n    };\n  }\n}\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: add,\n  subtract: subtract,\n  divide: divide,\n  multiply: multiply,\n  modulo: modulo,\n  diffClamp: diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: forkEvent,\n  unforkEvent: unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","AnimatedEvent","attachNativeEvent","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","AnimatedAddition","AnimatedColor","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedSubtraction","AnimatedTracking","AnimatedValue","AnimatedValueXY","add","a","b","subtract","divide","multiply","modulo","modulus","diffClamp","min","max","_combineCallbacks","callback","config","onComplete","maybeVectorAnim","value","anim","configX","configY","key","_config$key","x","y","undefined","aX","aY","parallel","stopTogether","configR","configG","configB","configA","_config$_key","g","aR","aG","aB","aA","spring","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","timing","decay","sequence","animations","current","result","finished","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","stagger","map","i","loop","_ref","_ref$iterations","_ref$resetBeforeItera","resetBeforeIteration","isFinished","iterationsSoFar","restart","forkEvent","event","listener","__addListener","unforkEvent","__removeListener","argMapping","animatedEvent","__isNative","__getHandler","Value","ValueXY","Color","Interpolation","Node","Event"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Animated/AnimatedImplementation.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nimport type {EventConfig, Mapping} from './AnimatedEvent';\r\nimport type {\r\n  AnimationConfig,\r\n  EndCallback,\r\n  EndResult,\r\n} from './animations/Animation';\r\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\r\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\r\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\r\n\r\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\r\nimport DecayAnimation from './animations/DecayAnimation';\r\nimport SpringAnimation from './animations/SpringAnimation';\r\nimport TimingAnimation from './animations/TimingAnimation';\r\nimport createAnimatedComponent from './createAnimatedComponent';\r\nimport AnimatedAddition from './nodes/AnimatedAddition';\r\nimport AnimatedColor from './nodes/AnimatedColor';\r\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\r\nimport AnimatedDivision from './nodes/AnimatedDivision';\r\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\r\nimport AnimatedModulo from './nodes/AnimatedModulo';\r\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\r\nimport AnimatedNode from './nodes/AnimatedNode';\r\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\r\nimport AnimatedTracking from './nodes/AnimatedTracking';\r\nimport AnimatedValue from './nodes/AnimatedValue';\r\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\r\n\r\nexport type CompositeAnimation = {\r\n  start: (callback?: ?EndCallback) => void,\r\n  stop: () => void,\r\n  reset: () => void,\r\n  _startNativeLoop: (iterations?: number) => void,\r\n  _isUsingNativeDriver: () => boolean,\r\n  ...\r\n};\r\n\r\nconst add = function (\r\n  a: AnimatedNode | number,\r\n  b: AnimatedNode | number,\r\n): AnimatedAddition {\r\n  return new AnimatedAddition(a, b);\r\n};\r\n\r\nconst subtract = function (\r\n  a: AnimatedNode | number,\r\n  b: AnimatedNode | number,\r\n): AnimatedSubtraction {\r\n  return new AnimatedSubtraction(a, b);\r\n};\r\n\r\nconst divide = function (\r\n  a: AnimatedNode | number,\r\n  b: AnimatedNode | number,\r\n): AnimatedDivision {\r\n  return new AnimatedDivision(a, b);\r\n};\r\n\r\nconst multiply = function (\r\n  a: AnimatedNode | number,\r\n  b: AnimatedNode | number,\r\n): AnimatedMultiplication {\r\n  return new AnimatedMultiplication(a, b);\r\n};\r\n\r\nconst modulo = function (a: AnimatedNode, modulus: number): AnimatedModulo {\r\n  return new AnimatedModulo(a, modulus);\r\n};\r\n\r\nconst diffClamp = function (\r\n  a: AnimatedNode,\r\n  min: number,\r\n  max: number,\r\n): AnimatedDiffClamp {\r\n  return new AnimatedDiffClamp(a, min, max);\r\n};\r\n\r\nconst _combineCallbacks = function (\r\n  callback: ?EndCallback,\r\n  config: $ReadOnly<{...AnimationConfig, ...}>,\r\n) {\r\n  if (callback && config.onComplete) {\r\n    return (...args: Array<EndResult>) => {\r\n      config.onComplete && config.onComplete(...args);\r\n      callback && callback(...args);\r\n    };\r\n  } else {\r\n    return callback || config.onComplete;\r\n  }\r\n};\r\n\r\nconst maybeVectorAnim = function (\r\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n  config: Object,\r\n  anim: (value: AnimatedValue, config: Object) => CompositeAnimation,\r\n): ?CompositeAnimation {\r\n  if (value instanceof AnimatedValueXY) {\r\n    const configX = {...config};\r\n    const configY = {...config};\r\n    for (const key in config) {\r\n      const {x, y} = config[key];\r\n      if (x !== undefined && y !== undefined) {\r\n        configX[key] = x;\r\n        configY[key] = y;\r\n      }\r\n    }\r\n    const aX = anim((value: AnimatedValueXY).x, configX);\r\n    const aY = anim((value: AnimatedValueXY).y, configY);\r\n    // We use `stopTogether: false` here because otherwise tracking will break\r\n    // because the second animation will get stopped before it can update.\r\n    return parallel([aX, aY], {stopTogether: false});\r\n  } else if (value instanceof AnimatedColor) {\r\n    const configR = {...config};\r\n    const configG = {...config};\r\n    const configB = {...config};\r\n    const configA = {...config};\r\n    for (const key in config) {\r\n      const {r, g, b, a} = config[key];\r\n      if (\r\n        r !== undefined &&\r\n        g !== undefined &&\r\n        b !== undefined &&\r\n        a !== undefined\r\n      ) {\r\n        configR[key] = r;\r\n        configG[key] = g;\r\n        configB[key] = b;\r\n        configA[key] = a;\r\n      }\r\n    }\r\n    const aR = anim((value: AnimatedColor).r, configR);\r\n    const aG = anim((value: AnimatedColor).g, configG);\r\n    const aB = anim((value: AnimatedColor).b, configB);\r\n    const aA = anim((value: AnimatedColor).a, configA);\r\n    // We use `stopTogether: false` here because otherwise tracking will break\r\n    // because the second animation will get stopped before it can update.\r\n    return parallel([aR, aG, aB, aA], {stopTogether: false});\r\n  }\r\n  return null;\r\n};\r\n\r\nconst spring = function (\r\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n  config: SpringAnimationConfig,\r\n): CompositeAnimation {\r\n  const start = function (\r\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n    configuration: SpringAnimationConfig,\r\n    callback?: ?EndCallback,\r\n  ): void {\r\n    callback = _combineCallbacks(callback, configuration);\r\n    const singleValue: any = animatedValue;\r\n    const singleConfig: any = configuration;\r\n    singleValue.stopTracking();\r\n    if (configuration.toValue instanceof AnimatedNode) {\r\n      singleValue.track(\r\n        new AnimatedTracking(\r\n          singleValue,\r\n          configuration.toValue,\r\n          SpringAnimation,\r\n          singleConfig,\r\n          callback,\r\n        ),\r\n      );\r\n    } else {\r\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\r\n    }\r\n  };\r\n  return (\r\n    maybeVectorAnim(value, config, spring) || {\r\n      start: function (callback?: ?EndCallback): void {\r\n        start(value, config, callback);\r\n      },\r\n\r\n      stop: function (): void {\r\n        value.stopAnimation();\r\n      },\r\n\r\n      reset: function (): void {\r\n        value.resetAnimation();\r\n      },\r\n\r\n      _startNativeLoop: function (iterations?: number): void {\r\n        const singleConfig = {...config, iterations};\r\n        start(value, singleConfig);\r\n      },\r\n\r\n      _isUsingNativeDriver: function (): boolean {\r\n        return config.useNativeDriver || false;\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst timing = function (\r\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n  config: TimingAnimationConfig,\r\n): CompositeAnimation {\r\n  const start = function (\r\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n    configuration: TimingAnimationConfig,\r\n    callback?: ?EndCallback,\r\n  ): void {\r\n    callback = _combineCallbacks(callback, configuration);\r\n    const singleValue: any = animatedValue;\r\n    const singleConfig: any = configuration;\r\n    singleValue.stopTracking();\r\n    if (configuration.toValue instanceof AnimatedNode) {\r\n      singleValue.track(\r\n        new AnimatedTracking(\r\n          singleValue,\r\n          configuration.toValue,\r\n          TimingAnimation,\r\n          singleConfig,\r\n          callback,\r\n        ),\r\n      );\r\n    } else {\r\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\r\n    }\r\n  };\r\n\r\n  return (\r\n    maybeVectorAnim(value, config, timing) || {\r\n      start: function (callback?: ?EndCallback): void {\r\n        start(value, config, callback);\r\n      },\r\n\r\n      stop: function (): void {\r\n        value.stopAnimation();\r\n      },\r\n\r\n      reset: function (): void {\r\n        value.resetAnimation();\r\n      },\r\n\r\n      _startNativeLoop: function (iterations?: number): void {\r\n        const singleConfig = {...config, iterations};\r\n        start(value, singleConfig);\r\n      },\r\n\r\n      _isUsingNativeDriver: function (): boolean {\r\n        return config.useNativeDriver || false;\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst decay = function (\r\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n  config: DecayAnimationConfig,\r\n): CompositeAnimation {\r\n  const start = function (\r\n    animatedValue: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n    configuration: DecayAnimationConfig,\r\n    callback?: ?EndCallback,\r\n  ): void {\r\n    callback = _combineCallbacks(callback, configuration);\r\n    const singleValue: any = animatedValue;\r\n    const singleConfig: any = configuration;\r\n    singleValue.stopTracking();\r\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\r\n  };\r\n\r\n  return (\r\n    maybeVectorAnim(value, config, decay) || {\r\n      start: function (callback?: ?EndCallback): void {\r\n        start(value, config, callback);\r\n      },\r\n\r\n      stop: function (): void {\r\n        value.stopAnimation();\r\n      },\r\n\r\n      reset: function (): void {\r\n        value.resetAnimation();\r\n      },\r\n\r\n      _startNativeLoop: function (iterations?: number): void {\r\n        const singleConfig = {...config, iterations};\r\n        start(value, singleConfig);\r\n      },\r\n\r\n      _isUsingNativeDriver: function (): boolean {\r\n        return config.useNativeDriver || false;\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nconst sequence = function (\r\n  animations: Array<CompositeAnimation>,\r\n): CompositeAnimation {\r\n  let current = 0;\r\n  return {\r\n    start: function (callback?: ?EndCallback) {\r\n      const onComplete = function (result: EndResult) {\r\n        if (!result.finished) {\r\n          callback && callback(result);\r\n          return;\r\n        }\r\n\r\n        current++;\r\n\r\n        if (current === animations.length) {\r\n          callback && callback(result);\r\n          return;\r\n        }\r\n\r\n        animations[current].start(onComplete);\r\n      };\r\n\r\n      if (animations.length === 0) {\r\n        callback && callback({finished: true});\r\n      } else {\r\n        animations[current].start(onComplete);\r\n      }\r\n    },\r\n\r\n    stop: function () {\r\n      if (current < animations.length) {\r\n        animations[current].stop();\r\n      }\r\n    },\r\n\r\n    reset: function () {\r\n      animations.forEach((animation, idx) => {\r\n        if (idx <= current) {\r\n          animation.reset();\r\n        }\r\n      });\r\n      current = 0;\r\n    },\r\n\r\n    _startNativeLoop: function () {\r\n      throw new Error(\r\n        'Loops run using the native driver cannot contain Animated.sequence animations',\r\n      );\r\n    },\r\n\r\n    _isUsingNativeDriver: function (): boolean {\r\n      return false;\r\n    },\r\n  };\r\n};\r\n\r\ntype ParallelConfig = {\r\n  // If one is stopped, stop all.  default: true\r\n  stopTogether?: boolean,\r\n  ...\r\n};\r\nconst parallel = function (\r\n  animations: Array<CompositeAnimation>,\r\n  config?: ?ParallelConfig,\r\n): CompositeAnimation {\r\n  let doneCount = 0;\r\n  // Make sure we only call stop() at most once for each animation\r\n  const hasEnded: {[number]: boolean} = {};\r\n  const stopTogether = !(config && config.stopTogether === false);\r\n\r\n  const result = {\r\n    start: function (callback?: ?EndCallback) {\r\n      if (doneCount === animations.length) {\r\n        callback && callback({finished: true});\r\n        return;\r\n      }\r\n\r\n      animations.forEach((animation, idx) => {\r\n        const cb = function (endResult: EndResult | {finished: boolean}) {\r\n          hasEnded[idx] = true;\r\n          doneCount++;\r\n          if (doneCount === animations.length) {\r\n            doneCount = 0;\r\n            callback && callback(endResult);\r\n            return;\r\n          }\r\n\r\n          if (!endResult.finished && stopTogether) {\r\n            result.stop();\r\n          }\r\n        };\r\n\r\n        if (!animation) {\r\n          cb({finished: true});\r\n        } else {\r\n          animation.start(cb);\r\n        }\r\n      });\r\n    },\r\n\r\n    stop: function (): void {\r\n      animations.forEach((animation, idx) => {\r\n        !hasEnded[idx] && animation.stop();\r\n        hasEnded[idx] = true;\r\n      });\r\n    },\r\n\r\n    reset: function (): void {\r\n      animations.forEach((animation, idx) => {\r\n        animation.reset();\r\n        hasEnded[idx] = false;\r\n        doneCount = 0;\r\n      });\r\n    },\r\n\r\n    _startNativeLoop: function (): empty {\r\n      throw new Error(\r\n        'Loops run using the native driver cannot contain Animated.parallel animations',\r\n      );\r\n    },\r\n\r\n    _isUsingNativeDriver: function (): boolean {\r\n      return false;\r\n    },\r\n  };\r\n\r\n  return result;\r\n};\r\n\r\nconst delay = function (time: number): CompositeAnimation {\r\n  // Would be nice to make a specialized implementation\r\n  return timing(new AnimatedValue(0), {\r\n    toValue: 0,\r\n    delay: time,\r\n    duration: 0,\r\n    useNativeDriver: false,\r\n  });\r\n};\r\n\r\nconst stagger = function (\r\n  time: number,\r\n  animations: Array<CompositeAnimation>,\r\n): CompositeAnimation {\r\n  return parallel(\r\n    animations.map((animation, i) => {\r\n      return sequence([delay(time * i), animation]);\r\n    }),\r\n  );\r\n};\r\n\r\ntype LoopAnimationConfig = {\r\n  iterations: number,\r\n  resetBeforeIteration?: boolean,\r\n  ...\r\n};\r\n\r\nconst loop = function (\r\n  animation: CompositeAnimation,\r\n  // $FlowFixMe[prop-missing]\r\n  {iterations = -1, resetBeforeIteration = true}: LoopAnimationConfig = {},\r\n): CompositeAnimation {\r\n  let isFinished = false;\r\n  let iterationsSoFar = 0;\r\n  return {\r\n    start: function (callback?: ?EndCallback) {\r\n      const restart = function (result: EndResult = {finished: true}): void {\r\n        if (\r\n          isFinished ||\r\n          iterationsSoFar === iterations ||\r\n          result.finished === false\r\n        ) {\r\n          callback && callback(result);\r\n        } else {\r\n          iterationsSoFar++;\r\n          resetBeforeIteration && animation.reset();\r\n          animation.start(restart);\r\n        }\r\n      };\r\n      if (!animation || iterations === 0) {\r\n        callback && callback({finished: true});\r\n      } else {\r\n        if (animation._isUsingNativeDriver()) {\r\n          animation._startNativeLoop(iterations);\r\n        } else {\r\n          restart(); // Start looping recursively on the js thread\r\n        }\r\n      }\r\n    },\r\n\r\n    stop: function (): void {\r\n      isFinished = true;\r\n      animation.stop();\r\n    },\r\n\r\n    reset: function (): void {\r\n      iterationsSoFar = 0;\r\n      isFinished = false;\r\n      animation.reset();\r\n    },\r\n\r\n    _startNativeLoop: function () {\r\n      throw new Error(\r\n        'Loops run using the native driver cannot contain Animated.loop animations',\r\n      );\r\n    },\r\n\r\n    _isUsingNativeDriver: function (): boolean {\r\n      return animation._isUsingNativeDriver();\r\n    },\r\n  };\r\n};\r\n\r\nfunction forkEvent(\r\n  event: ?AnimatedEvent | ?Function,\r\n  listener: Function,\r\n): AnimatedEvent | Function {\r\n  if (!event) {\r\n    return listener;\r\n  } else if (event instanceof AnimatedEvent) {\r\n    event.__addListener(listener);\r\n    return event;\r\n  } else {\r\n    return (...args) => {\r\n      typeof event === 'function' && event(...args);\r\n      listener(...args);\r\n    };\r\n  }\r\n}\r\n\r\nfunction unforkEvent(\r\n  event: ?AnimatedEvent | ?Function,\r\n  listener: Function,\r\n): void {\r\n  if (event && event instanceof AnimatedEvent) {\r\n    event.__removeListener(listener);\r\n  }\r\n}\r\n\r\nconst event = function (\r\n  argMapping: $ReadOnlyArray<?Mapping>,\r\n  config: EventConfig,\r\n): any {\r\n  const animatedEvent = new AnimatedEvent(argMapping, config);\r\n  if (animatedEvent.__isNative) {\r\n    return animatedEvent;\r\n  } else {\r\n    return animatedEvent.__getHandler();\r\n  }\r\n};\r\n\r\n// All types of animated nodes that represent scalar numbers and can be interpolated (etc)\r\ntype AnimatedNumeric =\r\n  | AnimatedAddition\r\n  | AnimatedDiffClamp\r\n  | AnimatedDivision\r\n  | AnimatedInterpolation<number>\r\n  | AnimatedModulo\r\n  | AnimatedMultiplication\r\n  | AnimatedSubtraction\r\n  | AnimatedValue;\r\n\r\nexport type {AnimatedNumeric as Numeric};\r\n\r\n/**\r\n * The `Animated` library is designed to make animations fluid, powerful, and\r\n * easy to build and maintain. `Animated` focuses on declarative relationships\r\n * between inputs and outputs, with configurable transforms in between, and\r\n * simple `start`/`stop` methods to control time-based animation execution.\r\n * If additional transforms are added, be sure to include them in\r\n * AnimatedMock.js as well.\r\n *\r\n * See https://reactnative.dev/docs/animated\r\n */\r\nexport default {\r\n  /**\r\n   * Standard value class for driving animations.  Typically initialized with\r\n   * `new Animated.Value(0);`\r\n   *\r\n   * See https://reactnative.dev/docs/animated#value\r\n   */\r\n  Value: AnimatedValue,\r\n  /**\r\n   * 2D value class for driving 2D animations, such as pan gestures.\r\n   *\r\n   * See https://reactnative.dev/docs/animatedvaluexy\r\n   */\r\n  ValueXY: AnimatedValueXY,\r\n  /**\r\n   * Value class for driving color animations.\r\n   */\r\n  Color: AnimatedColor,\r\n  /**\r\n   * Exported to use the Interpolation type in flow.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#interpolation\r\n   */\r\n  Interpolation: AnimatedInterpolation,\r\n  /**\r\n   * Exported for ease of type checking. All animated values derive from this\r\n   * class.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#node\r\n   */\r\n  Node: AnimatedNode,\r\n\r\n  /**\r\n   * Animates a value from an initial velocity to zero based on a decay\r\n   * coefficient.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#decay\r\n   */\r\n  decay,\r\n  /**\r\n   * Animates a value along a timed easing curve. The Easing module has tons of\r\n   * predefined curves, or you can use your own function.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#timing\r\n   */\r\n  timing,\r\n  /**\r\n   * Animates a value according to an analytical spring model based on\r\n   * damped harmonic oscillation.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#spring\r\n   */\r\n  spring,\r\n\r\n  /**\r\n   * Creates a new Animated value composed from two Animated values added\r\n   * together.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#add\r\n   */\r\n  add,\r\n\r\n  /**\r\n   * Creates a new Animated value composed by subtracting the second Animated\r\n   * value from the first Animated value.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#subtract\r\n   */\r\n  subtract,\r\n\r\n  /**\r\n   * Creates a new Animated value composed by dividing the first Animated value\r\n   * by the second Animated value.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#divide\r\n   */\r\n  divide,\r\n\r\n  /**\r\n   * Creates a new Animated value composed from two Animated values multiplied\r\n   * together.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#multiply\r\n   */\r\n  multiply,\r\n\r\n  /**\r\n   * Creates a new Animated value that is the (non-negative) modulo of the\r\n   * provided Animated value.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#modulo\r\n   */\r\n  modulo,\r\n\r\n  /**\r\n   * Create a new Animated value that is limited between 2 values. It uses the\r\n   * difference between the last value so even if the value is far from the\r\n   * bounds it will start changing when the value starts getting closer again.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#diffclamp\r\n   */\r\n  diffClamp,\r\n\r\n  /**\r\n   * Starts an animation after the given delay.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#delay\r\n   */\r\n  delay,\r\n  /**\r\n   * Starts an array of animations in order, waiting for each to complete\r\n   * before starting the next. If the current running animation is stopped, no\r\n   * following animations will be started.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#sequence\r\n   */\r\n  sequence,\r\n  /**\r\n   * Starts an array of animations all at the same time. By default, if one\r\n   * of the animations is stopped, they will all be stopped. You can override\r\n   * this with the `stopTogether` flag.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#parallel\r\n   */\r\n  parallel,\r\n  /**\r\n   * Array of animations may run in parallel (overlap), but are started in\r\n   * sequence with successive delays.  Nice for doing trailing effects.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#stagger\r\n   */\r\n  stagger,\r\n  /**\r\n   * Loops a given animation continuously, so that each time it reaches the\r\n   * end, it resets and begins again from the start.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#loop\r\n   */\r\n  loop,\r\n\r\n  /**\r\n   * Takes an array of mappings and extracts values from each arg accordingly,\r\n   * then calls `setValue` on the mapped outputs.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#event\r\n   */\r\n  event,\r\n\r\n  /**\r\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#createanimatedcomponent\r\n   */\r\n  createAnimatedComponent,\r\n\r\n  /**\r\n   * Imperative API to attach an animated value to an event on a view. Prefer\r\n   * using `Animated.event` with `useNativeDrive: true` if possible.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#attachnativeevent\r\n   */\r\n  attachNativeEvent,\r\n\r\n  /**\r\n   * Advanced imperative API for snooping on animated events that are passed in\r\n   * through props. Use values directly where possible.\r\n   *\r\n   * See https://reactnative.dev/docs/animated#forkevent\r\n   */\r\n  forkEvent,\r\n  unforkEvent,\r\n\r\n  /**\r\n   * Expose Event class, so it can be used as a type for type checkers.\r\n   */\r\n  Event: AnimatedEvent,\r\n};\r\n"],"mappings":"AAUA,YAAY;;AAAC,OAAAA,eAAA;AAAA,SAAAC,QAAAC,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAJ,CAAA,OAAAG,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAL,CAAA,GAAAC,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAR,CAAA,EAAAC,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAZ,CAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAF,OAAA,CAAAI,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,IAAAH,eAAA,CAAAE,CAAA,EAAAC,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAa,yBAAA,GAAAb,MAAA,CAAAc,gBAAA,CAAAjB,CAAA,EAAAG,MAAA,CAAAa,yBAAA,CAAAd,CAAA,KAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAe,cAAA,CAAAlB,CAAA,EAAAC,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAD,CAAA;AAYb,SAAQmB,aAAa,EAAEC,iBAAiB;AACxC,OAAOC,cAAc;AACrB,OAAOC,eAAe;AACtB,OAAOC,eAAe;AACtB,OAAOC,uBAAuB;AAC9B,OAAOC,gBAAgB;AACvB,OAAOC,aAAa;AACpB,OAAOC,iBAAiB;AACxB,OAAOC,gBAAgB;AACvB,OAAOC,qBAAqB;AAC5B,OAAOC,cAAc;AACrB,OAAOC,sBAAsB;AAC7B,OAAOC,YAAY;AACnB,OAAOC,mBAAmB;AAC1B,OAAOC,gBAAgB;AACvB,OAAOC,aAAa;AACpB,OAAOC,eAAe;AAWtB,IAAMC,GAAG,GAAG,SAANA,GAAGA,CACPC,CAAwB,EACxBC,CAAwB,EACN;EAClB,OAAO,IAAId,gBAAgB,CAACa,CAAC,EAAEC,CAAC,CAAC;AACnC,CAAC;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CACZF,CAAwB,EACxBC,CAAwB,EACH;EACrB,OAAO,IAAIN,mBAAmB,CAACK,CAAC,EAAEC,CAAC,CAAC;AACtC,CAAC;AAED,IAAME,MAAM,GAAG,SAATA,MAAMA,CACVH,CAAwB,EACxBC,CAAwB,EACN;EAClB,OAAO,IAAIX,gBAAgB,CAACU,CAAC,EAAEC,CAAC,CAAC;AACnC,CAAC;AAED,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CACZJ,CAAwB,EACxBC,CAAwB,EACA;EACxB,OAAO,IAAIR,sBAAsB,CAACO,CAAC,EAAEC,CAAC,CAAC;AACzC,CAAC;AAED,IAAMI,MAAM,GAAG,SAATA,MAAMA,CAAaL,CAAe,EAAEM,OAAe,EAAkB;EACzE,OAAO,IAAId,cAAc,CAACQ,CAAC,EAAEM,OAAO,CAAC;AACvC,CAAC;AAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CACbP,CAAe,EACfQ,GAAW,EACXC,GAAW,EACQ;EACnB,OAAO,IAAIpB,iBAAiB,CAACW,CAAC,EAAEQ,GAAG,EAAEC,GAAG,CAAC;AAC3C,CAAC;AAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CACrBC,QAAsB,EACtBC,MAA4C,EAC5C;EACA,IAAID,QAAQ,IAAIC,MAAM,CAACC,UAAU,EAAE;IACjC,OAAO,YAA+B;MACpCD,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAAxC,KAAA,CAAjBuC,MAAM,EAAArC,SAAmB,CAAC;MAC/CoC,QAAQ,IAAIA,QAAQ,CAAAtC,KAAA,SAAAE,SAAQ,CAAC;IAC/B,CAAC;EACH,CAAC,MAAM;IACL,OAAOoC,QAAQ,IAAIC,MAAM,CAACC,UAAU;EACtC;AACF,CAAC;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CACnBC,KAAsD,EACtDH,MAAc,EACdI,IAAkE,EAC7C;EACrB,IAAID,KAAK,YAAYjB,eAAe,EAAE;IACpC,IAAMmB,OAAO,GAAA3C,aAAA,KAAOsC,MAAM,CAAC;IAC3B,IAAMM,OAAO,GAAA5C,aAAA,KAAOsC,MAAM,CAAC;IAC3B,KAAK,IAAMO,GAAG,IAAIP,MAAM,EAAE;MACxB,IAAAQ,WAAA,GAAeR,MAAM,CAACO,GAAG,CAAC;QAAnBE,CAAC,GAAAD,WAAA,CAADC,CAAC;QAAEC,CAAC,GAAAF,WAAA,CAADE,CAAC;MACX,IAAID,CAAC,KAAKE,SAAS,IAAID,CAAC,KAAKC,SAAS,EAAE;QACtCN,OAAO,CAACE,GAAG,CAAC,GAAGE,CAAC;QAChBH,OAAO,CAACC,GAAG,CAAC,GAAGG,CAAC;MAClB;IACF;IACA,IAAME,EAAE,GAAGR,IAAI,CAAED,KAAK,CAAmBM,CAAC,EAAEJ,OAAO,CAAC;IACpD,IAAMQ,EAAE,GAAGT,IAAI,CAAED,KAAK,CAAmBO,CAAC,EAAEJ,OAAO,CAAC;IAGpD,OAAOQ,QAAQ,CAAC,CAACF,EAAE,EAAEC,EAAE,CAAC,EAAE;MAACE,YAAY,EAAE;IAAK,CAAC,CAAC;EAClD,CAAC,MAAM,IAAIZ,KAAK,YAAY3B,aAAa,EAAE;IACzC,IAAMwC,OAAO,GAAAtD,aAAA,KAAOsC,MAAM,CAAC;IAC3B,IAAMiB,OAAO,GAAAvD,aAAA,KAAOsC,MAAM,CAAC;IAC3B,IAAMkB,OAAO,GAAAxD,aAAA,KAAOsC,MAAM,CAAC;IAC3B,IAAMmB,OAAO,GAAAzD,aAAA,KAAOsC,MAAM,CAAC;IAC3B,KAAK,IAAMO,IAAG,IAAIP,MAAM,EAAE;MACxB,IAAAoB,YAAA,GAAqBpB,MAAM,CAACO,IAAG,CAAC;QAAzBxD,CAAC,GAAAqE,YAAA,CAADrE,CAAC;QAAEsE,CAAC,GAAAD,YAAA,CAADC,CAAC;QAAEhC,CAAC,GAAA+B,YAAA,CAAD/B,CAAC;QAAED,CAAC,GAAAgC,YAAA,CAADhC,CAAC;MACjB,IACErC,CAAC,KAAK4D,SAAS,IACfU,CAAC,KAAKV,SAAS,IACftB,CAAC,KAAKsB,SAAS,IACfvB,CAAC,KAAKuB,SAAS,EACf;QACAK,OAAO,CAACT,IAAG,CAAC,GAAGxD,CAAC;QAChBkE,OAAO,CAACV,IAAG,CAAC,GAAGc,CAAC;QAChBH,OAAO,CAACX,IAAG,CAAC,GAAGlB,CAAC;QAChB8B,OAAO,CAACZ,IAAG,CAAC,GAAGnB,CAAC;MAClB;IACF;IACA,IAAMkC,EAAE,GAAGlB,IAAI,CAAED,KAAK,CAAiBpD,CAAC,EAAEiE,OAAO,CAAC;IAClD,IAAMO,EAAE,GAAGnB,IAAI,CAAED,KAAK,CAAiBkB,CAAC,EAAEJ,OAAO,CAAC;IAClD,IAAMO,EAAE,GAAGpB,IAAI,CAAED,KAAK,CAAiBd,CAAC,EAAE6B,OAAO,CAAC;IAClD,IAAMO,EAAE,GAAGrB,IAAI,CAAED,KAAK,CAAiBf,CAAC,EAAE+B,OAAO,CAAC;IAGlD,OAAOL,QAAQ,CAAC,CAACQ,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,EAAE;MAACV,YAAY,EAAE;IAAK,CAAC,CAAC;EAC1D;EACA,OAAO,IAAI;AACb,CAAC;AAED,IAAMW,MAAM,GAAG,SAATA,MAAMA,CACVvB,KAAsD,EACtDH,MAA6B,EACT;EACpB,IAAM2B,MAAK,GAAG,SAARA,KAAKA,CACTC,aAA8D,EAC9DC,aAAoC,EACpC9B,QAAuB,EACjB;IACNA,QAAQ,GAAGD,iBAAiB,CAACC,QAAQ,EAAE8B,aAAa,CAAC;IACrD,IAAMC,WAAgB,GAAGF,aAAa;IACtC,IAAMG,YAAiB,GAAGF,aAAa;IACvCC,WAAW,CAACE,YAAY,CAAC,CAAC;IAC1B,IAAIH,aAAa,CAACI,OAAO,YAAYnD,YAAY,EAAE;MACjDgD,WAAW,CAACI,KAAK,CACf,IAAIlD,gBAAgB,CAClB8C,WAAW,EACXD,aAAa,CAACI,OAAO,EACrB7D,eAAe,EACf2D,YAAY,EACZhC,QACF,CACF,CAAC;IACH,CAAC,MAAM;MACL+B,WAAW,CAACK,OAAO,CAAC,IAAI/D,eAAe,CAAC2D,YAAY,CAAC,EAAEhC,QAAQ,CAAC;IAClE;EACF,CAAC;EACD,OACEG,eAAe,CAACC,KAAK,EAAEH,MAAM,EAAE0B,MAAM,CAAC,IAAI;IACxCC,KAAK,EAAE,SAAAA,MAAU5B,QAAuB,EAAQ;MAC9C4B,MAAK,CAACxB,KAAK,EAAEH,MAAM,EAAED,QAAQ,CAAC;IAChC,CAAC;IAEDqC,IAAI,EAAE,SAAAA,KAAA,EAAkB;MACtBjC,KAAK,CAACkC,aAAa,CAAC,CAAC;IACvB,CAAC;IAEDC,KAAK,EAAE,SAAAA,MAAA,EAAkB;MACvBnC,KAAK,CAACoC,cAAc,CAAC,CAAC;IACxB,CAAC;IAEDC,gBAAgB,EAAE,SAAAA,iBAAUC,UAAmB,EAAQ;MACrD,IAAMV,YAAY,GAAArE,aAAA,CAAAA,aAAA,KAAOsC,MAAM;QAAEyC,UAAU,EAAVA;MAAU,EAAC;MAC5Cd,MAAK,CAACxB,KAAK,EAAE4B,YAAY,CAAC;IAC5B,CAAC;IAEDW,oBAAoB,EAAE,SAAAA,qBAAA,EAAqB;MACzC,OAAO1C,MAAM,CAAC2C,eAAe,IAAI,KAAK;IACxC;EACF,CAAC;AAEL,CAAC;AAED,IAAMC,MAAM,GAAG,SAATA,MAAMA,CACVzC,KAAsD,EACtDH,MAA6B,EACT;EACpB,IAAM2B,OAAK,GAAG,SAARA,KAAKA,CACTC,aAA8D,EAC9DC,aAAoC,EACpC9B,QAAuB,EACjB;IACNA,QAAQ,GAAGD,iBAAiB,CAACC,QAAQ,EAAE8B,aAAa,CAAC;IACrD,IAAMC,WAAgB,GAAGF,aAAa;IACtC,IAAMG,YAAiB,GAAGF,aAAa;IACvCC,WAAW,CAACE,YAAY,CAAC,CAAC;IAC1B,IAAIH,aAAa,CAACI,OAAO,YAAYnD,YAAY,EAAE;MACjDgD,WAAW,CAACI,KAAK,CACf,IAAIlD,gBAAgB,CAClB8C,WAAW,EACXD,aAAa,CAACI,OAAO,EACrB5D,eAAe,EACf0D,YAAY,EACZhC,QACF,CACF,CAAC;IACH,CAAC,MAAM;MACL+B,WAAW,CAACK,OAAO,CAAC,IAAI9D,eAAe,CAAC0D,YAAY,CAAC,EAAEhC,QAAQ,CAAC;IAClE;EACF,CAAC;EAED,OACEG,eAAe,CAACC,KAAK,EAAEH,MAAM,EAAE4C,MAAM,CAAC,IAAI;IACxCjB,KAAK,EAAE,SAAAA,MAAU5B,QAAuB,EAAQ;MAC9C4B,OAAK,CAACxB,KAAK,EAAEH,MAAM,EAAED,QAAQ,CAAC;IAChC,CAAC;IAEDqC,IAAI,EAAE,SAAAA,KAAA,EAAkB;MACtBjC,KAAK,CAACkC,aAAa,CAAC,CAAC;IACvB,CAAC;IAEDC,KAAK,EAAE,SAAAA,MAAA,EAAkB;MACvBnC,KAAK,CAACoC,cAAc,CAAC,CAAC;IACxB,CAAC;IAEDC,gBAAgB,EAAE,SAAAA,iBAAUC,UAAmB,EAAQ;MACrD,IAAMV,YAAY,GAAArE,aAAA,CAAAA,aAAA,KAAOsC,MAAM;QAAEyC,UAAU,EAAVA;MAAU,EAAC;MAC5Cd,OAAK,CAACxB,KAAK,EAAE4B,YAAY,CAAC;IAC5B,CAAC;IAEDW,oBAAoB,EAAE,SAAAA,qBAAA,EAAqB;MACzC,OAAO1C,MAAM,CAAC2C,eAAe,IAAI,KAAK;IACxC;EACF,CAAC;AAEL,CAAC;AAED,IAAME,KAAK,GAAG,SAARA,KAAKA,CACT1C,KAAsD,EACtDH,MAA4B,EACR;EACpB,IAAM2B,OAAK,GAAG,SAARA,KAAKA,CACTC,aAA8D,EAC9DC,aAAmC,EACnC9B,QAAuB,EACjB;IACNA,QAAQ,GAAGD,iBAAiB,CAACC,QAAQ,EAAE8B,aAAa,CAAC;IACrD,IAAMC,WAAgB,GAAGF,aAAa;IACtC,IAAMG,YAAiB,GAAGF,aAAa;IACvCC,WAAW,CAACE,YAAY,CAAC,CAAC;IAC1BF,WAAW,CAACK,OAAO,CAAC,IAAIhE,cAAc,CAAC4D,YAAY,CAAC,EAAEhC,QAAQ,CAAC;EACjE,CAAC;EAED,OACEG,eAAe,CAACC,KAAK,EAAEH,MAAM,EAAE6C,KAAK,CAAC,IAAI;IACvClB,KAAK,EAAE,SAAAA,MAAU5B,QAAuB,EAAQ;MAC9C4B,OAAK,CAACxB,KAAK,EAAEH,MAAM,EAAED,QAAQ,CAAC;IAChC,CAAC;IAEDqC,IAAI,EAAE,SAAAA,KAAA,EAAkB;MACtBjC,KAAK,CAACkC,aAAa,CAAC,CAAC;IACvB,CAAC;IAEDC,KAAK,EAAE,SAAAA,MAAA,EAAkB;MACvBnC,KAAK,CAACoC,cAAc,CAAC,CAAC;IACxB,CAAC;IAEDC,gBAAgB,EAAE,SAAAA,iBAAUC,UAAmB,EAAQ;MACrD,IAAMV,YAAY,GAAArE,aAAA,CAAAA,aAAA,KAAOsC,MAAM;QAAEyC,UAAU,EAAVA;MAAU,EAAC;MAC5Cd,OAAK,CAACxB,KAAK,EAAE4B,YAAY,CAAC;IAC5B,CAAC;IAEDW,oBAAoB,EAAE,SAAAA,qBAAA,EAAqB;MACzC,OAAO1C,MAAM,CAAC2C,eAAe,IAAI,KAAK;IACxC;EACF,CAAC;AAEL,CAAC;AAED,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CACZC,UAAqC,EACjB;EACpB,IAAIC,OAAO,GAAG,CAAC;EACf,OAAO;IACLrB,KAAK,EAAE,SAAAA,MAAU5B,QAAuB,EAAE;MACxC,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAagD,MAAiB,EAAE;QAC9C,IAAI,CAACA,MAAM,CAACC,QAAQ,EAAE;UACpBnD,QAAQ,IAAIA,QAAQ,CAACkD,MAAM,CAAC;UAC5B;QACF;QAEAD,OAAO,EAAE;QAET,IAAIA,OAAO,KAAKD,UAAU,CAACnF,MAAM,EAAE;UACjCmC,QAAQ,IAAIA,QAAQ,CAACkD,MAAM,CAAC;UAC5B;QACF;QAEAF,UAAU,CAACC,OAAO,CAAC,CAACrB,KAAK,CAAC1B,UAAU,CAAC;MACvC,CAAC;MAED,IAAI8C,UAAU,CAACnF,MAAM,KAAK,CAAC,EAAE;QAC3BmC,QAAQ,IAAIA,QAAQ,CAAC;UAACmD,QAAQ,EAAE;QAAI,CAAC,CAAC;MACxC,CAAC,MAAM;QACLH,UAAU,CAACC,OAAO,CAAC,CAACrB,KAAK,CAAC1B,UAAU,CAAC;MACvC;IACF,CAAC;IAEDmC,IAAI,EAAE,SAAAA,KAAA,EAAY;MAChB,IAAIY,OAAO,GAAGD,UAAU,CAACnF,MAAM,EAAE;QAC/BmF,UAAU,CAACC,OAAO,CAAC,CAACZ,IAAI,CAAC,CAAC;MAC5B;IACF,CAAC;IAEDE,KAAK,EAAE,SAAAA,MAAA,EAAY;MACjBS,UAAU,CAAClF,OAAO,CAAC,UAACsF,SAAS,EAAEC,GAAG,EAAK;QACrC,IAAIA,GAAG,IAAIJ,OAAO,EAAE;UAClBG,SAAS,CAACb,KAAK,CAAC,CAAC;QACnB;MACF,CAAC,CAAC;MACFU,OAAO,GAAG,CAAC;IACb,CAAC;IAEDR,gBAAgB,EAAE,SAAAA,iBAAA,EAAY;MAC5B,MAAM,IAAIa,KAAK,CACb,+EACF,CAAC;IACH,CAAC;IAEDX,oBAAoB,EAAE,SAAAA,qBAAA,EAAqB;MACzC,OAAO,KAAK;IACd;EACF,CAAC;AACH,CAAC;AAOD,IAAM5B,QAAQ,GAAG,SAAXA,QAAQA,CACZiC,UAAqC,EACrC/C,MAAwB,EACJ;EACpB,IAAIsD,SAAS,GAAG,CAAC;EAEjB,IAAMC,QAA6B,GAAG,CAAC,CAAC;EACxC,IAAMxC,YAAY,GAAG,EAAEf,MAAM,IAAIA,MAAM,CAACe,YAAY,KAAK,KAAK,CAAC;EAE/D,IAAMkC,MAAM,GAAG;IACbtB,KAAK,EAAE,SAAAA,MAAU5B,QAAuB,EAAE;MACxC,IAAIuD,SAAS,KAAKP,UAAU,CAACnF,MAAM,EAAE;QACnCmC,QAAQ,IAAIA,QAAQ,CAAC;UAACmD,QAAQ,EAAE;QAAI,CAAC,CAAC;QACtC;MACF;MAEAH,UAAU,CAAClF,OAAO,CAAC,UAACsF,SAAS,EAAEC,GAAG,EAAK;QACrC,IAAMI,EAAE,GAAG,SAALA,EAAEA,CAAaC,SAA0C,EAAE;UAC/DF,QAAQ,CAACH,GAAG,CAAC,GAAG,IAAI;UACpBE,SAAS,EAAE;UACX,IAAIA,SAAS,KAAKP,UAAU,CAACnF,MAAM,EAAE;YACnC0F,SAAS,GAAG,CAAC;YACbvD,QAAQ,IAAIA,QAAQ,CAAC0D,SAAS,CAAC;YAC/B;UACF;UAEA,IAAI,CAACA,SAAS,CAACP,QAAQ,IAAInC,YAAY,EAAE;YACvCkC,MAAM,CAACb,IAAI,CAAC,CAAC;UACf;QACF,CAAC;QAED,IAAI,CAACe,SAAS,EAAE;UACdK,EAAE,CAAC;YAACN,QAAQ,EAAE;UAAI,CAAC,CAAC;QACtB,CAAC,MAAM;UACLC,SAAS,CAACxB,KAAK,CAAC6B,EAAE,CAAC;QACrB;MACF,CAAC,CAAC;IACJ,CAAC;IAEDpB,IAAI,EAAE,SAAAA,KAAA,EAAkB;MACtBW,UAAU,CAAClF,OAAO,CAAC,UAACsF,SAAS,EAAEC,GAAG,EAAK;QACrC,CAACG,QAAQ,CAACH,GAAG,CAAC,IAAID,SAAS,CAACf,IAAI,CAAC,CAAC;QAClCmB,QAAQ,CAACH,GAAG,CAAC,GAAG,IAAI;MACtB,CAAC,CAAC;IACJ,CAAC;IAEDd,KAAK,EAAE,SAAAA,MAAA,EAAkB;MACvBS,UAAU,CAAClF,OAAO,CAAC,UAACsF,SAAS,EAAEC,GAAG,EAAK;QACrCD,SAAS,CAACb,KAAK,CAAC,CAAC;QACjBiB,QAAQ,CAACH,GAAG,CAAC,GAAG,KAAK;QACrBE,SAAS,GAAG,CAAC;MACf,CAAC,CAAC;IACJ,CAAC;IAEDd,gBAAgB,EAAE,SAAAA,iBAAA,EAAmB;MACnC,MAAM,IAAIa,KAAK,CACb,+EACF,CAAC;IACH,CAAC;IAEDX,oBAAoB,EAAE,SAAAA,qBAAA,EAAqB;MACzC,OAAO,KAAK;IACd;EACF,CAAC;EAED,OAAOO,MAAM;AACf,CAAC;AAED,IAAMS,KAAK,GAAG,SAARA,KAAKA,CAAaC,IAAY,EAAsB;EAExD,OAAOf,MAAM,CAAC,IAAI3D,aAAa,CAAC,CAAC,CAAC,EAAE;IAClCgD,OAAO,EAAE,CAAC;IACVyB,KAAK,EAAEC,IAAI;IACXC,QAAQ,EAAE,CAAC;IACXjB,eAAe,EAAE;EACnB,CAAC,CAAC;AACJ,CAAC;AAED,IAAMkB,OAAO,GAAG,SAAVA,OAAOA,CACXF,IAAY,EACZZ,UAAqC,EACjB;EACpB,OAAOjC,QAAQ,CACbiC,UAAU,CAACe,GAAG,CAAC,UAACX,SAAS,EAAEY,CAAC,EAAK;IAC/B,OAAOjB,QAAQ,CAAC,CAACY,KAAK,CAACC,IAAI,GAAGI,CAAC,CAAC,EAAEZ,SAAS,CAAC,CAAC;EAC/C,CAAC,CACH,CAAC;AACH,CAAC;AAQD,IAAMa,IAAI,GAAG,SAAPA,IAAIA,CACRb,SAA6B,EAGT;EAAA,IAAAc,IAAA,GAAAtG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgD,SAAA,GAAAhD,SAAA,MADkD,CAAC,CAAC;IAAAuG,eAAA,GAAAD,IAAA,CAAvExB,UAAU;IAAVA,UAAU,GAAAyB,eAAA,cAAG,CAAC,CAAC,GAAAA,eAAA;IAAAC,qBAAA,GAAAF,IAAA,CAAEG,oBAAoB;IAApBA,oBAAoB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;EAE7C,IAAIE,UAAU,GAAG,KAAK;EACtB,IAAIC,eAAe,GAAG,CAAC;EACvB,OAAO;IACL3C,KAAK,EAAE,SAAAA,MAAU5B,QAAuB,EAAE;MACxC,IAAMwE,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAyD;QAAA,IAA5CtB,MAAiB,GAAAtF,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAgD,SAAA,GAAAhD,SAAA,MAAG;UAACuF,QAAQ,EAAE;QAAI,CAAC;QAC5D,IACEmB,UAAU,IACVC,eAAe,KAAK7B,UAAU,IAC9BQ,MAAM,CAACC,QAAQ,KAAK,KAAK,EACzB;UACAnD,QAAQ,IAAIA,QAAQ,CAACkD,MAAM,CAAC;QAC9B,CAAC,MAAM;UACLqB,eAAe,EAAE;UACjBF,oBAAoB,IAAIjB,SAAS,CAACb,KAAK,CAAC,CAAC;UACzCa,SAAS,CAACxB,KAAK,CAAC4C,OAAO,CAAC;QAC1B;MACF,CAAC;MACD,IAAI,CAACpB,SAAS,IAAIV,UAAU,KAAK,CAAC,EAAE;QAClC1C,QAAQ,IAAIA,QAAQ,CAAC;UAACmD,QAAQ,EAAE;QAAI,CAAC,CAAC;MACxC,CAAC,MAAM;QACL,IAAIC,SAAS,CAACT,oBAAoB,CAAC,CAAC,EAAE;UACpCS,SAAS,CAACX,gBAAgB,CAACC,UAAU,CAAC;QACxC,CAAC,MAAM;UACL8B,OAAO,CAAC,CAAC;QACX;MACF;IACF,CAAC;IAEDnC,IAAI,EAAE,SAAAA,KAAA,EAAkB;MACtBiC,UAAU,GAAG,IAAI;MACjBlB,SAAS,CAACf,IAAI,CAAC,CAAC;IAClB,CAAC;IAEDE,KAAK,EAAE,SAAAA,MAAA,EAAkB;MACvBgC,eAAe,GAAG,CAAC;MACnBD,UAAU,GAAG,KAAK;MAClBlB,SAAS,CAACb,KAAK,CAAC,CAAC;IACnB,CAAC;IAEDE,gBAAgB,EAAE,SAAAA,iBAAA,EAAY;MAC5B,MAAM,IAAIa,KAAK,CACb,2EACF,CAAC;IACH,CAAC;IAEDX,oBAAoB,EAAE,SAAAA,qBAAA,EAAqB;MACzC,OAAOS,SAAS,CAACT,oBAAoB,CAAC,CAAC;IACzC;EACF,CAAC;AACH,CAAC;AAED,SAAS8B,SAASA,CAChBC,KAAiC,EACjCC,QAAkB,EACQ;EAC1B,IAAI,CAACD,KAAK,EAAE;IACV,OAAOC,QAAQ;EACjB,CAAC,MAAM,IAAID,KAAK,YAAYxG,aAAa,EAAE;IACzCwG,KAAK,CAACE,aAAa,CAACD,QAAQ,CAAC;IAC7B,OAAOD,KAAK;EACd,CAAC,MAAM;IACL,OAAO,YAAa;MAClB,OAAOA,KAAK,KAAK,UAAU,IAAIA,KAAK,CAAAhH,KAAA,SAAAE,SAAQ,CAAC;MAC7C+G,QAAQ,CAAAjH,KAAA,SAAAE,SAAQ,CAAC;IACnB,CAAC;EACH;AACF;AAEA,SAASiH,WAAWA,CAClBH,KAAiC,EACjCC,QAAkB,EACZ;EACN,IAAID,KAAK,IAAIA,KAAK,YAAYxG,aAAa,EAAE;IAC3CwG,KAAK,CAACI,gBAAgB,CAACH,QAAQ,CAAC;EAClC;AACF;AAEA,IAAMD,KAAK,GAAG,SAARA,KAAKA,CACTK,UAAoC,EACpC9E,MAAmB,EACd;EACL,IAAM+E,aAAa,GAAG,IAAI9G,aAAa,CAAC6G,UAAU,EAAE9E,MAAM,CAAC;EAC3D,IAAI+E,aAAa,CAACC,UAAU,EAAE;IAC5B,OAAOD,aAAa;EACtB,CAAC,MAAM;IACL,OAAOA,aAAa,CAACE,YAAY,CAAC,CAAC;EACrC;AACF,CAAC;AAyBD,eAAe;EAObC,KAAK,EAAEjG,aAAa;EAMpBkG,OAAO,EAAEjG,eAAe;EAIxBkG,KAAK,EAAE5G,aAAa;EAMpB6G,aAAa,EAAE1G,qBAAqB;EAOpC2G,IAAI,EAAExG,YAAY;EAQlB+D,KAAK,EAALA,KAAK;EAOLD,MAAM,EAANA,MAAM;EAONlB,MAAM,EAANA,MAAM;EAQNvC,GAAG,EAAHA,GAAG;EAQHG,QAAQ,EAARA,QAAQ;EAQRC,MAAM,EAANA,MAAM;EAQNC,QAAQ,EAARA,QAAQ;EAQRC,MAAM,EAANA,MAAM;EASNE,SAAS,EAATA,SAAS;EAOT+D,KAAK,EAALA,KAAK;EAQLZ,QAAQ,EAARA,QAAQ;EAQRhC,QAAQ,EAARA,QAAQ;EAOR+C,OAAO,EAAPA,OAAO;EAOPG,IAAI,EAAJA,IAAI;EAQJS,KAAK,EAALA,KAAK;EAOLnG,uBAAuB,EAAvBA,uBAAuB;EAQvBJ,iBAAiB,EAAjBA,iBAAiB;EAQjBsG,SAAS,EAATA,SAAS;EACTI,WAAW,EAAXA,WAAW;EAKXW,KAAK,EAAEtH;AACT,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}