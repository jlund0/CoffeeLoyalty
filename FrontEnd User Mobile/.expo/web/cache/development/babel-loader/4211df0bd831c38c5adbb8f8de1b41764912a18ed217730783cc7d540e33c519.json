{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport app from \"../firebase\";\nimport { useState } from \"react\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function UserButton() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showMenu = _useState2[0],\n    setShowMenu = _useState2[1];\n  var auth = getAuth(app);\n  var handleClick = function handleClick() {\n    console.log(\"clicked\");\n    signOut(auth).then(function () {\n      console.log(\"Sign-out successful.\");\n    }).catch(function (error) {\n      console.log(\"sign out error\" + error);\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(FontAwesome.Button, {\n      name: \"user-circle\",\n      backgroundColor: \"0\",\n      size: 50,\n      onPress: function onPress() {\n        return setShowMenu(!showMenu);\n      }\n    }), showMenu ? _jsxs(View, {\n      children: [_jsx(Button, {\n        title: \"Edit Profile\"\n      }), _jsx(Button, {\n        title: \"Log Out\",\n        onPress: handleClick\n      })]\n    }) : null]\n  });\n}","map":{"version":3,"names":["getAuth","signOut","app","useState","FontAwesome","View","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UserButton","_useState","_useState2","_slicedToArray","showMenu","setShowMenu","auth","handleClick","console","log","then","catch","error","children","Button","name","backgroundColor","size","onPress","title"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/FrontEnd User Mobile/components/buttons.js"],"sourcesContent":["import { getAuth, signOut } from \"firebase/auth\";\nimport app from \"../firebase\";\nimport { useState } from \"react\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport { View } from \"react-native\";\n\nexport function UserButton() {\n  const [showMenu, setShowMenu] = useState(false);\n  const auth = getAuth(app);\n  const handleClick = () => {\n    console.log(\"clicked\");\n    signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n        console.log(\"Sign-out successful.\");\n      })\n      .catch((error) => {\n        // An error happened.\n        console.log(\"sign out error\" + error);\n      });\n  };\n\n  return (\n    <>\n      <FontAwesome.Button\n        name=\"user-circle\"\n        backgroundColor=\"0\"\n        size={50}\n        onPress={() => setShowMenu(!showMenu)}\n      ></FontAwesome.Button>\n      {showMenu ? (\n        <View>\n          <Button title=\"Edit Profile\" />\n          <Button title=\"Log Out\" onPress={handleClick} />\n        </View>\n      ) : null}\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,eAAe;AAChD,OAAOC,GAAG;AACV,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW;AAA8C,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhE,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,IAAAC,SAAA,GAAgCV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAMI,IAAI,GAAGlB,OAAO,CAACE,GAAG,CAAC;EACzB,IAAMiB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBpB,OAAO,CAACiB,IAAI,CAAC,CACVI,IAAI,CAAC,YAAM;MAEVF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC,CAAC,CACDE,KAAK,CAAC,UAACC,KAAK,EAAK;MAEhBJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGG,KAAK,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;EAED,OACEf,KAAA,CAAAE,SAAA;IAAAc,QAAA,GACElB,IAAA,CAACH,WAAW,CAACsB,MAAM;MACjBC,IAAI,EAAC,aAAa;MAClBC,eAAe,EAAC,GAAG;MACnBC,IAAI,EAAE,EAAG;MACTC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMb,WAAW,CAAC,CAACD,QAAQ,CAAC;MAAA;IAAC,CACnB,CAAC,EACrBA,QAAQ,GACPP,KAAA,CAACJ,IAAI;MAAAoB,QAAA,GACHlB,IAAA,CAACmB,MAAM;QAACK,KAAK,EAAC;MAAc,CAAE,CAAC,EAC/BxB,IAAA,CAACmB,MAAM;QAACK,KAAK,EAAC,SAAS;QAACD,OAAO,EAAEX;MAAY,CAAE,CAAC;IAAA,CAC5C,CAAC,GACL,IAAI;EAAA,CACR,CAAC;AAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}