{"ast":null,"code":"'use strict';\nmodule.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'hasViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];","map":{"version":3,"names":["module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/ReactNative/UIManagerProperties.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * The list of non-ViewManager related UIManager properties.\r\n *\r\n * In an effort to improve startup performance by lazily loading view managers,\r\n * the interface to access view managers will change from\r\n * UIManager['viewManagerName'] to UIManager.getViewManagerConfig('viewManagerName').\r\n * By using a function call instead of a property access, the UIManager will\r\n * be able to initialize and load the required view manager from native\r\n * synchronously. All of React Native's core components have been updated to\r\n * use getViewManagerConfig(). For the next few releases, any usage of\r\n * UIManager['viewManagerName'] will result in a warning. Because React Native\r\n * does not support Proxy objects, a view manager access is implied if any of\r\n * UIManager's properties that are not one of the properties below is being\r\n * accessed. Once UIManager property accesses for view managers has been fully\r\n * deprecated, this file will also be removed.\r\n */\r\nmodule.exports = [\r\n  'clearJSResponder',\r\n  'configureNextLayoutAnimation',\r\n  'createView',\r\n  'dismissPopupMenu',\r\n  'dispatchViewManagerCommand',\r\n  'findSubviewIn',\r\n  'getConstantsForViewManager',\r\n  'getDefaultEventTypes',\r\n  'manageChildren',\r\n  'measure',\r\n  'measureInWindow',\r\n  'measureLayout',\r\n  'measureLayoutRelativeToParent',\r\n  'removeRootView',\r\n  'removeSubviewsFromContainerWithID',\r\n  'replaceExistingNonRootView',\r\n  'sendAccessibilityEvent',\r\n  'setChildren',\r\n  'setJSResponder',\r\n  'setLayoutAnimationEnabledExperimental',\r\n  'showPopupMenu',\r\n  'updateView',\r\n  'viewIsDescendantOf',\r\n  'PopupMenu',\r\n  'LazyViewManagersEnabled',\r\n  'ViewManagerNames',\r\n  'StyleConstants',\r\n  'AccessibilityEventTypes',\r\n  'UIView',\r\n  'getViewManagerConfig',\r\n  'hasViewManagerConfig',\r\n  'blur',\r\n  'focus',\r\n  'genericBubblingEventTypes',\r\n  'genericDirectEventTypes',\r\n  'lazilyLoadView',\r\n];\r\n"],"mappings":"AAUA,YAAY;AAkBZA,MAAM,CAACC,OAAO,GAAG,CACf,kBAAkB,EAClB,8BAA8B,EAC9B,YAAY,EACZ,kBAAkB,EAClB,4BAA4B,EAC5B,eAAe,EACf,4BAA4B,EAC5B,sBAAsB,EACtB,gBAAgB,EAChB,SAAS,EACT,iBAAiB,EACjB,eAAe,EACf,+BAA+B,EAC/B,gBAAgB,EAChB,mCAAmC,EACnC,4BAA4B,EAC5B,wBAAwB,EACxB,aAAa,EACb,gBAAgB,EAChB,uCAAuC,EACvC,eAAe,EACf,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,yBAAyB,EACzB,kBAAkB,EAClB,gBAAgB,EAChB,yBAAyB,EACzB,QAAQ,EACR,sBAAsB,EACtB,sBAAsB,EACtB,MAAM,EACN,OAAO,EACP,2BAA2B,EAC3B,yBAAyB,EACzB,gBAAgB,CACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}