{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport AnimatedWithChildren from \"./AnimatedWithChildren\";\nvar AnimatedTransform = function (_AnimatedWithChildren) {\n  _inherits(AnimatedTransform, _AnimatedWithChildren);\n  var _super = _createSuper(AnimatedTransform);\n  function AnimatedTransform(transforms) {\n    var _this;\n    _classCallCheck(this, AnimatedTransform);\n    _this = _super.call(this);\n    _this._transforms = transforms;\n    return _this;\n  }\n  _createClass(AnimatedTransform, [{\n    key: \"__makeNative\",\n    value: function __makeNative(platformConfig) {\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__makeNative(platformConfig);\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__makeNative\", this).call(this, platformConfig);\n    }\n  }, {\n    key: \"__getValue\",\n    value: function __getValue() {\n      return this._get(function (animatedNode) {\n        return animatedNode.__getValue();\n      });\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      return this._get(function (animatedNode) {\n        return animatedNode.__getAnimatedValue();\n      });\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      var _this2 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__addChild(_this2);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      var _this3 = this;\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            value.__removeChild(_this3);\n          }\n        }\n      });\n      _get(_getPrototypeOf(AnimatedTransform.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var transConfigs = [];\n      this._transforms.forEach(function (transform) {\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            transConfigs.push({\n              type: 'animated',\n              property: key,\n              nodeTag: value.__getNativeTag()\n            });\n          } else {\n            transConfigs.push({\n              type: 'static',\n              property: key,\n              value: NativeAnimatedHelper.transformDataType(value)\n            });\n          }\n        }\n      });\n      NativeAnimatedHelper.validateTransform(transConfigs);\n      return {\n        type: 'transform',\n        transforms: transConfigs\n      };\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(getter) {\n      return this._transforms.map(function (transform) {\n        var result = {};\n        for (var key in transform) {\n          var value = transform[key];\n          if (value instanceof AnimatedNode) {\n            result[key] = getter(value);\n          } else if (Array.isArray(value)) {\n            result[key] = value.map(function (element) {\n              if (element instanceof AnimatedNode) {\n                return getter(element);\n              } else {\n                return element;\n              }\n            });\n          } else if (typeof value === 'object') {\n            result[key] = {};\n            for (var _ref of Object.entries(value)) {\n              var _ref2 = _slicedToArray(_ref, 2);\n              var nestedKey = _ref2[0];\n              var nestedValue = _ref2[1];\n              if (nestedValue instanceof AnimatedNode) {\n                result[key][nestedKey] = getter(nestedValue);\n              } else {\n                result[key][nestedKey] = nestedValue;\n              }\n            }\n          } else {\n            result[key] = value;\n          }\n        }\n        return result;\n      });\n    }\n  }]);\n  return AnimatedTransform;\n}(AnimatedWithChildren);\nexport { AnimatedTransform as default };","map":{"version":3,"names":["_slicedToArray","_classCallCheck","_createClass","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","NativeAnimatedHelper","AnimatedNode","AnimatedWithChildren","AnimatedTransform","_AnimatedWithChildren","_super","transforms","_this","_transforms","key","value","__makeNative","platformConfig","forEach","transform","__getValue","animatedNode","__getAnimatedValue","__attach","_this2","__addChild","__detach","_this3","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform","getter","map","Array","isArray","element","_ref","Object","entries","_ref2","nestedKey","nestedValue","default"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\r\n\r\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\r\nimport AnimatedNode from './AnimatedNode';\r\nimport AnimatedWithChildren from './AnimatedWithChildren';\r\n\r\nexport default class AnimatedTransform extends AnimatedWithChildren {\r\n  _transforms: $ReadOnlyArray<Object>;\r\n\r\n  constructor(transforms: $ReadOnlyArray<Object>) {\r\n    super();\r\n    this._transforms = transforms;\r\n  }\r\n\r\n  __makeNative(platformConfig: ?PlatformConfig) {\r\n    this._transforms.forEach(transform => {\r\n      for (const key in transform) {\r\n        const value = transform[key];\r\n        if (value instanceof AnimatedNode) {\r\n          value.__makeNative(platformConfig);\r\n        }\r\n      }\r\n    });\r\n    super.__makeNative(platformConfig);\r\n  }\r\n\r\n  __getValue(): $ReadOnlyArray<Object> {\r\n    return this._get(animatedNode => animatedNode.__getValue());\r\n  }\r\n\r\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\r\n    return this._get(animatedNode => animatedNode.__getAnimatedValue());\r\n  }\r\n\r\n  __attach(): void {\r\n    this._transforms.forEach(transform => {\r\n      for (const key in transform) {\r\n        const value = transform[key];\r\n        if (value instanceof AnimatedNode) {\r\n          value.__addChild(this);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  __detach(): void {\r\n    this._transforms.forEach(transform => {\r\n      for (const key in transform) {\r\n        const value = transform[key];\r\n        if (value instanceof AnimatedNode) {\r\n          value.__removeChild(this);\r\n        }\r\n      }\r\n    });\r\n    super.__detach();\r\n  }\r\n\r\n  __getNativeConfig(): any {\r\n    const transConfigs: Array<any> = [];\r\n\r\n    this._transforms.forEach(transform => {\r\n      for (const key in transform) {\r\n        const value = transform[key];\r\n        if (value instanceof AnimatedNode) {\r\n          transConfigs.push({\r\n            type: 'animated',\r\n            property: key,\r\n            nodeTag: value.__getNativeTag(),\r\n          });\r\n        } else {\r\n          transConfigs.push({\r\n            type: 'static',\r\n            property: key,\r\n            value: NativeAnimatedHelper.transformDataType(value),\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    NativeAnimatedHelper.validateTransform(transConfigs);\r\n    return {\r\n      type: 'transform',\r\n      transforms: transConfigs,\r\n    };\r\n  }\r\n\r\n  _get(getter: AnimatedNode => any): $ReadOnlyArray<Object> {\r\n    return this._transforms.map(transform => {\r\n      const result: {[string]: any} = {};\r\n      for (const key in transform) {\r\n        const value = transform[key];\r\n        if (value instanceof AnimatedNode) {\r\n          result[key] = getter(value);\r\n        } else if (Array.isArray(value)) {\r\n          result[key] = value.map(element => {\r\n            if (element instanceof AnimatedNode) {\r\n              return getter(element);\r\n            } else {\r\n              return element;\r\n            }\r\n          });\r\n        } else if (typeof value === 'object') {\r\n          result[key] = {};\r\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\r\n            if (nestedValue instanceof AnimatedNode) {\r\n              result[key][nestedKey] = getter(nestedValue);\r\n            } else {\r\n              result[key][nestedKey] = nestedValue;\r\n            }\r\n          }\r\n        } else {\r\n          result[key] = value;\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}