{"ast":null,"code":"'use strict';\n\nvar I18nManager = require(\"../ReactNative/I18nManager\");\nfunction resolveBoxStyle(prefix, style) {\n  var hasParts = false;\n  var result = {\n    bottom: 0,\n    left: 0,\n    right: 0,\n    top: 0\n  };\n  var styleForAll = style[prefix];\n  if (styleForAll != null) {\n    for (var key of Object.keys(result)) {\n      result[key] = styleForAll;\n    }\n    hasParts = true;\n  }\n  var styleForHorizontal = style[prefix + 'Horizontal'];\n  if (styleForHorizontal != null) {\n    result.left = styleForHorizontal;\n    result.right = styleForHorizontal;\n    hasParts = true;\n  } else {\n    var styleForLeft = style[prefix + 'Left'];\n    if (styleForLeft != null) {\n      result.left = styleForLeft;\n      hasParts = true;\n    }\n    var styleForRight = style[prefix + 'Right'];\n    if (styleForRight != null) {\n      result.right = styleForRight;\n      hasParts = true;\n    }\n    var styleForEnd = style[prefix + 'End'];\n    if (styleForEnd != null) {\n      var constants = I18nManager.getConstants();\n      if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\n        result.left = styleForEnd;\n      } else {\n        result.right = styleForEnd;\n      }\n      hasParts = true;\n    }\n    var styleForStart = style[prefix + 'Start'];\n    if (styleForStart != null) {\n      var _constants = I18nManager.getConstants();\n      if (_constants.isRTL && _constants.doLeftAndRightSwapInRTL) {\n        result.right = styleForStart;\n      } else {\n        result.left = styleForStart;\n      }\n      hasParts = true;\n    }\n  }\n  var styleForVertical = style[prefix + 'Vertical'];\n  if (styleForVertical != null) {\n    result.bottom = styleForVertical;\n    result.top = styleForVertical;\n    hasParts = true;\n  } else {\n    var styleForBottom = style[prefix + 'Bottom'];\n    if (styleForBottom != null) {\n      result.bottom = styleForBottom;\n      hasParts = true;\n    }\n    var styleForTop = style[prefix + 'Top'];\n    if (styleForTop != null) {\n      result.top = styleForTop;\n      hasParts = true;\n    }\n  }\n  return hasParts ? result : null;\n}\nmodule.exports = resolveBoxStyle;","map":{"version":3,"names":["I18nManager","require","resolveBoxStyle","prefix","style","hasParts","result","bottom","left","right","top","styleForAll","key","Object","keys","styleForHorizontal","styleForLeft","styleForRight","styleForEnd","constants","getConstants","isRTL","doLeftAndRightSwapInRTL","styleForStart","styleForVertical","styleForBottom","styleForTop","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Inspector/resolveBoxStyle.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n'use strict';\r\n\r\nconst I18nManager = require('../ReactNative/I18nManager');\r\n\r\n/**\r\n * Resolve a style property into its component parts.\r\n *\r\n * For example:\r\n *\r\n *   > resolveProperties('margin', {margin: 5, marginBottom: 10})\r\n *   {top: 5, left: 5, right: 5, bottom: 10}\r\n *\r\n * If no parts exist, this returns null.\r\n */\r\nfunction resolveBoxStyle(\r\n  prefix: string,\r\n  style: Object,\r\n): ?$ReadOnly<{|\r\n  bottom: number,\r\n  left: number,\r\n  right: number,\r\n  top: number,\r\n|}> {\r\n  let hasParts = false;\r\n  const result = {\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n  };\r\n\r\n  // TODO: Fix issues with multiple properties affecting the same side.\r\n\r\n  const styleForAll = style[prefix];\r\n  if (styleForAll != null) {\r\n    for (const key of Object.keys(result)) {\r\n      result[key] = styleForAll;\r\n    }\r\n    hasParts = true;\r\n  }\r\n\r\n  const styleForHorizontal = style[prefix + 'Horizontal'];\r\n  if (styleForHorizontal != null) {\r\n    result.left = styleForHorizontal;\r\n    result.right = styleForHorizontal;\r\n    hasParts = true;\r\n  } else {\r\n    const styleForLeft = style[prefix + 'Left'];\r\n    if (styleForLeft != null) {\r\n      result.left = styleForLeft;\r\n      hasParts = true;\r\n    }\r\n\r\n    const styleForRight = style[prefix + 'Right'];\r\n    if (styleForRight != null) {\r\n      result.right = styleForRight;\r\n      hasParts = true;\r\n    }\r\n\r\n    const styleForEnd = style[prefix + 'End'];\r\n    if (styleForEnd != null) {\r\n      const constants = I18nManager.getConstants();\r\n      if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\r\n        result.left = styleForEnd;\r\n      } else {\r\n        result.right = styleForEnd;\r\n      }\r\n      hasParts = true;\r\n    }\r\n    const styleForStart = style[prefix + 'Start'];\r\n    if (styleForStart != null) {\r\n      const constants = I18nManager.getConstants();\r\n      if (constants.isRTL && constants.doLeftAndRightSwapInRTL) {\r\n        result.right = styleForStart;\r\n      } else {\r\n        result.left = styleForStart;\r\n      }\r\n      hasParts = true;\r\n    }\r\n  }\r\n\r\n  const styleForVertical = style[prefix + 'Vertical'];\r\n  if (styleForVertical != null) {\r\n    result.bottom = styleForVertical;\r\n    result.top = styleForVertical;\r\n    hasParts = true;\r\n  } else {\r\n    const styleForBottom = style[prefix + 'Bottom'];\r\n    if (styleForBottom != null) {\r\n      result.bottom = styleForBottom;\r\n      hasParts = true;\r\n    }\r\n\r\n    const styleForTop = style[prefix + 'Top'];\r\n    if (styleForTop != null) {\r\n      result.top = styleForTop;\r\n      hasParts = true;\r\n    }\r\n  }\r\n\r\n  return hasParts ? result : null;\r\n}\r\n\r\nmodule.exports = resolveBoxStyle;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}