{"ast":null,"code":"import * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nexport default TurboModuleRegistry.getEnforcing('WebSocketModule');","map":{"version":3,"names":["TurboModuleRegistry","getEnforcing"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/WebSocket/NativeWebSocketModule.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\nimport type {TurboModule} from '../TurboModule/RCTExport';\r\n\r\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\r\n\r\nexport interface Spec extends TurboModule {\r\n  +connect: (\r\n    url: string,\r\n    protocols: ?Array<string>,\r\n    options: {|headers?: Object|},\r\n    socketID: number,\r\n  ) => void;\r\n  +send: (message: string, forSocketID: number) => void;\r\n  +sendBinary: (base64String: string, forSocketID: number) => void;\r\n  +ping: (socketID: number) => void;\r\n  +close: (code: number, reason: string, socketID: number) => void;\r\n\r\n  // RCTEventEmitter\r\n  +addListener: (eventName: string) => void;\r\n  +removeListeners: (count: number) => void;\r\n}\r\n\r\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\r\n  'WebSocketModule',\r\n): Spec);\r\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAmB;AAmB/B,eAAgBA,mBAAmB,CAACC,YAAY,CAC9C,iBACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}