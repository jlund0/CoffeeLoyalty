{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar FormData = function () {\n  function FormData() {\n    _classCallCheck(this, FormData);\n    this._parts = [];\n  }\n  _createClass(FormData, [{\n    key: \"append\",\n    value: function append(key, value) {\n      this._parts.push([key, value]);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(key) {\n      return this._parts.filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n          name = _ref2[0];\n        return name === key;\n      }).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          value = _ref4[1];\n        return value;\n      });\n    }\n  }, {\n    key: \"getParts\",\n    value: function getParts() {\n      return this._parts.map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          name = _ref6[0],\n          value = _ref6[1];\n        var contentDisposition = 'form-data; name=\"' + name + '\"';\n        var headers = {\n          'content-disposition': contentDisposition\n        };\n        if (typeof value === 'object' && !Array.isArray(value) && value) {\n          if (typeof value.name === 'string') {\n            headers['content-disposition'] += '; filename=\"' + value.name + '\"';\n          }\n          if (typeof value.type === 'string') {\n            headers['content-type'] = value.type;\n          }\n          return _objectSpread(_objectSpread({}, value), {}, {\n            headers: headers,\n            fieldName: name\n          });\n        }\n        return {\n          string: String(value),\n          headers: headers,\n          fieldName: name\n        };\n      });\n    }\n  }]);\n  return FormData;\n}();\nmodule.exports = FormData;","map":{"version":3,"names":["_defineProperty","require","_slicedToArray","_classCallCheck","_createClass","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","FormData","_parts","key","value","append","getAll","_ref","_ref2","name","map","_ref3","_ref4","getParts","_ref5","_ref6","contentDisposition","headers","Array","isArray","type","fieldName","string","String","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Network/FormData.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\ntype FormDataValue = string | {name?: string, type?: string, uri: string};\r\ntype FormDataNameValuePair = [string, FormDataValue];\r\n\r\ntype Headers = {[name: string]: string, ...};\r\ntype FormDataPart =\r\n  | {\r\n      string: string,\r\n      headers: Headers,\r\n      ...\r\n    }\r\n  | {\r\n      uri: string,\r\n      headers: Headers,\r\n      name?: string,\r\n      type?: string,\r\n      ...\r\n    };\r\n\r\n/**\r\n * Polyfill for XMLHttpRequest2 FormData API, allowing multipart POST requests\r\n * with mixed data (string, native files) to be submitted via XMLHttpRequest.\r\n *\r\n * Example:\r\n *\r\n *   var photo = {\r\n *     uri: uriFromCameraRoll,\r\n *     type: 'image/jpeg',\r\n *     name: 'photo.jpg',\r\n *   };\r\n *\r\n *   var body = new FormData();\r\n *   body.append('authToken', 'secret');\r\n *   body.append('photo', photo);\r\n *   body.append('title', 'A beautiful photo!');\r\n *\r\n *   xhr.open('POST', serverURL);\r\n *   xhr.send(body);\r\n */\r\nclass FormData {\r\n  _parts: Array<FormDataNameValuePair>;\r\n\r\n  constructor() {\r\n    this._parts = [];\r\n  }\r\n\r\n  append(key: string, value: FormDataValue) {\r\n    // The XMLHttpRequest spec doesn't specify if duplicate keys are allowed.\r\n    // MDN says that any new values should be appended to existing values.\r\n    // In any case, major browsers allow duplicate keys, so that's what we'll do\r\n    // too. They'll simply get appended as additional form data parts in the\r\n    // request body, leaving the server to deal with them.\r\n    this._parts.push([key, value]);\r\n  }\r\n\r\n  getAll(key: string): Array<FormDataValue> {\r\n    return this._parts\r\n      .filter(([name]) => name === key)\r\n      .map(([, value]) => value);\r\n  }\r\n\r\n  getParts(): Array<FormDataPart> {\r\n    return this._parts.map(([name, value]) => {\r\n      const contentDisposition = 'form-data; name=\"' + name + '\"';\r\n\r\n      const headers: Headers = {'content-disposition': contentDisposition};\r\n\r\n      // The body part is a \"blob\", which in React Native just means\r\n      // an object with a `uri` attribute. Optionally, it can also\r\n      // have a `name` and `type` attribute to specify filename and\r\n      // content type (cf. web Blob interface.)\r\n      if (typeof value === 'object' && !Array.isArray(value) && value) {\r\n        if (typeof value.name === 'string') {\r\n          headers['content-disposition'] += '; filename=\"' + value.name + '\"';\r\n        }\r\n        if (typeof value.type === 'string') {\r\n          headers['content-type'] = value.type;\r\n        }\r\n        return {...value, headers, fieldName: name};\r\n      }\r\n      // Convert non-object values to strings as per FormData.append() spec\r\n      return {string: String(value), headers, fieldName: name};\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = FormData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}