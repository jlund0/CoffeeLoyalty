{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { AnimatedEvent, attachNativeEvent } from \"./AnimatedEvent\";\nimport AnimatedImplementation from \"./AnimatedImplementation\";\nimport createAnimatedComponent from \"./createAnimatedComponent\";\nimport AnimatedColor from \"./nodes/AnimatedColor\";\nimport AnimatedInterpolation from \"./nodes/AnimatedInterpolation\";\nimport AnimatedNode from \"./nodes/AnimatedNode\";\nimport AnimatedValue from \"./nodes/AnimatedValue\";\nimport AnimatedValueXY from \"./nodes/AnimatedValueXY\";\nvar inAnimationCallback = false;\nfunction mockAnimationStart(start) {\n  return function (callback) {\n    var guardedCallback = callback == null ? callback : function () {\n      if (inAnimationCallback) {\n        console.warn('Ignoring recursive animation callback when running mock animations');\n        return;\n      }\n      inAnimationCallback = true;\n      try {\n        callback.apply(void 0, arguments);\n      } finally {\n        inAnimationCallback = false;\n      }\n    };\n    start(guardedCallback);\n  };\n}\nvar emptyAnimation = {\n  start: function start() {},\n  stop: function stop() {},\n  reset: function reset() {},\n  _startNativeLoop: function _startNativeLoop() {},\n  _isUsingNativeDriver: function _isUsingNativeDriver() {\n    return false;\n  }\n};\nvar mockCompositeAnimation = function mockCompositeAnimation(animations) {\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      animations.forEach(function (animation) {\n        return animation.start();\n      });\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\nvar spring = function spring(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      anyValue.setValue(config.toValue);\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\nvar timing = function timing(value, config) {\n  var anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(function (callback) {\n      anyValue.setValue(config.toValue);\n      callback == null ? void 0 : callback({\n        finished: true\n      });\n    })\n  });\n};\nvar decay = function decay(value, config) {\n  return emptyAnimation;\n};\nvar sequence = function sequence(animations) {\n  return mockCompositeAnimation(animations);\n};\nvar parallel = function parallel(animations, config) {\n  return mockCompositeAnimation(animations);\n};\nvar delay = function delay(time) {\n  return emptyAnimation;\n};\nvar stagger = function stagger(time, animations) {\n  return mockCompositeAnimation(animations);\n};\nvar loop = function loop(animation) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$iterations = _ref.iterations,\n    iterations = _ref$iterations === void 0 ? -1 : _ref$iterations;\n  return emptyAnimation;\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay: decay,\n  timing: timing,\n  spring: spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay: delay,\n  sequence: sequence,\n  parallel: parallel,\n  stagger: stagger,\n  loop: loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent: createAnimatedComponent,\n  attachNativeEvent: attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","AnimatedEvent","attachNativeEvent","AnimatedImplementation","createAnimatedComponent","AnimatedColor","AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedValueXY","inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","console","warn","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","_ref","undefined","_ref$iterations","iterations","Value","ValueXY","Color","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","event","forkEvent","unforkEvent","Event"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Animated/AnimatedMock.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nimport type {Numeric as AnimatedNumeric} from './AnimatedImplementation';\r\nimport type {EndResult} from './animations/Animation';\r\nimport type {EndCallback} from './animations/Animation';\r\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\r\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\r\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\r\n\r\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\r\nimport AnimatedImplementation from './AnimatedImplementation';\r\nimport createAnimatedComponent from './createAnimatedComponent';\r\nimport AnimatedColor from './nodes/AnimatedColor';\r\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\r\nimport AnimatedNode from './nodes/AnimatedNode';\r\nimport AnimatedValue from './nodes/AnimatedValue';\r\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\r\n\r\n/**\r\n * Animations are a source of flakiness in snapshot testing. This mock replaces\r\n * animation functions from AnimatedImplementation with empty animations for\r\n * predictability in tests. When possible the animation will run immediately\r\n * to the final state.\r\n */\r\n\r\n// Prevent any callback invocation from recursively triggering another\r\n// callback, which may trigger another animation\r\nlet inAnimationCallback = false;\r\nfunction mockAnimationStart(\r\n  start: (callback?: ?EndCallback) => void,\r\n): (callback?: ?EndCallback) => void {\r\n  return callback => {\r\n    const guardedCallback =\r\n      callback == null\r\n        ? callback\r\n        : (...args: Array<EndResult>) => {\r\n            if (inAnimationCallback) {\r\n              console.warn(\r\n                'Ignoring recursive animation callback when running mock animations',\r\n              );\r\n              return;\r\n            }\r\n            inAnimationCallback = true;\r\n            try {\r\n              callback(...args);\r\n            } finally {\r\n              inAnimationCallback = false;\r\n            }\r\n          };\r\n    start(guardedCallback);\r\n  };\r\n}\r\n\r\nexport type CompositeAnimation = {\r\n  start: (callback?: ?EndCallback) => void,\r\n  stop: () => void,\r\n  reset: () => void,\r\n  _startNativeLoop: (iterations?: number) => void,\r\n  _isUsingNativeDriver: () => boolean,\r\n  ...\r\n};\r\n\r\nconst emptyAnimation = {\r\n  start: () => {},\r\n  stop: () => {},\r\n  reset: () => {},\r\n  _startNativeLoop: () => {},\r\n  _isUsingNativeDriver: () => {\r\n    return false;\r\n  },\r\n};\r\n\r\nconst mockCompositeAnimation = (\r\n  animations: Array<CompositeAnimation>,\r\n): CompositeAnimation => ({\r\n  ...emptyAnimation,\r\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\r\n    animations.forEach(animation => animation.start());\r\n    callback?.({finished: true});\r\n  }),\r\n});\r\n\r\nconst spring = function (\r\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n  config: SpringAnimationConfig,\r\n): CompositeAnimation {\r\n  const anyValue: any = value;\r\n  return {\r\n    ...emptyAnimation,\r\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\r\n      anyValue.setValue(config.toValue);\r\n      callback?.({finished: true});\r\n    }),\r\n  };\r\n};\r\n\r\nconst timing = function (\r\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n  config: TimingAnimationConfig,\r\n): CompositeAnimation {\r\n  const anyValue: any = value;\r\n  return {\r\n    ...emptyAnimation,\r\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\r\n      anyValue.setValue(config.toValue);\r\n      callback?.({finished: true});\r\n    }),\r\n  };\r\n};\r\n\r\nconst decay = function (\r\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\r\n  config: DecayAnimationConfig,\r\n): CompositeAnimation {\r\n  return emptyAnimation;\r\n};\r\n\r\nconst sequence = function (\r\n  animations: Array<CompositeAnimation>,\r\n): CompositeAnimation {\r\n  return mockCompositeAnimation(animations);\r\n};\r\n\r\ntype ParallelConfig = {stopTogether?: boolean, ...};\r\nconst parallel = function (\r\n  animations: Array<CompositeAnimation>,\r\n  config?: ?ParallelConfig,\r\n): CompositeAnimation {\r\n  return mockCompositeAnimation(animations);\r\n};\r\n\r\nconst delay = function (time: number): CompositeAnimation {\r\n  return emptyAnimation;\r\n};\r\n\r\nconst stagger = function (\r\n  time: number,\r\n  animations: Array<CompositeAnimation>,\r\n): CompositeAnimation {\r\n  return mockCompositeAnimation(animations);\r\n};\r\n\r\ntype LoopAnimationConfig = {\r\n  iterations: number,\r\n  resetBeforeIteration?: boolean,\r\n  ...\r\n};\r\n\r\nconst loop = function (\r\n  animation: CompositeAnimation,\r\n  // $FlowFixMe[prop-missing]\r\n  {iterations = -1}: LoopAnimationConfig = {},\r\n): CompositeAnimation {\r\n  return emptyAnimation;\r\n};\r\n\r\nexport type {AnimatedNumeric as Numeric};\r\n\r\nexport default {\r\n  Value: AnimatedValue,\r\n  ValueXY: AnimatedValueXY,\r\n  Color: AnimatedColor,\r\n  Interpolation: AnimatedInterpolation,\r\n  Node: AnimatedNode,\r\n  decay,\r\n  timing,\r\n  spring,\r\n  add: AnimatedImplementation.add,\r\n  subtract: AnimatedImplementation.subtract,\r\n  divide: AnimatedImplementation.divide,\r\n  multiply: AnimatedImplementation.multiply,\r\n  modulo: AnimatedImplementation.modulo,\r\n  diffClamp: AnimatedImplementation.diffClamp,\r\n  delay,\r\n  sequence,\r\n  parallel,\r\n  stagger,\r\n  loop,\r\n  event: AnimatedImplementation.event,\r\n  createAnimatedComponent,\r\n  attachNativeEvent,\r\n  forkEvent: AnimatedImplementation.forkEvent,\r\n  unforkEvent: AnimatedImplementation.unforkEvent,\r\n  Event: AnimatedEvent,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}