{"ast":null,"code":"import * as TurboModuleRegistry from \"../../TurboModule/TurboModuleRegistry\";\nvar NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');\nvar constants = null;\nvar NativeStatusBarManager = {\n  getConstants: function getConstants() {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n  getHeight: function getHeight(callback) {\n    NativeModule.getHeight(callback);\n  },\n  setNetworkActivityIndicatorVisible: function setNetworkActivityIndicatorVisible(visible) {\n    NativeModule.setNetworkActivityIndicatorVisible(visible);\n  },\n  addListener: function addListener(eventType) {\n    NativeModule.addListener(eventType);\n  },\n  removeListeners: function removeListeners(count) {\n    NativeModule.removeListeners(count);\n  },\n  setStyle: function setStyle(statusBarStyle, animated) {\n    NativeModule.setStyle(statusBarStyle, animated);\n  },\n  setHidden: function setHidden(hidden, withAnimation) {\n    NativeModule.setHidden(hidden, withAnimation);\n  }\n};\nexport default NativeStatusBarManager;","map":{"version":3,"names":["TurboModuleRegistry","NativeModule","getEnforcing","constants","NativeStatusBarManager","getConstants","getHeight","callback","setNetworkActivityIndicatorVisible","visible","addListener","eventType","removeListeners","count","setStyle","statusBarStyle","animated","setHidden","hidden","withAnimation"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Components/StatusBar/NativeStatusBarManagerIOS.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\nimport type {TurboModule} from '../../TurboModule/RCTExport';\r\n\r\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\r\n\r\nexport interface Spec extends TurboModule {\r\n  +getConstants: () => {|\r\n    +HEIGHT: number,\r\n    +DEFAULT_BACKGROUND_COLOR?: number,\r\n  |};\r\n\r\n  // TODO(T47754272) Can we remove this method?\r\n  +getHeight: (callback: (result: {|height: number|}) => void) => void;\r\n  +setNetworkActivityIndicatorVisible: (visible: boolean) => void;\r\n  +addListener: (eventType: string) => void;\r\n  +removeListeners: (count: number) => void;\r\n\r\n  /**\r\n   *  - statusBarStyles can be:\r\n   *    - 'default'\r\n   *    - 'dark-content'\r\n   *    - 'light-content'\r\n   */\r\n  +setStyle: (statusBarStyle?: ?string, animated: boolean) => void;\r\n  /**\r\n   *  - withAnimation can be: 'none' | 'fade' | 'slide'\r\n   */\r\n  +setHidden: (hidden: boolean, withAnimation: string) => void;\r\n}\r\n\r\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\r\nlet constants = null;\r\n\r\nconst NativeStatusBarManager = {\r\n  getConstants(): {|\r\n    +HEIGHT: number,\r\n    +DEFAULT_BACKGROUND_COLOR?: number,\r\n  |} {\r\n    if (constants == null) {\r\n      constants = NativeModule.getConstants();\r\n    }\r\n    return constants;\r\n  },\r\n\r\n  // TODO(T47754272) Can we remove this method?\r\n  getHeight(callback: (result: {|height: number|}) => void): void {\r\n    NativeModule.getHeight(callback);\r\n  },\r\n\r\n  setNetworkActivityIndicatorVisible(visible: boolean): void {\r\n    NativeModule.setNetworkActivityIndicatorVisible(visible);\r\n  },\r\n\r\n  addListener(eventType: string): void {\r\n    NativeModule.addListener(eventType);\r\n  },\r\n\r\n  removeListeners(count: number): void {\r\n    NativeModule.removeListeners(count);\r\n  },\r\n\r\n  /**\r\n   *  - statusBarStyles can be:\r\n   *    - 'default'\r\n   *    - 'dark-content'\r\n   *    - 'light-content'\r\n   */\r\n  setStyle(statusBarStyle?: ?string, animated: boolean): void {\r\n    NativeModule.setStyle(statusBarStyle, animated);\r\n  },\r\n\r\n  /**\r\n   *  - withAnimation can be: 'none' | 'fade' | 'slide'\r\n   */\r\n  setHidden(hidden: boolean, withAnimation: string): void {\r\n    NativeModule.setHidden(hidden, withAnimation);\r\n  },\r\n};\r\n\r\nexport default NativeStatusBarManager;\r\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAmB;AA2B/B,IAAMC,YAAY,GAAGD,mBAAmB,CAACE,YAAY,CAAO,kBAAkB,CAAC;AAC/E,IAAIC,SAAS,GAAG,IAAI;AAEpB,IAAMC,sBAAsB,GAAG;EAC7BC,YAAY,WAAAA,aAAA,EAGT;IACD,IAAIF,SAAS,IAAI,IAAI,EAAE;MACrBA,SAAS,GAAGF,YAAY,CAACI,YAAY,CAAC,CAAC;IACzC;IACA,OAAOF,SAAS;EAClB,CAAC;EAGDG,SAAS,WAAAA,UAACC,QAA8C,EAAQ;IAC9DN,YAAY,CAACK,SAAS,CAACC,QAAQ,CAAC;EAClC,CAAC;EAEDC,kCAAkC,WAAAA,mCAACC,OAAgB,EAAQ;IACzDR,YAAY,CAACO,kCAAkC,CAACC,OAAO,CAAC;EAC1D,CAAC;EAEDC,WAAW,WAAAA,YAACC,SAAiB,EAAQ;IACnCV,YAAY,CAACS,WAAW,CAACC,SAAS,CAAC;EACrC,CAAC;EAEDC,eAAe,WAAAA,gBAACC,KAAa,EAAQ;IACnCZ,YAAY,CAACW,eAAe,CAACC,KAAK,CAAC;EACrC,CAAC;EAQDC,QAAQ,WAAAA,SAACC,cAAwB,EAAEC,QAAiB,EAAQ;IAC1Df,YAAY,CAACa,QAAQ,CAACC,cAAc,EAAEC,QAAQ,CAAC;EACjD,CAAC;EAKDC,SAAS,WAAAA,UAACC,MAAe,EAAEC,aAAqB,EAAQ;IACtDlB,YAAY,CAACgB,SAAS,CAACC,MAAM,EAAEC,aAAa,CAAC;EAC/C;AACF,CAAC;AAED,eAAef,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}