{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var VirtualizedListContext = React.createContext(null);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\nexport function VirtualizedListContextResetter(_ref) {\n  var children = _ref.children;\n  return _jsx(VirtualizedListContext.Provider, {\n    value: null,\n    children: children\n  });\n}\nexport function VirtualizedListContextProvider(_ref2) {\n  var children = _ref2.children,\n    value = _ref2.value;\n  var context = useMemo(function () {\n    return {\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild\n    };\n  }, [value.getScrollMetrics, value.horizontal, value.getOutermostParentListRef, value.registerAsNestedChild, value.unregisterAsNestedChild]);\n  return _jsx(VirtualizedListContext.Provider, {\n    value: context,\n    children: children\n  });\n}\nexport function VirtualizedListCellContextProvider(_ref3) {\n  var cellKey = _ref3.cellKey,\n    children = _ref3.children;\n  var currContext = useContext(VirtualizedListContext);\n  var context = useMemo(function () {\n    return currContext == null ? null : _objectSpread(_objectSpread({}, currContext), {}, {\n      cellKey: cellKey\n    });\n  }, [currContext, cellKey]);\n  return _jsx(VirtualizedListContext.Provider, {\n    value: context,\n    children: children\n  });\n}","map":{"version":3,"names":["React","useContext","useMemo","jsx","_jsx","VirtualizedListContext","createContext","__DEV__","displayName","VirtualizedListContextResetter","_ref","children","Provider","value","VirtualizedListContextProvider","_ref2","context","cellKey","getScrollMetrics","horizontal","getOutermostParentListRef","registerAsNestedChild","unregisterAsNestedChild","VirtualizedListCellContextProvider","_ref3","currContext","_objectSpread"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/@react-native/virtualized-lists/Lists/VirtualizedListContext.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport typeof VirtualizedList from './VirtualizedList';\r\n\r\nimport * as React from 'react';\r\nimport {useContext, useMemo} from 'react';\r\n\r\ntype Context = $ReadOnly<{\r\n  cellKey: ?string,\r\n  getScrollMetrics: () => {\r\n    contentLength: number,\r\n    dOffset: number,\r\n    dt: number,\r\n    offset: number,\r\n    timestamp: number,\r\n    velocity: number,\r\n    visibleLength: number,\r\n    zoomScale: number,\r\n  },\r\n  horizontal: ?boolean,\r\n  getOutermostParentListRef: () => React.ElementRef<VirtualizedList>,\r\n  registerAsNestedChild: ({\r\n    cellKey: string,\r\n    ref: React.ElementRef<VirtualizedList>,\r\n  }) => void,\r\n  unregisterAsNestedChild: ({\r\n    ref: React.ElementRef<VirtualizedList>,\r\n  }) => void,\r\n}>;\r\n\r\nexport const VirtualizedListContext: React.Context<?Context> =\r\n  React.createContext(null);\r\nif (__DEV__) {\r\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\r\n}\r\n\r\n/**\r\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\r\n */\r\nexport function VirtualizedListContextResetter({\r\n  children,\r\n}: {\r\n  children: React.Node,\r\n}): React.Node {\r\n  return (\r\n    <VirtualizedListContext.Provider value={null}>\r\n      {children}\r\n    </VirtualizedListContext.Provider>\r\n  );\r\n}\r\n\r\n/**\r\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\r\n */\r\nexport function VirtualizedListContextProvider({\r\n  children,\r\n  value,\r\n}: {\r\n  children: React.Node,\r\n  value: Context,\r\n}): React.Node {\r\n  // Avoid setting a newly created context object if the values are identical.\r\n  const context = useMemo(\r\n    () => ({\r\n      cellKey: null,\r\n      getScrollMetrics: value.getScrollMetrics,\r\n      horizontal: value.horizontal,\r\n      getOutermostParentListRef: value.getOutermostParentListRef,\r\n      registerAsNestedChild: value.registerAsNestedChild,\r\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\r\n    }),\r\n    [\r\n      value.getScrollMetrics,\r\n      value.horizontal,\r\n      value.getOutermostParentListRef,\r\n      value.registerAsNestedChild,\r\n      value.unregisterAsNestedChild,\r\n    ],\r\n  );\r\n  return (\r\n    <VirtualizedListContext.Provider value={context}>\r\n      {children}\r\n    </VirtualizedListContext.Provider>\r\n  );\r\n}\r\n\r\n/**\r\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\r\n */\r\nexport function VirtualizedListCellContextProvider({\r\n  cellKey,\r\n  children,\r\n}: {\r\n  cellKey: string,\r\n  children: React.Node,\r\n}): React.Node {\r\n  // Avoid setting a newly created context object if the values are identical.\r\n  const currContext = useContext(VirtualizedListContext);\r\n  const context = useMemo(\r\n    () => (currContext == null ? null : {...currContext, cellKey}),\r\n    [currContext, cellKey],\r\n  );\r\n  return (\r\n    <VirtualizedListContext.Provider value={context}>\r\n      {children}\r\n    </VirtualizedListContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;;AAYA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,UAAU,EAAEC,OAAO,QAAO,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAyB1C,OAAO,IAAMC,sBAA+C,GAC1DL,KAAK,CAACM,aAAa,CAAC,IAAI,CAAC;AAC3B,IAAIC,OAAO,EAAE;EACXF,sBAAsB,CAACG,WAAW,GAAG,wBAAwB;AAC/D;AAKA,OAAO,SAASC,8BAA8BA,CAAAC,IAAA,EAI/B;EAAA,IAHbC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAIR,OACEP,IAAA,CAACC,sBAAsB,CAACO,QAAQ;IAACC,KAAK,EAAE,IAAK;IAAAF,QAAA,EAC1CA;EAAQ,CACsB,CAAC;AAEtC;AAKA,OAAO,SAASG,8BAA8BA,CAAAC,KAAA,EAM/B;EAAA,IALbJ,QAAQ,GAAAI,KAAA,CAARJ,QAAQ;IACRE,KAAK,GAAAE,KAAA,CAALF,KAAK;EAML,IAAMG,OAAO,GAAGd,OAAO,CACrB;IAAA,OAAO;MACLe,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAEL,KAAK,CAACK,gBAAgB;MACxCC,UAAU,EAAEN,KAAK,CAACM,UAAU;MAC5BC,yBAAyB,EAAEP,KAAK,CAACO,yBAAyB;MAC1DC,qBAAqB,EAAER,KAAK,CAACQ,qBAAqB;MAClDC,uBAAuB,EAAET,KAAK,CAACS;IACjC,CAAC;EAAA,CAAC,EACF,CACET,KAAK,CAACK,gBAAgB,EACtBL,KAAK,CAACM,UAAU,EAChBN,KAAK,CAACO,yBAAyB,EAC/BP,KAAK,CAACQ,qBAAqB,EAC3BR,KAAK,CAACS,uBAAuB,CAEjC,CAAC;EACD,OACElB,IAAA,CAACC,sBAAsB,CAACO,QAAQ;IAACC,KAAK,EAAEG,OAAQ;IAAAL,QAAA,EAC7CA;EAAQ,CACsB,CAAC;AAEtC;AAKA,OAAO,SAASY,kCAAkCA,CAAAC,KAAA,EAMnC;EAAA,IALbP,OAAO,GAAAO,KAAA,CAAPP,OAAO;IACPN,QAAQ,GAAAa,KAAA,CAARb,QAAQ;EAMR,IAAMc,WAAW,GAAGxB,UAAU,CAACI,sBAAsB,CAAC;EACtD,IAAMW,OAAO,GAAGd,OAAO,CACrB;IAAA,OAAOuB,WAAW,IAAI,IAAI,GAAG,IAAI,GAAAC,aAAA,CAAAA,aAAA,KAAOD,WAAW;MAAER,OAAO,EAAPA;IAAO,EAAC;EAAA,CAAC,EAC9D,CAACQ,WAAW,EAAER,OAAO,CACvB,CAAC;EACD,OACEb,IAAA,CAACC,sBAAsB,CAACO,QAAQ;IAACC,KAAK,EAAEG,OAAQ;IAAAL,QAAA,EAC7CA;EAAQ,CACsB,CAAC;AAEtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}