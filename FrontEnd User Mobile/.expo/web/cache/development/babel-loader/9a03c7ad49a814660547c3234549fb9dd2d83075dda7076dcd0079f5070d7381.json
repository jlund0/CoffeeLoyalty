{"ast":null,"code":"'use strict';\n\nvar defineLazyObjectProperty = require(\"./defineLazyObjectProperty\");\nfunction polyfillObjectProperty(object, name, getValue) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, name);\n  if (__DEV__ && descriptor) {\n    var backupName = `original${name[0].toUpperCase()}${name.substr(1)}`;\n    Object.defineProperty(object, backupName, descriptor);\n  }\n  var _ref = descriptor || {},\n    enumerable = _ref.enumerable,\n    writable = _ref.writable,\n    _ref$configurable = _ref.configurable,\n    configurable = _ref$configurable === void 0 ? false : _ref$configurable;\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false\n  });\n}\nfunction polyfillGlobal(name, getValue) {\n  polyfillObjectProperty(global, name, getValue);\n}\nmodule.exports = {\n  polyfillObjectProperty: polyfillObjectProperty,\n  polyfillGlobal: polyfillGlobal\n};","map":{"version":3,"names":["defineLazyObjectProperty","require","polyfillObjectProperty","object","name","getValue","descriptor","Object","getOwnPropertyDescriptor","__DEV__","backupName","toUpperCase","substr","defineProperty","_ref","enumerable","writable","_ref$configurable","configurable","console","error","get","polyfillGlobal","global","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Utilities/PolyfillFunctions.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nconst defineLazyObjectProperty = require('./defineLazyObjectProperty');\r\n\r\n/**\r\n * Sets an object's property. If a property with the same name exists, this will\r\n * replace it but maintain its descriptor configuration. The property will be\r\n * replaced with a lazy getter.\r\n *\r\n * In DEV mode the original property value will be preserved as `original[PropertyName]`\r\n * so that, if necessary, it can be restored. For example, if you want to route\r\n * network requests through DevTools (to trace them):\r\n *\r\n *   global.XMLHttpRequest = global.originalXMLHttpRequest;\r\n *\r\n * @see https://github.com/facebook/react-native/issues/934\r\n */\r\nfunction polyfillObjectProperty<T>(\r\n  object: {...},\r\n  name: string,\r\n  getValue: () => T,\r\n): void {\r\n  const descriptor = Object.getOwnPropertyDescriptor<$FlowFixMe>(object, name);\r\n  if (__DEV__ && descriptor) {\r\n    const backupName = `original${name[0].toUpperCase()}${name.substr(1)}`;\r\n    Object.defineProperty(object, backupName, descriptor);\r\n  }\r\n\r\n  const {enumerable, writable, configurable = false} = descriptor || {};\r\n  if (descriptor && !configurable) {\r\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\r\n    return;\r\n  }\r\n\r\n  defineLazyObjectProperty(object, name, {\r\n    get: getValue,\r\n    enumerable: enumerable !== false,\r\n    writable: writable !== false,\r\n  });\r\n}\r\n\r\nfunction polyfillGlobal<T>(name: string, getValue: () => T): void {\r\n  polyfillObjectProperty(global, name, getValue);\r\n}\r\n\r\nmodule.exports = {polyfillObjectProperty, polyfillGlobal};\r\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,wBAAwB,GAAGC,OAAO,6BAA6B,CAAC;AAetE,SAASC,sBAAsBA,CAC7BC,MAAa,EACbC,IAAY,EACZC,QAAiB,EACX;EACN,IAAMC,UAAU,GAAGC,MAAM,CAACC,wBAAwB,CAAaL,MAAM,EAAEC,IAAI,CAAC;EAC5E,IAAIK,OAAO,IAAIH,UAAU,EAAE;IACzB,IAAMI,UAAU,GAAI,WAAUN,IAAI,CAAC,CAAC,CAAC,CAACO,WAAW,CAAC,CAAE,GAAEP,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAE,EAAC;IACtEL,MAAM,CAACM,cAAc,CAACV,MAAM,EAAEO,UAAU,EAAEJ,UAAU,CAAC;EACvD;EAEA,IAAAQ,IAAA,GAAqDR,UAAU,IAAI,CAAC,CAAC;IAA9DS,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAAC,iBAAA,GAAAH,IAAA,CAAEI,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,KAAK,GAAAA,iBAAA;EACjD,IAAIX,UAAU,IAAI,CAACY,YAAY,EAAE;IAC/BC,OAAO,CAACC,KAAK,CAAC,0BAA0B,GAAGhB,IAAI,GAAG,uBAAuB,CAAC;IAC1E;EACF;EAEAJ,wBAAwB,CAACG,MAAM,EAAEC,IAAI,EAAE;IACrCiB,GAAG,EAAEhB,QAAQ;IACbU,UAAU,EAAEA,UAAU,KAAK,KAAK;IAChCC,QAAQ,EAAEA,QAAQ,KAAK;EACzB,CAAC,CAAC;AACJ;AAEA,SAASM,cAAcA,CAAIlB,IAAY,EAAEC,QAAiB,EAAQ;EAChEH,sBAAsB,CAACqB,MAAM,EAAEnB,IAAI,EAAEC,QAAQ,CAAC;AAChD;AAEAmB,MAAM,CAACC,OAAO,GAAG;EAACvB,sBAAsB,EAAtBA,sBAAsB;EAAEoB,cAAc,EAAdA;AAAc,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}