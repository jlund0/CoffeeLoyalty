{"ast":null,"code":"'use strict';\n\nif (__DEV__) {\n  (function () {\n    'use strict';\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n    \"use strict\";\n    var React = require(\"react\");\n    require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\n    var ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\n    var Scheduler = require(\"scheduler\");\n    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          printWarning(\"warn\", format, args);\n        }\n      }\n    }\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n          printWarning(\"error\", format, args);\n        }\n      }\n    }\n    function printWarning(level, format, args) {\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n        if (stack !== \"\") {\n          format += \"%s\";\n          args = args.concat([stack]);\n        }\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        });\n        argsWithFormat.unshift(\"Warning: \" + format);\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\n      try {\n        func.apply(context, funcArgs);\n      } catch (error) {\n        this.onError(error);\n      }\n    }\n    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n    {\n      if (typeof window !== \"undefined\" && typeof window.dispatchEvent === \"function\" && typeof document !== \"undefined\" && typeof document.createEvent === \"function\") {\n        var fakeNode = document.createElement(\"react\");\n        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {\n          if (typeof document === \"undefined\" || document === null) {\n            throw new Error(\"The `document` global was defined when React was initialized, but is not \" + \"defined anymore. This can happen in a test environment if a component \" + \"schedules an update from an asynchronous callback, but the test has already \" + \"finished running. To solve this, you can either unmount the component at \" + \"the end of your test (and ensure that any asynchronous operations get \" + \"canceled in `componentWillUnmount`), or you can change the test itself \" + \"to be asynchronous.\");\n          }\n          var evt = document.createEvent(\"Event\");\n          var didCall = false;\n          var didError = true;\n          var windowEvent = window.event;\n          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, \"event\");\n          function restoreAfterDispatch() {\n            fakeNode.removeEventListener(evtType, callCallback, false);\n            if (typeof window.event !== \"undefined\" && window.hasOwnProperty(\"event\")) {\n              window.event = windowEvent;\n            }\n          }\n          var funcArgs = Array.prototype.slice.call(arguments, 3);\n          function callCallback() {\n            didCall = true;\n            restoreAfterDispatch();\n            func.apply(context, funcArgs);\n            didError = false;\n          }\n          var error;\n          var didSetError = false;\n          var isCrossOriginError = false;\n          function handleWindowError(event) {\n            error = event.error;\n            didSetError = true;\n            if (error === null && event.colno === 0 && event.lineno === 0) {\n              isCrossOriginError = true;\n            }\n            if (event.defaultPrevented) {\n              if (error != null && typeof error === \"object\") {\n                try {\n                  error._suppressLogging = true;\n                } catch (inner) {}\n              }\n            }\n          }\n          var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\");\n          window.addEventListener(\"error\", handleWindowError);\n          fakeNode.addEventListener(evtType, callCallback, false);\n          evt.initEvent(evtType, false, false);\n          fakeNode.dispatchEvent(evt);\n          if (windowEventDescriptor) {\n            Object.defineProperty(window, \"event\", windowEventDescriptor);\n          }\n          if (didCall && didError) {\n            if (!didSetError) {\n              error = new Error(\"An error was thrown inside one of your components, but React \" + \"doesn't know what it was. This is likely due to browser \" + 'flakiness. React does its best to preserve the \"Pause on ' + 'exceptions\" behavior of the DevTools, which requires some ' + \"DEV-mode only tricks. It's possible that these don't work in \" + \"your browser. Try triggering the error in production mode, \" + \"or switching to a modern browser. If you suspect that this is \" + \"actually an issue with React, please file an issue.\");\n            } else if (isCrossOriginError) {\n              error = new Error(\"A cross-origin error was thrown. React doesn't have access to \" + \"the actual error object in development. \" + \"See https://reactjs.org/link/crossorigin-error for more information.\");\n            }\n            this.onError(error);\n          }\n          window.removeEventListener(\"error\", handleWindowError);\n          if (!didCall) {\n            restoreAfterDispatch();\n            return invokeGuardedCallbackProd.apply(this, arguments);\n          }\n        };\n      }\n    }\n    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\n    var hasError = false;\n    var caughtError = null;\n    var hasRethrowError = false;\n    var rethrowError = null;\n    var reporter = {\n      onError: function onError(error) {\n        hasError = true;\n        caughtError = error;\n      }\n    };\n    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\n      hasError = false;\n      caughtError = null;\n      invokeGuardedCallbackImpl$1.apply(reporter, arguments);\n    }\n    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {\n      invokeGuardedCallback.apply(this, arguments);\n      if (hasError) {\n        var error = clearCaughtError();\n        if (!hasRethrowError) {\n          hasRethrowError = true;\n          rethrowError = error;\n        }\n      }\n    }\n    function rethrowCaughtError() {\n      if (hasRethrowError) {\n        var error = rethrowError;\n        hasRethrowError = false;\n        rethrowError = null;\n        throw error;\n      }\n    }\n    function hasCaughtError() {\n      return hasError;\n    }\n    function clearCaughtError() {\n      if (hasError) {\n        var error = caughtError;\n        hasError = false;\n        caughtError = null;\n        return error;\n      } else {\n        throw new Error(\"clearCaughtError was called but no error was captured. This error \" + \"is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    var isArrayImpl = Array.isArray;\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n    var getFiberCurrentPropsFromNode = null;\n    var getInstanceFromNode = null;\n    var getNodeFromInstance = null;\n    function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {\n      getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n      getInstanceFromNode = getInstanceFromNodeImpl;\n      getNodeFromInstance = getNodeFromInstanceImpl;\n      {\n        if (!getNodeFromInstance || !getInstanceFromNode) {\n          error(\"EventPluginUtils.setComponentTree(...): Injected \" + \"module is missing getNodeFromInstance or getInstanceFromNode.\");\n        }\n      }\n    }\n    var validateEventDispatches;\n    {\n      validateEventDispatches = function validateEventDispatches(event) {\n        var dispatchListeners = event._dispatchListeners;\n        var dispatchInstances = event._dispatchInstances;\n        var listenersIsArr = isArray(dispatchListeners);\n        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n        var instancesIsArr = isArray(dispatchInstances);\n        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n        if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n          error(\"EventPluginUtils: Invalid `event`.\");\n        }\n      };\n    }\n    function executeDispatch(event, listener, inst) {\n      var type = event.type || \"unknown-event\";\n      event.currentTarget = getNodeFromInstance(inst);\n      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n      event.currentTarget = null;\n    }\n    function executeDispatchesInOrder(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n          executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n        }\n      } else if (dispatchListeners) {\n        executeDispatch(event, dispatchListeners, dispatchInstances);\n      }\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n    }\n    function executeDispatchesInOrderStopAtTrueImpl(event) {\n      var dispatchListeners = event._dispatchListeners;\n      var dispatchInstances = event._dispatchInstances;\n      {\n        validateEventDispatches(event);\n      }\n      if (isArray(dispatchListeners)) {\n        for (var i = 0; i < dispatchListeners.length; i++) {\n          if (event.isPropagationStopped()) {\n            break;\n          }\n          if (dispatchListeners[i](event, dispatchInstances[i])) {\n            return dispatchInstances[i];\n          }\n        }\n      } else if (dispatchListeners) {\n        if (dispatchListeners(event, dispatchInstances)) {\n          return dispatchInstances;\n        }\n      }\n      return null;\n    }\n    function executeDispatchesInOrderStopAtTrue(event) {\n      var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n      event._dispatchInstances = null;\n      event._dispatchListeners = null;\n      return ret;\n    }\n    function executeDirectDispatch(event) {\n      {\n        validateEventDispatches(event);\n      }\n      var dispatchListener = event._dispatchListeners;\n      var dispatchInstance = event._dispatchInstances;\n      if (isArray(dispatchListener)) {\n        throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\n      }\n      event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;\n      var res = dispatchListener ? dispatchListener(event) : null;\n      event.currentTarget = null;\n      event._dispatchListeners = null;\n      event._dispatchInstances = null;\n      return res;\n    }\n    function hasDispatches(event) {\n      return !!event._dispatchListeners;\n    }\n    var assign = Object.assign;\n    var EVENT_POOL_SIZE = 10;\n    var EventInterface = {\n      type: null,\n      target: null,\n      currentTarget: function currentTarget() {\n        return null;\n      },\n      eventPhase: null,\n      bubbles: null,\n      cancelable: null,\n      timeStamp: function timeStamp(event) {\n        return event.timeStamp || Date.now();\n      },\n      defaultPrevented: null,\n      isTrusted: null\n    };\n    function functionThatReturnsTrue() {\n      return true;\n    }\n    function functionThatReturnsFalse() {\n      return false;\n    }\n    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n      {\n        delete this.nativeEvent;\n        delete this.preventDefault;\n        delete this.stopPropagation;\n        delete this.isDefaultPrevented;\n        delete this.isPropagationStopped;\n      }\n      this.dispatchConfig = dispatchConfig;\n      this._targetInst = targetInst;\n      this.nativeEvent = nativeEvent;\n      this._dispatchListeners = null;\n      this._dispatchInstances = null;\n      var Interface = this.constructor.Interface;\n      for (var propName in Interface) {\n        if (!Interface.hasOwnProperty(propName)) {\n          continue;\n        }\n        {\n          delete this[propName];\n        }\n        var normalize = Interface[propName];\n        if (normalize) {\n          this[propName] = normalize(nativeEvent);\n        } else {\n          if (propName === \"target\") {\n            this.target = nativeEventTarget;\n          } else {\n            this[propName] = nativeEvent[propName];\n          }\n        }\n      }\n      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n      if (defaultPrevented) {\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      } else {\n        this.isDefaultPrevented = functionThatReturnsFalse;\n      }\n      this.isPropagationStopped = functionThatReturnsFalse;\n      return this;\n    }\n    assign(SyntheticEvent.prototype, {\n      preventDefault: function preventDefault() {\n        this.defaultPrevented = true;\n        var event = this.nativeEvent;\n        if (!event) {\n          return;\n        }\n        if (event.preventDefault) {\n          event.preventDefault();\n        } else if (typeof event.returnValue !== \"unknown\") {\n          event.returnValue = false;\n        }\n        this.isDefaultPrevented = functionThatReturnsTrue;\n      },\n      stopPropagation: function stopPropagation() {\n        var event = this.nativeEvent;\n        if (!event) {\n          return;\n        }\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        } else if (typeof event.cancelBubble !== \"unknown\") {\n          event.cancelBubble = true;\n        }\n        this.isPropagationStopped = functionThatReturnsTrue;\n      },\n      persist: function persist() {\n        this.isPersistent = functionThatReturnsTrue;\n      },\n      isPersistent: functionThatReturnsFalse,\n      destructor: function destructor() {\n        var Interface = this.constructor.Interface;\n        for (var propName in Interface) {\n          {\n            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n          }\n        }\n        this.dispatchConfig = null;\n        this._targetInst = null;\n        this.nativeEvent = null;\n        this.isDefaultPrevented = functionThatReturnsFalse;\n        this.isPropagationStopped = functionThatReturnsFalse;\n        this._dispatchListeners = null;\n        this._dispatchInstances = null;\n        {\n          Object.defineProperty(this, \"nativeEvent\", getPooledWarningPropertyDefinition(\"nativeEvent\", null));\n          Object.defineProperty(this, \"isDefaultPrevented\", getPooledWarningPropertyDefinition(\"isDefaultPrevented\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"isPropagationStopped\", getPooledWarningPropertyDefinition(\"isPropagationStopped\", functionThatReturnsFalse));\n          Object.defineProperty(this, \"preventDefault\", getPooledWarningPropertyDefinition(\"preventDefault\", function () {}));\n          Object.defineProperty(this, \"stopPropagation\", getPooledWarningPropertyDefinition(\"stopPropagation\", function () {}));\n        }\n      }\n    });\n    SyntheticEvent.Interface = EventInterface;\n    SyntheticEvent.extend = function (Interface) {\n      var Super = this;\n      var E = function E() {};\n      E.prototype = Super.prototype;\n      var prototype = new E();\n      function Class() {\n        return Super.apply(this, arguments);\n      }\n      assign(prototype, Class.prototype);\n      Class.prototype = prototype;\n      Class.prototype.constructor = Class;\n      Class.Interface = assign({}, Super.Interface, Interface);\n      Class.extend = Super.extend;\n      addEventPoolingTo(Class);\n      return Class;\n    };\n    addEventPoolingTo(SyntheticEvent);\n    function getPooledWarningPropertyDefinition(propName, getVal) {\n      function set(val) {\n        var action = isFunction ? \"setting the method\" : \"setting the property\";\n        warn(action, \"This is effectively a no-op\");\n        return val;\n      }\n      function get() {\n        var action = isFunction ? \"accessing the method\" : \"accessing the property\";\n        var result = isFunction ? \"This is a no-op function\" : \"This is set to null\";\n        warn(action, result);\n        return getVal;\n      }\n      function warn(action, result) {\n        {\n          error(\"This synthetic event is reused for performance reasons. If you're seeing this, \" + \"you're %s `%s` on a released/nullified synthetic event. %s. \" + \"If you must keep the original synthetic event around, use event.persist(). \" + \"See https://reactjs.org/link/event-pooling for more information.\", action, propName, result);\n        }\n      }\n      var isFunction = typeof getVal === \"function\";\n      return {\n        configurable: true,\n        set: set,\n        get: get\n      };\n    }\n    function createOrGetPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {\n      var EventConstructor = this;\n      if (EventConstructor.eventPool.length) {\n        var instance = EventConstructor.eventPool.pop();\n        EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);\n        return instance;\n      }\n      return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);\n    }\n    function releasePooledEvent(event) {\n      var EventConstructor = this;\n      if (!(event instanceof EventConstructor)) {\n        throw new Error(\"Trying to release an event instance into a pool of a different type.\");\n      }\n      event.destructor();\n      if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n        EventConstructor.eventPool.push(event);\n      }\n    }\n    function addEventPoolingTo(EventConstructor) {\n      EventConstructor.getPooled = createOrGetPooledEvent;\n      EventConstructor.eventPool = [];\n      EventConstructor.release = releasePooledEvent;\n    }\n    var ResponderSyntheticEvent = SyntheticEvent.extend({\n      touchHistory: function touchHistory(nativeEvent) {\n        return null;\n      }\n    });\n    var TOP_TOUCH_START = \"topTouchStart\";\n    var TOP_TOUCH_MOVE = \"topTouchMove\";\n    var TOP_TOUCH_END = \"topTouchEnd\";\n    var TOP_TOUCH_CANCEL = \"topTouchCancel\";\n    var TOP_SCROLL = \"topScroll\";\n    var TOP_SELECTION_CHANGE = \"topSelectionChange\";\n    function isStartish(topLevelType) {\n      return topLevelType === TOP_TOUCH_START;\n    }\n    function isMoveish(topLevelType) {\n      return topLevelType === TOP_TOUCH_MOVE;\n    }\n    function isEndish(topLevelType) {\n      return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n    }\n    var startDependencies = [TOP_TOUCH_START];\n    var moveDependencies = [TOP_TOUCH_MOVE];\n    var endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n    var MAX_TOUCH_BANK = 20;\n    var touchBank = [];\n    var touchHistory = {\n      touchBank: touchBank,\n      numberActiveTouches: 0,\n      indexOfSingleActiveTouch: -1,\n      mostRecentTimeStamp: 0\n    };\n    function timestampForTouch(touch) {\n      return touch.timeStamp || touch.timestamp;\n    }\n    function createTouchRecord(touch) {\n      return {\n        touchActive: true,\n        startPageX: touch.pageX,\n        startPageY: touch.pageY,\n        startTimeStamp: timestampForTouch(touch),\n        currentPageX: touch.pageX,\n        currentPageY: touch.pageY,\n        currentTimeStamp: timestampForTouch(touch),\n        previousPageX: touch.pageX,\n        previousPageY: touch.pageY,\n        previousTimeStamp: timestampForTouch(touch)\n      };\n    }\n    function resetTouchRecord(touchRecord, touch) {\n      touchRecord.touchActive = true;\n      touchRecord.startPageX = touch.pageX;\n      touchRecord.startPageY = touch.pageY;\n      touchRecord.startTimeStamp = timestampForTouch(touch);\n      touchRecord.currentPageX = touch.pageX;\n      touchRecord.currentPageY = touch.pageY;\n      touchRecord.currentTimeStamp = timestampForTouch(touch);\n      touchRecord.previousPageX = touch.pageX;\n      touchRecord.previousPageY = touch.pageY;\n      touchRecord.previousTimeStamp = timestampForTouch(touch);\n    }\n    function getTouchIdentifier(_ref) {\n      var identifier = _ref.identifier;\n      if (identifier == null) {\n        throw new Error(\"Touch object is missing identifier.\");\n      }\n      {\n        if (identifier > MAX_TOUCH_BANK) {\n          error(\"Touch identifier %s is greater than maximum supported %s which causes \" + \"performance issues backfilling array locations for all of the indices.\", identifier, MAX_TOUCH_BANK);\n        }\n      }\n      return identifier;\n    }\n    function recordTouchStart(touch) {\n      var identifier = getTouchIdentifier(touch);\n      var touchRecord = touchBank[identifier];\n      if (touchRecord) {\n        resetTouchRecord(touchRecord, touch);\n      } else {\n        touchBank[identifier] = createTouchRecord(touch);\n      }\n      touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n    }\n    function recordTouchMove(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n      if (touchRecord) {\n        touchRecord.touchActive = true;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch move without a touch start.\\n\" + \"Touch Move: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n    function recordTouchEnd(touch) {\n      var touchRecord = touchBank[getTouchIdentifier(touch)];\n      if (touchRecord) {\n        touchRecord.touchActive = false;\n        touchRecord.previousPageX = touchRecord.currentPageX;\n        touchRecord.previousPageY = touchRecord.currentPageY;\n        touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n        touchRecord.currentPageX = touch.pageX;\n        touchRecord.currentPageY = touch.pageY;\n        touchRecord.currentTimeStamp = timestampForTouch(touch);\n        touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n      } else {\n        {\n          warn(\"Cannot record touch end without a touch start.\\n\" + \"Touch End: %s\\n\" + \"Touch Bank: %s\", printTouch(touch), printTouchBank());\n        }\n      }\n    }\n    function printTouch(touch) {\n      return JSON.stringify({\n        identifier: touch.identifier,\n        pageX: touch.pageX,\n        pageY: touch.pageY,\n        timestamp: timestampForTouch(touch)\n      });\n    }\n    function printTouchBank() {\n      var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n      if (touchBank.length > MAX_TOUCH_BANK) {\n        printed += \" (original size: \" + touchBank.length + \")\";\n      }\n      return printed;\n    }\n    var instrumentationCallback;\n    var ResponderTouchHistoryStore = {\n      instrument: function instrument(callback) {\n        instrumentationCallback = callback;\n      },\n      recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {\n        if (instrumentationCallback != null) {\n          instrumentationCallback(topLevelType, nativeEvent);\n        }\n        if (isMoveish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchMove);\n        } else if (isStartish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchStart);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n          if (touchHistory.numberActiveTouches === 1) {\n            touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\n          }\n        } else if (isEndish(topLevelType)) {\n          nativeEvent.changedTouches.forEach(recordTouchEnd);\n          touchHistory.numberActiveTouches = nativeEvent.touches.length;\n          if (touchHistory.numberActiveTouches === 1) {\n            for (var i = 0; i < touchBank.length; i++) {\n              var touchTrackToCheck = touchBank[i];\n              if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n                touchHistory.indexOfSingleActiveTouch = i;\n                break;\n              }\n            }\n            {\n              var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n              if (activeRecord == null || !activeRecord.touchActive) {\n                error(\"Cannot find single active touch.\");\n              }\n            }\n          }\n        }\n      },\n      touchHistory: touchHistory\n    };\n    function accumulate(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulate(...): Accumulated items must not be null or undefined.\");\n      }\n      if (current == null) {\n        return next;\n      }\n      if (isArray(current)) {\n        return current.concat(next);\n      }\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n      return [current, next];\n    }\n    function accumulateInto(current, next) {\n      if (next == null) {\n        throw new Error(\"accumulateInto(...): Accumulated items must not be null or undefined.\");\n      }\n      if (current == null) {\n        return next;\n      }\n      if (isArray(current)) {\n        if (isArray(next)) {\n          current.push.apply(current, next);\n          return current;\n        }\n        current.push(next);\n        return current;\n      }\n      if (isArray(next)) {\n        return [current].concat(next);\n      }\n      return [current, next];\n    }\n    function forEachAccumulated(arr, cb, scope) {\n      if (Array.isArray(arr)) {\n        arr.forEach(cb, scope);\n      } else if (arr) {\n        cb.call(scope, arr);\n      }\n    }\n    var FunctionComponent = 0;\n    var ClassComponent = 1;\n    var IndeterminateComponent = 2;\n    var HostRoot = 3;\n    var HostPortal = 4;\n    var HostComponent = 5;\n    var HostText = 6;\n    var Fragment = 7;\n    var Mode = 8;\n    var ContextConsumer = 9;\n    var ContextProvider = 10;\n    var ForwardRef = 11;\n    var Profiler = 12;\n    var SuspenseComponent = 13;\n    var MemoComponent = 14;\n    var SimpleMemoComponent = 15;\n    var LazyComponent = 16;\n    var IncompleteClassComponent = 17;\n    var DehydratedFragment = 18;\n    var SuspenseListComponent = 19;\n    var ScopeComponent = 21;\n    var OffscreenComponent = 22;\n    var LegacyHiddenComponent = 23;\n    var CacheComponent = 24;\n    var TracingMarkerComponent = 25;\n    var responderInst = null;\n    var trackedTouchCount = 0;\n    var changeResponder = function changeResponder(nextResponderInst, blockHostResponder) {\n      var oldResponderInst = responderInst;\n      responderInst = nextResponderInst;\n      if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n        ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);\n      }\n    };\n    var eventTypes = {\n      startShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onStartShouldSetResponder\",\n          captured: \"onStartShouldSetResponderCapture\"\n        },\n        dependencies: startDependencies\n      },\n      scrollShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onScrollShouldSetResponder\",\n          captured: \"onScrollShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SCROLL]\n      },\n      selectionChangeShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onSelectionChangeShouldSetResponder\",\n          captured: \"onSelectionChangeShouldSetResponderCapture\"\n        },\n        dependencies: [TOP_SELECTION_CHANGE]\n      },\n      moveShouldSetResponder: {\n        phasedRegistrationNames: {\n          bubbled: \"onMoveShouldSetResponder\",\n          captured: \"onMoveShouldSetResponderCapture\"\n        },\n        dependencies: moveDependencies\n      },\n      responderStart: {\n        registrationName: \"onResponderStart\",\n        dependencies: startDependencies\n      },\n      responderMove: {\n        registrationName: \"onResponderMove\",\n        dependencies: moveDependencies\n      },\n      responderEnd: {\n        registrationName: \"onResponderEnd\",\n        dependencies: endDependencies\n      },\n      responderRelease: {\n        registrationName: \"onResponderRelease\",\n        dependencies: endDependencies\n      },\n      responderTerminationRequest: {\n        registrationName: \"onResponderTerminationRequest\",\n        dependencies: []\n      },\n      responderGrant: {\n        registrationName: \"onResponderGrant\",\n        dependencies: []\n      },\n      responderReject: {\n        registrationName: \"onResponderReject\",\n        dependencies: []\n      },\n      responderTerminate: {\n        registrationName: \"onResponderTerminate\",\n        dependencies: []\n      }\n    };\n    function getParent(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n      if (inst) {\n        return inst;\n      }\n      return null;\n    }\n    function getLowestCommonAncestor(instA, instB) {\n      var depthA = 0;\n      for (var tempA = instA; tempA; tempA = getParent(tempA)) {\n        depthA++;\n      }\n      var depthB = 0;\n      for (var tempB = instB; tempB; tempB = getParent(tempB)) {\n        depthB++;\n      }\n      while (depthA - depthB > 0) {\n        instA = getParent(instA);\n        depthA--;\n      }\n      while (depthB - depthA > 0) {\n        instB = getParent(instB);\n        depthB--;\n      }\n      var depth = depthA;\n      while (depth--) {\n        if (instA === instB || instA === instB.alternate) {\n          return instA;\n        }\n        instA = getParent(instA);\n        instB = getParent(instB);\n      }\n      return null;\n    }\n    function isAncestor(instA, instB) {\n      while (instB) {\n        if (instA === instB || instA === instB.alternate) {\n          return true;\n        }\n        instB = getParent(instB);\n      }\n      return false;\n    }\n    function traverseTwoPhase(inst, fn, arg) {\n      var path = [];\n      while (inst) {\n        path.push(inst);\n        inst = getParent(inst);\n      }\n      var i;\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n      for (i = 0; i < path.length; i++) {\n        fn(path[i], \"bubbled\", arg);\n      }\n    }\n    function getListener(inst, registrationName) {\n      var stateNode = inst.stateNode;\n      if (stateNode === null) {\n        return null;\n      }\n      var props = getFiberCurrentPropsFromNode(stateNode);\n      if (props === null) {\n        return null;\n      }\n      var listener = props[registrationName];\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n      return listener;\n    }\n    function listenerAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListener(inst, registrationName);\n    }\n    function accumulateDirectionalDispatches(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listener = listenerAtPhase(inst, event, phase);\n      if (listener) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n      }\n    }\n    function accumulateDispatches(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listener = getListener(inst, registrationName);\n        if (listener) {\n          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n        }\n      }\n    }\n    function accumulateDirectDispatchesSingle(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches(event._targetInst, null, event);\n      }\n    }\n    function accumulateDirectDispatches(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle);\n    }\n    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        var targetInst = event._targetInst;\n        var parentInst = targetInst ? getParent(targetInst) : null;\n        traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n      }\n    }\n    function accumulateTwoPhaseDispatchesSkipTarget(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n    }\n    function accumulateTwoPhaseDispatchesSingle(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n      }\n    }\n    function accumulateTwoPhaseDispatches(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n    }\n    function setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === TOP_SELECTION_CHANGE ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;\n      var bubbleShouldSetFrom = !responderInst ? targetInst : getLowestCommonAncestor(responderInst, targetInst);\n      var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n      var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);\n      shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      if (skipOverBubbleShouldSetFrom) {\n        accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n      } else {\n        accumulateTwoPhaseDispatches(shouldSetEvent);\n      }\n      var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n      if (!shouldSetEvent.isPersistent()) {\n        shouldSetEvent.constructor.release(shouldSetEvent);\n      }\n      if (!wantsResponderInst || wantsResponderInst === responderInst) {\n        return null;\n      }\n      var extracted;\n      var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderInst, nativeEvent, nativeEventTarget);\n      grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(grantEvent);\n      var blockHostResponder = executeDirectDispatch(grantEvent) === true;\n      if (responderInst) {\n        var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget);\n        terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n        accumulateDirectDispatches(terminationRequestEvent);\n        var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);\n        if (!terminationRequestEvent.isPersistent()) {\n          terminationRequestEvent.constructor.release(terminationRequestEvent);\n        }\n        if (shouldSwitch) {\n          var terminateEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget);\n          terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(terminateEvent);\n          extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n          changeResponder(wantsResponderInst, blockHostResponder);\n        } else {\n          var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderInst, nativeEvent, nativeEventTarget);\n          rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(rejectEvent);\n          extracted = accumulate(extracted, rejectEvent);\n        }\n      } else {\n        extracted = accumulate(extracted, grantEvent);\n        changeResponder(wantsResponderInst, blockHostResponder);\n      }\n      return extracted;\n    }\n    function canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n      return topLevelInst && (topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll || trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE || isStartish(topLevelType) || isMoveish(topLevelType));\n    }\n    function noResponderTouches(nativeEvent) {\n      var touches = nativeEvent.touches;\n      if (!touches || touches.length === 0) {\n        return true;\n      }\n      for (var i = 0; i < touches.length; i++) {\n        var activeTouch = touches[i];\n        var target = activeTouch.target;\n        if (target !== null && target !== undefined && target !== 0) {\n          var targetInst = getInstanceFromNode(target);\n          if (isAncestor(responderInst, targetInst)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    var ResponderEventPlugin = {\n      _getResponder: function _getResponder() {\n        return responderInst;\n      },\n      eventTypes: eventTypes,\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {\n        if (isStartish(topLevelType)) {\n          trackedTouchCount += 1;\n        } else if (isEndish(topLevelType)) {\n          if (trackedTouchCount >= 0) {\n            trackedTouchCount -= 1;\n          } else {\n            {\n              warn(\"Ended a touch event which was not counted in `trackedTouchCount`.\");\n            }\n            return null;\n          }\n        }\n        ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n        var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent) ? setResponderAndExtractTransfer(topLevelType, targetInst, nativeEvent, nativeEventTarget) : null;\n        var isResponderTouchStart = responderInst && isStartish(topLevelType);\n        var isResponderTouchMove = responderInst && isMoveish(topLevelType);\n        var isResponderTouchEnd = responderInst && isEndish(topLevelType);\n        var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;\n        if (incrementalTouch) {\n          var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderInst, nativeEvent, nativeEventTarget);\n          gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(gesture);\n          extracted = accumulate(extracted, gesture);\n        }\n        var isResponderTerminate = responderInst && topLevelType === TOP_TOUCH_CANCEL;\n        var isResponderRelease = responderInst && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);\n        var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;\n        if (finalTouch) {\n          var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderInst, nativeEvent, nativeEventTarget);\n          finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n          accumulateDirectDispatches(finalEvent);\n          extracted = accumulate(extracted, finalEvent);\n          changeResponder(null);\n        }\n        return extracted;\n      },\n      GlobalResponderHandler: null,\n      injection: {\n        injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {\n          ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n        }\n      }\n    };\n    var eventPluginOrder = null;\n    var namesToPlugins = {};\n    function recomputePluginOrdering() {\n      if (!eventPluginOrder) {\n        return;\n      }\n      for (var pluginName in namesToPlugins) {\n        var pluginModule = namesToPlugins[pluginName];\n        var pluginIndex = eventPluginOrder.indexOf(pluginName);\n        if (pluginIndex <= -1) {\n          throw new Error(\"EventPluginRegistry: Cannot inject event plugins that do not exist in \" + (\"the plugin ordering, `\" + pluginName + \"`.\"));\n        }\n        if (plugins[pluginIndex]) {\n          continue;\n        }\n        if (!pluginModule.extractEvents) {\n          throw new Error(\"EventPluginRegistry: Event plugins must implement an `extractEvents` \" + (\"method, but `\" + pluginName + \"` does not.\"));\n        }\n        plugins[pluginIndex] = pluginModule;\n        var publishedEvents = pluginModule.eventTypes;\n        for (var eventName in publishedEvents) {\n          if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {\n            throw new Error(\"EventPluginRegistry: Failed to publish event `\" + eventName + \"` for plugin `\" + pluginName + \"`.\");\n          }\n        }\n      }\n    }\n    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"event name, `\" + eventName + \"`.\"));\n      }\n      eventNameDispatchConfigs[eventName] = dispatchConfig;\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n      if (phasedRegistrationNames) {\n        for (var phaseName in phasedRegistrationNames) {\n          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n            var phasedRegistrationName = phasedRegistrationNames[phaseName];\n            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n          }\n        }\n        return true;\n      } else if (dispatchConfig.registrationName) {\n        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n        return true;\n      }\n      return false;\n    }\n    function publishRegistrationName(registrationName, pluginModule, eventName) {\n      if (registrationNameModules[registrationName]) {\n        throw new Error(\"EventPluginRegistry: More than one plugin attempted to publish the same \" + (\"registration name, `\" + registrationName + \"`.\"));\n      }\n      registrationNameModules[registrationName] = pluginModule;\n      registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n      {\n        var lowerCasedName = registrationName.toLowerCase();\n      }\n    }\n    var plugins = [];\n    var eventNameDispatchConfigs = {};\n    var registrationNameModules = {};\n    var registrationNameDependencies = {};\n    function injectEventPluginOrder(injectedEventPluginOrder) {\n      if (eventPluginOrder) {\n        throw new Error(\"EventPluginRegistry: Cannot inject event plugin ordering more than \" + \"once. You are likely trying to load more than one copy of React.\");\n      }\n      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n      recomputePluginOrdering();\n    }\n    function injectEventPluginsByName(injectedNamesToPlugins) {\n      var isOrderingDirty = false;\n      for (var pluginName in injectedNamesToPlugins) {\n        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n          continue;\n        }\n        var pluginModule = injectedNamesToPlugins[pluginName];\n        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n          if (namesToPlugins[pluginName]) {\n            throw new Error(\"EventPluginRegistry: Cannot inject two different event plugins \" + (\"using the same name, `\" + pluginName + \"`.\"));\n          }\n          namesToPlugins[pluginName] = pluginModule;\n          isOrderingDirty = true;\n        }\n      }\n      if (isOrderingDirty) {\n        recomputePluginOrdering();\n      }\n    }\n    function getListeners(inst, registrationName, phase, dispatchToImperativeListeners) {\n      var stateNode = inst.stateNode;\n      if (stateNode === null) {\n        return null;\n      }\n      var props = getFiberCurrentPropsFromNode(stateNode);\n      if (props === null) {\n        return null;\n      }\n      var listener = props[registrationName];\n      if (listener && typeof listener !== \"function\") {\n        throw new Error(\"Expected `\" + registrationName + \"` listener to be a function, instead got a value of `\" + typeof listener + \"` type.\");\n      }\n      if (!(dispatchToImperativeListeners && stateNode.canonical && stateNode.canonical._eventListeners)) {\n        return listener;\n      }\n      var listeners = [];\n      if (listener) {\n        listeners.push(listener);\n      }\n      var requestedPhaseIsCapture = phase === \"captured\";\n      var mangledImperativeRegistrationName = requestedPhaseIsCapture ? \"rn:\" + registrationName.replace(/Capture$/, \"\") : \"rn:\" + registrationName;\n      if (stateNode.canonical._eventListeners[mangledImperativeRegistrationName] && stateNode.canonical._eventListeners[mangledImperativeRegistrationName].length > 0) {\n        var eventListeners = stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\n        eventListeners.forEach(function (listenerObj) {\n          var isCaptureEvent = listenerObj.options.capture != null && listenerObj.options.capture;\n          if (isCaptureEvent !== requestedPhaseIsCapture) {\n            return;\n          }\n          var listenerFnWrapper = function listenerFnWrapper(syntheticEvent) {\n            var eventInst = new ReactNativePrivateInterface.CustomEvent(mangledImperativeRegistrationName, {\n              detail: syntheticEvent.nativeEvent\n            });\n            eventInst.isTrusted = true;\n            eventInst.setSyntheticEvent(syntheticEvent);\n            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n            listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\n          };\n          if (listenerObj.options.once) {\n            listeners.push(function () {\n              stateNode.canonical.removeEventListener_unstable(mangledImperativeRegistrationName, listenerObj.listener, listenerObj.capture);\n              if (!listenerObj.invalidated) {\n                listenerObj.invalidated = true;\n                listenerObj.listener.apply(listenerObj, arguments);\n              }\n            });\n          } else {\n            listeners.push(listenerFnWrapper);\n          }\n        });\n      }\n      if (listeners.length === 0) {\n        return null;\n      }\n      if (listeners.length === 1) {\n        return listeners[0];\n      }\n      return listeners;\n    }\n    var customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,\n      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;\n    function listenersAtPhase(inst, event, propagationPhase) {\n      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n      return getListeners(inst, registrationName, propagationPhase, true);\n    }\n    function accumulateListenersAndInstances(inst, event, listeners) {\n      var listenersLength = listeners ? isArray(listeners) ? listeners.length : 1 : 0;\n      if (listenersLength > 0) {\n        event._dispatchListeners = accumulateInto(event._dispatchListeners, listeners);\n        if (event._dispatchInstances == null && listenersLength === 1) {\n          event._dispatchInstances = inst;\n        } else {\n          event._dispatchInstances = event._dispatchInstances || [];\n          if (!isArray(event._dispatchInstances)) {\n            event._dispatchInstances = [event._dispatchInstances];\n          }\n          for (var i = 0; i < listenersLength; i++) {\n            event._dispatchInstances.push(inst);\n          }\n        }\n      }\n    }\n    function accumulateDirectionalDispatches$1(inst, phase, event) {\n      {\n        if (!inst) {\n          error(\"Dispatching inst must not be null\");\n        }\n      }\n      var listeners = listenersAtPhase(inst, event, phase);\n      accumulateListenersAndInstances(inst, event, listeners);\n    }\n    function getParent$1(inst) {\n      do {\n        inst = inst.return;\n      } while (inst && inst.tag !== HostComponent);\n      if (inst) {\n        return inst;\n      }\n      return null;\n    }\n    function traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\n      var path = [];\n      while (inst) {\n        path.push(inst);\n        inst = getParent$1(inst);\n      }\n      var i;\n      for (i = path.length; i-- > 0;) {\n        fn(path[i], \"captured\", arg);\n      }\n      if (skipBubbling) {\n        fn(path[0], \"bubbled\", arg);\n      } else {\n        for (i = 0; i < path.length; i++) {\n          fn(path[i], \"bubbled\", arg);\n        }\n      }\n    }\n    function accumulateTwoPhaseDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, false);\n      }\n    }\n    function accumulateTwoPhaseDispatches$1(events) {\n      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\n    }\n    function accumulateCapturePhaseDispatches(event) {\n      if (event && event.dispatchConfig.phasedRegistrationNames) {\n        traverseTwoPhase$1(event._targetInst, accumulateDirectionalDispatches$1, event, true);\n      }\n    }\n    function accumulateDispatches$1(inst, ignoredDirection, event) {\n      if (inst && event && event.dispatchConfig.registrationName) {\n        var registrationName = event.dispatchConfig.registrationName;\n        var listeners = getListeners(inst, registrationName, \"bubbled\", false);\n        accumulateListenersAndInstances(inst, event, listeners);\n      }\n    }\n    function accumulateDirectDispatchesSingle$1(event) {\n      if (event && event.dispatchConfig.registrationName) {\n        accumulateDispatches$1(event._targetInst, null, event);\n      }\n    }\n    function accumulateDirectDispatches$1(events) {\n      forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\n    }\n    var ReactNativeBridgeEventPlugin = {\n      eventTypes: {},\n      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n        if (targetInst == null) {\n          return null;\n        }\n        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n        var directDispatchConfig = customDirectEventTypes[topLevelType];\n        if (!bubbleDispatchConfig && !directDispatchConfig) {\n          throw new Error('Unsupported top level event type \"' + topLevelType + '\" dispatched');\n        }\n        var event = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n        if (bubbleDispatchConfig) {\n          var skipBubbling = event != null && event.dispatchConfig.phasedRegistrationNames != null && event.dispatchConfig.phasedRegistrationNames.skipBubbling;\n          if (skipBubbling) {\n            accumulateCapturePhaseDispatches(event);\n          } else {\n            accumulateTwoPhaseDispatches$1(event);\n          }\n        } else if (directDispatchConfig) {\n          accumulateDirectDispatches$1(event);\n        } else {\n          return null;\n        }\n        return event;\n      }\n    };\n    var ReactNativeEventPluginOrder = [\"ResponderEventPlugin\", \"ReactNativeBridgeEventPlugin\"];\n    injectEventPluginOrder(ReactNativeEventPluginOrder);\n    injectEventPluginsByName({\n      ResponderEventPlugin: ResponderEventPlugin,\n      ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\n    });\n    var instanceCache = new Map();\n    var instanceProps = new Map();\n    function precacheFiberNode(hostInst, tag) {\n      instanceCache.set(tag, hostInst);\n    }\n    function uncacheFiberNode(tag) {\n      instanceCache.delete(tag);\n      instanceProps.delete(tag);\n    }\n    function getInstanceFromTag(tag) {\n      return instanceCache.get(tag) || null;\n    }\n    function getTagFromInstance(inst) {\n      var nativeInstance = inst.stateNode;\n      var tag = nativeInstance._nativeTag;\n      if (tag === undefined) {\n        nativeInstance = nativeInstance.canonical;\n        tag = nativeInstance._nativeTag;\n      }\n      if (!tag) {\n        throw new Error(\"All native instances should have a tag.\");\n      }\n      return nativeInstance;\n    }\n    function getFiberCurrentPropsFromNode$1(stateNode) {\n      return instanceProps.get(stateNode._nativeTag) || null;\n    }\n    function updateFiberProps(tag, props) {\n      instanceProps.set(tag, props);\n    }\n    var batchedUpdatesImpl = function batchedUpdatesImpl(fn, bookkeeping) {\n      return fn(bookkeeping);\n    };\n    var isInsideEventHandler = false;\n    function batchedUpdates(fn, bookkeeping) {\n      if (isInsideEventHandler) {\n        return fn(bookkeeping);\n      }\n      isInsideEventHandler = true;\n      try {\n        return batchedUpdatesImpl(fn, bookkeeping);\n      } finally {\n        isInsideEventHandler = false;\n      }\n    }\n    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\n      batchedUpdatesImpl = _batchedUpdatesImpl;\n    }\n    var eventQueue = null;\n    var executeDispatchesAndRelease = function executeDispatchesAndRelease(event) {\n      if (event) {\n        executeDispatchesInOrder(event);\n        if (!event.isPersistent()) {\n          event.constructor.release(event);\n        }\n      }\n    };\n    var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {\n      return executeDispatchesAndRelease(e);\n    };\n    function runEventsInBatch(events) {\n      if (events !== null) {\n        eventQueue = accumulateInto(eventQueue, events);\n      }\n      var processingEventQueue = eventQueue;\n      eventQueue = null;\n      if (!processingEventQueue) {\n        return;\n      }\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n      if (eventQueue) {\n        throw new Error(\"processEventQueue(): Additional events were enqueued while processing \" + \"an event queue. Support for this has not yet been implemented.\");\n      }\n      rethrowCaughtError();\n    }\n    var EMPTY_NATIVE_EVENT = {};\n    var touchSubsequence = function touchSubsequence(touches, indices) {\n      var ret = [];\n      for (var i = 0; i < indices.length; i++) {\n        ret.push(touches[indices[i]]);\n      }\n      return ret;\n    };\n    var removeTouchesAtIndices = function removeTouchesAtIndices(touches, indices) {\n      var rippedOut = [];\n      var temp = touches;\n      for (var i = 0; i < indices.length; i++) {\n        var index = indices[i];\n        rippedOut.push(touches[index]);\n        temp[index] = null;\n      }\n      var fillAt = 0;\n      for (var j = 0; j < temp.length; j++) {\n        var cur = temp[j];\n        if (cur !== null) {\n          temp[fillAt++] = cur;\n        }\n      }\n      temp.length = fillAt;\n      return rippedOut;\n    };\n    function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {\n      var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n      var inst = getInstanceFromTag(rootNodeID);\n      var target = null;\n      if (inst != null) {\n        target = inst.stateNode;\n      }\n      batchedUpdates(function () {\n        runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\n      });\n    }\n    function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = null;\n      var legacyPlugins = plugins;\n      for (var i = 0; i < legacyPlugins.length; i++) {\n        var possiblePlugin = legacyPlugins[i];\n        if (possiblePlugin) {\n          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n          if (extractedEvents) {\n            events = accumulateInto(events, extractedEvents);\n          }\n        }\n      }\n      return events;\n    }\n    function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n      var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n      runEventsInBatch(events);\n    }\n    function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {\n      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\n    }\n    function receiveTouches(eventTopLevelType, touches, changedIndices) {\n      var changedTouches = eventTopLevelType === \"topTouchEnd\" || eventTopLevelType === \"topTouchCancel\" ? removeTouchesAtIndices(touches, changedIndices) : touchSubsequence(touches, changedIndices);\n      for (var jj = 0; jj < changedTouches.length; jj++) {\n        var touch = changedTouches[jj];\n        touch.changedTouches = changedTouches;\n        touch.touches = touches;\n        var nativeEvent = touch;\n        var rootNodeID = null;\n        var target = nativeEvent.target;\n        if (target !== null && target !== undefined) {\n          if (target < 1) {\n            {\n              error(\"A view is reporting that a touch occurred on tag zero.\");\n            }\n          } else {\n            rootNodeID = target;\n          }\n        }\n        _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\n      }\n    }\n    var ReactNativeGlobalResponderHandler = {\n      onChange: function onChange(from, to, blockNativeResponder) {\n        if (to !== null) {\n          var tag = to.stateNode._nativeTag;\n          ReactNativePrivateInterface.UIManager.setJSResponder(tag, blockNativeResponder);\n        } else {\n          ReactNativePrivateInterface.UIManager.clearJSResponder();\n        }\n      }\n    };\n    ReactNativePrivateInterface.RCTEventEmitter.register({\n      receiveEvent: receiveEvent,\n      receiveTouches: receiveTouches\n    });\n    setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromTag, getTagFromInstance);\n    ResponderEventPlugin.injection.injectGlobalResponderHandler(ReactNativeGlobalResponderHandler);\n    function get(key) {\n      return key._reactInternals;\n    }\n    function set(key, value) {\n      key._reactInternals = value;\n    }\n    var enableSchedulingProfiler = false;\n    var enableProfilerTimer = true;\n    var enableProfilerCommitHooks = true;\n    var warnAboutStringRefs = false;\n    var enableSuspenseAvoidThisFallback = false;\n    var enableNewReconciler = false;\n    var enableLazyContextPropagation = false;\n    var enableLegacyHidden = false;\n    var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n    var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n    var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n    var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n    var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n    var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n    var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n    var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n    var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n    var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n    var REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\n    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\n    var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\n    var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n    var REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === \"function\") {\n        return maybeIterator;\n      }\n      return null;\n    }\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n      if (displayName) {\n        return displayName;\n      }\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    }\n    function getContextName(type) {\n      return type.displayName || \"Context\";\n    }\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        return null;\n      }\n      {\n        if (typeof type.tag === \"number\") {\n          error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n        }\n      }\n      if (typeof type === \"function\") {\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === \"string\") {\n        return type;\n      }\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            return getContextName(context) + \".Consumer\";\n          case REACT_PROVIDER_TYPE:\n            var provider = type;\n            return getContextName(provider._context) + \".Provider\";\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, \"ForwardRef\");\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n            if (outerName !== null) {\n              return outerName;\n            }\n            return getComponentNameFromType(type.type) || \"Memo\";\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n        }\n      }\n      return null;\n    }\n    function getWrappedName$1(outerType, innerType, wrapperName) {\n      var functionName = innerType.displayName || innerType.name || \"\";\n      return outerType.displayName || (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n    }\n    function getContextName$1(type) {\n      return type.displayName || \"Context\";\n    }\n    function getComponentNameFromFiber(fiber) {\n      var tag = fiber.tag,\n        type = fiber.type;\n      switch (tag) {\n        case CacheComponent:\n          return \"Cache\";\n        case ContextConsumer:\n          var context = type;\n          return getContextName$1(context) + \".Consumer\";\n        case ContextProvider:\n          var provider = type;\n          return getContextName$1(provider._context) + \".Provider\";\n        case DehydratedFragment:\n          return \"DehydratedFragment\";\n        case ForwardRef:\n          return getWrappedName$1(type, type.render, \"ForwardRef\");\n        case Fragment:\n          return \"Fragment\";\n        case HostComponent:\n          return type;\n        case HostPortal:\n          return \"Portal\";\n        case HostRoot:\n          return \"Root\";\n        case HostText:\n          return \"Text\";\n        case LazyComponent:\n          return getComponentNameFromType(type);\n        case Mode:\n          if (type === REACT_STRICT_MODE_TYPE) {\n            return \"StrictMode\";\n          }\n          return \"Mode\";\n        case OffscreenComponent:\n          return \"Offscreen\";\n        case Profiler:\n          return \"Profiler\";\n        case ScopeComponent:\n          return \"Scope\";\n        case SuspenseComponent:\n          return \"Suspense\";\n        case SuspenseListComponent:\n          return \"SuspenseList\";\n        case TracingMarkerComponent:\n          return \"TracingMarker\";\n        case ClassComponent:\n        case FunctionComponent:\n        case IncompleteClassComponent:\n        case IndeterminateComponent:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          if (typeof type === \"function\") {\n            return type.displayName || type.name || null;\n          }\n          if (typeof type === \"string\") {\n            return type;\n          }\n          break;\n      }\n      return null;\n    }\n    var NoFlags = 0;\n    var PerformedWork = 1;\n    var Placement = 2;\n    var Update = 4;\n    var ChildDeletion = 16;\n    var ContentReset = 32;\n    var Callback = 64;\n    var DidCapture = 128;\n    var ForceClientRender = 256;\n    var Ref = 512;\n    var Snapshot = 1024;\n    var Passive = 2048;\n    var Hydrating = 4096;\n    var Visibility = 8192;\n    var StoreConsistency = 16384;\n    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;\n    var HostEffectMask = 32767;\n    var Incomplete = 32768;\n    var ShouldCapture = 65536;\n    var ForceUpdateForLegacySuspense = 131072;\n    var Forked = 1048576;\n    var RefStatic = 2097152;\n    var LayoutStatic = 4194304;\n    var PassiveStatic = 8388608;\n    var BeforeMutationMask = Update | Snapshot | 0;\n    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;\n    var LayoutMask = Update | Callback | Ref | Visibility;\n    var PassiveMask = Passive | ChildDeletion;\n    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n    function getNearestMountedFiber(fiber) {\n      var node = fiber;\n      var nearestMounted = fiber;\n      if (!fiber.alternate) {\n        var nextNode = node;\n        do {\n          node = nextNode;\n          if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n            nearestMounted = node.return;\n          }\n          nextNode = node.return;\n        } while (nextNode);\n      } else {\n        while (node.return) {\n          node = node.return;\n        }\n      }\n      if (node.tag === HostRoot) {\n        return nearestMounted;\n      }\n      return null;\n    }\n    function isFiberMounted(fiber) {\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n    function isMounted(component) {\n      {\n        var owner = ReactCurrentOwner.current;\n        if (owner !== null && owner.tag === ClassComponent) {\n          var ownerFiber = owner;\n          var instance = ownerFiber.stateNode;\n          if (!instance._warnedAboutRefsInRender) {\n            error(\"%s is accessing isMounted inside its render() function. \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromFiber(ownerFiber) || \"A component\");\n          }\n          instance._warnedAboutRefsInRender = true;\n        }\n      }\n      var fiber = get(component);\n      if (!fiber) {\n        return false;\n      }\n      return getNearestMountedFiber(fiber) === fiber;\n    }\n    function assertIsMounted(fiber) {\n      if (getNearestMountedFiber(fiber) !== fiber) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n    }\n    function findCurrentFiberUsingSlowPath(fiber) {\n      var alternate = fiber.alternate;\n      if (!alternate) {\n        var nearestMounted = getNearestMountedFiber(fiber);\n        if (nearestMounted === null) {\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n        if (nearestMounted !== fiber) {\n          return null;\n        }\n        return fiber;\n      }\n      var a = fiber;\n      var b = alternate;\n      while (true) {\n        var parentA = a.return;\n        if (parentA === null) {\n          break;\n        }\n        var parentB = parentA.alternate;\n        if (parentB === null) {\n          var nextParent = parentA.return;\n          if (nextParent !== null) {\n            a = b = nextParent;\n            continue;\n          }\n          break;\n        }\n        if (parentA.child === parentB.child) {\n          var child = parentA.child;\n          while (child) {\n            if (child === a) {\n              assertIsMounted(parentA);\n              return fiber;\n            }\n            if (child === b) {\n              assertIsMounted(parentA);\n              return alternate;\n            }\n            child = child.sibling;\n          }\n          throw new Error(\"Unable to find node on an unmounted component.\");\n        }\n        if (a.return !== b.return) {\n          a = parentA;\n          b = parentB;\n        } else {\n          var didFindChild = false;\n          var _child = parentA.child;\n          while (_child) {\n            if (_child === a) {\n              didFindChild = true;\n              a = parentA;\n              b = parentB;\n              break;\n            }\n            if (_child === b) {\n              didFindChild = true;\n              b = parentA;\n              a = parentB;\n              break;\n            }\n            _child = _child.sibling;\n          }\n          if (!didFindChild) {\n            _child = parentB.child;\n            while (_child) {\n              if (_child === a) {\n                didFindChild = true;\n                a = parentB;\n                b = parentA;\n                break;\n              }\n              if (_child === b) {\n                didFindChild = true;\n                b = parentB;\n                a = parentA;\n                break;\n              }\n              _child = _child.sibling;\n            }\n            if (!didFindChild) {\n              throw new Error(\"Child was not found in either parent set. This indicates a bug \" + \"in React related to the return pointer. Please file an issue.\");\n            }\n          }\n        }\n        if (a.alternate !== b) {\n          throw new Error(\"Return fibers should always be each others' alternates. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n      if (a.tag !== HostRoot) {\n        throw new Error(\"Unable to find node on an unmounted component.\");\n      }\n      if (a.stateNode.current === a) {\n        return fiber;\n      }\n      return alternate;\n    }\n    function findCurrentHostFiber(parent) {\n      var currentParent = findCurrentFiberUsingSlowPath(parent);\n      return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;\n    }\n    function findCurrentHostFiberImpl(node) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        return node;\n      }\n      var child = node.child;\n      while (child !== null) {\n        var match = findCurrentHostFiberImpl(child);\n        if (match !== null) {\n          return match;\n        }\n        child = child.sibling;\n      }\n      return null;\n    }\n    var emptyObject = {};\n    var removedKeys = null;\n    var removedKeyCount = 0;\n    var deepDifferOptions = {\n      unsafelyIgnoreFunctions: true\n    };\n    function defaultDiffer(prevProp, nextProp) {\n      if (typeof nextProp !== \"object\" || nextProp === null) {\n        return true;\n      } else {\n        return ReactNativePrivateInterface.deepDiffer(prevProp, nextProp, deepDifferOptions);\n      }\n    }\n    function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {\n      if (isArray(node)) {\n        var i = node.length;\n        while (i-- && removedKeyCount > 0) {\n          restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);\n        }\n      } else if (node && removedKeyCount > 0) {\n        var obj = node;\n        for (var propKey in removedKeys) {\n          if (!removedKeys[propKey]) {\n            continue;\n          }\n          var nextProp = obj[propKey];\n          if (nextProp === undefined) {\n            continue;\n          }\n          var attributeConfig = validAttributes[propKey];\n          if (!attributeConfig) {\n            continue;\n          }\n          if (typeof nextProp === \"function\") {\n            nextProp = true;\n          }\n          if (typeof nextProp === \"undefined\") {\n            nextProp = null;\n          }\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n          removedKeys[propKey] = false;\n          removedKeyCount--;\n        }\n      }\n    }\n    function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {\n      var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n      var i;\n      for (i = 0; i < minLength; i++) {\n        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);\n      }\n      for (; i < prevArray.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);\n      }\n      for (; i < nextArray.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {\n      if (!updatePayload && prevProp === nextProp) {\n        return updatePayload;\n      }\n      if (!prevProp || !nextProp) {\n        if (nextProp) {\n          return addNestedProperty(updatePayload, nextProp, validAttributes);\n        }\n        if (prevProp) {\n          return clearNestedProperty(updatePayload, prevProp, validAttributes);\n        }\n        return updatePayload;\n      }\n      if (!isArray(prevProp) && !isArray(nextProp)) {\n        return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n      }\n      if (isArray(prevProp) && isArray(nextProp)) {\n        return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);\n      }\n      if (isArray(prevProp)) {\n        return diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes);\n      }\n      return diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);\n    }\n    function addNestedProperty(updatePayload, nextProp, validAttributes) {\n      if (!nextProp) {\n        return updatePayload;\n      }\n      if (!isArray(nextProp)) {\n        return addProperties(updatePayload, nextProp, validAttributes);\n      }\n      for (var i = 0; i < nextProp.length; i++) {\n        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function clearNestedProperty(updatePayload, prevProp, validAttributes) {\n      if (!prevProp) {\n        return updatePayload;\n      }\n      if (!isArray(prevProp)) {\n        return clearProperties(updatePayload, prevProp, validAttributes);\n      }\n      for (var i = 0; i < prevProp.length; i++) {\n        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);\n      }\n      return updatePayload;\n    }\n    function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\n      var attributeConfig;\n      var nextProp;\n      var prevProp;\n      for (var propKey in nextProps) {\n        attributeConfig = validAttributes[propKey];\n        if (!attributeConfig) {\n          continue;\n        }\n        prevProp = prevProps[propKey];\n        nextProp = nextProps[propKey];\n        if (typeof nextProp === \"function\") {\n          nextProp = true;\n          if (typeof prevProp === \"function\") {\n            prevProp = true;\n          }\n        }\n        if (typeof nextProp === \"undefined\") {\n          nextProp = null;\n          if (typeof prevProp === \"undefined\") {\n            prevProp = null;\n          }\n        }\n        if (removedKeys) {\n          removedKeys[propKey] = false;\n        }\n        if (updatePayload && updatePayload[propKey] !== undefined) {\n          if (typeof attributeConfig !== \"object\") {\n            updatePayload[propKey] = nextProp;\n          } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n            var nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            updatePayload[propKey] = nextValue;\n          }\n          continue;\n        }\n        if (prevProp === nextProp) {\n          continue;\n        }\n        if (typeof attributeConfig !== \"object\") {\n          if (defaultDiffer(prevProp, nextProp)) {\n            (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n          }\n        } else if (typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === \"function\" ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));\n          if (shouldUpdate) {\n            var _nextValue = typeof attributeConfig.process === \"function\" ? attributeConfig.process(nextProp) : nextProp;\n            (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\n          }\n        } else {\n          removedKeys = null;\n          removedKeyCount = 0;\n          updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);\n          if (removedKeyCount > 0 && updatePayload) {\n            restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);\n            removedKeys = null;\n          }\n        }\n      }\n      for (var _propKey in prevProps) {\n        if (nextProps[_propKey] !== undefined) {\n          continue;\n        }\n        attributeConfig = validAttributes[_propKey];\n        if (!attributeConfig) {\n          continue;\n        }\n        if (updatePayload && updatePayload[_propKey] !== undefined) {\n          continue;\n        }\n        prevProp = prevProps[_propKey];\n        if (prevProp === undefined) {\n          continue;\n        }\n        if (typeof attributeConfig !== \"object\" || typeof attributeConfig.diff === \"function\" || typeof attributeConfig.process === \"function\") {\n          (updatePayload || (updatePayload = {}))[_propKey] = null;\n          if (!removedKeys) {\n            removedKeys = {};\n          }\n          if (!removedKeys[_propKey]) {\n            removedKeys[_propKey] = true;\n            removedKeyCount++;\n          }\n        } else {\n          updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);\n        }\n      }\n      return updatePayload;\n    }\n    function addProperties(updatePayload, props, validAttributes) {\n      return diffProperties(updatePayload, emptyObject, props, validAttributes);\n    }\n    function clearProperties(updatePayload, prevProps, validAttributes) {\n      return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n    }\n    function create(props, validAttributes) {\n      return addProperties(null, props, validAttributes);\n    }\n    function diff(prevProps, nextProps, validAttributes) {\n      return diffProperties(null, prevProps, nextProps, validAttributes);\n    }\n    function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\n      return function () {\n        if (!callback) {\n          return undefined;\n        }\n        if (typeof context.__isMounted === \"boolean\") {\n          if (!context.__isMounted) {\n            return undefined;\n          }\n        }\n        return callback.apply(context, arguments);\n      };\n    }\n    function warnForStyleProps(props, validAttributes) {\n      {\n        for (var key in validAttributes.style) {\n          if (!(validAttributes[key] || props[key] === undefined)) {\n            error(\"You are setting the style `{ %s\" + \": ... }` as a prop. You \" + \"should nest it in a style object. \" + \"E.g. `{ style: { %s\" + \": ... } }`\", key, key);\n          }\n        }\n      }\n    }\n    var ReactNativeFiberHostComponent = function () {\n      function ReactNativeFiberHostComponent(tag, viewConfig, internalInstanceHandleDEV) {\n        this._nativeTag = tag;\n        this._children = [];\n        this.viewConfig = viewConfig;\n        {\n          this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\n        }\n      }\n      var _proto = ReactNativeFiberHostComponent.prototype;\n      _proto.blur = function blur() {\n        ReactNativePrivateInterface.TextInputState.blurTextInput(this);\n      };\n      _proto.focus = function focus() {\n        ReactNativePrivateInterface.TextInputState.focusTextInput(this);\n      };\n      _proto.measure = function measure(callback) {\n        ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n      };\n      _proto.measureInWindow = function measureInWindow(callback) {\n        ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));\n      };\n      _proto.measureLayout = function measureLayout(relativeToNativeNode, onSuccess, onFail) {\n        var relativeNode;\n        if (typeof relativeToNativeNode === \"number\") {\n          relativeNode = relativeToNativeNode;\n        } else {\n          var nativeNode = relativeToNativeNode;\n          if (nativeNode._nativeTag) {\n            relativeNode = nativeNode._nativeTag;\n          }\n        }\n        if (relativeNode == null) {\n          {\n            error(\"Warning: ref.measureLayout must be called with a node handle or a ref to a native component.\");\n          }\n          return;\n        }\n        ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));\n      };\n      _proto.setNativeProps = function setNativeProps(nativeProps) {\n        {\n          warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n        }\n        var updatePayload = create(nativeProps, this.viewConfig.validAttributes);\n        if (updatePayload != null) {\n          ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, updatePayload);\n        }\n      };\n      return ReactNativeFiberHostComponent;\n    }();\n    var scheduleCallback = Scheduler.unstable_scheduleCallback;\n    var cancelCallback = Scheduler.unstable_cancelCallback;\n    var shouldYield = Scheduler.unstable_shouldYield;\n    var requestPaint = Scheduler.unstable_requestPaint;\n    var now = Scheduler.unstable_now;\n    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;\n    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\n    var NormalPriority = Scheduler.unstable_NormalPriority;\n    var IdlePriority = Scheduler.unstable_IdlePriority;\n    var rendererID = null;\n    var injectedHook = null;\n    var hasLoggedError = false;\n    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\n    function injectInternals(internals) {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\n        return false;\n      }\n      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n      if (hook.isDisabled) {\n        return true;\n      }\n      if (!hook.supportsFiber) {\n        {\n          error(\"The installed version of React DevTools is too old and will not work \" + \"with the current version of React. Please update React DevTools. \" + \"https://reactjs.org/link/react-devtools\");\n        }\n        return true;\n      }\n      try {\n        if (enableSchedulingProfiler) {\n          internals = assign({}, internals, {\n            getLaneLabelMap: getLaneLabelMap,\n            injectProfilingHooks: injectProfilingHooks\n          });\n        }\n        rendererID = hook.inject(internals);\n        injectedHook = hook;\n      } catch (err) {\n        {\n          error(\"React instrumentation encountered an error: %s.\", err);\n        }\n      }\n      if (hook.checkDCE) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    function onScheduleRoot(root, children) {\n      {\n        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === \"function\") {\n          try {\n            injectedHook.onScheduleFiberRoot(rendererID, root, children);\n          } catch (err) {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onCommitRoot(root, eventPriority) {\n      if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\n        try {\n          var didError = (root.current.flags & DidCapture) === DidCapture;\n          if (enableProfilerTimer) {\n            var schedulerPriority;\n            switch (eventPriority) {\n              case DiscreteEventPriority:\n                schedulerPriority = ImmediatePriority;\n                break;\n              case ContinuousEventPriority:\n                schedulerPriority = UserBlockingPriority;\n                break;\n              case DefaultEventPriority:\n                schedulerPriority = NormalPriority;\n                break;\n              case IdleEventPriority:\n                schedulerPriority = IdlePriority;\n                break;\n              default:\n                schedulerPriority = NormalPriority;\n                break;\n            }\n            injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);\n          } else {\n            injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n          }\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onPostCommitRoot(root) {\n      if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === \"function\") {\n        try {\n          injectedHook.onPostCommitFiberRoot(rendererID, root);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function onCommitUnmount(fiber) {\n      if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\n        try {\n          injectedHook.onCommitFiberUnmount(rendererID, fiber);\n        } catch (err) {\n          {\n            if (!hasLoggedError) {\n              hasLoggedError = true;\n              error(\"React instrumentation encountered an error: %s\", err);\n            }\n          }\n        }\n      }\n    }\n    function injectProfilingHooks(profilingHooks) {}\n    function getLaneLabelMap() {\n      {\n        return null;\n      }\n    }\n    function markComponentRenderStopped() {}\n    function markComponentErrored(fiber, thrownValue, lanes) {}\n    function markComponentSuspended(fiber, wakeable, lanes) {}\n    var NoMode = 0;\n    var ConcurrentMode = 1;\n    var ProfileMode = 2;\n    var StrictLegacyMode = 8;\n    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n    var log = Math.log;\n    var LN2 = Math.LN2;\n    function clz32Fallback(x) {\n      var asUint = x >>> 0;\n      if (asUint === 0) {\n        return 32;\n      }\n      return 31 - (log(asUint) / LN2 | 0) | 0;\n    }\n    var TotalLanes = 31;\n    var NoLanes = 0;\n    var NoLane = 0;\n    var SyncLane = 1;\n    var InputContinuousHydrationLane = 2;\n    var InputContinuousLane = 4;\n    var DefaultHydrationLane = 8;\n    var DefaultLane = 16;\n    var TransitionHydrationLane = 32;\n    var TransitionLanes = 4194240;\n    var TransitionLane1 = 64;\n    var TransitionLane2 = 128;\n    var TransitionLane3 = 256;\n    var TransitionLane4 = 512;\n    var TransitionLane5 = 1024;\n    var TransitionLane6 = 2048;\n    var TransitionLane7 = 4096;\n    var TransitionLane8 = 8192;\n    var TransitionLane9 = 16384;\n    var TransitionLane10 = 32768;\n    var TransitionLane11 = 65536;\n    var TransitionLane12 = 131072;\n    var TransitionLane13 = 262144;\n    var TransitionLane14 = 524288;\n    var TransitionLane15 = 1048576;\n    var TransitionLane16 = 2097152;\n    var RetryLanes = 130023424;\n    var RetryLane1 = 4194304;\n    var RetryLane2 = 8388608;\n    var RetryLane3 = 16777216;\n    var RetryLane4 = 33554432;\n    var RetryLane5 = 67108864;\n    var SomeRetryLane = RetryLane1;\n    var SelectiveHydrationLane = 134217728;\n    var NonIdleLanes = 268435455;\n    var IdleHydrationLane = 268435456;\n    var IdleLane = 536870912;\n    var OffscreenLane = 1073741824;\n    var NoTimestamp = -1;\n    var nextTransitionLane = TransitionLane1;\n    var nextRetryLane = RetryLane1;\n    function getHighestPriorityLanes(lanes) {\n      switch (getHighestPriorityLane(lanes)) {\n        case SyncLane:\n          return SyncLane;\n        case InputContinuousHydrationLane:\n          return InputContinuousHydrationLane;\n        case InputContinuousLane:\n          return InputContinuousLane;\n        case DefaultHydrationLane:\n          return DefaultHydrationLane;\n        case DefaultLane:\n          return DefaultLane;\n        case TransitionHydrationLane:\n          return TransitionHydrationLane;\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return lanes & TransitionLanes;\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return lanes & RetryLanes;\n        case SelectiveHydrationLane:\n          return SelectiveHydrationLane;\n        case IdleHydrationLane:\n          return IdleHydrationLane;\n        case IdleLane:\n          return IdleLane;\n        case OffscreenLane:\n          return OffscreenLane;\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return lanes;\n      }\n    }\n    function getNextLanes(root, wipLanes) {\n      var pendingLanes = root.pendingLanes;\n      if (pendingLanes === NoLanes) {\n        return NoLanes;\n      }\n      var nextLanes = NoLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n      if (nonIdlePendingLanes !== NoLanes) {\n        var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n        if (nonIdleUnblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n        } else {\n          var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n          if (nonIdlePingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n          }\n        }\n      } else {\n        var unblockedLanes = pendingLanes & ~suspendedLanes;\n        if (unblockedLanes !== NoLanes) {\n          nextLanes = getHighestPriorityLanes(unblockedLanes);\n        } else {\n          if (pingedLanes !== NoLanes) {\n            nextLanes = getHighestPriorityLanes(pingedLanes);\n          }\n        }\n      }\n      if (nextLanes === NoLanes) {\n        return NoLanes;\n      }\n      if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {\n        var nextLane = getHighestPriorityLane(nextLanes);\n        var wipLane = getHighestPriorityLane(wipLanes);\n        if (nextLane >= wipLane || nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {\n          return wipLanes;\n        }\n      }\n      if ((nextLanes & InputContinuousLane) !== NoLanes) {\n        nextLanes |= pendingLanes & DefaultLane;\n      }\n      var entangledLanes = root.entangledLanes;\n      if (entangledLanes !== NoLanes) {\n        var entanglements = root.entanglements;\n        var lanes = nextLanes & entangledLanes;\n        while (lanes > 0) {\n          var index = pickArbitraryLaneIndex(lanes);\n          var lane = 1 << index;\n          nextLanes |= entanglements[index];\n          lanes &= ~lane;\n        }\n      }\n      return nextLanes;\n    }\n    function getMostRecentEventTime(root, lanes) {\n      var eventTimes = root.eventTimes;\n      var mostRecentEventTime = NoTimestamp;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var eventTime = eventTimes[index];\n        if (eventTime > mostRecentEventTime) {\n          mostRecentEventTime = eventTime;\n        }\n        lanes &= ~lane;\n      }\n      return mostRecentEventTime;\n    }\n    function computeExpirationTime(lane, currentTime) {\n      switch (lane) {\n        case SyncLane:\n        case InputContinuousHydrationLane:\n        case InputContinuousLane:\n          return currentTime + 250;\n        case DefaultHydrationLane:\n        case DefaultLane:\n        case TransitionHydrationLane:\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n          return currentTime + 5000;\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          return NoTimestamp;\n        case SelectiveHydrationLane:\n        case IdleHydrationLane:\n        case IdleLane:\n        case OffscreenLane:\n          return NoTimestamp;\n        default:\n          {\n            error(\"Should have found matching lanes. This is a bug in React.\");\n          }\n          return NoTimestamp;\n      }\n    }\n    function markStarvedLanesAsExpired(root, currentTime) {\n      var pendingLanes = root.pendingLanes;\n      var suspendedLanes = root.suspendedLanes;\n      var pingedLanes = root.pingedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = pendingLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        var expirationTime = expirationTimes[index];\n        if (expirationTime === NoTimestamp) {\n          if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {\n            expirationTimes[index] = computeExpirationTime(lane, currentTime);\n          }\n        } else if (expirationTime <= currentTime) {\n          root.expiredLanes |= lane;\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getLanesToRetrySynchronouslyOnError(root) {\n      var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n      if (everythingButOffscreen !== NoLanes) {\n        return everythingButOffscreen;\n      }\n      if (everythingButOffscreen & OffscreenLane) {\n        return OffscreenLane;\n      }\n      return NoLanes;\n    }\n    function includesSyncLane(lanes) {\n      return (lanes & SyncLane) !== NoLanes;\n    }\n    function includesNonIdleWork(lanes) {\n      return (lanes & NonIdleLanes) !== NoLanes;\n    }\n    function includesOnlyRetries(lanes) {\n      return (lanes & RetryLanes) === lanes;\n    }\n    function includesOnlyNonUrgentLanes(lanes) {\n      var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\n      return (lanes & UrgentLanes) === NoLanes;\n    }\n    function includesOnlyTransitions(lanes) {\n      return (lanes & TransitionLanes) === lanes;\n    }\n    function includesBlockingLane(root, lanes) {\n      var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;\n      return (lanes & SyncDefaultLanes) !== NoLanes;\n    }\n    function includesExpiredLane(root, lanes) {\n      return (lanes & root.expiredLanes) !== NoLanes;\n    }\n    function isTransitionLane(lane) {\n      return (lane & TransitionLanes) !== NoLanes;\n    }\n    function claimNextTransitionLane() {\n      var lane = nextTransitionLane;\n      nextTransitionLane <<= 1;\n      if ((nextTransitionLane & TransitionLanes) === NoLanes) {\n        nextTransitionLane = TransitionLane1;\n      }\n      return lane;\n    }\n    function claimNextRetryLane() {\n      var lane = nextRetryLane;\n      nextRetryLane <<= 1;\n      if ((nextRetryLane & RetryLanes) === NoLanes) {\n        nextRetryLane = RetryLane1;\n      }\n      return lane;\n    }\n    function getHighestPriorityLane(lanes) {\n      return lanes & -lanes;\n    }\n    function pickArbitraryLane(lanes) {\n      return getHighestPriorityLane(lanes);\n    }\n    function pickArbitraryLaneIndex(lanes) {\n      return 31 - clz32(lanes);\n    }\n    function laneToIndex(lane) {\n      return pickArbitraryLaneIndex(lane);\n    }\n    function includesSomeLane(a, b) {\n      return (a & b) !== NoLanes;\n    }\n    function isSubsetOfLanes(set, subset) {\n      return (set & subset) === subset;\n    }\n    function mergeLanes(a, b) {\n      return a | b;\n    }\n    function removeLanes(set, subset) {\n      return set & ~subset;\n    }\n    function intersectLanes(a, b) {\n      return a & b;\n    }\n    function laneToLanes(lane) {\n      return lane;\n    }\n    function createLaneMap(initial) {\n      var laneMap = [];\n      for (var i = 0; i < TotalLanes; i++) {\n        laneMap.push(initial);\n      }\n      return laneMap;\n    }\n    function markRootUpdated(root, updateLane, eventTime) {\n      root.pendingLanes |= updateLane;\n      if (updateLane !== IdleLane) {\n        root.suspendedLanes = NoLanes;\n        root.pingedLanes = NoLanes;\n      }\n      var eventTimes = root.eventTimes;\n      var index = laneToIndex(updateLane);\n      eventTimes[index] = eventTime;\n    }\n    function markRootSuspended(root, suspendedLanes) {\n      root.suspendedLanes |= suspendedLanes;\n      root.pingedLanes &= ~suspendedLanes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = suspendedLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n    function markRootPinged(root, pingedLanes, eventTime) {\n      root.pingedLanes |= root.suspendedLanes & pingedLanes;\n    }\n    function markRootFinished(root, remainingLanes) {\n      var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n      root.pendingLanes = remainingLanes;\n      root.suspendedLanes = NoLanes;\n      root.pingedLanes = NoLanes;\n      root.expiredLanes &= remainingLanes;\n      root.mutableReadLanes &= remainingLanes;\n      root.entangledLanes &= remainingLanes;\n      var entanglements = root.entanglements;\n      var eventTimes = root.eventTimes;\n      var expirationTimes = root.expirationTimes;\n      var lanes = noLongerPendingLanes;\n      while (lanes > 0) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        entanglements[index] = NoLanes;\n        eventTimes[index] = NoTimestamp;\n        expirationTimes[index] = NoTimestamp;\n        lanes &= ~lane;\n      }\n    }\n    function markRootEntangled(root, entangledLanes) {\n      var rootEntangledLanes = root.entangledLanes |= entangledLanes;\n      var entanglements = root.entanglements;\n      var lanes = rootEntangledLanes;\n      while (lanes) {\n        var index = pickArbitraryLaneIndex(lanes);\n        var lane = 1 << index;\n        if (lane & entangledLanes | entanglements[index] & entangledLanes) {\n          entanglements[index] |= entangledLanes;\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getBumpedLaneForHydration(root, renderLanes) {\n      var renderLane = getHighestPriorityLane(renderLanes);\n      var lane;\n      switch (renderLane) {\n        case InputContinuousLane:\n          lane = InputContinuousHydrationLane;\n          break;\n        case DefaultLane:\n          lane = DefaultHydrationLane;\n          break;\n        case TransitionLane1:\n        case TransitionLane2:\n        case TransitionLane3:\n        case TransitionLane4:\n        case TransitionLane5:\n        case TransitionLane6:\n        case TransitionLane7:\n        case TransitionLane8:\n        case TransitionLane9:\n        case TransitionLane10:\n        case TransitionLane11:\n        case TransitionLane12:\n        case TransitionLane13:\n        case TransitionLane14:\n        case TransitionLane15:\n        case TransitionLane16:\n        case RetryLane1:\n        case RetryLane2:\n        case RetryLane3:\n        case RetryLane4:\n        case RetryLane5:\n          lane = TransitionHydrationLane;\n          break;\n        case IdleLane:\n          lane = IdleHydrationLane;\n          break;\n        default:\n          lane = NoLane;\n          break;\n      }\n      if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n        return NoLane;\n      }\n      return lane;\n    }\n    function addFiberToLanesMap(root, fiber, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n        updaters.add(fiber);\n        lanes &= ~lane;\n      }\n    }\n    function movePendingFibersToMemoized(root, lanes) {\n      if (!isDevToolsPresent) {\n        return;\n      }\n      var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n      var memoizedUpdaters = root.memoizedUpdaters;\n      while (lanes > 0) {\n        var index = laneToIndex(lanes);\n        var lane = 1 << index;\n        var updaters = pendingUpdatersLaneMap[index];\n        if (updaters.size > 0) {\n          updaters.forEach(function (fiber) {\n            var alternate = fiber.alternate;\n            if (alternate === null || !memoizedUpdaters.has(alternate)) {\n              memoizedUpdaters.add(fiber);\n            }\n          });\n          updaters.clear();\n        }\n        lanes &= ~lane;\n      }\n    }\n    function getTransitionsForLanes(root, lanes) {\n      {\n        return null;\n      }\n    }\n    var DiscreteEventPriority = SyncLane;\n    var ContinuousEventPriority = InputContinuousLane;\n    var DefaultEventPriority = DefaultLane;\n    var IdleEventPriority = IdleLane;\n    var currentUpdatePriority = NoLane;\n    function getCurrentUpdatePriority() {\n      return currentUpdatePriority;\n    }\n    function setCurrentUpdatePriority(newPriority) {\n      currentUpdatePriority = newPriority;\n    }\n    function higherEventPriority(a, b) {\n      return a !== 0 && a < b ? a : b;\n    }\n    function lowerEventPriority(a, b) {\n      return a === 0 || a > b ? a : b;\n    }\n    function isHigherEventPriority(a, b) {\n      return a !== 0 && a < b;\n    }\n    function lanesToEventPriority(lanes) {\n      var lane = getHighestPriorityLane(lanes);\n      if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n        return DiscreteEventPriority;\n      }\n      if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n        return ContinuousEventPriority;\n      }\n      if (includesNonIdleWork(lane)) {\n        return DefaultEventPriority;\n      }\n      return IdleEventPriority;\n    }\n    function shim() {\n      throw new Error(\"The current renderer does not support hydration. \" + \"This error is likely caused by a bug in React. \" + \"Please file an issue.\");\n    }\n    var isSuspenseInstancePending = shim;\n    var isSuspenseInstanceFallback = shim;\n    var getSuspenseInstanceFallbackErrorDetails = shim;\n    var registerSuspenseInstanceRetry = shim;\n    var hydrateTextInstance = shim;\n    var clearSuspenseBoundary = shim;\n    var clearSuspenseBoundaryFromContainer = shim;\n    var errorHydratingContainer = shim;\n    var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get;\n    var UPDATE_SIGNAL = {};\n    {\n      Object.freeze(UPDATE_SIGNAL);\n    }\n    var nextReactTag = 3;\n    function allocateTag() {\n      var tag = nextReactTag;\n      if (tag % 10 === 1) {\n        tag += 2;\n      }\n      nextReactTag = tag + 2;\n      return tag;\n    }\n    function recursivelyUncacheFiberNode(node) {\n      if (typeof node === \"number\") {\n        uncacheFiberNode(node);\n      } else {\n        uncacheFiberNode(node._nativeTag);\n        node._children.forEach(recursivelyUncacheFiberNode);\n      }\n    }\n    function appendInitialChild(parentInstance, child) {\n      parentInstance._children.push(child);\n    }\n    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {\n      var tag = allocateTag();\n      var viewConfig = getViewConfigForType(type);\n      {\n        for (var key in viewConfig.validAttributes) {\n          if (props.hasOwnProperty(key)) {\n            ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(props[key]);\n          }\n        }\n      }\n      var updatePayload = create(props, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.createView(tag, viewConfig.uiViewClassName, rootContainerInstance, updatePayload);\n      var component = new ReactNativeFiberHostComponent(tag, viewConfig, internalInstanceHandle);\n      precacheFiberNode(internalInstanceHandle, tag);\n      updateFiberProps(tag, props);\n      return component;\n    }\n    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {\n      if (!hostContext.isInAParentText) {\n        throw new Error(\"Text strings must be rendered within a <Text> component.\");\n      }\n      var tag = allocateTag();\n      ReactNativePrivateInterface.UIManager.createView(tag, \"RCTRawText\", rootContainerInstance, {\n        text: text\n      });\n      precacheFiberNode(internalInstanceHandle, tag);\n      return tag;\n    }\n    function finalizeInitialChildren(parentInstance, type, props, rootContainerInstance, hostContext) {\n      if (parentInstance._children.length === 0) {\n        return false;\n      }\n      var nativeTags = parentInstance._children.map(function (child) {\n        return typeof child === \"number\" ? child : child._nativeTag;\n      });\n      ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);\n      return false;\n    }\n    function getRootHostContext(rootContainerInstance) {\n      return {\n        isInAParentText: false\n      };\n    }\n    function getChildHostContext(parentHostContext, type, rootContainerInstance) {\n      var prevIsInAParentText = parentHostContext.isInAParentText;\n      var isInAParentText = type === \"AndroidTextInput\" || type === \"RCTMultilineTextInputView\" || type === \"RCTSinglelineTextInputView\" || type === \"RCTText\" || type === \"RCTVirtualText\";\n      if (prevIsInAParentText !== isInAParentText) {\n        return {\n          isInAParentText: isInAParentText\n        };\n      } else {\n        return parentHostContext;\n      }\n    }\n    function getPublicInstance(instance) {\n      return instance;\n    }\n    function prepareForCommit(containerInfo) {\n      return null;\n    }\n    function prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, hostContext) {\n      return UPDATE_SIGNAL;\n    }\n    function resetAfterCommit(containerInfo) {}\n    var scheduleTimeout = setTimeout;\n    var cancelTimeout = clearTimeout;\n    var noTimeout = -1;\n    function shouldSetTextContent(type, props) {\n      return false;\n    }\n    function getCurrentEventPriority() {\n      return DefaultEventPriority;\n    }\n    function appendChild(parentInstance, child) {\n      var childTag = typeof child === \"number\" ? child : child._nativeTag;\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n      if (index >= 0) {\n        children.splice(index, 1);\n        children.push(child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [index], [children.length - 1], [], [], []);\n      } else {\n        children.push(child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [children.length - 1], []);\n      }\n    }\n    function appendChildToContainer(parentInstance, child) {\n      var childTag = typeof child === \"number\" ? child : child._nativeTag;\n      ReactNativePrivateInterface.UIManager.setChildren(parentInstance, [childTag]);\n    }\n    function commitTextUpdate(textInstance, oldText, newText) {\n      ReactNativePrivateInterface.UIManager.updateView(textInstance, \"RCTRawText\", {\n        text: newText\n      });\n    }\n    function commitUpdate(instance, updatePayloadTODO, type, oldProps, newProps, internalInstanceHandle) {\n      var viewConfig = instance.viewConfig;\n      updateFiberProps(instance._nativeTag, newProps);\n      var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes);\n      if (updatePayload != null) {\n        ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n      }\n    }\n    function insertBefore(parentInstance, child, beforeChild) {\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n      if (index >= 0) {\n        children.splice(index, 1);\n        var beforeChildIndex = children.indexOf(beforeChild);\n        children.splice(beforeChildIndex, 0, child);\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [index], [beforeChildIndex], [], [], []);\n      } else {\n        var _beforeChildIndex = children.indexOf(beforeChild);\n        children.splice(_beforeChildIndex, 0, child);\n        var childTag = typeof child === \"number\" ? child : child._nativeTag;\n        ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [childTag], [_beforeChildIndex], []);\n      }\n    }\n    function insertInContainerBefore(parentInstance, child, beforeChild) {\n      if (typeof parentInstance === \"number\") {\n        throw new Error(\"Container does not support insertBefore operation\");\n      }\n    }\n    function removeChild(parentInstance, child) {\n      recursivelyUncacheFiberNode(child);\n      var children = parentInstance._children;\n      var index = children.indexOf(child);\n      children.splice(index, 1);\n      ReactNativePrivateInterface.UIManager.manageChildren(parentInstance._nativeTag, [], [], [], [], [index]);\n    }\n    function removeChildFromContainer(parentInstance, child) {\n      recursivelyUncacheFiberNode(child);\n      ReactNativePrivateInterface.UIManager.manageChildren(parentInstance, [], [], [], [], [0]);\n    }\n    function resetTextContent(instance) {}\n    function hideInstance(instance) {\n      var viewConfig = instance.viewConfig;\n      var updatePayload = create({\n        style: {\n          display: \"none\"\n        }\n      }, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n    }\n    function hideTextInstance(textInstance) {\n      throw new Error(\"Not yet implemented.\");\n    }\n    function unhideInstance(instance, props) {\n      var viewConfig = instance.viewConfig;\n      var updatePayload = diff(assign({}, props, {\n        style: [props.style, {\n          display: \"none\"\n        }]\n      }), props, viewConfig.validAttributes);\n      ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, viewConfig.uiViewClassName, updatePayload);\n    }\n    function clearContainer(container) {}\n    function unhideTextInstance(textInstance, text) {\n      throw new Error(\"Not yet implemented.\");\n    }\n    function preparePortalMount(portalInstance) {}\n    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n    function describeBuiltInComponentFrame(name, source, ownerFn) {\n      {\n        var ownerName = null;\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n    var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n    function describeComponentFrame(name, source, ownerName) {\n      var sourceInfo = \"\";\n      if (source) {\n        var path = source.fileName;\n        var fileName = path.replace(BEFORE_SLASH_RE, \"\");\n        if (/^index\\./.test(fileName)) {\n          var match = path.match(BEFORE_SLASH_RE);\n          if (match) {\n            var pathBeforeSlash = match[1];\n            if (pathBeforeSlash) {\n              var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\n              fileName = folderName + \"/\" + fileName;\n            }\n          }\n        }\n        sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\n      } else if (ownerName) {\n        sourceInfo = \" (created by \" + ownerName + \")\";\n      }\n      return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\n    }\n    function describeClassComponentFrame(ctor, source, ownerFn) {\n      {\n        return describeFunctionComponentFrame(ctor, source, ownerFn);\n      }\n    }\n    function describeFunctionComponentFrame(fn, source, ownerFn) {\n      {\n        if (!fn) {\n          return \"\";\n        }\n        var name = fn.displayName || fn.name || null;\n        var ownerName = null;\n        if (ownerFn) {\n          ownerName = ownerFn.displayName || ownerFn.name || null;\n        }\n        return describeComponentFrame(name, source, ownerName);\n      }\n    }\n    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n      if (type == null) {\n        return \"\";\n      }\n      if (typeof type === \"function\") {\n        {\n          return describeFunctionComponentFrame(type, source, ownerFn);\n        }\n      }\n      if (typeof type === \"string\") {\n        return describeBuiltInComponentFrame(type, source, ownerFn);\n      }\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\n      }\n      if (typeof type === \"object\") {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render, source, ownerFn);\n          case REACT_MEMO_TYPE:\n            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n              try {\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n      return \"\";\n    }\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          ReactDebugCurrentFrame.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame.setExtraStackFrame(null);\n        }\n      }\n    }\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        var has = Function.call.bind(hasOwnProperty);\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0;\n            try {\n              if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                err.name = \"Invariant Violation\";\n                throw err;\n              }\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (ex) {\n              error$1 = ex;\n            }\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error(\"Failed %s type: %s\", location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n    var valueStack = [];\n    var fiberStack;\n    {\n      fiberStack = [];\n    }\n    var index = -1;\n    function createCursor(defaultValue) {\n      return {\n        current: defaultValue\n      };\n    }\n    function pop(cursor, fiber) {\n      if (index < 0) {\n        {\n          error(\"Unexpected pop.\");\n        }\n        return;\n      }\n      {\n        if (fiber !== fiberStack[index]) {\n          error(\"Unexpected Fiber popped.\");\n        }\n      }\n      cursor.current = valueStack[index];\n      valueStack[index] = null;\n      {\n        fiberStack[index] = null;\n      }\n      index--;\n    }\n    function push(cursor, value, fiber) {\n      index++;\n      valueStack[index] = cursor.current;\n      {\n        fiberStack[index] = fiber;\n      }\n      cursor.current = value;\n    }\n    var warnedAboutMissingGetChildContext;\n    {\n      warnedAboutMissingGetChildContext = {};\n    }\n    var emptyContextObject = {};\n    {\n      Object.freeze(emptyContextObject);\n    }\n    var contextStackCursor = createCursor(emptyContextObject);\n    var didPerformWorkStackCursor = createCursor(false);\n    var previousContext = emptyContextObject;\n    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {\n      {\n        if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n          return previousContext;\n        }\n        return contextStackCursor.current;\n      }\n    }\n    function cacheContext(workInProgress, unmaskedContext, maskedContext) {\n      {\n        var instance = workInProgress.stateNode;\n        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n      }\n    }\n    function getMaskedContext(workInProgress, unmaskedContext) {\n      {\n        var type = workInProgress.type;\n        var contextTypes = type.contextTypes;\n        if (!contextTypes) {\n          return emptyContextObject;\n        }\n        var instance = workInProgress.stateNode;\n        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {\n          return instance.__reactInternalMemoizedMaskedChildContext;\n        }\n        var context = {};\n        for (var key in contextTypes) {\n          context[key] = unmaskedContext[key];\n        }\n        {\n          var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\n          checkPropTypes(contextTypes, context, \"context\", name);\n        }\n        if (instance) {\n          cacheContext(workInProgress, unmaskedContext, context);\n        }\n        return context;\n      }\n    }\n    function hasContextChanged() {\n      {\n        return didPerformWorkStackCursor.current;\n      }\n    }\n    function isContextProvider(type) {\n      {\n        var childContextTypes = type.childContextTypes;\n        return childContextTypes !== null && childContextTypes !== undefined;\n      }\n    }\n    function popContext(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n    function popTopLevelContextObject(fiber) {\n      {\n        pop(didPerformWorkStackCursor, fiber);\n        pop(contextStackCursor, fiber);\n      }\n    }\n    function pushTopLevelContextObject(fiber, context, didChange) {\n      {\n        if (contextStackCursor.current !== emptyContextObject) {\n          throw new Error(\"Unexpected context found on stack. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        push(contextStackCursor, context, fiber);\n        push(didPerformWorkStackCursor, didChange, fiber);\n      }\n    }\n    function processChildContext(fiber, type, parentContext) {\n      {\n        var instance = fiber.stateNode;\n        var childContextTypes = type.childContextTypes;\n        if (typeof instance.getChildContext !== \"function\") {\n          {\n            var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n            if (!warnedAboutMissingGetChildContext[componentName]) {\n              warnedAboutMissingGetChildContext[componentName] = true;\n              error(\"%s.childContextTypes is specified but there is no getChildContext() method \" + \"on the instance. You can either define getChildContext() on %s or remove \" + \"childContextTypes from it.\", componentName, componentName);\n            }\n          }\n          return parentContext;\n        }\n        var childContext = instance.getChildContext();\n        for (var contextKey in childContext) {\n          if (!(contextKey in childContextTypes)) {\n            throw new Error((getComponentNameFromFiber(fiber) || \"Unknown\") + '.getChildContext(): key \"' + contextKey + '\" is not defined in childContextTypes.');\n          }\n        }\n        {\n          var name = getComponentNameFromFiber(fiber) || \"Unknown\";\n          checkPropTypes(childContextTypes, childContext, \"child context\", name);\n        }\n        return assign({}, parentContext, childContext);\n      }\n    }\n    function pushContextProvider(workInProgress) {\n      {\n        var instance = workInProgress.stateNode;\n        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;\n        previousContext = contextStackCursor.current;\n        push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);\n        return true;\n      }\n    }\n    function invalidateContextProvider(workInProgress, type, didChange) {\n      {\n        var instance = workInProgress.stateNode;\n        if (!instance) {\n          throw new Error(\"Expected to have an instance by this point. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        if (didChange) {\n          var mergedContext = processChildContext(workInProgress, type, previousContext);\n          instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n          pop(didPerformWorkStackCursor, workInProgress);\n          pop(contextStackCursor, workInProgress);\n          push(contextStackCursor, mergedContext, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        } else {\n          pop(didPerformWorkStackCursor, workInProgress);\n          push(didPerformWorkStackCursor, didChange, workInProgress);\n        }\n      }\n    }\n    function findCurrentUnmaskedContext(fiber) {\n      {\n        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\n          throw new Error(\"Expected subtree parent to be a mounted class component. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        var node = fiber;\n        do {\n          switch (node.tag) {\n            case HostRoot:\n              return node.stateNode.context;\n            case ClassComponent:\n              {\n                var Component = node.type;\n                if (isContextProvider(Component)) {\n                  return node.stateNode.__reactInternalMemoizedMergedChildContext;\n                }\n                break;\n              }\n          }\n          node = node.return;\n        } while (node !== null);\n        throw new Error(\"Found unexpected detached subtree parent. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    var LegacyRoot = 0;\n    var ConcurrentRoot = 1;\n    function is(x, y) {\n      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n    }\n    var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n    var syncQueue = null;\n    var includesLegacySyncCallbacks = false;\n    var isFlushingSyncQueue = false;\n    function scheduleSyncCallback(callback) {\n      if (syncQueue === null) {\n        syncQueue = [callback];\n      } else {\n        syncQueue.push(callback);\n      }\n    }\n    function scheduleLegacySyncCallback(callback) {\n      includesLegacySyncCallbacks = true;\n      scheduleSyncCallback(callback);\n    }\n    function flushSyncCallbacksOnlyInLegacyMode() {\n      if (includesLegacySyncCallbacks) {\n        flushSyncCallbacks();\n      }\n    }\n    function flushSyncCallbacks() {\n      if (!isFlushingSyncQueue && syncQueue !== null) {\n        isFlushingSyncQueue = true;\n        var i = 0;\n        var previousUpdatePriority = getCurrentUpdatePriority();\n        try {\n          var isSync = true;\n          var queue = syncQueue;\n          setCurrentUpdatePriority(DiscreteEventPriority);\n          for (; i < queue.length; i++) {\n            var callback = queue[i];\n            do {\n              callback = callback(isSync);\n            } while (callback !== null);\n          }\n          syncQueue = null;\n          includesLegacySyncCallbacks = false;\n        } catch (error) {\n          if (syncQueue !== null) {\n            syncQueue = syncQueue.slice(i + 1);\n          }\n          scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n          throw error;\n        } finally {\n          setCurrentUpdatePriority(previousUpdatePriority);\n          isFlushingSyncQueue = false;\n        }\n      }\n      return null;\n    }\n    function isRootDehydrated(root) {\n      var currentState = root.current.memoizedState;\n      return currentState.isDehydrated;\n    }\n    var forkStack = [];\n    var forkStackIndex = 0;\n    var treeForkProvider = null;\n    var treeForkCount = 0;\n    var idStack = [];\n    var idStackIndex = 0;\n    var treeContextProvider = null;\n    var treeContextId = 1;\n    var treeContextOverflow = \"\";\n    function popTreeContext(workInProgress) {\n      while (workInProgress === treeForkProvider) {\n        treeForkProvider = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n        treeForkCount = forkStack[--forkStackIndex];\n        forkStack[forkStackIndex] = null;\n      }\n      while (workInProgress === treeContextProvider) {\n        treeContextProvider = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextOverflow = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n        treeContextId = idStack[--idStackIndex];\n        idStack[idStackIndex] = null;\n      }\n    }\n    var isHydrating = false;\n    var didSuspendOrErrorDEV = false;\n    var hydrationErrors = null;\n    function didSuspendOrErrorWhileHydratingDEV() {\n      {\n        return didSuspendOrErrorDEV;\n      }\n    }\n    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {\n      {\n        return false;\n      }\n    }\n    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    function prepareToHydrateHostTextInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostTextInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n      var shouldUpdate = hydrateTextInstance();\n    }\n    function prepareToHydrateHostSuspenseInstance(fiber) {\n      {\n        throw new Error(\"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n      }\n    }\n    function popHydrationState(fiber) {\n      {\n        return false;\n      }\n    }\n    function upgradeHydrationErrorsToRecoverable() {\n      if (hydrationErrors !== null) {\n        queueRecoverableErrors(hydrationErrors);\n        hydrationErrors = null;\n      }\n    }\n    function getIsHydrating() {\n      return isHydrating;\n    }\n    function queueHydrationError(error) {\n      if (hydrationErrors === null) {\n        hydrationErrors = [error];\n      } else {\n        hydrationErrors.push(error);\n      }\n    }\n    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\n    var NoTransition = null;\n    function requestCurrentTransition() {\n      return ReactCurrentBatchConfig.transition;\n    }\n    function shallowEqual(objA, objB) {\n      if (objectIs(objA, objB)) {\n        return true;\n      }\n      if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false;\n      }\n      var keysA = Object.keys(objA);\n      var keysB = Object.keys(objB);\n      if (keysA.length !== keysB.length) {\n        return false;\n      }\n      for (var i = 0; i < keysA.length; i++) {\n        var currentKey = keysA[i];\n        if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function describeFiber(fiber) {\n      var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\n      var source = fiber._debugSource;\n      switch (fiber.tag) {\n        case HostComponent:\n          return describeBuiltInComponentFrame(fiber.type, source, owner);\n        case LazyComponent:\n          return describeBuiltInComponentFrame(\"Lazy\", source, owner);\n        case SuspenseComponent:\n          return describeBuiltInComponentFrame(\"Suspense\", source, owner);\n        case SuspenseListComponent:\n          return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\n        case FunctionComponent:\n        case IndeterminateComponent:\n        case SimpleMemoComponent:\n          return describeFunctionComponentFrame(fiber.type, source, owner);\n        case ForwardRef:\n          return describeFunctionComponentFrame(fiber.type.render, source, owner);\n        case ClassComponent:\n          return describeClassComponentFrame(fiber.type, source, owner);\n        default:\n          return \"\";\n      }\n    }\n    function getStackByFiberInDevAndProd(workInProgress) {\n      try {\n        var info = \"\";\n        var node = workInProgress;\n        do {\n          info += describeFiber(node);\n          node = node.return;\n        } while (node);\n        return info;\n      } catch (x) {\n        return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\n      }\n    }\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n    var current = null;\n    var isRendering = false;\n    function getCurrentFiberOwnerNameInDevOrNull() {\n      {\n        if (current === null) {\n          return null;\n        }\n        var owner = current._debugOwner;\n        if (owner !== null && typeof owner !== \"undefined\") {\n          return getComponentNameFromFiber(owner);\n        }\n      }\n      return null;\n    }\n    function getCurrentFiberStackInDev() {\n      {\n        if (current === null) {\n          return \"\";\n        }\n        return getStackByFiberInDevAndProd(current);\n      }\n    }\n    function resetCurrentFiber() {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = null;\n        current = null;\n        isRendering = false;\n      }\n    }\n    function setCurrentFiber(fiber) {\n      {\n        ReactDebugCurrentFrame$1.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;\n        current = fiber;\n        isRendering = false;\n      }\n    }\n    function getCurrentFiber() {\n      {\n        return current;\n      }\n    }\n    function setIsRendering(rendering) {\n      {\n        isRendering = rendering;\n      }\n    }\n    var ReactStrictModeWarnings = {\n      recordUnsafeLifecycleWarnings: function recordUnsafeLifecycleWarnings(fiber, instance) {},\n      flushPendingUnsafeLifecycleWarnings: function flushPendingUnsafeLifecycleWarnings() {},\n      recordLegacyContextWarning: function recordLegacyContextWarning(fiber, instance) {},\n      flushLegacyContextWarning: function flushLegacyContextWarning() {},\n      discardPendingWarnings: function discardPendingWarnings() {}\n    };\n    {\n      var findStrictRoot = function findStrictRoot(fiber) {\n        var maybeStrictRoot = null;\n        var node = fiber;\n        while (node !== null) {\n          if (node.mode & StrictLegacyMode) {\n            maybeStrictRoot = node;\n          }\n          node = node.return;\n        }\n        return maybeStrictRoot;\n      };\n      var setToSortedString = function setToSortedString(set) {\n        var array = [];\n        set.forEach(function (value) {\n          array.push(value);\n        });\n        return array.sort().join(\", \");\n      };\n      var pendingComponentWillMountWarnings = [];\n      var pendingUNSAFE_ComponentWillMountWarnings = [];\n      var pendingComponentWillReceivePropsWarnings = [];\n      var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n      var pendingComponentWillUpdateWarnings = [];\n      var pendingUNSAFE_ComponentWillUpdateWarnings = [];\n      var didWarnAboutUnsafeLifecycles = new Set();\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {\n        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n          return;\n        }\n        if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n          pendingComponentWillMountWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === \"function\") {\n          pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n        }\n        if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n          pendingComponentWillReceivePropsWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n        }\n        if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n          pendingComponentWillUpdateWarnings.push(fiber);\n        }\n        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n        }\n      };\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {\n        var componentWillMountUniqueNames = new Set();\n        if (pendingComponentWillMountWarnings.length > 0) {\n          pendingComponentWillMountWarnings.forEach(function (fiber) {\n            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillMountWarnings = [];\n        }\n        var UNSAFE_componentWillMountUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillMountWarnings = [];\n        }\n        var componentWillReceivePropsUniqueNames = new Set();\n        if (pendingComponentWillReceivePropsWarnings.length > 0) {\n          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillReceivePropsWarnings = [];\n        }\n        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        }\n        var componentWillUpdateUniqueNames = new Set();\n        if (pendingComponentWillUpdateWarnings.length > 0) {\n          pendingComponentWillUpdateWarnings.forEach(function (fiber) {\n            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingComponentWillUpdateWarnings = [];\n        }\n        var UNSAFE_componentWillUpdateUniqueNames = new Set();\n        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n          pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {\n            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutUnsafeLifecycles.add(fiber.type);\n          });\n          pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        }\n        if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n          var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\n          error(\"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"\\nPlease update the following components: %s\", sortedNames);\n        }\n        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);\n          error(\"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, \" + \"refactor your code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"\\nPlease update the following components: %s\", _sortedNames);\n        }\n        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);\n          error(\"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" + \"and may indicate bugs in your code. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames2);\n        }\n        if (componentWillMountUniqueNames.size > 0) {\n          var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\n          warn(\"componentWillMount has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" + \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames3);\n        }\n        if (componentWillReceivePropsUniqueNames.size > 0) {\n          var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);\n          warn(\"componentWillReceiveProps has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* If you're updating state whenever props change, refactor your \" + \"code to use memoization techniques or move it to \" + \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" + \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames4);\n        }\n        if (componentWillUpdateUniqueNames.size > 0) {\n          var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\n          warn(\"componentWillUpdate has been renamed, and is not recommended for use. \" + \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" + \"* Move data fetching code or side effects to componentDidUpdate.\\n\" + \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" + \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" + \"To rename all deprecated lifecycles to their new names, you can run \" + \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" + \"\\nPlease update the following components: %s\", _sortedNames5);\n        }\n      };\n      var pendingLegacyContextWarning = new Map();\n      var didWarnAboutLegacyContext = new Set();\n      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {\n        var strictRoot = findStrictRoot(fiber);\n        if (strictRoot === null) {\n          error(\"Expected to find a StrictMode component in a strict mode tree. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n          return;\n        }\n        if (didWarnAboutLegacyContext.has(fiber.type)) {\n          return;\n        }\n        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === \"function\") {\n          if (warningsForRoot === undefined) {\n            warningsForRoot = [];\n            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n          }\n          warningsForRoot.push(fiber);\n        }\n      };\n      ReactStrictModeWarnings.flushLegacyContextWarning = function () {\n        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {\n          if (fiberArray.length === 0) {\n            return;\n          }\n          var firstFiber = fiberArray[0];\n          var uniqueNames = new Set();\n          fiberArray.forEach(function (fiber) {\n            uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\n            didWarnAboutLegacyContext.add(fiber.type);\n          });\n          var sortedNames = setToSortedString(uniqueNames);\n          try {\n            setCurrentFiber(firstFiber);\n            error(\"Legacy context API has been detected within a strict-mode tree.\" + \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" + \"using it should migrate to the new version.\" + \"\\n\\nPlease update the following components: %s\" + \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\", sortedNames);\n          } finally {\n            resetCurrentFiber();\n          }\n        });\n      };\n      ReactStrictModeWarnings.discardPendingWarnings = function () {\n        pendingComponentWillMountWarnings = [];\n        pendingUNSAFE_ComponentWillMountWarnings = [];\n        pendingComponentWillReceivePropsWarnings = [];\n        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n        pendingComponentWillUpdateWarnings = [];\n        pendingUNSAFE_ComponentWillUpdateWarnings = [];\n        pendingLegacyContextWarning = new Map();\n      };\n    }\n    function typeName(value) {\n      {\n        var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n        return type;\n      }\n    }\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n    function checkPropStringCoercion(value, propName) {\n      {\n        if (willCoercionThrow(value)) {\n          error(\"The provided `%s` prop is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", propName, typeName(value));\n          return testStringCoercion(value);\n        }\n      }\n    }\n    function resolveDefaultProps(Component, baseProps) {\n      if (Component && Component.defaultProps) {\n        var props = assign({}, baseProps);\n        var defaultProps = Component.defaultProps;\n        for (var propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n        return props;\n      }\n      return baseProps;\n    }\n    var valueCursor = createCursor(null);\n    var rendererSigil;\n    {\n      rendererSigil = {};\n    }\n    var currentlyRenderingFiber = null;\n    var lastContextDependency = null;\n    var lastFullyObservedContext = null;\n    var isDisallowedContextReadInDEV = false;\n    function resetContextDependencies() {\n      currentlyRenderingFiber = null;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n    function enterDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = true;\n      }\n    }\n    function exitDisallowedContextReadInDEV() {\n      {\n        isDisallowedContextReadInDEV = false;\n      }\n    }\n    function pushProvider(providerFiber, context, nextValue) {\n      {\n        push(valueCursor, context._currentValue, providerFiber);\n        context._currentValue = nextValue;\n        {\n          if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {\n            error(\"Detected multiple renderers concurrently rendering the \" + \"same context provider. This is currently unsupported.\");\n          }\n          context._currentRenderer = rendererSigil;\n        }\n      }\n    }\n    function popProvider(context, providerFiber) {\n      var currentValue = valueCursor.current;\n      pop(valueCursor, providerFiber);\n      {\n        {\n          context._currentValue = currentValue;\n        }\n      }\n    }\n    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\n      var node = parent;\n      while (node !== null) {\n        var alternate = node.alternate;\n        if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n          node.childLanes = mergeLanes(node.childLanes, renderLanes);\n          if (alternate !== null) {\n            alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n          }\n        } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n        }\n        if (node === propagationRoot) {\n          break;\n        }\n        node = node.return;\n      }\n      {\n        if (node !== propagationRoot) {\n          error(\"Expected to find the propagation root when scheduling context work. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n    }\n    function propagateContextChange(workInProgress, context, renderLanes) {\n      {\n        propagateContextChange_eager(workInProgress, context, renderLanes);\n      }\n    }\n    function propagateContextChange_eager(workInProgress, context, renderLanes) {\n      var fiber = workInProgress.child;\n      if (fiber !== null) {\n        fiber.return = workInProgress;\n      }\n      while (fiber !== null) {\n        var nextFiber = void 0;\n        var list = fiber.dependencies;\n        if (list !== null) {\n          nextFiber = fiber.child;\n          var dependency = list.firstContext;\n          while (dependency !== null) {\n            if (dependency.context === context) {\n              if (fiber.tag === ClassComponent) {\n                var lane = pickArbitraryLane(renderLanes);\n                var update = createUpdate(NoTimestamp, lane);\n                update.tag = ForceUpdate;\n                var updateQueue = fiber.updateQueue;\n                if (updateQueue === null) ;else {\n                  var sharedQueue = updateQueue.shared;\n                  var pending = sharedQueue.pending;\n                  if (pending === null) {\n                    update.next = update;\n                  } else {\n                    update.next = pending.next;\n                    pending.next = update;\n                  }\n                  sharedQueue.pending = update;\n                }\n              }\n              fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n              var alternate = fiber.alternate;\n              if (alternate !== null) {\n                alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n              }\n              scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress);\n              list.lanes = mergeLanes(list.lanes, renderLanes);\n              break;\n            }\n            dependency = dependency.next;\n          }\n        } else if (fiber.tag === ContextProvider) {\n          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n        } else if (fiber.tag === DehydratedFragment) {\n          var parentSuspense = fiber.return;\n          if (parentSuspense === null) {\n            throw new Error(\"We just came from a parent so we must have had a parent. This is a bug in React.\");\n          }\n          parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n          var _alternate = parentSuspense.alternate;\n          if (_alternate !== null) {\n            _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\n          }\n          scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);\n          nextFiber = fiber.sibling;\n        } else {\n          nextFiber = fiber.child;\n        }\n        if (nextFiber !== null) {\n          nextFiber.return = fiber;\n        } else {\n          nextFiber = fiber;\n          while (nextFiber !== null) {\n            if (nextFiber === workInProgress) {\n              nextFiber = null;\n              break;\n            }\n            var sibling = nextFiber.sibling;\n            if (sibling !== null) {\n              sibling.return = nextFiber.return;\n              nextFiber = sibling;\n              break;\n            }\n            nextFiber = nextFiber.return;\n          }\n        }\n        fiber = nextFiber;\n      }\n    }\n    function prepareToReadContext(workInProgress, renderLanes) {\n      currentlyRenderingFiber = workInProgress;\n      lastContextDependency = null;\n      lastFullyObservedContext = null;\n      var dependencies = workInProgress.dependencies;\n      if (dependencies !== null) {\n        {\n          var firstContext = dependencies.firstContext;\n          if (firstContext !== null) {\n            if (includesSomeLane(dependencies.lanes, renderLanes)) {\n              markWorkInProgressReceivedUpdate();\n            }\n            dependencies.firstContext = null;\n          }\n        }\n      }\n    }\n    function _readContext(context) {\n      {\n        if (isDisallowedContextReadInDEV) {\n          error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n        }\n      }\n      var value = context._currentValue;\n      if (lastFullyObservedContext === context) ;else {\n        var contextItem = {\n          context: context,\n          memoizedValue: value,\n          next: null\n        };\n        if (lastContextDependency === null) {\n          if (currentlyRenderingFiber === null) {\n            throw new Error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n          }\n          lastContextDependency = contextItem;\n          currentlyRenderingFiber.dependencies = {\n            lanes: NoLanes,\n            firstContext: contextItem\n          };\n        } else {\n          lastContextDependency = lastContextDependency.next = contextItem;\n        }\n      }\n      return value;\n    }\n    var concurrentQueues = null;\n    function pushConcurrentUpdateQueue(queue) {\n      if (concurrentQueues === null) {\n        concurrentQueues = [queue];\n      } else {\n        concurrentQueues.push(queue);\n      }\n    }\n    function finishQueueingConcurrentUpdates() {\n      if (concurrentQueues !== null) {\n        for (var i = 0; i < concurrentQueues.length; i++) {\n          var queue = concurrentQueues[i];\n          var lastInterleavedUpdate = queue.interleaved;\n          if (lastInterleavedUpdate !== null) {\n            queue.interleaved = null;\n            var firstInterleavedUpdate = lastInterleavedUpdate.next;\n            var lastPendingUpdate = queue.pending;\n            if (lastPendingUpdate !== null) {\n              var firstPendingUpdate = lastPendingUpdate.next;\n              lastPendingUpdate.next = firstInterleavedUpdate;\n              lastInterleavedUpdate.next = firstPendingUpdate;\n            }\n            queue.pending = lastInterleavedUpdate;\n          }\n        }\n        concurrentQueues = null;\n      }\n    }\n    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n    }\n    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\n      var interleaved = queue.interleaved;\n      if (interleaved === null) {\n        update.next = update;\n        pushConcurrentUpdateQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n    function enqueueConcurrentRenderForLane(fiber, lane) {\n      return markUpdateLaneFromFiberToRoot(fiber, lane);\n    }\n    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\n    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n      var alternate = sourceFiber.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, lane);\n      }\n      {\n        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n      var node = sourceFiber;\n      var parent = sourceFiber.return;\n      while (parent !== null) {\n        parent.childLanes = mergeLanes(parent.childLanes, lane);\n        alternate = parent.alternate;\n        if (alternate !== null) {\n          alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n        } else {\n          {\n            if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n            }\n          }\n        }\n        node = parent;\n        parent = parent.return;\n      }\n      if (node.tag === HostRoot) {\n        var root = node.stateNode;\n        return root;\n      } else {\n        return null;\n      }\n    }\n    var UpdateState = 0;\n    var ReplaceState = 1;\n    var ForceUpdate = 2;\n    var CaptureUpdate = 3;\n    var hasForceUpdate = false;\n    var didWarnUpdateInsideUpdate;\n    var currentlyProcessingQueue;\n    {\n      didWarnUpdateInsideUpdate = false;\n      currentlyProcessingQueue = null;\n    }\n    function initializeUpdateQueue(fiber) {\n      var queue = {\n        baseState: fiber.memoizedState,\n        firstBaseUpdate: null,\n        lastBaseUpdate: null,\n        shared: {\n          pending: null,\n          interleaved: null,\n          lanes: NoLanes\n        },\n        effects: null\n      };\n      fiber.updateQueue = queue;\n    }\n    function cloneUpdateQueue(current, workInProgress) {\n      var queue = workInProgress.updateQueue;\n      var currentQueue = current.updateQueue;\n      if (queue === currentQueue) {\n        var clone = {\n          baseState: currentQueue.baseState,\n          firstBaseUpdate: currentQueue.firstBaseUpdate,\n          lastBaseUpdate: currentQueue.lastBaseUpdate,\n          shared: currentQueue.shared,\n          effects: currentQueue.effects\n        };\n        workInProgress.updateQueue = clone;\n      }\n    }\n    function createUpdate(eventTime, lane) {\n      var update = {\n        eventTime: eventTime,\n        lane: lane,\n        tag: UpdateState,\n        payload: null,\n        callback: null,\n        next: null\n      };\n      return update;\n    }\n    function enqueueUpdate(fiber, update, lane) {\n      var updateQueue = fiber.updateQueue;\n      if (updateQueue === null) {\n        return null;\n      }\n      var sharedQueue = updateQueue.shared;\n      {\n        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {\n          error(\"An update (setState, replaceState, or forceUpdate) was scheduled \" + \"from inside an update function. Update functions should be pure, \" + \"with zero side-effects. Consider using componentDidUpdate or a \" + \"callback.\");\n          didWarnUpdateInsideUpdate = true;\n        }\n      }\n      if (isUnsafeClassRenderPhaseUpdate()) {\n        var pending = sharedQueue.pending;\n        if (pending === null) {\n          update.next = update;\n        } else {\n          update.next = pending.next;\n          pending.next = update;\n        }\n        sharedQueue.pending = update;\n        return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\n      } else {\n        return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\n      }\n    }\n    function entangleTransitions(root, fiber, lane) {\n      var updateQueue = fiber.updateQueue;\n      if (updateQueue === null) {\n        return;\n      }\n      var sharedQueue = updateQueue.shared;\n      if (isTransitionLane(lane)) {\n        var queueLanes = sharedQueue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        sharedQueue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {\n      var queue = workInProgress.updateQueue;\n      var current = workInProgress.alternate;\n      if (current !== null) {\n        var currentQueue = current.updateQueue;\n        if (queue === currentQueue) {\n          var newFirst = null;\n          var newLast = null;\n          var firstBaseUpdate = queue.firstBaseUpdate;\n          if (firstBaseUpdate !== null) {\n            var update = firstBaseUpdate;\n            do {\n              var clone = {\n                eventTime: update.eventTime,\n                lane: update.lane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n              if (newLast === null) {\n                newFirst = newLast = clone;\n              } else {\n                newLast.next = clone;\n                newLast = clone;\n              }\n              update = update.next;\n            } while (update !== null);\n            if (newLast === null) {\n              newFirst = newLast = capturedUpdate;\n            } else {\n              newLast.next = capturedUpdate;\n              newLast = capturedUpdate;\n            }\n          } else {\n            newFirst = newLast = capturedUpdate;\n          }\n          queue = {\n            baseState: currentQueue.baseState,\n            firstBaseUpdate: newFirst,\n            lastBaseUpdate: newLast,\n            shared: currentQueue.shared,\n            effects: currentQueue.effects\n          };\n          workInProgress.updateQueue = queue;\n          return;\n        }\n      }\n      var lastBaseUpdate = queue.lastBaseUpdate;\n      if (lastBaseUpdate === null) {\n        queue.firstBaseUpdate = capturedUpdate;\n      } else {\n        lastBaseUpdate.next = capturedUpdate;\n      }\n      queue.lastBaseUpdate = capturedUpdate;\n    }\n    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {\n      switch (update.tag) {\n        case ReplaceState:\n          {\n            var payload = update.payload;\n            if (typeof payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              var nextState = payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n              return nextState;\n            }\n            return payload;\n          }\n        case CaptureUpdate:\n          {\n            workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;\n          }\n        case UpdateState:\n          {\n            var _payload = update.payload;\n            var partialState;\n            if (typeof _payload === \"function\") {\n              {\n                enterDisallowedContextReadInDEV();\n              }\n              partialState = _payload.call(instance, prevState, nextProps);\n              {\n                exitDisallowedContextReadInDEV();\n              }\n            } else {\n              partialState = _payload;\n            }\n            if (partialState === null || partialState === undefined) {\n              return prevState;\n            }\n            return assign({}, prevState, partialState);\n          }\n        case ForceUpdate:\n          {\n            hasForceUpdate = true;\n            return prevState;\n          }\n      }\n      return prevState;\n    }\n    function processUpdateQueue(workInProgress, props, instance, renderLanes) {\n      var queue = workInProgress.updateQueue;\n      hasForceUpdate = false;\n      {\n        currentlyProcessingQueue = queue.shared;\n      }\n      var firstBaseUpdate = queue.firstBaseUpdate;\n      var lastBaseUpdate = queue.lastBaseUpdate;\n      var pendingQueue = queue.shared.pending;\n      if (pendingQueue !== null) {\n        queue.shared.pending = null;\n        var lastPendingUpdate = pendingQueue;\n        var firstPendingUpdate = lastPendingUpdate.next;\n        lastPendingUpdate.next = null;\n        if (lastBaseUpdate === null) {\n          firstBaseUpdate = firstPendingUpdate;\n        } else {\n          lastBaseUpdate.next = firstPendingUpdate;\n        }\n        lastBaseUpdate = lastPendingUpdate;\n        var current = workInProgress.alternate;\n        if (current !== null) {\n          var currentQueue = current.updateQueue;\n          var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n          if (currentLastBaseUpdate !== lastBaseUpdate) {\n            if (currentLastBaseUpdate === null) {\n              currentQueue.firstBaseUpdate = firstPendingUpdate;\n            } else {\n              currentLastBaseUpdate.next = firstPendingUpdate;\n            }\n            currentQueue.lastBaseUpdate = lastPendingUpdate;\n          }\n        }\n      }\n      if (firstBaseUpdate !== null) {\n        var newState = queue.baseState;\n        var newLanes = NoLanes;\n        var newBaseState = null;\n        var newFirstBaseUpdate = null;\n        var newLastBaseUpdate = null;\n        var update = firstBaseUpdate;\n        do {\n          var updateLane = update.lane;\n          var updateEventTime = update.eventTime;\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              eventTime: updateEventTime,\n              lane: updateLane,\n              tag: update.tag,\n              payload: update.payload,\n              callback: update.callback,\n              next: null\n            };\n            if (newLastBaseUpdate === null) {\n              newFirstBaseUpdate = newLastBaseUpdate = clone;\n              newBaseState = newState;\n            } else {\n              newLastBaseUpdate = newLastBaseUpdate.next = clone;\n            }\n            newLanes = mergeLanes(newLanes, updateLane);\n          } else {\n            if (newLastBaseUpdate !== null) {\n              var _clone = {\n                eventTime: updateEventTime,\n                lane: NoLane,\n                tag: update.tag,\n                payload: update.payload,\n                callback: update.callback,\n                next: null\n              };\n              newLastBaseUpdate = newLastBaseUpdate.next = _clone;\n            }\n            newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);\n            var callback = update.callback;\n            if (callback !== null && update.lane !== NoLane) {\n              workInProgress.flags |= Callback;\n              var effects = queue.effects;\n              if (effects === null) {\n                queue.effects = [update];\n              } else {\n                effects.push(update);\n              }\n            }\n          }\n          update = update.next;\n          if (update === null) {\n            pendingQueue = queue.shared.pending;\n            if (pendingQueue === null) {\n              break;\n            } else {\n              var _lastPendingUpdate = pendingQueue;\n              var _firstPendingUpdate = _lastPendingUpdate.next;\n              _lastPendingUpdate.next = null;\n              update = _firstPendingUpdate;\n              queue.lastBaseUpdate = _lastPendingUpdate;\n              queue.shared.pending = null;\n            }\n          }\n        } while (true);\n        if (newLastBaseUpdate === null) {\n          newBaseState = newState;\n        }\n        queue.baseState = newBaseState;\n        queue.firstBaseUpdate = newFirstBaseUpdate;\n        queue.lastBaseUpdate = newLastBaseUpdate;\n        var lastInterleaved = queue.shared.interleaved;\n        if (lastInterleaved !== null) {\n          var interleaved = lastInterleaved;\n          do {\n            newLanes = mergeLanes(newLanes, interleaved.lane);\n            interleaved = interleaved.next;\n          } while (interleaved !== lastInterleaved);\n        } else if (firstBaseUpdate === null) {\n          queue.shared.lanes = NoLanes;\n        }\n        markSkippedUpdateLanes(newLanes);\n        workInProgress.lanes = newLanes;\n        workInProgress.memoizedState = newState;\n      }\n      {\n        currentlyProcessingQueue = null;\n      }\n    }\n    function callCallback(callback, context) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"Invalid argument passed as callback. Expected a function. Instead \" + (\"received: \" + callback));\n      }\n      callback.call(context);\n    }\n    function resetHasForceUpdateBeforeProcessing() {\n      hasForceUpdate = false;\n    }\n    function checkHasForceUpdateAfterProcessing() {\n      return hasForceUpdate;\n    }\n    function commitUpdateQueue(finishedWork, finishedQueue, instance) {\n      var effects = finishedQueue.effects;\n      finishedQueue.effects = null;\n      if (effects !== null) {\n        for (var i = 0; i < effects.length; i++) {\n          var effect = effects[i];\n          var callback = effect.callback;\n          if (callback !== null) {\n            effect.callback = null;\n            callCallback(callback, instance);\n          }\n        }\n      }\n    }\n    var fakeInternalInstance = {};\n    var emptyRefsObject = new React.Component().refs;\n    var didWarnAboutStateAssignmentForComponent;\n    var didWarnAboutUninitializedState;\n    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\n    var didWarnAboutLegacyLifecyclesAndDerivedState;\n    var didWarnAboutUndefinedDerivedState;\n    var warnOnUndefinedDerivedState;\n    var warnOnInvalidCallback;\n    var didWarnAboutDirectlyAssigningPropsToState;\n    var didWarnAboutContextTypeAndContextTypes;\n    var didWarnAboutInvalidateContextType;\n    {\n      didWarnAboutStateAssignmentForComponent = new Set();\n      didWarnAboutUninitializedState = new Set();\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n      didWarnAboutDirectlyAssigningPropsToState = new Set();\n      didWarnAboutUndefinedDerivedState = new Set();\n      didWarnAboutContextTypeAndContextTypes = new Set();\n      didWarnAboutInvalidateContextType = new Set();\n      var didWarnOnInvalidCallback = new Set();\n      warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {\n        if (callback === null || typeof callback === \"function\") {\n          return;\n        }\n        var key = callerName + \"_\" + callback;\n        if (!didWarnOnInvalidCallback.has(key)) {\n          didWarnOnInvalidCallback.add(key);\n          error(\"%s(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callerName, callback);\n        }\n      };\n      warnOnUndefinedDerivedState = function warnOnUndefinedDerivedState(type, partialState) {\n        if (partialState === undefined) {\n          var componentName = getComponentNameFromType(type) || \"Component\";\n          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n            didWarnAboutUndefinedDerivedState.add(componentName);\n            error(\"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" + \"You have returned undefined.\", componentName);\n          }\n        }\n      };\n      Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\n        enumerable: false,\n        value: function value() {\n          throw new Error(\"_processChildContext is not available in React 16+. This likely \" + \"means you have multiple copies of React and are attempting to nest \" + \"a React 15 tree inside a React 16 tree using \" + \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" + \"to make sure you have only one copy of React (and ideally, switch \" + \"to ReactDOM.createPortal).\");\n        }\n      });\n      Object.freeze(fakeInternalInstance);\n    }\n    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {\n      var prevState = workInProgress.memoizedState;\n      var partialState = getDerivedStateFromProps(nextProps, prevState);\n      {\n        warnOnUndefinedDerivedState(ctor, partialState);\n      }\n      var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);\n      workInProgress.memoizedState = memoizedState;\n      if (workInProgress.lanes === NoLanes) {\n        var updateQueue = workInProgress.updateQueue;\n        updateQueue.baseState = memoizedState;\n      }\n    }\n    var classComponentUpdater = {\n      isMounted: isMounted,\n      enqueueSetState: function enqueueSetState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.payload = payload;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"setState\");\n          }\n          update.callback = callback;\n        }\n        var root = enqueueUpdate(fiber, update, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ReplaceState;\n        update.payload = payload;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"replaceState\");\n          }\n          update.callback = callback;\n        }\n        var root = enqueueUpdate(fiber, update, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      },\n      enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {\n        var fiber = get(inst);\n        var eventTime = requestEventTime();\n        var lane = requestUpdateLane(fiber);\n        var update = createUpdate(eventTime, lane);\n        update.tag = ForceUpdate;\n        if (callback !== undefined && callback !== null) {\n          {\n            warnOnInvalidCallback(callback, \"forceUpdate\");\n          }\n          update.callback = callback;\n        }\n        var root = enqueueUpdate(fiber, update, lane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitions(root, fiber, lane);\n        }\n      }\n    };\n    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {\n      var instance = workInProgress.stateNode;\n      if (typeof instance.shouldComponentUpdate === \"function\") {\n        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);\n        {\n          if (shouldUpdate === undefined) {\n            error(\"%s.shouldComponentUpdate(): Returned undefined instead of a \" + \"boolean value. Make sure to return true or false.\", getComponentNameFromType(ctor) || \"Component\");\n          }\n        }\n        return shouldUpdate;\n      }\n      if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);\n      }\n      return true;\n    }\n    function checkClassInstance(workInProgress, ctor, newProps) {\n      var instance = workInProgress.stateNode;\n      {\n        var name = getComponentNameFromType(ctor) || \"Component\";\n        var renderPresent = instance.render;\n        if (!renderPresent) {\n          if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: did you accidentally return an object from the constructor?\", name);\n          } else {\n            error(\"%s(...): No `render` method found on the returned component \" + \"instance: you may have forgotten to define `render`.\", name);\n          }\n        }\n        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {\n          error(\"getInitialState was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Did you mean to define a state property instead?\", name);\n        }\n        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {\n          error(\"getDefaultProps was defined on %s, a plain JavaScript class. \" + \"This is only supported for classes created using React.createClass. \" + \"Use a static property to define defaultProps instead.\", name);\n        }\n        if (instance.propTypes) {\n          error(\"propTypes was defined as an instance property on %s. Use a static \" + \"property to define propTypes instead.\", name);\n        }\n        if (instance.contextType) {\n          error(\"contextType was defined as an instance property on %s. Use a static \" + \"property to define contextType instead.\", name);\n        }\n        {\n          if (instance.contextTypes) {\n            error(\"contextTypes was defined as an instance property on %s. Use a static \" + \"property to define contextTypes instead.\", name);\n          }\n          if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {\n            didWarnAboutContextTypeAndContextTypes.add(ctor);\n            error(\"%s declares both contextTypes and contextType static properties. \" + \"The legacy contextTypes property will be ignored.\", name);\n          }\n        }\n        if (typeof instance.componentShouldUpdate === \"function\") {\n          error(\"%s has a method called \" + \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" + \"The name is phrased as a question because the function is \" + \"expected to return a value.\", name);\n        }\n        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== \"undefined\") {\n          error(\"%s has a method called shouldComponentUpdate(). \" + \"shouldComponentUpdate should not be used when extending React.PureComponent. \" + \"Please extend React.Component if shouldComponentUpdate is used.\", getComponentNameFromType(ctor) || \"A pure component\");\n        }\n        if (typeof instance.componentDidUnmount === \"function\") {\n          error(\"%s has a method called \" + \"componentDidUnmount(). But there is no such lifecycle method. \" + \"Did you mean componentWillUnmount()?\", name);\n        }\n        if (typeof instance.componentDidReceiveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentDidReceiveProps(). But there is no such lifecycle method. \" + \"If you meant to update the state in response to changing props, \" + \"use componentWillReceiveProps(). If you meant to fetch data or \" + \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\", name);\n        }\n        if (typeof instance.componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\", name);\n        }\n        if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\n          error(\"%s has a method called \" + \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\", name);\n        }\n        var hasMutatedProps = instance.props !== newProps;\n        if (instance.props !== undefined && hasMutatedProps) {\n          error(\"%s(...): When calling super() in `%s`, make sure to pass \" + \"up the same props that your component's constructor was passed.\", name, name);\n        }\n        if (instance.defaultProps) {\n          error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" + \" Instead, define defaultProps as a static property on %s.\", name, name);\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\" && typeof instance.componentDidUpdate !== \"function\" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {\n          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n          error(\"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" + \"This component defines getSnapshotBeforeUpdate() only.\", getComponentNameFromType(ctor));\n        }\n        if (typeof instance.getDerivedStateFromProps === \"function\") {\n          error(\"%s: getDerivedStateFromProps() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n        if (typeof instance.getDerivedStateFromError === \"function\") {\n          error(\"%s: getDerivedStateFromError() is defined as an instance method \" + \"and will be ignored. Instead, declare it as a static method.\", name);\n        }\n        if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\n          error(\"%s: getSnapshotBeforeUpdate() is defined as a static method \" + \"and will be ignored. Instead, declare it as an instance method.\", name);\n        }\n        var _state = instance.state;\n        if (_state && (typeof _state !== \"object\" || isArray(_state))) {\n          error(\"%s.state: must be set to an object or null\", name);\n        }\n        if (typeof instance.getChildContext === \"function\" && typeof ctor.childContextTypes !== \"object\") {\n          error(\"%s.getChildContext(): childContextTypes must be defined in order to \" + \"use getChildContext().\", name);\n        }\n      }\n    }\n    function adoptClassInstance(workInProgress, instance) {\n      instance.updater = classComponentUpdater;\n      workInProgress.stateNode = instance;\n      set(instance, workInProgress);\n      {\n        instance._reactInternalInstance = fakeInternalInstance;\n      }\n    }\n    function constructClassInstance(workInProgress, ctor, props) {\n      var isLegacyContextConsumer = false;\n      var unmaskedContext = emptyContextObject;\n      var context = emptyContextObject;\n      var contextType = ctor.contextType;\n      {\n        if (\"contextType\" in ctor) {\n          var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined;\n          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n            didWarnAboutInvalidateContextType.add(ctor);\n            var addendum = \"\";\n            if (contextType === undefined) {\n              addendum = \" However, it is set to undefined. \" + \"This can be caused by a typo or by mixing up named and default imports. \" + \"This can also happen due to a circular dependency, so \" + \"try moving the createContext() call to a separate file.\";\n            } else if (typeof contextType !== \"object\") {\n              addendum = \" However, it is set to a \" + typeof contextType + \".\";\n            } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n              addendum = \" Did you accidentally pass the Context.Provider instead?\";\n            } else if (contextType._context !== undefined) {\n              addendum = \" Did you accidentally pass the Context.Consumer instead?\";\n            } else {\n              addendum = \" However, it is set to an object with keys {\" + Object.keys(contextType).join(\", \") + \"}.\";\n            }\n            error(\"%s defines an invalid contextType. \" + \"contextType should point to the Context object returned by React.createContext().%s\", getComponentNameFromType(ctor) || \"Component\", addendum);\n          }\n        }\n      }\n      if (typeof contextType === \"object\" && contextType !== null) {\n        context = _readContext(contextType);\n      } else {\n        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        var contextTypes = ctor.contextTypes;\n        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;\n        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;\n      }\n      var instance = new ctor(props, context);\n      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;\n      adoptClassInstance(workInProgress, instance);\n      {\n        if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n          if (!didWarnAboutUninitializedState.has(componentName)) {\n            didWarnAboutUninitializedState.add(componentName);\n            error(\"`%s` uses `getDerivedStateFromProps` but its initial state is \" + \"%s. This is not recommended. Instead, define the initial state by \" + \"assigning an object to `this.state` in the constructor of `%s`. \" + \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\", componentName, instance.state === null ? \"null\" : \"undefined\", componentName);\n          }\n        }\n        if (typeof ctor.getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          var foundWillMountName = null;\n          var foundWillReceivePropsName = null;\n          var foundWillUpdateName = null;\n          if (typeof instance.componentWillMount === \"function\" && instance.componentWillMount.__suppressDeprecationWarning !== true) {\n            foundWillMountName = \"componentWillMount\";\n          } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            foundWillMountName = \"UNSAFE_componentWillMount\";\n          }\n          if (typeof instance.componentWillReceiveProps === \"function\" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {\n            foundWillReceivePropsName = \"componentWillReceiveProps\";\n          } else if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n            foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\n          }\n          if (typeof instance.componentWillUpdate === \"function\" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {\n            foundWillUpdateName = \"componentWillUpdate\";\n          } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\n          }\n          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n            var _componentName = getComponentNameFromType(ctor) || \"Component\";\n            var newApiName = typeof ctor.getDerivedStateFromProps === \"function\" ? \"getDerivedStateFromProps()\" : \"getSnapshotBeforeUpdate()\";\n            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\n              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\n              error(\"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" + \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" + \"The above lifecycles should be removed. Learn more about this warning here:\\n\" + \"https://reactjs.org/link/unsafe-component-lifecycles\", _componentName, newApiName, foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\", foundWillReceivePropsName !== null ? \"\\n  \" + foundWillReceivePropsName : \"\", foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\");\n            }\n          }\n        }\n      }\n      if (isLegacyContextConsumer) {\n        cacheContext(workInProgress, unmaskedContext, context);\n      }\n      return instance;\n    }\n    function callComponentWillMount(workInProgress, instance) {\n      var oldState = instance.state;\n      if (typeof instance.componentWillMount === \"function\") {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n        instance.UNSAFE_componentWillMount();\n      }\n      if (oldState !== instance.state) {\n        {\n          error(\"%s.componentWillMount(): Assigning directly to this.state is \" + \"deprecated (except inside a component's \" + \"constructor). Use setState instead.\", getComponentNameFromFiber(workInProgress) || \"Component\");\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {\n      var oldState = instance.state;\n      if (typeof instance.componentWillReceiveProps === \"function\") {\n        instance.componentWillReceiveProps(newProps, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\n        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n      }\n      if (instance.state !== oldState) {\n        {\n          var componentName = getComponentNameFromFiber(workInProgress) || \"Component\";\n          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n            didWarnAboutStateAssignmentForComponent.add(componentName);\n            error(\"%s.componentWillReceiveProps(): Assigning directly to \" + \"this.state is deprecated (except inside a component's \" + \"constructor). Use setState instead.\", componentName);\n          }\n        }\n        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n      }\n    }\n    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      {\n        checkClassInstance(workInProgress, ctor, newProps);\n      }\n      var instance = workInProgress.stateNode;\n      instance.props = newProps;\n      instance.state = workInProgress.memoizedState;\n      instance.refs = emptyRefsObject;\n      initializeUpdateQueue(workInProgress);\n      var contextType = ctor.contextType;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        instance.context = _readContext(contextType);\n      } else {\n        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        instance.context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      {\n        if (instance.state === newProps) {\n          var componentName = getComponentNameFromType(ctor) || \"Component\";\n          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n            didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n            error(\"%s: It is not recommended to assign props directly to state \" + \"because updates to props won't be reflected in state. \" + \"In most cases, it is better to use props directly.\", componentName);\n          }\n        }\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);\n        }\n        {\n          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);\n        }\n      }\n      instance.state = workInProgress.memoizedState;\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        instance.state = workInProgress.memoizedState;\n      }\n      if (typeof ctor.getDerivedStateFromProps !== \"function\" && typeof instance.getSnapshotBeforeUpdate !== \"function\" && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n        callComponentWillMount(workInProgress, instance);\n        processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n        instance.state = workInProgress.memoizedState;\n      }\n      if (typeof instance.componentDidMount === \"function\") {\n        var fiberFlags = Update;\n        workInProgress.flags |= fiberFlags;\n      }\n    }\n    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      var oldProps = workInProgress.memoizedProps;\n      instance.props = oldProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n      }\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (oldProps !== newProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {\n        if (typeof instance.componentDidMount === \"function\") {\n          var fiberFlags = Update;\n          workInProgress.flags |= fiberFlags;\n        }\n        return false;\n      }\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === \"function\" || typeof instance.componentWillMount === \"function\")) {\n          if (typeof instance.componentWillMount === \"function\") {\n            instance.componentWillMount();\n          }\n          if (typeof instance.UNSAFE_componentWillMount === \"function\") {\n            instance.UNSAFE_componentWillMount();\n          }\n        }\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags = Update;\n          workInProgress.flags |= _fiberFlags;\n        }\n      } else {\n        if (typeof instance.componentDidMount === \"function\") {\n          var _fiberFlags2 = Update;\n          workInProgress.flags |= _fiberFlags2;\n        }\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {\n      var instance = workInProgress.stateNode;\n      cloneUpdateQueue(current, workInProgress);\n      var unresolvedOldProps = workInProgress.memoizedProps;\n      var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n      instance.props = oldProps;\n      var unresolvedNewProps = workInProgress.pendingProps;\n      var oldContext = instance.context;\n      var contextType = ctor.contextType;\n      var nextContext = emptyContextObject;\n      if (typeof contextType === \"object\" && contextType !== null) {\n        nextContext = _readContext(contextType);\n      } else {\n        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n      }\n      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n      var hasNewLifecycles = typeof getDerivedStateFromProps === \"function\" || typeof instance.getSnapshotBeforeUpdate === \"function\";\n      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" || typeof instance.componentWillReceiveProps === \"function\")) {\n        if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {\n          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);\n        }\n      }\n      resetHasForceUpdateBeforeProcessing();\n      var oldState = workInProgress.memoizedState;\n      var newState = instance.state = oldState;\n      processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n      newState = workInProgress.memoizedState;\n      if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n        return false;\n      }\n      if (typeof getDerivedStateFromProps === \"function\") {\n        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);\n        newState = workInProgress.memoizedState;\n      }\n      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || enableLazyContextPropagation;\n      if (shouldUpdate) {\n        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === \"function\" || typeof instance.componentWillUpdate === \"function\")) {\n          if (typeof instance.componentWillUpdate === \"function\") {\n            instance.componentWillUpdate(newProps, newState, nextContext);\n          }\n          if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\n            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n          }\n        }\n        if (typeof instance.componentDidUpdate === \"function\") {\n          workInProgress.flags |= Update;\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          workInProgress.flags |= Snapshot;\n        }\n      } else {\n        if (typeof instance.componentDidUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Update;\n          }\n        }\n        if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\n          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {\n            workInProgress.flags |= Snapshot;\n          }\n        }\n        workInProgress.memoizedProps = newProps;\n        workInProgress.memoizedState = newState;\n      }\n      instance.props = newProps;\n      instance.state = newState;\n      instance.context = nextContext;\n      return shouldUpdate;\n    }\n    var didWarnAboutMaps;\n    var didWarnAboutGenerators;\n    var didWarnAboutStringRefs;\n    var ownerHasKeyUseWarning;\n    var ownerHasFunctionTypeWarning;\n    var warnForMissingKey = function warnForMissingKey(child, returnFiber) {};\n    {\n      didWarnAboutMaps = false;\n      didWarnAboutGenerators = false;\n      didWarnAboutStringRefs = {};\n      ownerHasKeyUseWarning = {};\n      ownerHasFunctionTypeWarning = {};\n      warnForMissingKey = function warnForMissingKey(child, returnFiber) {\n        if (child === null || typeof child !== \"object\") {\n          return;\n        }\n        if (!child._store || child._store.validated || child.key != null) {\n          return;\n        }\n        if (typeof child._store !== \"object\") {\n          throw new Error(\"React Component in warnForMissingKey should have a _store. \" + \"This error is likely caused by a bug in React. Please file an issue.\");\n        }\n        child._store.validated = true;\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n        if (ownerHasKeyUseWarning[componentName]) {\n          return;\n        }\n        ownerHasKeyUseWarning[componentName] = true;\n        error(\"Each child in a list should have a unique \" + '\"key\" prop. See https://reactjs.org/link/warning-keys for ' + \"more information.\");\n      };\n    }\n    function coerceRef(returnFiber, current, element) {\n      var mixedRef = element.ref;\n      if (mixedRef !== null && typeof mixedRef !== \"function\" && typeof mixedRef !== \"object\") {\n        {\n          if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {\n            var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n            if (!didWarnAboutStringRefs[componentName]) {\n              {\n                error('A string ref, \"%s\", has been found within a strict mode tree. ' + \"String refs are a source of potential bugs and should be avoided. \" + \"We recommend using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", mixedRef);\n              }\n              didWarnAboutStringRefs[componentName] = true;\n            }\n          }\n        }\n        if (element._owner) {\n          var owner = element._owner;\n          var inst;\n          if (owner) {\n            var ownerFiber = owner;\n            if (ownerFiber.tag !== ClassComponent) {\n              throw new Error(\"Function components cannot have string refs. \" + \"We recommend using useRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\");\n            }\n            inst = ownerFiber.stateNode;\n          }\n          if (!inst) {\n            throw new Error(\"Missing owner for string ref \" + mixedRef + \". This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n          }\n          var resolvedInst = inst;\n          {\n            checkPropStringCoercion(mixedRef, \"ref\");\n          }\n          var stringRef = \"\" + mixedRef;\n          if (current !== null && current.ref !== null && typeof current.ref === \"function\" && current.ref._stringRef === stringRef) {\n            return current.ref;\n          }\n          var ref = function ref(value) {\n            var refs = resolvedInst.refs;\n            if (refs === emptyRefsObject) {\n              refs = resolvedInst.refs = {};\n            }\n            if (value === null) {\n              delete refs[stringRef];\n            } else {\n              refs[stringRef] = value;\n            }\n          };\n          ref._stringRef = stringRef;\n          return ref;\n        } else {\n          if (typeof mixedRef !== \"string\") {\n            throw new Error(\"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\");\n          }\n          if (!element._owner) {\n            throw new Error(\"Element ref was specified as a string (\" + mixedRef + \") but no owner was set. This could happen for one of\" + \" the following reasons:\\n\" + \"1. You may be adding a ref to a function component\\n\" + \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" + \"3. You have multiple copies of React loaded\\n\" + \"See https://reactjs.org/link/refs-must-have-owner for more information.\");\n          }\n        }\n      }\n      return mixedRef;\n    }\n    function throwOnInvalidObjectType(returnFiber, newChild) {\n      var childString = Object.prototype.toString.call(newChild);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childString === \"[object Object]\" ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\" : childString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n    }\n    function warnOnFunctionType(returnFiber) {\n      {\n        var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\n        if (ownerHasFunctionTypeWarning[componentName]) {\n          return;\n        }\n        ownerHasFunctionTypeWarning[componentName] = true;\n        error(\"Functions are not valid as a React child. This may happen if \" + \"you return a Component instead of <Component /> from render. \" + \"Or maybe you meant to call this function rather than return it.\");\n      }\n    }\n    function resolveLazy(lazyType) {\n      var payload = lazyType._payload;\n      var init = lazyType._init;\n      return init(payload);\n    }\n    function ChildReconciler(shouldTrackSideEffects) {\n      function deleteChild(returnFiber, childToDelete) {\n        if (!shouldTrackSideEffects) {\n          return;\n        }\n        var deletions = returnFiber.deletions;\n        if (deletions === null) {\n          returnFiber.deletions = [childToDelete];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(childToDelete);\n        }\n      }\n      function deleteRemainingChildren(returnFiber, currentFirstChild) {\n        if (!shouldTrackSideEffects) {\n          return null;\n        }\n        var childToDelete = currentFirstChild;\n        while (childToDelete !== null) {\n          deleteChild(returnFiber, childToDelete);\n          childToDelete = childToDelete.sibling;\n        }\n        return null;\n      }\n      function mapRemainingChildren(returnFiber, currentFirstChild) {\n        var existingChildren = new Map();\n        var existingChild = currentFirstChild;\n        while (existingChild !== null) {\n          if (existingChild.key !== null) {\n            existingChildren.set(existingChild.key, existingChild);\n          } else {\n            existingChildren.set(existingChild.index, existingChild);\n          }\n          existingChild = existingChild.sibling;\n        }\n        return existingChildren;\n      }\n      function useFiber(fiber, pendingProps) {\n        var clone = createWorkInProgress(fiber, pendingProps);\n        clone.index = 0;\n        clone.sibling = null;\n        return clone;\n      }\n      function placeChild(newFiber, lastPlacedIndex, newIndex) {\n        newFiber.index = newIndex;\n        if (!shouldTrackSideEffects) {\n          newFiber.flags |= Forked;\n          return lastPlacedIndex;\n        }\n        var current = newFiber.alternate;\n        if (current !== null) {\n          var oldIndex = current.index;\n          if (oldIndex < lastPlacedIndex) {\n            newFiber.flags |= Placement;\n            return lastPlacedIndex;\n          } else {\n            return oldIndex;\n          }\n        } else {\n          newFiber.flags |= Placement;\n          return lastPlacedIndex;\n        }\n      }\n      function placeSingleChild(newFiber) {\n        if (shouldTrackSideEffects && newFiber.alternate === null) {\n          newFiber.flags |= Placement;\n        }\n        return newFiber;\n      }\n      function updateTextNode(returnFiber, current, textContent, lanes) {\n        if (current === null || current.tag !== HostText) {\n          var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function updateElement(returnFiber, current, element, lanes) {\n        var elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          return updateFragment(returnFiber, current, element.props.children, lanes, element.key);\n        }\n        if (current !== null) {\n          if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {\n            var existing = useFiber(current, element.props);\n            existing.ref = coerceRef(returnFiber, current, element);\n            existing.return = returnFiber;\n            {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n        var created = createFiberFromElement(element, returnFiber.mode, lanes);\n        created.ref = coerceRef(returnFiber, current, element);\n        created.return = returnFiber;\n        return created;\n      }\n      function updatePortal(returnFiber, current, portal, lanes) {\n        if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {\n          var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function updateFragment(returnFiber, current, fragment, lanes, key) {\n        if (current === null || current.tag !== Fragment) {\n          var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var existing = useFiber(current, fragment);\n          existing.return = returnFiber;\n          return existing;\n        }\n      }\n      function createChild(returnFiber, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\n          created.return = returnFiber;\n          return created;\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);\n                _created.ref = coerceRef(returnFiber, null, newChild);\n                _created.return = returnFiber;\n                return _created;\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);\n                _created2.return = returnFiber;\n                return _created2;\n              }\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return createChild(returnFiber, init(payload), lanes);\n              }\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);\n            _created3.return = returnFiber;\n            return _created3;\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function updateSlot(returnFiber, oldFiber, newChild, lanes) {\n        var key = oldFiber !== null ? oldFiber.key : null;\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          if (key !== null) {\n            return null;\n          }\n          return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updateElement(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                if (newChild.key === key) {\n                  return updatePortal(returnFiber, oldFiber, newChild, lanes);\n                } else {\n                  return null;\n                }\n              }\n            case REACT_LAZY_TYPE:\n              {\n                var payload = newChild._payload;\n                var init = newChild._init;\n                return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n              }\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            if (key !== null) {\n              return null;\n            }\n            return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          var matchedFiber = existingChildren.get(newIdx) || null;\n          return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              {\n                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n                return updateElement(returnFiber, _matchedFiber, newChild, lanes);\n              }\n            case REACT_PORTAL_TYPE:\n              {\n                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;\n                return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\n              }\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);\n          }\n          if (isArray(newChild) || getIteratorFn(newChild)) {\n            var _matchedFiber3 = existingChildren.get(newIdx) || null;\n            return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return null;\n      }\n      function warnOnInvalidKey(child, knownKeys, returnFiber) {\n        {\n          if (typeof child !== \"object\" || child === null) {\n            return knownKeys;\n          }\n          switch (child.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n            case REACT_PORTAL_TYPE:\n              warnForMissingKey(child, returnFiber);\n              var key = child.key;\n              if (typeof key !== \"string\") {\n                break;\n              }\n              if (knownKeys === null) {\n                knownKeys = new Set();\n                knownKeys.add(key);\n                break;\n              }\n              if (!knownKeys.has(key)) {\n                knownKeys.add(key);\n                break;\n              }\n              error(\"Encountered two children with the same key, `%s`. \" + \"Keys should be unique so that components maintain their identity \" + \"across updates. Non-unique keys may cause children to be \" + \"duplicated and/or omitted — the behavior is unsupported and \" + \"could change in a future version.\", key);\n              break;\n            case REACT_LAZY_TYPE:\n              var payload = child._payload;\n              var init = child._init;\n              warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n              break;\n          }\n        }\n        return knownKeys;\n      }\n      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {\n        {\n          var knownKeys = null;\n          for (var i = 0; i < newChildren.length; i++) {\n            var child = newChildren[i];\n            knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n          }\n        }\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n            break;\n          }\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (newIdx === newChildren.length) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n        if (oldFiber === null) {\n          for (; newIdx < newChildren.length; newIdx++) {\n            var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n            if (_newFiber === null) {\n              continue;\n            }\n            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber;\n            } else {\n              previousNewFiber.sibling = _newFiber;\n            }\n            previousNewFiber = _newFiber;\n          }\n          return resultingFirstChild;\n        }\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n        for (; newIdx < newChildren.length; newIdx++) {\n          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);\n          if (_newFiber2 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber2.alternate !== null) {\n                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);\n              }\n            }\n            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber2;\n            } else {\n              previousNewFiber.sibling = _newFiber2;\n            }\n            previousNewFiber = _newFiber2;\n          }\n        }\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n        return resultingFirstChild;\n      }\n      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {\n        var iteratorFn = getIteratorFn(newChildrenIterable);\n        if (typeof iteratorFn !== \"function\") {\n          throw new Error(\"An object is not an iterable. This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n        }\n        {\n          if (typeof Symbol === \"function\" && newChildrenIterable[Symbol.toStringTag] === \"Generator\") {\n            if (!didWarnAboutGenerators) {\n              error(\"Using Generators as children is unsupported and will likely yield \" + \"unexpected results because enumerating a generator mutates it. \" + \"You may convert it to an array with `Array.from()` or the \" + \"`[...spread]` operator before rendering. Keep in mind \" + \"you might need to polyfill these features for older browsers.\");\n            }\n            didWarnAboutGenerators = true;\n          }\n          if (newChildrenIterable.entries === iteratorFn) {\n            if (!didWarnAboutMaps) {\n              error(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n            }\n            didWarnAboutMaps = true;\n          }\n          var _newChildren = iteratorFn.call(newChildrenIterable);\n          if (_newChildren) {\n            var knownKeys = null;\n            var _step = _newChildren.next();\n            for (; !_step.done; _step = _newChildren.next()) {\n              var child = _step.value;\n              knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n            }\n          }\n        }\n        var newChildren = iteratorFn.call(newChildrenIterable);\n        if (newChildren == null) {\n          throw new Error(\"An iterable object provided no iterator.\");\n        }\n        var resultingFirstChild = null;\n        var previousNewFiber = null;\n        var oldFiber = currentFirstChild;\n        var lastPlacedIndex = 0;\n        var newIdx = 0;\n        var nextOldFiber = null;\n        var step = newChildren.next();\n        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {\n          if (oldFiber.index > newIdx) {\n            nextOldFiber = oldFiber;\n            oldFiber = null;\n          } else {\n            nextOldFiber = oldFiber.sibling;\n          }\n          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n          if (newFiber === null) {\n            if (oldFiber === null) {\n              oldFiber = nextOldFiber;\n            }\n            break;\n          }\n          if (shouldTrackSideEffects) {\n            if (oldFiber && newFiber.alternate === null) {\n              deleteChild(returnFiber, oldFiber);\n            }\n          }\n          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n          if (previousNewFiber === null) {\n            resultingFirstChild = newFiber;\n          } else {\n            previousNewFiber.sibling = newFiber;\n          }\n          previousNewFiber = newFiber;\n          oldFiber = nextOldFiber;\n        }\n        if (step.done) {\n          deleteRemainingChildren(returnFiber, oldFiber);\n          return resultingFirstChild;\n        }\n        if (oldFiber === null) {\n          for (; !step.done; newIdx++, step = newChildren.next()) {\n            var _newFiber3 = createChild(returnFiber, step.value, lanes);\n            if (_newFiber3 === null) {\n              continue;\n            }\n            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber3;\n            } else {\n              previousNewFiber.sibling = _newFiber3;\n            }\n            previousNewFiber = _newFiber3;\n          }\n          return resultingFirstChild;\n        }\n        var existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n        for (; !step.done; newIdx++, step = newChildren.next()) {\n          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);\n          if (_newFiber4 !== null) {\n            if (shouldTrackSideEffects) {\n              if (_newFiber4.alternate !== null) {\n                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);\n              }\n            }\n            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\n            if (previousNewFiber === null) {\n              resultingFirstChild = _newFiber4;\n            } else {\n              previousNewFiber.sibling = _newFiber4;\n            }\n            previousNewFiber = _newFiber4;\n          }\n        }\n        if (shouldTrackSideEffects) {\n          existingChildren.forEach(function (child) {\n            return deleteChild(returnFiber, child);\n          });\n        }\n        return resultingFirstChild;\n      }\n      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {\n        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n          var existing = useFiber(currentFirstChild, textContent);\n          existing.return = returnFiber;\n          return existing;\n        }\n        deleteRemainingChildren(returnFiber, currentFirstChild);\n        var created = createFiberFromText(textContent, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n      function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {\n        var key = element.key;\n        var child = currentFirstChild;\n        while (child !== null) {\n          if (child.key === key) {\n            var elementType = element.type;\n            if (elementType === REACT_FRAGMENT_TYPE) {\n              if (child.tag === Fragment) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                var existing = useFiber(child, element.props.children);\n                existing.return = returnFiber;\n                {\n                  existing._debugSource = element._source;\n                  existing._debugOwner = element._owner;\n                }\n                return existing;\n              }\n            } else {\n              if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || typeof elementType === \"object\" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {\n                deleteRemainingChildren(returnFiber, child.sibling);\n                var _existing = useFiber(child, element.props);\n                _existing.ref = coerceRef(returnFiber, child, element);\n                _existing.return = returnFiber;\n                {\n                  _existing._debugSource = element._source;\n                  _existing._debugOwner = element._owner;\n                }\n                return _existing;\n              }\n            }\n            deleteRemainingChildren(returnFiber, child);\n            break;\n          } else {\n            deleteChild(returnFiber, child);\n          }\n          child = child.sibling;\n        }\n        if (element.type === REACT_FRAGMENT_TYPE) {\n          var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);\n          created.return = returnFiber;\n          return created;\n        } else {\n          var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\n          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\n          _created4.return = returnFiber;\n          return _created4;\n        }\n      }\n      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {\n        var key = portal.key;\n        var child = currentFirstChild;\n        while (child !== null) {\n          if (child.key === key) {\n            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {\n              deleteRemainingChildren(returnFiber, child.sibling);\n              var existing = useFiber(child, portal.children || []);\n              existing.return = returnFiber;\n              return existing;\n            } else {\n              deleteRemainingChildren(returnFiber, child);\n              break;\n            }\n          } else {\n            deleteChild(returnFiber, child);\n          }\n          child = child.sibling;\n        }\n        var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n        created.return = returnFiber;\n        return created;\n      }\n      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {\n        var isUnkeyedTopLevelFragment = typeof newChild === \"object\" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;\n        if (isUnkeyedTopLevelFragment) {\n          newChild = newChild.props.children;\n        }\n        if (typeof newChild === \"object\" && newChild !== null) {\n          switch (newChild.$$typeof) {\n            case REACT_ELEMENT_TYPE:\n              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));\n            case REACT_PORTAL_TYPE:\n              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));\n            case REACT_LAZY_TYPE:\n              var payload = newChild._payload;\n              var init = newChild._init;\n              return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);\n          }\n          if (isArray(newChild)) {\n            return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);\n          }\n          if (getIteratorFn(newChild)) {\n            return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);\n          }\n          throwOnInvalidObjectType(returnFiber, newChild);\n        }\n        if (typeof newChild === \"string\" && newChild !== \"\" || typeof newChild === \"number\") {\n          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, \"\" + newChild, lanes));\n        }\n        {\n          if (typeof newChild === \"function\") {\n            warnOnFunctionType(returnFiber);\n          }\n        }\n        return deleteRemainingChildren(returnFiber, currentFirstChild);\n      }\n      return reconcileChildFibers;\n    }\n    var reconcileChildFibers = ChildReconciler(true);\n    var mountChildFibers = ChildReconciler(false);\n    function cloneChildFibers(current, workInProgress) {\n      if (current !== null && workInProgress.child !== current.child) {\n        throw new Error(\"Resuming work not yet implemented.\");\n      }\n      if (workInProgress.child === null) {\n        return;\n      }\n      var currentChild = workInProgress.child;\n      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n      workInProgress.child = newChild;\n      newChild.return = workInProgress;\n      while (currentChild.sibling !== null) {\n        currentChild = currentChild.sibling;\n        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);\n        newChild.return = workInProgress;\n      }\n      newChild.sibling = null;\n    }\n    function resetChildFibers(workInProgress, lanes) {\n      var child = workInProgress.child;\n      while (child !== null) {\n        resetWorkInProgress(child, lanes);\n        child = child.sibling;\n      }\n    }\n    var NO_CONTEXT = {};\n    var contextStackCursor$1 = createCursor(NO_CONTEXT);\n    var contextFiberStackCursor = createCursor(NO_CONTEXT);\n    var rootInstanceStackCursor = createCursor(NO_CONTEXT);\n    function requiredContext(c) {\n      if (c === NO_CONTEXT) {\n        throw new Error(\"Expected host context to exist. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n      }\n      return c;\n    }\n    function getRootHostContainer() {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      return rootInstance;\n    }\n    function pushHostContainer(fiber, nextRootInstance) {\n      push(rootInstanceStackCursor, nextRootInstance, fiber);\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, NO_CONTEXT, fiber);\n      var nextRootContext = getRootHostContext();\n      pop(contextStackCursor$1, fiber);\n      push(contextStackCursor$1, nextRootContext, fiber);\n    }\n    function popHostContainer(fiber) {\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n      pop(rootInstanceStackCursor, fiber);\n    }\n    function getHostContext() {\n      var context = requiredContext(contextStackCursor$1.current);\n      return context;\n    }\n    function pushHostContext(fiber) {\n      var rootInstance = requiredContext(rootInstanceStackCursor.current);\n      var context = requiredContext(contextStackCursor$1.current);\n      var nextContext = getChildHostContext(context, fiber.type);\n      if (context === nextContext) {\n        return;\n      }\n      push(contextFiberStackCursor, fiber, fiber);\n      push(contextStackCursor$1, nextContext, fiber);\n    }\n    function popHostContext(fiber) {\n      if (contextFiberStackCursor.current !== fiber) {\n        return;\n      }\n      pop(contextStackCursor$1, fiber);\n      pop(contextFiberStackCursor, fiber);\n    }\n    var DefaultSuspenseContext = 0;\n    var SubtreeSuspenseContextMask = 1;\n    var InvisibleParentSuspenseContext = 1;\n    var ForceSuspenseFallback = 2;\n    var suspenseStackCursor = createCursor(DefaultSuspenseContext);\n    function hasSuspenseContext(parentContext, flag) {\n      return (parentContext & flag) !== 0;\n    }\n    function setDefaultShallowSuspenseContext(parentContext) {\n      return parentContext & SubtreeSuspenseContextMask;\n    }\n    function setShallowSuspenseContext(parentContext, shallowContext) {\n      return parentContext & SubtreeSuspenseContextMask | shallowContext;\n    }\n    function addSubtreeSuspenseContext(parentContext, subtreeContext) {\n      return parentContext | subtreeContext;\n    }\n    function pushSuspenseContext(fiber, newContext) {\n      push(suspenseStackCursor, newContext, fiber);\n    }\n    function popSuspenseContext(fiber) {\n      pop(suspenseStackCursor, fiber);\n    }\n    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\n      var nextState = workInProgress.memoizedState;\n      if (nextState !== null) {\n        if (nextState.dehydrated !== null) {\n          return true;\n        }\n        return false;\n      }\n      var props = workInProgress.memoizedProps;\n      {\n        return true;\n      }\n    }\n    function findFirstSuspended(row) {\n      var node = row;\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n          if (state !== null) {\n            var dehydrated = state.dehydrated;\n            if (dehydrated === null || isSuspenseInstancePending() || isSuspenseInstanceFallback()) {\n              return node;\n            }\n          }\n        } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== undefined) {\n          var didSuspend = (node.flags & DidCapture) !== NoFlags;\n          if (didSuspend) {\n            return node;\n          }\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n        if (node === row) {\n          return null;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === row) {\n            return null;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n      return null;\n    }\n    var NoFlags$1 = 0;\n    var HasEffect = 1;\n    var Insertion = 2;\n    var Layout = 4;\n    var Passive$1 = 8;\n    var workInProgressSources = [];\n    function resetWorkInProgressVersions() {\n      for (var i = 0; i < workInProgressSources.length; i++) {\n        var mutableSource = workInProgressSources[i];\n        {\n          mutableSource._workInProgressVersionPrimary = null;\n        }\n      }\n      workInProgressSources.length = 0;\n    }\n    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\n    var didWarnAboutMismatchedHooksForComponent;\n    var didWarnUncachedGetSnapshot;\n    {\n      didWarnAboutMismatchedHooksForComponent = new Set();\n    }\n    var renderLanes = NoLanes;\n    var currentlyRenderingFiber$1 = null;\n    var currentHook = null;\n    var workInProgressHook = null;\n    var didScheduleRenderPhaseUpdate = false;\n    var didScheduleRenderPhaseUpdateDuringThisPass = false;\n    var globalClientIdCounter = 0;\n    var RE_RENDER_LIMIT = 25;\n    var currentHookNameInDev = null;\n    var hookTypesDev = null;\n    var hookTypesUpdateIndexDev = -1;\n    var ignorePreviousDependencies = false;\n    function mountHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n        if (hookTypesDev === null) {\n          hookTypesDev = [hookName];\n        } else {\n          hookTypesDev.push(hookName);\n        }\n      }\n    }\n    function updateHookTypesDev() {\n      {\n        var hookName = currentHookNameInDev;\n        if (hookTypesDev !== null) {\n          hookTypesUpdateIndexDev++;\n          if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n            warnOnHookMismatchInDev(hookName);\n          }\n        }\n      }\n    }\n    function checkDepsAreArrayDev(deps) {\n      {\n        if (deps !== undefined && deps !== null && !isArray(deps)) {\n          error(\"%s received a final argument that is not an array (instead, received `%s`). When \" + \"specified, the final argument must be an array.\", currentHookNameInDev, typeof deps);\n        }\n      }\n    }\n    function warnOnHookMismatchInDev(currentHookName) {\n      {\n        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\n        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n          didWarnAboutMismatchedHooksForComponent.add(componentName);\n          if (hookTypesDev !== null) {\n            var table = \"\";\n            var secondColumnStart = 30;\n            for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\n              var oldHookName = hookTypesDev[i];\n              var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\n              var row = i + 1 + \". \" + oldHookName;\n              while (row.length < secondColumnStart) {\n                row += \" \";\n              }\n              row += newHookName + \"\\n\";\n              table += row;\n            }\n            error(\"React has detected a change in the order of Hooks called by %s. \" + \"This will lead to bugs and errors if not fixed. \" + \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" + \"   Previous render            Next render\\n\" + \"   ------------------------------------------------------\\n\" + \"%s\" + \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\", componentName, table);\n          }\n        }\n      }\n    }\n    function throwInvalidHookError() {\n      throw new Error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n    }\n    function areHookInputsEqual(nextDeps, prevDeps) {\n      {\n        if (ignorePreviousDependencies) {\n          return false;\n        }\n      }\n      if (prevDeps === null) {\n        {\n          error(\"%s received a final argument during this render, but not during \" + \"the previous render. Even though the final argument is optional, \" + \"its type cannot change between renders.\", currentHookNameInDev);\n        }\n        return false;\n      }\n      {\n        if (nextDeps.length !== prevDeps.length) {\n          error(\"The final argument passed to %s changed size between renders. The \" + \"order and size of this array must remain constant.\\n\\n\" + \"Previous: %s\\n\" + \"Incoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \") + \"]\", \"[\" + nextDeps.join(\", \") + \"]\");\n        }\n      }\n      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n        if (objectIs(nextDeps[i], prevDeps[i])) {\n          continue;\n        }\n        return false;\n      }\n      return true;\n    }\n    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {\n      renderLanes = nextRenderLanes;\n      currentlyRenderingFiber$1 = workInProgress;\n      {\n        hookTypesDev = current !== null ? current._debugHookTypes : null;\n        hookTypesUpdateIndexDev = -1;\n        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;\n      }\n      workInProgress.memoizedState = null;\n      workInProgress.updateQueue = null;\n      workInProgress.lanes = NoLanes;\n      {\n        if (current !== null && current.memoizedState !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\n        } else if (hookTypesDev !== null) {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\n        } else {\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\n        }\n      }\n      var children = Component(props, secondArg);\n      if (didScheduleRenderPhaseUpdateDuringThisPass) {\n        var numberOfReRenders = 0;\n        do {\n          didScheduleRenderPhaseUpdateDuringThisPass = false;\n          if (numberOfReRenders >= RE_RENDER_LIMIT) {\n            throw new Error(\"Too many re-renders. React limits the number of renders to prevent \" + \"an infinite loop.\");\n          }\n          numberOfReRenders += 1;\n          {\n            ignorePreviousDependencies = false;\n          }\n          currentHook = null;\n          workInProgressHook = null;\n          workInProgress.updateQueue = null;\n          {\n            hookTypesUpdateIndexDev = -1;\n          }\n          ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\n          children = Component(props, secondArg);\n        } while (didScheduleRenderPhaseUpdateDuringThisPass);\n      }\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n      {\n        workInProgress._debugHookTypes = hookTypesDev;\n      }\n      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        currentHookNameInDev = null;\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && (current.mode & ConcurrentMode) !== NoMode) {\n          error(\"Internal React error: Expected static flag was missing. Please \" + \"notify the React team.\");\n        }\n      }\n      didScheduleRenderPhaseUpdate = false;\n      if (didRenderTooFewHooks) {\n        throw new Error(\"Rendered fewer hooks than expected. This may be caused by an accidental \" + \"early return statement.\");\n      }\n      return children;\n    }\n    function bailoutHooks(current, workInProgress, lanes) {\n      workInProgress.updateQueue = current.updateQueue;\n      {\n        workInProgress.flags &= ~(Passive | Update);\n      }\n      current.lanes = removeLanes(current.lanes, lanes);\n    }\n    function resetHooksAfterThrow() {\n      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\n      if (didScheduleRenderPhaseUpdate) {\n        var hook = currentlyRenderingFiber$1.memoizedState;\n        while (hook !== null) {\n          var queue = hook.queue;\n          if (queue !== null) {\n            queue.pending = null;\n          }\n          hook = hook.next;\n        }\n        didScheduleRenderPhaseUpdate = false;\n      }\n      renderLanes = NoLanes;\n      currentlyRenderingFiber$1 = null;\n      currentHook = null;\n      workInProgressHook = null;\n      {\n        hookTypesDev = null;\n        hookTypesUpdateIndexDev = -1;\n        currentHookNameInDev = null;\n        isUpdatingOpaqueValueInRenderPhase = false;\n      }\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n    }\n    function mountWorkInProgressHook() {\n      var hook = {\n        memoizedState: null,\n        baseState: null,\n        baseQueue: null,\n        queue: null,\n        next: null\n      };\n      if (workInProgressHook === null) {\n        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\n      } else {\n        workInProgressHook = workInProgressHook.next = hook;\n      }\n      return workInProgressHook;\n    }\n    function updateWorkInProgressHook() {\n      var nextCurrentHook;\n      if (currentHook === null) {\n        var current = currentlyRenderingFiber$1.alternate;\n        if (current !== null) {\n          nextCurrentHook = current.memoizedState;\n        } else {\n          nextCurrentHook = null;\n        }\n      } else {\n        nextCurrentHook = currentHook.next;\n      }\n      var nextWorkInProgressHook;\n      if (workInProgressHook === null) {\n        nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\n      } else {\n        nextWorkInProgressHook = workInProgressHook.next;\n      }\n      if (nextWorkInProgressHook !== null) {\n        workInProgressHook = nextWorkInProgressHook;\n        nextWorkInProgressHook = workInProgressHook.next;\n        currentHook = nextCurrentHook;\n      } else {\n        if (nextCurrentHook === null) {\n          throw new Error(\"Rendered more hooks than during the previous render.\");\n        }\n        currentHook = nextCurrentHook;\n        var newHook = {\n          memoizedState: currentHook.memoizedState,\n          baseState: currentHook.baseState,\n          baseQueue: currentHook.baseQueue,\n          queue: currentHook.queue,\n          next: null\n        };\n        if (workInProgressHook === null) {\n          currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\n        } else {\n          workInProgressHook = workInProgressHook.next = newHook;\n        }\n      }\n      return workInProgressHook;\n    }\n    function createFunctionComponentUpdateQueue() {\n      return {\n        lastEffect: null,\n        stores: null\n      };\n    }\n    function basicStateReducer(state, action) {\n      return typeof action === \"function\" ? action(state) : action;\n    }\n    function mountReducer(reducer, initialArg, init) {\n      var hook = mountWorkInProgressHook();\n      var initialState;\n      if (init !== undefined) {\n        initialState = init(initialArg);\n      } else {\n        initialState = initialArg;\n      }\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: reducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n    function updateReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n      queue.lastRenderedReducer = reducer;\n      var current = currentHook;\n      var baseQueue = current.baseQueue;\n      var pendingQueue = queue.pending;\n      if (pendingQueue !== null) {\n        if (baseQueue !== null) {\n          var baseFirst = baseQueue.next;\n          var pendingFirst = pendingQueue.next;\n          baseQueue.next = pendingFirst;\n          pendingQueue.next = baseFirst;\n        }\n        {\n          if (current.baseQueue !== baseQueue) {\n            error(\"Internal error: Expected work-in-progress queue to be a clone. \" + \"This is a bug in React.\");\n          }\n        }\n        current.baseQueue = baseQueue = pendingQueue;\n        queue.pending = null;\n      }\n      if (baseQueue !== null) {\n        var first = baseQueue.next;\n        var newState = current.baseState;\n        var newBaseState = null;\n        var newBaseQueueFirst = null;\n        var newBaseQueueLast = null;\n        var update = first;\n        do {\n          var updateLane = update.lane;\n          if (!isSubsetOfLanes(renderLanes, updateLane)) {\n            var clone = {\n              lane: updateLane,\n              action: update.action,\n              hasEagerState: update.hasEagerState,\n              eagerState: update.eagerState,\n              next: null\n            };\n            if (newBaseQueueLast === null) {\n              newBaseQueueFirst = newBaseQueueLast = clone;\n              newBaseState = newState;\n            } else {\n              newBaseQueueLast = newBaseQueueLast.next = clone;\n            }\n            currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);\n            markSkippedUpdateLanes(updateLane);\n          } else {\n            if (newBaseQueueLast !== null) {\n              var _clone = {\n                lane: NoLane,\n                action: update.action,\n                hasEagerState: update.hasEagerState,\n                eagerState: update.eagerState,\n                next: null\n              };\n              newBaseQueueLast = newBaseQueueLast.next = _clone;\n            }\n            if (update.hasEagerState) {\n              newState = update.eagerState;\n            } else {\n              var action = update.action;\n              newState = reducer(newState, action);\n            }\n          }\n          update = update.next;\n        } while (update !== null && update !== first);\n        if (newBaseQueueLast === null) {\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast.next = newBaseQueueFirst;\n        }\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = newState;\n        hook.baseState = newBaseState;\n        hook.baseQueue = newBaseQueueLast;\n        queue.lastRenderedState = newState;\n      }\n      var lastInterleaved = queue.interleaved;\n      if (lastInterleaved !== null) {\n        var interleaved = lastInterleaved;\n        do {\n          var interleavedLane = interleaved.lane;\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);\n          markSkippedUpdateLanes(interleavedLane);\n          interleaved = interleaved.next;\n        } while (interleaved !== lastInterleaved);\n      } else if (baseQueue === null) {\n        queue.lanes = NoLanes;\n      }\n      var dispatch = queue.dispatch;\n      return [hook.memoizedState, dispatch];\n    }\n    function rerenderReducer(reducer, initialArg, init) {\n      var hook = updateWorkInProgressHook();\n      var queue = hook.queue;\n      if (queue === null) {\n        throw new Error(\"Should have a queue. This is likely a bug in React. Please file an issue.\");\n      }\n      queue.lastRenderedReducer = reducer;\n      var dispatch = queue.dispatch;\n      var lastRenderPhaseUpdate = queue.pending;\n      var newState = hook.memoizedState;\n      if (lastRenderPhaseUpdate !== null) {\n        queue.pending = null;\n        var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n        var update = firstRenderPhaseUpdate;\n        do {\n          var action = update.action;\n          newState = reducer(newState, action);\n          update = update.next;\n        } while (update !== firstRenderPhaseUpdate);\n        if (!objectIs(newState, hook.memoizedState)) {\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = newState;\n        if (hook.baseQueue === null) {\n          hook.baseState = newState;\n        }\n        queue.lastRenderedState = newState;\n      }\n      return [newState, dispatch];\n    }\n    function mountMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n    function updateMutableSource(source, getSnapshot, subscribe) {\n      {\n        return undefined;\n      }\n    }\n    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = mountWorkInProgressHook();\n      var nextSnapshot;\n      {\n        nextSnapshot = getSnapshot();\n        {\n          if (!didWarnUncachedGetSnapshot) {\n            var cachedSnapshot = getSnapshot();\n            if (!objectIs(nextSnapshot, cachedSnapshot)) {\n              error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n              didWarnUncachedGetSnapshot = true;\n            }\n          }\n        }\n        var root = getWorkInProgressRoot();\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n      hook.memoizedState = nextSnapshot;\n      var inst = {\n        value: nextSnapshot,\n        getSnapshot: getSnapshot\n      };\n      hook.queue = inst;\n      mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n      fiber.flags |= Passive;\n      pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n      return nextSnapshot;\n    }\n    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var fiber = currentlyRenderingFiber$1;\n      var hook = updateWorkInProgressHook();\n      var nextSnapshot = getSnapshot();\n      {\n        if (!didWarnUncachedGetSnapshot) {\n          var cachedSnapshot = getSnapshot();\n          if (!objectIs(nextSnapshot, cachedSnapshot)) {\n            error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n            didWarnUncachedGetSnapshot = true;\n          }\n        }\n      }\n      var prevSnapshot = hook.memoizedState;\n      var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\n      if (snapshotChanged) {\n        hook.memoizedState = nextSnapshot;\n        markWorkInProgressReceivedUpdate();\n      }\n      var inst = hook.queue;\n      updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);\n      if (inst.getSnapshot !== getSnapshot || snapshotChanged || workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {\n        fiber.flags |= Passive;\n        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);\n        var root = getWorkInProgressRoot();\n        if (root === null) {\n          throw new Error(\"Expected a work-in-progress root. This is a bug in React. Please file an issue.\");\n        }\n        if (!includesBlockingLane(root, renderLanes)) {\n          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\n        }\n      }\n      return nextSnapshot;\n    }\n    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\n      fiber.flags |= StoreConsistency;\n      var check = {\n        getSnapshot: getSnapshot,\n        value: renderedSnapshot\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.stores = [check];\n      } else {\n        var stores = componentUpdateQueue.stores;\n        if (stores === null) {\n          componentUpdateQueue.stores = [check];\n        } else {\n          stores.push(check);\n        }\n      }\n    }\n    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\n      inst.value = nextSnapshot;\n      inst.getSnapshot = getSnapshot;\n      if (checkIfSnapshotChanged(inst)) {\n        forceStoreRerender(fiber);\n      }\n    }\n    function subscribeToStore(fiber, inst, subscribe) {\n      var handleStoreChange = function handleStoreChange() {\n        if (checkIfSnapshotChanged(inst)) {\n          forceStoreRerender(fiber);\n        }\n      };\n      return subscribe(handleStoreChange);\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      var prevValue = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(prevValue, nextValue);\n      } catch (error) {\n        return true;\n      }\n    }\n    function forceStoreRerender(fiber) {\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n      }\n    }\n    function mountState(initialState) {\n      var hook = mountWorkInProgressHook();\n      if (typeof initialState === \"function\") {\n        initialState = initialState();\n      }\n      hook.memoizedState = hook.baseState = initialState;\n      var queue = {\n        pending: null,\n        interleaved: null,\n        lanes: NoLanes,\n        dispatch: null,\n        lastRenderedReducer: basicStateReducer,\n        lastRenderedState: initialState\n      };\n      hook.queue = queue;\n      var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);\n      return [hook.memoizedState, dispatch];\n    }\n    function updateState(initialState) {\n      return updateReducer(basicStateReducer);\n    }\n    function rerenderState(initialState) {\n      return rerenderReducer(basicStateReducer);\n    }\n    function pushEffect(tag, create, destroy, deps) {\n      var effect = {\n        tag: tag,\n        create: create,\n        destroy: destroy,\n        deps: deps,\n        next: null\n      };\n      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\n      if (componentUpdateQueue === null) {\n        componentUpdateQueue = createFunctionComponentUpdateQueue();\n        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\n        componentUpdateQueue.lastEffect = effect.next = effect;\n      } else {\n        var lastEffect = componentUpdateQueue.lastEffect;\n        if (lastEffect === null) {\n          componentUpdateQueue.lastEffect = effect.next = effect;\n        } else {\n          var firstEffect = lastEffect.next;\n          lastEffect.next = effect;\n          effect.next = firstEffect;\n          componentUpdateQueue.lastEffect = effect;\n        }\n      }\n      return effect;\n    }\n    function mountRef(initialValue) {\n      var hook = mountWorkInProgressHook();\n      {\n        var _ref2 = {\n          current: initialValue\n        };\n        hook.memoizedState = _ref2;\n        return _ref2;\n      }\n    }\n    function updateRef(initialValue) {\n      var hook = updateWorkInProgressHook();\n      return hook.memoizedState;\n    }\n    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);\n    }\n    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var destroy = undefined;\n      if (currentHook !== null) {\n        var prevEffect = currentHook.memoizedState;\n        destroy = prevEffect.destroy;\n        if (nextDeps !== null) {\n          var prevDeps = prevEffect.deps;\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n            return;\n          }\n        }\n      }\n      currentlyRenderingFiber$1.flags |= fiberFlags;\n      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);\n    }\n    function mountEffect(create, deps) {\n      {\n        return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\n      }\n    }\n    function updateEffect(create, deps) {\n      return updateEffectImpl(Passive, Passive$1, create, deps);\n    }\n    function mountInsertionEffect(create, deps) {\n      return mountEffectImpl(Update, Insertion, create, deps);\n    }\n    function updateInsertionEffect(create, deps) {\n      return updateEffectImpl(Update, Insertion, create, deps);\n    }\n    function mountLayoutEffect(create, deps) {\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, create, deps);\n    }\n    function updateLayoutEffect(create, deps) {\n      return updateEffectImpl(Update, Layout, create, deps);\n    }\n    function imperativeHandleEffect(create, ref) {\n      if (typeof ref === \"function\") {\n        var refCallback = ref;\n        var _inst = create();\n        refCallback(_inst);\n        return function () {\n          refCallback(null);\n        };\n      } else if (ref !== null && ref !== undefined) {\n        var refObject = ref;\n        {\n          if (!refObject.hasOwnProperty(\"current\")) {\n            error(\"Expected useImperativeHandle() first argument to either be a \" + \"ref callback or React.createRef() object. Instead received: %s.\", \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\");\n          }\n        }\n        var _inst2 = create();\n        refObject.current = _inst2;\n        return function () {\n          refObject.current = null;\n        };\n      }\n    }\n    function mountImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      var fiberFlags = Update;\n      return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n    function updateImperativeHandle(ref, create, deps) {\n      {\n        if (typeof create !== \"function\") {\n          error(\"Expected useImperativeHandle() second argument to be a function \" + \"that creates a handle. Instead received: %s.\", create !== null ? typeof create : \"null\");\n        }\n      }\n      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n      return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);\n    }\n    function mountDebugValue(value, formatterFn) {}\n    var updateDebugValue = mountDebugValue;\n    function mountCallback(callback, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n    function updateCallback(callback, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n      hook.memoizedState = [callback, nextDeps];\n      return callback;\n    }\n    function mountMemo(nextCreate, deps) {\n      var hook = mountWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n    function updateMemo(nextCreate, deps) {\n      var hook = updateWorkInProgressHook();\n      var nextDeps = deps === undefined ? null : deps;\n      var prevState = hook.memoizedState;\n      if (prevState !== null) {\n        if (nextDeps !== null) {\n          var prevDeps = prevState[1];\n          if (areHookInputsEqual(nextDeps, prevDeps)) {\n            return prevState[0];\n          }\n        }\n      }\n      var nextValue = nextCreate();\n      hook.memoizedState = [nextValue, nextDeps];\n      return nextValue;\n    }\n    function mountDeferredValue(value) {\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = value;\n      return value;\n    }\n    function updateDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n      var resolvedCurrentHook = currentHook;\n      var prevValue = resolvedCurrentHook.memoizedState;\n      return updateDeferredValueImpl(hook, prevValue, value);\n    }\n    function rerenderDeferredValue(value) {\n      var hook = updateWorkInProgressHook();\n      if (currentHook === null) {\n        hook.memoizedState = value;\n        return value;\n      } else {\n        var prevValue = currentHook.memoizedState;\n        return updateDeferredValueImpl(hook, prevValue, value);\n      }\n    }\n    function updateDeferredValueImpl(hook, prevValue, value) {\n      var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\n      if (shouldDeferValue) {\n        if (!objectIs(value, prevValue)) {\n          var deferredLane = claimNextTransitionLane();\n          currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);\n          markSkippedUpdateLanes(deferredLane);\n          hook.baseState = true;\n        }\n        return prevValue;\n      } else {\n        if (hook.baseState) {\n          hook.baseState = false;\n          markWorkInProgressReceivedUpdate();\n        }\n        hook.memoizedState = value;\n        return value;\n      }\n    }\n    function startTransition(setPending, callback, options) {\n      var previousPriority = getCurrentUpdatePriority();\n      setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));\n      setPending(true);\n      var prevTransition = ReactCurrentBatchConfig$1.transition;\n      ReactCurrentBatchConfig$1.transition = {};\n      var currentTransition = ReactCurrentBatchConfig$1.transition;\n      {\n        ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\n      }\n      try {\n        setPending(false);\n        callback();\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$1.transition = prevTransition;\n        {\n          if (prevTransition === null && currentTransition._updatedFibers) {\n            var updatedFibersCount = currentTransition._updatedFibers.size;\n            if (updatedFibersCount > 10) {\n              warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n            }\n            currentTransition._updatedFibers.clear();\n          }\n        }\n      }\n    }\n    function mountTransition() {\n      var _mountState = mountState(false),\n        isPending = _mountState[0],\n        setPending = _mountState[1];\n      var start = startTransition.bind(null, setPending);\n      var hook = mountWorkInProgressHook();\n      hook.memoizedState = start;\n      return [isPending, start];\n    }\n    function updateTransition() {\n      var _updateState = updateState(),\n        isPending = _updateState[0];\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n    function rerenderTransition() {\n      var _rerenderState = rerenderState(),\n        isPending = _rerenderState[0];\n      var hook = updateWorkInProgressHook();\n      var start = hook.memoizedState;\n      return [isPending, start];\n    }\n    var isUpdatingOpaqueValueInRenderPhase = false;\n    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\n      {\n        return isUpdatingOpaqueValueInRenderPhase;\n      }\n    }\n    function mountId() {\n      var hook = mountWorkInProgressHook();\n      var root = getWorkInProgressRoot();\n      var identifierPrefix = root.identifierPrefix;\n      var id;\n      {\n        var globalClientId = globalClientIdCounter++;\n        id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\n      }\n      hook.memoizedState = id;\n      return id;\n    }\n    function updateId() {\n      var hook = updateWorkInProgressHook();\n      var id = hook.memoizedState;\n      return id;\n    }\n    function dispatchReducerAction(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n        if (root !== null) {\n          var eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n    function dispatchSetState(fiber, queue, action) {\n      {\n        if (typeof arguments[3] === \"function\") {\n          error(\"State updates from the useState() and useReducer() Hooks don't support the \" + \"second callback argument. To execute a side effect after \" + \"rendering, declare it in the component body with useEffect().\");\n        }\n      }\n      var lane = requestUpdateLane(fiber);\n      var update = {\n        lane: lane,\n        action: action,\n        hasEagerState: false,\n        eagerState: null,\n        next: null\n      };\n      if (isRenderPhaseUpdate(fiber)) {\n        enqueueRenderPhaseUpdate(queue, update);\n      } else {\n        var alternate = fiber.alternate;\n        if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {\n          var lastRenderedReducer = queue.lastRenderedReducer;\n          if (lastRenderedReducer !== null) {\n            var prevDispatcher;\n            {\n              prevDispatcher = ReactCurrentDispatcher$1.current;\n              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n            }\n            try {\n              var currentState = queue.lastRenderedState;\n              var eagerState = lastRenderedReducer(currentState, action);\n              update.hasEagerState = true;\n              update.eagerState = eagerState;\n              if (objectIs(eagerState, currentState)) {\n                enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);\n                return;\n              }\n            } catch (error) {} finally {\n              {\n                ReactCurrentDispatcher$1.current = prevDispatcher;\n              }\n            }\n          }\n        }\n        var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\n        if (root !== null) {\n          var eventTime = requestEventTime();\n          scheduleUpdateOnFiber(root, fiber, lane, eventTime);\n          entangleTransitionUpdate(root, queue, lane);\n        }\n      }\n    }\n    function isRenderPhaseUpdate(fiber) {\n      var alternate = fiber.alternate;\n      return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;\n    }\n    function enqueueRenderPhaseUpdate(queue, update) {\n      didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n      var pending = queue.pending;\n      if (pending === null) {\n        update.next = update;\n      } else {\n        update.next = pending.next;\n        pending.next = update;\n      }\n      queue.pending = update;\n    }\n    function entangleTransitionUpdate(root, queue, lane) {\n      if (isTransitionLane(lane)) {\n        var queueLanes = queue.lanes;\n        queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n        var newQueueLanes = mergeLanes(queueLanes, lane);\n        queue.lanes = newQueueLanes;\n        markRootEntangled(root, newQueueLanes);\n      }\n    }\n    var ContextOnlyDispatcher = {\n      readContext: _readContext,\n      useCallback: throwInvalidHookError,\n      useContext: throwInvalidHookError,\n      useEffect: throwInvalidHookError,\n      useImperativeHandle: throwInvalidHookError,\n      useInsertionEffect: throwInvalidHookError,\n      useLayoutEffect: throwInvalidHookError,\n      useMemo: throwInvalidHookError,\n      useReducer: throwInvalidHookError,\n      useRef: throwInvalidHookError,\n      useState: throwInvalidHookError,\n      useDebugValue: throwInvalidHookError,\n      useDeferredValue: throwInvalidHookError,\n      useTransition: throwInvalidHookError,\n      useMutableSource: throwInvalidHookError,\n      useSyncExternalStore: throwInvalidHookError,\n      useId: throwInvalidHookError,\n      unstable_isNewReconciler: enableNewReconciler\n    };\n    var HooksDispatcherOnMountInDEV = null;\n    var HooksDispatcherOnMountWithHookTypesInDEV = null;\n    var HooksDispatcherOnUpdateInDEV = null;\n    var HooksDispatcherOnRerenderInDEV = null;\n    var InvalidNestedHooksDispatcherOnMountInDEV = null;\n    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;\n    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;\n    {\n      var warnInvalidContextAccess = function warnInvalidContextAccess() {\n        error(\"Context can only be read while React is rendering. \" + \"In classes, you can read it in the render method or getDerivedStateFromProps. \" + \"In function components, you can read it directly in the function body, but not \" + \"inside Hooks like useReducer() or useMemo().\");\n      };\n      var warnInvalidHookAccess = function warnInvalidHookAccess() {\n        error(\"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" + \"You can only call Hooks at the top level of your React function. \" + \"For more information, see \" + \"https://reactjs.org/link/rules-of-hooks\");\n      };\n      HooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          mountHookTypesDev();\n          checkDepsAreArrayDev(deps);\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnMountWithHookTypesInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      HooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnMountInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountRef(initialValue);\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\n          try {\n            return mountState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          mountHookTypesDev();\n          return mountId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnUpdateInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n      InvalidNestedHooksDispatcherOnRerenderInDEV = {\n        readContext: function readContext(context) {\n          warnInvalidContextAccess();\n          return _readContext(context);\n        },\n        useCallback: function useCallback(callback, deps) {\n          currentHookNameInDev = \"useCallback\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateCallback(callback, deps);\n        },\n        useContext: function useContext(context) {\n          currentHookNameInDev = \"useContext\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return _readContext(context);\n        },\n        useEffect: function useEffect(create, deps) {\n          currentHookNameInDev = \"useEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateEffect(create, deps);\n        },\n        useImperativeHandle: function useImperativeHandle(ref, create, deps) {\n          currentHookNameInDev = \"useImperativeHandle\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateImperativeHandle(ref, create, deps);\n        },\n        useInsertionEffect: function useInsertionEffect(create, deps) {\n          currentHookNameInDev = \"useInsertionEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateInsertionEffect(create, deps);\n        },\n        useLayoutEffect: function useLayoutEffect(create, deps) {\n          currentHookNameInDev = \"useLayoutEffect\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateLayoutEffect(create, deps);\n        },\n        useMemo: function useMemo(create, deps) {\n          currentHookNameInDev = \"useMemo\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return updateMemo(create, deps);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useReducer: function useReducer(reducer, initialArg, init) {\n          currentHookNameInDev = \"useReducer\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return rerenderReducer(reducer, initialArg, init);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useRef: function useRef(initialValue) {\n          currentHookNameInDev = \"useRef\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateRef();\n        },\n        useState: function useState(initialState) {\n          currentHookNameInDev = \"useState\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          var prevDispatcher = ReactCurrentDispatcher$1.current;\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n          try {\n            return rerenderState(initialState);\n          } finally {\n            ReactCurrentDispatcher$1.current = prevDispatcher;\n          }\n        },\n        useDebugValue: function useDebugValue(value, formatterFn) {\n          currentHookNameInDev = \"useDebugValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateDebugValue();\n        },\n        useDeferredValue: function useDeferredValue(value) {\n          currentHookNameInDev = \"useDeferredValue\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderDeferredValue(value);\n        },\n        useTransition: function useTransition() {\n          currentHookNameInDev = \"useTransition\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return rerenderTransition();\n        },\n        useMutableSource: function useMutableSource(source, getSnapshot, subscribe) {\n          currentHookNameInDev = \"useMutableSource\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateMutableSource();\n        },\n        useSyncExternalStore: function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n          currentHookNameInDev = \"useSyncExternalStore\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateSyncExternalStore(subscribe, getSnapshot);\n        },\n        useId: function useId() {\n          currentHookNameInDev = \"useId\";\n          warnInvalidHookAccess();\n          updateHookTypesDev();\n          return updateId();\n        },\n        unstable_isNewReconciler: enableNewReconciler\n      };\n    }\n    var now$1 = Scheduler.unstable_now;\n    var commitTime = 0;\n    var layoutEffectStartTime = -1;\n    var profilerStartTime = -1;\n    var passiveEffectStartTime = -1;\n    var currentUpdateIsNested = false;\n    var nestedUpdateScheduled = false;\n    function isCurrentUpdateNested() {\n      return currentUpdateIsNested;\n    }\n    function markNestedUpdateScheduled() {\n      {\n        nestedUpdateScheduled = true;\n      }\n    }\n    function resetNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = false;\n        nestedUpdateScheduled = false;\n      }\n    }\n    function syncNestedUpdateFlag() {\n      {\n        currentUpdateIsNested = nestedUpdateScheduled;\n        nestedUpdateScheduled = false;\n      }\n    }\n    function getCommitTime() {\n      return commitTime;\n    }\n    function recordCommitTime() {\n      commitTime = now$1();\n    }\n    function startProfilerTimer(fiber) {\n      profilerStartTime = now$1();\n      if (fiber.actualStartTime < 0) {\n        fiber.actualStartTime = now$1();\n      }\n    }\n    function stopProfilerTimerIfRunning(fiber) {\n      profilerStartTime = -1;\n    }\n    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\n      if (profilerStartTime >= 0) {\n        var elapsedTime = now$1() - profilerStartTime;\n        fiber.actualDuration += elapsedTime;\n        if (overrideBaseTime) {\n          fiber.selfBaseDuration = elapsedTime;\n        }\n        profilerStartTime = -1;\n      }\n    }\n    function recordLayoutEffectDuration(fiber) {\n      if (layoutEffectStartTime >= 0) {\n        var elapsedTime = now$1() - layoutEffectStartTime;\n        layoutEffectStartTime = -1;\n        var parentFiber = fiber.return;\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n              root.effectDuration += elapsedTime;\n              return;\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n              parentStateNode.effectDuration += elapsedTime;\n              return;\n          }\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n    function recordPassiveEffectDuration(fiber) {\n      if (passiveEffectStartTime >= 0) {\n        var elapsedTime = now$1() - passiveEffectStartTime;\n        passiveEffectStartTime = -1;\n        var parentFiber = fiber.return;\n        while (parentFiber !== null) {\n          switch (parentFiber.tag) {\n            case HostRoot:\n              var root = parentFiber.stateNode;\n              if (root !== null) {\n                root.passiveEffectDuration += elapsedTime;\n              }\n              return;\n            case Profiler:\n              var parentStateNode = parentFiber.stateNode;\n              if (parentStateNode !== null) {\n                parentStateNode.passiveEffectDuration += elapsedTime;\n              }\n              return;\n          }\n          parentFiber = parentFiber.return;\n        }\n      }\n    }\n    function startLayoutEffectTimer() {\n      layoutEffectStartTime = now$1();\n    }\n    function startPassiveEffectTimer() {\n      passiveEffectStartTime = now$1();\n    }\n    function transferActualDuration(fiber) {\n      var child = fiber.child;\n      while (child) {\n        fiber.actualDuration += child.actualDuration;\n        child = child.sibling;\n      }\n    }\n    function createCapturedValueAtFiber(value, source) {\n      return {\n        value: value,\n        source: source,\n        stack: getStackByFiberInDevAndProd(source),\n        digest: null\n      };\n    }\n    function createCapturedValue(value, digest, stack) {\n      return {\n        value: value,\n        source: null,\n        stack: stack != null ? stack : null,\n        digest: digest != null ? digest : null\n      };\n    }\n    if (typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !== \"function\") {\n      throw new Error(\"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\");\n    }\n    function showErrorDialog(boundary, errorInfo) {\n      var capturedError = {\n        componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\n        error: errorInfo.value,\n        errorBoundary: boundary !== null && boundary.tag === ClassComponent ? boundary.stateNode : null\n      };\n      return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError);\n    }\n    function logCapturedError(boundary, errorInfo) {\n      try {\n        var logError = showErrorDialog(boundary, errorInfo);\n        if (logError === false) {\n          return;\n        }\n        var error = errorInfo.value;\n        if (true) {\n          var source = errorInfo.source;\n          var stack = errorInfo.stack;\n          var componentStack = stack !== null ? stack : \"\";\n          if (error != null && error._suppressLogging) {\n            if (boundary.tag === ClassComponent) {\n              return;\n            }\n            console[\"error\"](error);\n          }\n          var componentName = source ? getComponentNameFromFiber(source) : null;\n          var componentNameMessage = componentName ? \"The above error occurred in the <\" + componentName + \"> component:\" : \"The above error occurred in one of your React components:\";\n          var errorBoundaryMessage;\n          if (boundary.tag === HostRoot) {\n            errorBoundaryMessage = \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" + \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\n          } else {\n            var errorBoundaryName = getComponentNameFromFiber(boundary) || \"Anonymous\";\n            errorBoundaryMessage = \"React will try to recreate this component tree from scratch \" + (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\n          }\n          var combinedMessage = componentNameMessage + \"\\n\" + componentStack + \"\\n\\n\" + (\"\" + errorBoundaryMessage);\n          console[\"error\"](combinedMessage);\n        } else {\n          console[\"error\"](error);\n        }\n      } catch (e) {\n        setTimeout(function () {\n          throw e;\n        });\n      }\n    }\n    var PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\n    function createRootErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      update.payload = {\n        element: null\n      };\n      var error = errorInfo.value;\n      update.callback = function () {\n        onUncaughtError(error);\n        logCapturedError(fiber, errorInfo);\n      };\n      return update;\n    }\n    function createClassErrorUpdate(fiber, errorInfo, lane) {\n      var update = createUpdate(NoTimestamp, lane);\n      update.tag = CaptureUpdate;\n      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n      if (typeof getDerivedStateFromError === \"function\") {\n        var error$1 = errorInfo.value;\n        update.payload = function () {\n          return getDerivedStateFromError(error$1);\n        };\n        update.callback = function () {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n        };\n      }\n      var inst = fiber.stateNode;\n      if (inst !== null && typeof inst.componentDidCatch === \"function\") {\n        update.callback = function callback() {\n          {\n            markFailedErrorBoundaryForHotReloading(fiber);\n          }\n          logCapturedError(fiber, errorInfo);\n          if (typeof getDerivedStateFromError !== \"function\") {\n            markLegacyErrorBoundaryAsFailed(this);\n          }\n          var error$1 = errorInfo.value;\n          var stack = errorInfo.stack;\n          this.componentDidCatch(error$1, {\n            componentStack: stack !== null ? stack : \"\"\n          });\n          {\n            if (typeof getDerivedStateFromError !== \"function\") {\n              if (!includesSomeLane(fiber.lanes, SyncLane)) {\n                error(\"%s: Error boundaries should implement getDerivedStateFromError(). \" + \"In that method, return a state update to display an error message or fallback UI.\", getComponentNameFromFiber(fiber) || \"Unknown\");\n              }\n            }\n          }\n        };\n      }\n      return update;\n    }\n    function attachPingListener(root, wakeable, lanes) {\n      var pingCache = root.pingCache;\n      var threadIDs;\n      if (pingCache === null) {\n        pingCache = root.pingCache = new PossiblyWeakMap$1();\n        threadIDs = new Set();\n        pingCache.set(wakeable, threadIDs);\n      } else {\n        threadIDs = pingCache.get(wakeable);\n        if (threadIDs === undefined) {\n          threadIDs = new Set();\n          pingCache.set(wakeable, threadIDs);\n        }\n      }\n      if (!threadIDs.has(lanes)) {\n        threadIDs.add(lanes);\n        var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n        {\n          if (isDevToolsPresent) {\n            restorePendingUpdaters(root, lanes);\n          }\n        }\n        wakeable.then(ping, ping);\n      }\n    }\n    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\n      var wakeables = suspenseBoundary.updateQueue;\n      if (wakeables === null) {\n        var updateQueue = new Set();\n        updateQueue.add(wakeable);\n        suspenseBoundary.updateQueue = updateQueue;\n      } else {\n        wakeables.add(wakeable);\n      }\n    }\n    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {\n      var tag = sourceFiber.tag;\n      if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {\n        var currentSource = sourceFiber.alternate;\n        if (currentSource) {\n          sourceFiber.updateQueue = currentSource.updateQueue;\n          sourceFiber.memoizedState = currentSource.memoizedState;\n          sourceFiber.lanes = currentSource.lanes;\n        } else {\n          sourceFiber.updateQueue = null;\n          sourceFiber.memoizedState = null;\n        }\n      }\n    }\n    function getNearestSuspenseBoundaryToCapture(returnFiber) {\n      var node = returnFiber;\n      do {\n        if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\n          return node;\n        }\n        node = node.return;\n      } while (node !== null);\n      return null;\n    }\n    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {\n      if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\n        if (suspenseBoundary === returnFiber) {\n          suspenseBoundary.flags |= ShouldCapture;\n        } else {\n          suspenseBoundary.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n          if (sourceFiber.tag === ClassComponent) {\n            var currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              var update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update, SyncLane);\n            }\n          }\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n        }\n        return suspenseBoundary;\n      }\n      suspenseBoundary.flags |= ShouldCapture;\n      suspenseBoundary.lanes = rootRenderLanes;\n      return suspenseBoundary;\n    }\n    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {\n      sourceFiber.flags |= Incomplete;\n      {\n        if (isDevToolsPresent) {\n          restorePendingUpdaters(root, rootRenderLanes);\n        }\n      }\n      if (value !== null && typeof value === \"object\" && typeof value.then === \"function\") {\n        var wakeable = value;\n        resetSuspendedComponent(sourceFiber);\n        var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\n        if (suspenseBoundary !== null) {\n          suspenseBoundary.flags &= ~ForceClientRender;\n          markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes);\n          if (suspenseBoundary.mode & ConcurrentMode) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n          }\n          attachRetryListener(suspenseBoundary, root, wakeable);\n          return;\n        } else {\n          if (!includesSyncLane(rootRenderLanes)) {\n            attachPingListener(root, wakeable, rootRenderLanes);\n            renderDidSuspendDelayIfPossible();\n            return;\n          }\n          var uncaughtSuspenseError = new Error(\"A component suspended while responding to synchronous input. This \" + \"will cause the UI to be replaced with a loading indicator. To \" + \"fix, updates that suspend should be wrapped \" + \"with startTransition.\");\n          value = uncaughtSuspenseError;\n        }\n      }\n      value = createCapturedValueAtFiber(value, sourceFiber);\n      renderDidError(value);\n      var workInProgress = returnFiber;\n      do {\n        switch (workInProgress.tag) {\n          case HostRoot:\n            {\n              var _errorInfo = value;\n              workInProgress.flags |= ShouldCapture;\n              var lane = pickArbitraryLane(rootRenderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              return;\n            }\n          case ClassComponent:\n            var errorInfo = value;\n            var ctor = workInProgress.type;\n            var instance = workInProgress.stateNode;\n            if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === \"function\" || instance !== null && typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance))) {\n              workInProgress.flags |= ShouldCapture;\n              var _lane = pickArbitraryLane(rootRenderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane);\n              var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);\n              enqueueCapturedUpdate(workInProgress, _update);\n              return;\n            }\n            break;\n        }\n        workInProgress = workInProgress.return;\n      } while (workInProgress !== null);\n    }\n    function getSuspendedCache() {\n      {\n        return null;\n      }\n    }\n    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n    var didReceiveUpdate = false;\n    var didWarnAboutBadClass;\n    var didWarnAboutModulePatternComponent;\n    var didWarnAboutContextTypeOnFunctionComponent;\n    var didWarnAboutGetDerivedStateOnFunctionComponent;\n    var didWarnAboutFunctionRefs;\n    var didWarnAboutReassigningProps;\n    var didWarnAboutRevealOrder;\n    var didWarnAboutTailOptions;\n    {\n      didWarnAboutBadClass = {};\n      didWarnAboutModulePatternComponent = {};\n      didWarnAboutContextTypeOnFunctionComponent = {};\n      didWarnAboutGetDerivedStateOnFunctionComponent = {};\n      didWarnAboutFunctionRefs = {};\n      didWarnAboutReassigningProps = false;\n      didWarnAboutRevealOrder = {};\n      didWarnAboutTailOptions = {};\n    }\n    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\n      if (current === null) {\n        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);\n      }\n    }\n    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {\n      workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n    }\n    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var render = Component.render;\n      var ref = workInProgress.ref;\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);\n        setIsRendering(false);\n      }\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      if (current === null) {\n        var type = Component.type;\n        if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {\n          var resolvedType = type;\n          {\n            resolvedType = resolveFunctionForHotReloading(type);\n          }\n          workInProgress.tag = SimpleMemoComponent;\n          workInProgress.type = resolvedType;\n          {\n            validateFunctionComponentInDev(workInProgress, type);\n          }\n          return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);\n        }\n        {\n          var innerPropTypes = type.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(type));\n          }\n        }\n        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);\n        child.ref = workInProgress.ref;\n        child.return = workInProgress;\n        workInProgress.child = child;\n        return child;\n      }\n      {\n        var _type = Component.type;\n        var _innerPropTypes = _type.propTypes;\n        if (_innerPropTypes) {\n          checkPropTypes(_innerPropTypes, nextProps, \"prop\", getComponentNameFromType(_type));\n        }\n      }\n      var currentChild = current.child;\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n      if (!hasScheduledUpdateOrContext) {\n        var prevProps = currentChild.memoizedProps;\n        var compare = Component.compare;\n        compare = compare !== null ? compare : shallowEqual;\n        if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n      }\n      workInProgress.flags |= PerformedWork;\n      var newChild = createWorkInProgress(currentChild, nextProps);\n      newChild.ref = workInProgress.ref;\n      newChild.return = workInProgress;\n      workInProgress.child = newChild;\n      return newChild;\n    }\n    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var outerMemoType = workInProgress.elementType;\n          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n            var lazyComponent = outerMemoType;\n            var payload = lazyComponent._payload;\n            var init = lazyComponent._init;\n            try {\n              outerMemoType = init(payload);\n            } catch (x) {\n              outerMemoType = null;\n            }\n            var outerPropTypes = outerMemoType && outerMemoType.propTypes;\n            if (outerPropTypes) {\n              checkPropTypes(outerPropTypes, nextProps, \"prop\", getComponentNameFromType(outerMemoType));\n            }\n          }\n        }\n      }\n      if (current !== null) {\n        var prevProps = current.memoizedProps;\n        if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {\n          didReceiveUpdate = false;\n          workInProgress.pendingProps = nextProps = prevProps;\n          if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n            workInProgress.lanes = current.lanes;\n            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n          } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          }\n        }\n      }\n      return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);\n    }\n    function updateOffscreenComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      var prevState = current !== null ? current.memoizedState : null;\n      if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          var nextState = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = nextState;\n          pushRenderLanes(workInProgress, renderLanes);\n        } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\n          var spawnedCachePool = null;\n          var nextBaseLanes;\n          if (prevState !== null) {\n            var prevBaseLanes = prevState.baseLanes;\n            nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n          } else {\n            nextBaseLanes = renderLanes;\n          }\n          workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);\n          var _nextState = {\n            baseLanes: nextBaseLanes,\n            cachePool: spawnedCachePool,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState;\n          workInProgress.updateQueue = null;\n          pushRenderLanes(workInProgress, nextBaseLanes);\n          return null;\n        } else {\n          var _nextState2 = {\n            baseLanes: NoLanes,\n            cachePool: null,\n            transitions: null\n          };\n          workInProgress.memoizedState = _nextState2;\n          var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;\n          pushRenderLanes(workInProgress, subtreeRenderLanes);\n        }\n      } else {\n        var _subtreeRenderLanes;\n        if (prevState !== null) {\n          _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n          workInProgress.memoizedState = null;\n        } else {\n          _subtreeRenderLanes = renderLanes;\n        }\n        pushRenderLanes(workInProgress, _subtreeRenderLanes);\n      }\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateFragment(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateMode(current, workInProgress, renderLanes) {\n      var nextChildren = workInProgress.pendingProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateProfiler(current, workInProgress, renderLanes) {\n      {\n        workInProgress.flags |= Update;\n        {\n          var stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      var nextProps = workInProgress.pendingProps;\n      var nextChildren = nextProps.children;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function markRef(current, workInProgress) {\n      var ref = workInProgress.ref;\n      if (current === null && ref !== null || current !== null && current.ref !== ref) {\n        workInProgress.flags |= Ref;\n      }\n    }\n    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      var nextChildren;\n      prepareToReadContext(workInProgress, renderLanes);\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);\n        setIsRendering(false);\n      }\n      if (current !== null && !didReceiveUpdate) {\n        bailoutHooks(current, workInProgress, renderLanes);\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {\n      {\n        switch (shouldError(workInProgress)) {\n          case false:\n            {\n              var _instance = workInProgress.stateNode;\n              var ctor = workInProgress.type;\n              var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);\n              var state = tempInstance.state;\n              _instance.updater.enqueueSetState(_instance, state, null);\n              break;\n            }\n          case true:\n            {\n              workInProgress.flags |= DidCapture;\n              workInProgress.flags |= ShouldCapture;\n              var error$1 = new Error(\"Simulated error coming from DevTools\");\n              var lane = pickArbitraryLane(renderLanes);\n              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n              var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);\n              enqueueCapturedUpdate(workInProgress, update);\n              break;\n            }\n        }\n        if (workInProgress.type !== workInProgress.elementType) {\n          var innerPropTypes = Component.propTypes;\n          if (innerPropTypes) {\n            checkPropTypes(innerPropTypes, nextProps, \"prop\", getComponentNameFromType(Component));\n          }\n        }\n      }\n      var hasContext;\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var instance = workInProgress.stateNode;\n      var shouldUpdate;\n      if (instance === null) {\n        resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress);\n        constructClassInstance(workInProgress, Component, nextProps);\n        mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n        shouldUpdate = true;\n      } else if (current === null) {\n        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      } else {\n        shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);\n      }\n      var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);\n      {\n        var inst = workInProgress.stateNode;\n        if (shouldUpdate && inst.props !== nextProps) {\n          if (!didWarnAboutReassigningProps) {\n            error(\"It looks like %s is reassigning its own `this.props` while rendering. \" + \"This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress) || \"a component\");\n          }\n          didWarnAboutReassigningProps = true;\n        }\n      }\n      return nextUnitOfWork;\n    }\n    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {\n      markRef(current, workInProgress);\n      var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n      if (!shouldUpdate && !didCaptureError) {\n        if (hasContext) {\n          invalidateContextProvider(workInProgress, Component, false);\n        }\n        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n      }\n      var instance = workInProgress.stateNode;\n      ReactCurrentOwner$1.current = workInProgress;\n      var nextChildren;\n      if (didCaptureError && typeof Component.getDerivedStateFromError !== \"function\") {\n        nextChildren = null;\n        {\n          stopProfilerTimerIfRunning();\n        }\n      } else {\n        {\n          setIsRendering(true);\n          nextChildren = instance.render();\n          setIsRendering(false);\n        }\n      }\n      workInProgress.flags |= PerformedWork;\n      if (current !== null && didCaptureError) {\n        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      workInProgress.memoizedState = instance.state;\n      if (hasContext) {\n        invalidateContextProvider(workInProgress, Component, true);\n      }\n      return workInProgress.child;\n    }\n    function pushHostRootContext(workInProgress) {\n      var root = workInProgress.stateNode;\n      if (root.pendingContext) {\n        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);\n      } else if (root.context) {\n        pushTopLevelContextObject(workInProgress, root.context, false);\n      }\n      pushHostContainer(workInProgress, root.containerInfo);\n    }\n    function updateHostRoot(current, workInProgress, renderLanes) {\n      pushHostRootContext(workInProgress);\n      if (current === null) {\n        throw new Error(\"Should have a current fiber. This is a bug in React.\");\n      }\n      var nextProps = workInProgress.pendingProps;\n      var prevState = workInProgress.memoizedState;\n      var prevChildren = prevState.element;\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n      var nextState = workInProgress.memoizedState;\n      var root = workInProgress.stateNode;\n      var nextChildren = nextState.element;\n      {\n        if (nextChildren === prevChildren) {\n          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n        }\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      return workInProgress.child;\n    }\n    function updateHostComponent(current, workInProgress, renderLanes) {\n      pushHostContext(workInProgress);\n      var type = workInProgress.type;\n      var nextProps = workInProgress.pendingProps;\n      var prevProps = current !== null ? current.memoizedProps : null;\n      var nextChildren = nextProps.children;\n      if (prevProps !== null && shouldSetTextContent()) {\n        workInProgress.flags |= ContentReset;\n      }\n      markRef(current, workInProgress);\n      reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function updateHostText(current, workInProgress) {\n      return null;\n    }\n    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var lazyComponent = elementType;\n      var payload = lazyComponent._payload;\n      var init = lazyComponent._init;\n      var Component = init(payload);\n      workInProgress.type = Component;\n      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);\n      var resolvedProps = resolveDefaultProps(Component, props);\n      var child;\n      switch (resolvedTag) {\n        case FunctionComponent:\n          {\n            {\n              validateFunctionComponentInDev(workInProgress, Component);\n              workInProgress.type = Component = resolveFunctionForHotReloading(Component);\n            }\n            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case ClassComponent:\n          {\n            {\n              workInProgress.type = Component = resolveClassForHotReloading(Component);\n            }\n            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case ForwardRef:\n          {\n            {\n              workInProgress.type = Component = resolveForwardRefForHotReloading(Component);\n            }\n            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);\n            return child;\n          }\n        case MemoComponent:\n          {\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = Component.propTypes;\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, resolvedProps, \"prop\", getComponentNameFromType(Component));\n                }\n              }\n            }\n            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);\n            return child;\n          }\n      }\n      var hint = \"\";\n      {\n        if (Component !== null && typeof Component === \"object\" && Component.$$typeof === REACT_LAZY_TYPE) {\n          hint = \" Did you wrap a component in React.lazy() more than once?\";\n        }\n      }\n      throw new Error(\"Element type is invalid. Received a promise that resolves to: \" + Component + \". \" + (\"Lazy element type must resolve to a class or function.\" + hint));\n    }\n    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      workInProgress.tag = ClassComponent;\n      var hasContext;\n      if (isContextProvider(Component)) {\n        hasContext = true;\n        pushContextProvider(workInProgress);\n      } else {\n        hasContext = false;\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      constructClassInstance(workInProgress, Component, nextProps);\n      mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n    }\n    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {\n      resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\n      var props = workInProgress.pendingProps;\n      var context;\n      {\n        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\n        context = getMaskedContext(workInProgress, unmaskedContext);\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var value;\n      {\n        if (Component.prototype && typeof Component.prototype.render === \"function\") {\n          var componentName = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutBadClass[componentName]) {\n            error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + \"This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName);\n            didWarnAboutBadClass[componentName] = true;\n          }\n        }\n        if (workInProgress.mode & StrictLegacyMode) {\n          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n        }\n        setIsRendering(true);\n        ReactCurrentOwner$1.current = workInProgress;\n        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      {\n        if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n          var _componentName = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutModulePatternComponent[_componentName]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName, _componentName, _componentName);\n            didWarnAboutModulePatternComponent[_componentName] = true;\n          }\n        }\n      }\n      if (typeof value === \"object\" && value !== null && typeof value.render === \"function\" && value.$$typeof === undefined) {\n        {\n          var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutModulePatternComponent[_componentName2]) {\n            error(\"The <%s /> component appears to be a function component that returns a class instance. \" + \"Change %s to a class that extends React.Component instead. \" + \"If you can't use a class try assigning the prototype on the function as a workaround. \" + \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" + \"cannot be called with `new` by React.\", _componentName2, _componentName2, _componentName2);\n            didWarnAboutModulePatternComponent[_componentName2] = true;\n          }\n        }\n        workInProgress.tag = ClassComponent;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        var hasContext = false;\n        if (isContextProvider(Component)) {\n          hasContext = true;\n          pushContextProvider(workInProgress);\n        } else {\n          hasContext = false;\n        }\n        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;\n        initializeUpdateQueue(workInProgress);\n        adoptClassInstance(workInProgress, value);\n        mountClassInstance(workInProgress, Component, props, renderLanes);\n        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);\n      } else {\n        workInProgress.tag = FunctionComponent;\n        reconcileChildren(null, workInProgress, value, renderLanes);\n        {\n          validateFunctionComponentInDev(workInProgress, Component);\n        }\n        return workInProgress.child;\n      }\n    }\n    function validateFunctionComponentInDev(workInProgress, Component) {\n      {\n        if (Component) {\n          if (Component.childContextTypes) {\n            error(\"%s(...): childContextTypes cannot be defined on a function component.\", Component.displayName || Component.name || \"Component\");\n          }\n        }\n        if (workInProgress.ref !== null) {\n          var info = \"\";\n          var ownerName = getCurrentFiberOwnerNameInDevOrNull();\n          if (ownerName) {\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n          }\n          var warningKey = ownerName || \"\";\n          var debugSource = workInProgress._debugSource;\n          if (debugSource) {\n            warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\n          }\n          if (!didWarnAboutFunctionRefs[warningKey]) {\n            didWarnAboutFunctionRefs[warningKey] = true;\n            error(\"Function components cannot be given refs. \" + \"Attempts to access this ref will fail. \" + \"Did you mean to use React.forwardRef()?%s\", info);\n          }\n        }\n        if (typeof Component.getDerivedStateFromProps === \"function\") {\n          var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\n            error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3);\n            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\n          }\n        }\n        if (typeof Component.contextType === \"object\" && Component.contextType !== null) {\n          var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\n          if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\n            error(\"%s: Function components do not support contextType.\", _componentName4);\n            didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\n          }\n        }\n      }\n    }\n    var SUSPENDED_MARKER = {\n      dehydrated: null,\n      treeContext: null,\n      retryLane: NoLane\n    };\n    function mountSuspenseOffscreenState(renderLanes) {\n      return {\n        baseLanes: renderLanes,\n        cachePool: getSuspendedCache(),\n        transitions: null\n      };\n    }\n    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\n      var cachePool = null;\n      return {\n        baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n        cachePool: cachePool,\n        transitions: prevOffscreenState.transitions\n      };\n    }\n    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {\n      if (current !== null) {\n        var suspenseState = current.memoizedState;\n        if (suspenseState === null) {\n          return false;\n        }\n      }\n      return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n    }\n    function getRemainingWorkInPrimaryTree(current, renderLanes) {\n      return removeLanes(current.childLanes, renderLanes);\n    }\n    function updateSuspenseComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      {\n        if (shouldSuspend(workInProgress)) {\n          workInProgress.flags |= DidCapture;\n        }\n      }\n      var suspenseContext = suspenseStackCursor.current;\n      var showFallback = false;\n      var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n      if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\n        showFallback = true;\n        workInProgress.flags &= ~DidCapture;\n      } else {\n        if (current === null || current.memoizedState !== null) {\n          {\n            suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);\n          }\n        }\n      }\n      suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      pushSuspenseContext(workInProgress, suspenseContext);\n      if (current === null) {\n        var suspenseState = workInProgress.memoizedState;\n        if (suspenseState !== null) {\n          var dehydrated = suspenseState.dehydrated;\n          if (dehydrated !== null) {\n            return mountDehydratedSuspenseComponent(workInProgress);\n          }\n        }\n        var nextPrimaryChildren = nextProps.children;\n        var nextFallbackChildren = nextProps.fallback;\n        if (showFallback) {\n          var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var primaryChildFragment = workInProgress.child;\n          primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackFragment;\n        } else {\n          return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\n        }\n      } else {\n        var prevState = current.memoizedState;\n        if (prevState !== null) {\n          var _dehydrated = prevState.dehydrated;\n          if (_dehydrated !== null) {\n            return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);\n          }\n        }\n        if (showFallback) {\n          var _nextFallbackChildren = nextProps.fallback;\n          var _nextPrimaryChildren = nextProps.children;\n          var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);\n          var _primaryChildFragment2 = workInProgress.child;\n          var prevOffscreenState = current.child.memoizedState;\n          _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n          _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        } else {\n          var _nextPrimaryChildren2 = nextProps.children;\n          var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);\n          workInProgress.memoizedState = null;\n          return _primaryChildFragment3;\n        }\n      }\n    }\n    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n      primaryChildFragment.return = workInProgress;\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var progressedPrimaryFragment = workInProgress.child;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n      var fallbackChildFragment;\n      if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = 0;\n          primaryChildFragment.treeBaseDuration = 0;\n        }\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      } else {\n        primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n      }\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\n      return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n    }\n    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {\n      return createWorkInProgress(current, offscreenProps);\n    }\n    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {\n        mode: \"visible\",\n        children: primaryChildren\n      });\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        primaryChildFragment.lanes = renderLanes;\n      }\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = null;\n      if (currentFallbackChildFragment !== null) {\n        var deletions = workInProgress.deletions;\n        if (deletions === null) {\n          workInProgress.deletions = [currentFallbackChildFragment];\n          workInProgress.flags |= ChildDeletion;\n        } else {\n          deletions.push(currentFallbackChildFragment);\n        }\n      }\n      workInProgress.child = primaryChildFragment;\n      return primaryChildFragment;\n    }\n    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var mode = workInProgress.mode;\n      var currentPrimaryChildFragment = current.child;\n      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\n      var primaryChildProps = {\n        mode: \"hidden\",\n        children: primaryChildren\n      };\n      var primaryChildFragment;\n      if ((mode & ConcurrentMode) === NoMode && workInProgress.child !== currentPrimaryChildFragment) {\n        var progressedPrimaryFragment = workInProgress.child;\n        primaryChildFragment = progressedPrimaryFragment;\n        primaryChildFragment.childLanes = NoLanes;\n        primaryChildFragment.pendingProps = primaryChildProps;\n        if (workInProgress.mode & ProfileMode) {\n          primaryChildFragment.actualDuration = 0;\n          primaryChildFragment.actualStartTime = -1;\n          primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;\n          primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;\n        }\n        workInProgress.deletions = null;\n      } else {\n        primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);\n        primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;\n      }\n      var fallbackChildFragment;\n      if (currentFallbackChildFragment !== null) {\n        fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);\n      } else {\n        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);\n        fallbackChildFragment.flags |= Placement;\n      }\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      return fallbackChildFragment;\n    }\n    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {\n      if (recoverableError !== null) {\n        queueHydrationError(recoverableError);\n      }\n      reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      var nextProps = workInProgress.pendingProps;\n      var primaryChildren = nextProps.children;\n      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n      primaryChildFragment.flags |= Placement;\n      workInProgress.memoizedState = null;\n      return primaryChildFragment;\n    }\n    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {\n      var fiberMode = workInProgress.mode;\n      var primaryChildProps = {\n        mode: \"visible\",\n        children: primaryChildren\n      };\n      var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);\n      var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null);\n      fallbackChildFragment.flags |= Placement;\n      primaryChildFragment.return = workInProgress;\n      fallbackChildFragment.return = workInProgress;\n      primaryChildFragment.sibling = fallbackChildFragment;\n      workInProgress.child = primaryChildFragment;\n      if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n        reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n      }\n      return fallbackChildFragment;\n    }\n    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        {\n          error(\"Cannot hydrate Suspense in legacy mode. Switch from \" + \"ReactDOM.hydrate(element, container) to \" + \"ReactDOMClient.hydrateRoot(container, <App />)\" + \".render(element) or remove the Suspense components from \" + \"the server rendered components.\");\n        }\n        workInProgress.lanes = laneToLanes(SyncLane);\n      } else if (isSuspenseInstanceFallback()) {\n        workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n      } else {\n        workInProgress.lanes = laneToLanes(OffscreenLane);\n      }\n      return null;\n    }\n    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {\n      if (!didSuspend) {\n        if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, null);\n        }\n        if (isSuspenseInstanceFallback()) {\n          var digest, message, stack;\n          {\n            var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails();\n            digest = _getSuspenseInstanceF.digest;\n            message = _getSuspenseInstanceF.message;\n            stack = _getSuspenseInstanceF.stack;\n          }\n          var error;\n          if (message) {\n            error = new Error(message);\n          } else {\n            error = new Error(\"The server could not finish this Suspense boundary, likely \" + \"due to an error during server rendering. Switched to \" + \"client rendering.\");\n          }\n          var capturedValue = createCapturedValue(error, digest, stack);\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);\n        }\n        var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n        if (didReceiveUpdate || hasContextChanged) {\n          var root = getWorkInProgressRoot();\n          if (root !== null) {\n            var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);\n            if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {\n              suspenseState.retryLane = attemptHydrationAtLane;\n              var eventTime = NoTimestamp;\n              enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\n              scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);\n            }\n          }\n          renderDidSuspendDelayIfPossible();\n          var _capturedValue = createCapturedValue(new Error(\"This Suspense boundary received an update before it finished \" + \"hydrating. This caused the boundary to switch to client rendering. \" + \"The usual way to fix this is to wrap the original update \" + \"in startTransition.\"));\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);\n        } else if (isSuspenseInstancePending()) {\n          workInProgress.flags |= DidCapture;\n          workInProgress.child = current.child;\n          var retry = retryDehydratedSuspenseBoundary.bind(null, current);\n          registerSuspenseInstanceRetry();\n          return null;\n        } else {\n          reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);\n          var primaryChildren = nextProps.children;\n          var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren);\n          primaryChildFragment.flags |= Hydrating;\n          return primaryChildFragment;\n        }\n      } else {\n        if (workInProgress.flags & ForceClientRender) {\n          workInProgress.flags &= ~ForceClientRender;\n          var _capturedValue2 = createCapturedValue(new Error(\"There was an error while hydrating this Suspense boundary. \" + \"Switched to client rendering.\"));\n          return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);\n        } else if (workInProgress.memoizedState !== null) {\n          workInProgress.child = current.child;\n          workInProgress.flags |= DidCapture;\n          return null;\n        } else {\n          var nextPrimaryChildren = nextProps.children;\n          var nextFallbackChildren = nextProps.fallback;\n          var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);\n          var _primaryChildFragment4 = workInProgress.child;\n          _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);\n          workInProgress.memoizedState = SUSPENDED_MARKER;\n          return fallbackChildFragment;\n        }\n      }\n    }\n    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\n      fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\n    }\n    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {\n      var node = firstChild;\n      while (node !== null) {\n        if (node.tag === SuspenseComponent) {\n          var state = node.memoizedState;\n          if (state !== null) {\n            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n          }\n        } else if (node.tag === SuspenseListComponent) {\n          scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\n        } else if (node.child !== null) {\n          node.child.return = node;\n          node = node.child;\n          continue;\n        }\n        if (node === workInProgress) {\n          return;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === workInProgress) {\n            return;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n    }\n    function findLastContentRow(firstChild) {\n      var row = firstChild;\n      var lastContentRow = null;\n      while (row !== null) {\n        var currentRow = row.alternate;\n        if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n          lastContentRow = row;\n        }\n        row = row.sibling;\n      }\n      return lastContentRow;\n    }\n    function validateRevealOrder(revealOrder) {\n      {\n        if (revealOrder !== undefined && revealOrder !== \"forwards\" && revealOrder !== \"backwards\" && revealOrder !== \"together\" && !didWarnAboutRevealOrder[revealOrder]) {\n          didWarnAboutRevealOrder[revealOrder] = true;\n          if (typeof revealOrder === \"string\") {\n            switch (revealOrder.toLowerCase()) {\n              case \"together\":\n              case \"forwards\":\n              case \"backwards\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n              case \"forward\":\n              case \"backward\":\n                {\n                  error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase());\n                  break;\n                }\n              default:\n                error('\"%s\" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n                break;\n            }\n          } else {\n            error(\"%s is not a supported value for revealOrder on <SuspenseList />. \" + 'Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder);\n          }\n        }\n      }\n    }\n    function validateTailOptions(tailMode, revealOrder) {\n      {\n        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n          if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('\"%s\" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean \"collapsed\" or \"hidden\"?', tailMode);\n          } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\n            didWarnAboutTailOptions[tailMode] = true;\n            error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' + '\"forwards\" or \"backwards\". ' + 'Did you mean to specify revealOrder=\"forwards\"?', tailMode);\n          }\n        }\n      }\n    }\n    function validateSuspenseListNestedChild(childSlot, index) {\n      {\n        var isAnArray = isArray(childSlot);\n        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\n        if (isAnArray || isIterable) {\n          var type = isAnArray ? \"array\" : \"iterable\";\n          error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" + \"an additional SuspenseList to configure its revealOrder: \" + \"<SuspenseList revealOrder=...> ... \" + \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" + \"</SuspenseList>\", type, index, type);\n          return false;\n        }\n      }\n      return true;\n    }\n    function validateSuspenseListChildren(children, revealOrder) {\n      {\n        if ((revealOrder === \"forwards\" || revealOrder === \"backwards\") && children !== undefined && children !== null && children !== false) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              if (!validateSuspenseListNestedChild(children[i], i)) {\n                return;\n              }\n            }\n          } else {\n            var iteratorFn = getIteratorFn(children);\n            if (typeof iteratorFn === \"function\") {\n              var childrenIterator = iteratorFn.call(children);\n              if (childrenIterator) {\n                var step = childrenIterator.next();\n                var _i = 0;\n                for (; !step.done; step = childrenIterator.next()) {\n                  if (!validateSuspenseListNestedChild(step.value, _i)) {\n                    return;\n                  }\n                  _i++;\n                }\n              }\n            } else {\n              error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' + \"This is not useful since it needs multiple rows. \" + \"Did you mean to pass multiple children or an array?\", revealOrder);\n            }\n          }\n        }\n      }\n    }\n    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {\n      var renderState = workInProgress.memoizedState;\n      if (renderState === null) {\n        workInProgress.memoizedState = {\n          isBackwards: isBackwards,\n          rendering: null,\n          renderingStartTime: 0,\n          last: lastContentRow,\n          tail: tail,\n          tailMode: tailMode\n        };\n      } else {\n        renderState.isBackwards = isBackwards;\n        renderState.rendering = null;\n        renderState.renderingStartTime = 0;\n        renderState.last = lastContentRow;\n        renderState.tail = tail;\n        renderState.tailMode = tailMode;\n      }\n    }\n    function updateSuspenseListComponent(current, workInProgress, renderLanes) {\n      var nextProps = workInProgress.pendingProps;\n      var revealOrder = nextProps.revealOrder;\n      var tailMode = nextProps.tail;\n      var newChildren = nextProps.children;\n      validateRevealOrder(revealOrder);\n      validateTailOptions(tailMode, revealOrder);\n      validateSuspenseListChildren(newChildren, revealOrder);\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      var suspenseContext = suspenseStackCursor.current;\n      var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\n      if (shouldForceFallback) {\n        suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n        workInProgress.flags |= DidCapture;\n      } else {\n        var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;\n        if (didSuspendBefore) {\n          propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);\n        }\n        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n      }\n      pushSuspenseContext(workInProgress, suspenseContext);\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        workInProgress.memoizedState = null;\n      } else {\n        switch (revealOrder) {\n          case \"forwards\":\n            {\n              var lastContentRow = findLastContentRow(workInProgress.child);\n              var tail;\n              if (lastContentRow === null) {\n                tail = workInProgress.child;\n                workInProgress.child = null;\n              } else {\n                tail = lastContentRow.sibling;\n                lastContentRow.sibling = null;\n              }\n              initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);\n              break;\n            }\n          case \"backwards\":\n            {\n              var _tail = null;\n              var row = workInProgress.child;\n              workInProgress.child = null;\n              while (row !== null) {\n                var currentRow = row.alternate;\n                if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n                  workInProgress.child = row;\n                  break;\n                }\n                var nextRow = row.sibling;\n                row.sibling = _tail;\n                _tail = row;\n                row = nextRow;\n              }\n              initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);\n              break;\n            }\n          case \"together\":\n            {\n              initSuspenseListRenderState(workInProgress, false, null, null, undefined);\n              break;\n            }\n          default:\n            {\n              workInProgress.memoizedState = null;\n            }\n        }\n      }\n      return workInProgress.child;\n    }\n    function updatePortalComponent(current, workInProgress, renderLanes) {\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      var nextChildren = workInProgress.pendingProps;\n      if (current === null) {\n        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);\n      } else {\n        reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n      }\n      return workInProgress.child;\n    }\n    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n    function updateContextProvider(current, workInProgress, renderLanes) {\n      var providerType = workInProgress.type;\n      var context = providerType._context;\n      var newProps = workInProgress.pendingProps;\n      var oldProps = workInProgress.memoizedProps;\n      var newValue = newProps.value;\n      {\n        if (!(\"value\" in newProps)) {\n          if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n            hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n            error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\");\n          }\n        }\n        var providerPropTypes = workInProgress.type.propTypes;\n        if (providerPropTypes) {\n          checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\n        }\n      }\n      pushProvider(workInProgress, context, newValue);\n      {\n        if (oldProps !== null) {\n          var oldValue = oldProps.value;\n          if (objectIs(oldValue, newValue)) {\n            if (oldProps.children === newProps.children && !hasContextChanged()) {\n              return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n            }\n          } else {\n            propagateContextChange(workInProgress, context, renderLanes);\n          }\n        }\n      }\n      var newChildren = newProps.children;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n    var hasWarnedAboutUsingContextAsConsumer = false;\n    function updateContextConsumer(current, workInProgress, renderLanes) {\n      var context = workInProgress.type;\n      {\n        if (context._context === undefined) {\n          if (context !== context.Consumer) {\n            if (!hasWarnedAboutUsingContextAsConsumer) {\n              hasWarnedAboutUsingContextAsConsumer = true;\n              error(\"Rendering <Context> directly is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Consumer> instead?\");\n            }\n          }\n        } else {\n          context = context._context;\n        }\n      }\n      var newProps = workInProgress.pendingProps;\n      var render = newProps.children;\n      {\n        if (typeof render !== \"function\") {\n          error(\"A context consumer was rendered with multiple children, or a child \" + \"that isn't a function. A context consumer expects a single child \" + \"that is a function. If you did pass a function, make sure there \" + \"is no trailing or leading whitespace around it.\");\n        }\n      }\n      prepareToReadContext(workInProgress, renderLanes);\n      var newValue = _readContext(context);\n      var newChildren;\n      {\n        ReactCurrentOwner$1.current = workInProgress;\n        setIsRendering(true);\n        newChildren = render(newValue);\n        setIsRendering(false);\n      }\n      workInProgress.flags |= PerformedWork;\n      reconcileChildren(current, workInProgress, newChildren, renderLanes);\n      return workInProgress.child;\n    }\n    function markWorkInProgressReceivedUpdate() {\n      didReceiveUpdate = true;\n    }\n    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\n      if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n        if (current !== null) {\n          current.alternate = null;\n          workInProgress.alternate = null;\n          workInProgress.flags |= Placement;\n        }\n      }\n    }\n    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\n      if (current !== null) {\n        workInProgress.dependencies = current.dependencies;\n      }\n      {\n        stopProfilerTimerIfRunning();\n      }\n      markSkippedUpdateLanes(workInProgress.lanes);\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        {\n          return null;\n        }\n      }\n      cloneChildFibers(current, workInProgress);\n      return workInProgress.child;\n    }\n    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {\n      {\n        var returnFiber = oldWorkInProgress.return;\n        if (returnFiber === null) {\n          throw new Error(\"Cannot swap the root fiber.\");\n        }\n        current.alternate = null;\n        oldWorkInProgress.alternate = null;\n        newWorkInProgress.index = oldWorkInProgress.index;\n        newWorkInProgress.sibling = oldWorkInProgress.sibling;\n        newWorkInProgress.return = oldWorkInProgress.return;\n        newWorkInProgress.ref = oldWorkInProgress.ref;\n        if (oldWorkInProgress === returnFiber.child) {\n          returnFiber.child = newWorkInProgress;\n        } else {\n          var prevSibling = returnFiber.child;\n          if (prevSibling === null) {\n            throw new Error(\"Expected parent to have a child.\");\n          }\n          while (prevSibling.sibling !== oldWorkInProgress) {\n            prevSibling = prevSibling.sibling;\n            if (prevSibling === null) {\n              throw new Error(\"Expected to find the previous sibling.\");\n            }\n          }\n          prevSibling.sibling = newWorkInProgress;\n        }\n        var deletions = returnFiber.deletions;\n        if (deletions === null) {\n          returnFiber.deletions = [current];\n          returnFiber.flags |= ChildDeletion;\n        } else {\n          deletions.push(current);\n        }\n        newWorkInProgress.flags |= Placement;\n        return newWorkInProgress;\n      }\n    }\n    function checkScheduledUpdateOrContext(current, renderLanes) {\n      var updateLanes = current.lanes;\n      if (includesSomeLane(updateLanes, renderLanes)) {\n        return true;\n      }\n      return false;\n    }\n    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {\n      switch (workInProgress.tag) {\n        case HostRoot:\n          pushHostRootContext(workInProgress);\n          var root = workInProgress.stateNode;\n          break;\n        case HostComponent:\n          pushHostContext(workInProgress);\n          break;\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              pushContextProvider(workInProgress);\n            }\n            break;\n          }\n        case HostPortal:\n          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n          break;\n        case ContextProvider:\n          {\n            var newValue = workInProgress.memoizedProps.value;\n            var context = workInProgress.type._context;\n            pushProvider(workInProgress, context, newValue);\n            break;\n          }\n        case Profiler:\n          {\n            var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n            if (hasChildWork) {\n              workInProgress.flags |= Update;\n            }\n            {\n              var stateNode = workInProgress.stateNode;\n              stateNode.effectDuration = 0;\n              stateNode.passiveEffectDuration = 0;\n            }\n          }\n          break;\n        case SuspenseComponent:\n          {\n            var state = workInProgress.memoizedState;\n            if (state !== null) {\n              if (state.dehydrated !== null) {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                workInProgress.flags |= DidCapture;\n                return null;\n              }\n              var primaryChildFragment = workInProgress.child;\n              var primaryChildLanes = primaryChildFragment.childLanes;\n              if (includesSomeLane(renderLanes, primaryChildLanes)) {\n                return updateSuspenseComponent(current, workInProgress, renderLanes);\n              } else {\n                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n                if (child !== null) {\n                  return child.sibling;\n                } else {\n                  return null;\n                }\n              }\n            } else {\n              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));\n            }\n            break;\n          }\n        case SuspenseListComponent:\n          {\n            var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n            var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n            if (didSuspendBefore) {\n              if (_hasChildWork) {\n                return updateSuspenseListComponent(current, workInProgress, renderLanes);\n              }\n              workInProgress.flags |= DidCapture;\n            }\n            var renderState = workInProgress.memoizedState;\n            if (renderState !== null) {\n              renderState.rendering = null;\n              renderState.tail = null;\n              renderState.lastEffect = null;\n            }\n            pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n            if (_hasChildWork) {\n              break;\n            } else {\n              return null;\n            }\n          }\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            workInProgress.lanes = NoLanes;\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n    function beginWork(current, workInProgress, renderLanes) {\n      {\n        if (workInProgress._debugNeedsRemount && current !== null) {\n          return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));\n        }\n      }\n      if (current !== null) {\n        var oldProps = current.memoizedProps;\n        var newProps = workInProgress.pendingProps;\n        if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) {\n          didReceiveUpdate = true;\n        } else {\n          var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);\n          if (!hasScheduledUpdateOrContext && (workInProgress.flags & DidCapture) === NoFlags) {\n            didReceiveUpdate = false;\n            return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);\n          }\n          if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n            didReceiveUpdate = true;\n          } else {\n            didReceiveUpdate = false;\n          }\n        }\n      } else {\n        didReceiveUpdate = false;\n      }\n      workInProgress.lanes = NoLanes;\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n          {\n            return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);\n          }\n        case LazyComponent:\n          {\n            var elementType = workInProgress.elementType;\n            return mountLazyComponent(current, workInProgress, elementType, renderLanes);\n          }\n        case FunctionComponent:\n          {\n            var Component = workInProgress.type;\n            var unresolvedProps = workInProgress.pendingProps;\n            var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);\n            return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);\n          }\n        case ClassComponent:\n          {\n            var _Component = workInProgress.type;\n            var _unresolvedProps = workInProgress.pendingProps;\n            var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);\n            return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);\n          }\n        case HostRoot:\n          return updateHostRoot(current, workInProgress, renderLanes);\n        case HostComponent:\n          return updateHostComponent(current, workInProgress, renderLanes);\n        case HostText:\n          return updateHostText();\n        case SuspenseComponent:\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        case HostPortal:\n          return updatePortalComponent(current, workInProgress, renderLanes);\n        case ForwardRef:\n          {\n            var type = workInProgress.type;\n            var _unresolvedProps2 = workInProgress.pendingProps;\n            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);\n            return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);\n          }\n        case Fragment:\n          return updateFragment(current, workInProgress, renderLanes);\n        case Mode:\n          return updateMode(current, workInProgress, renderLanes);\n        case Profiler:\n          return updateProfiler(current, workInProgress, renderLanes);\n        case ContextProvider:\n          return updateContextProvider(current, workInProgress, renderLanes);\n        case ContextConsumer:\n          return updateContextConsumer(current, workInProgress, renderLanes);\n        case MemoComponent:\n          {\n            var _type2 = workInProgress.type;\n            var _unresolvedProps3 = workInProgress.pendingProps;\n            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\n            {\n              if (workInProgress.type !== workInProgress.elementType) {\n                var outerPropTypes = _type2.propTypes;\n                if (outerPropTypes) {\n                  checkPropTypes(outerPropTypes, _resolvedProps3, \"prop\", getComponentNameFromType(_type2));\n                }\n              }\n            }\n            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\n            return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);\n          }\n        case SimpleMemoComponent:\n          {\n            return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);\n          }\n        case IncompleteClassComponent:\n          {\n            var _Component2 = workInProgress.type;\n            var _unresolvedProps4 = workInProgress.pendingProps;\n            var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);\n            return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);\n          }\n        case SuspenseListComponent:\n          {\n            return updateSuspenseListComponent(current, workInProgress, renderLanes);\n          }\n        case ScopeComponent:\n          {\n            break;\n          }\n        case OffscreenComponent:\n          {\n            return updateOffscreenComponent(current, workInProgress, renderLanes);\n          }\n      }\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n    function markUpdate(workInProgress) {\n      workInProgress.flags |= Update;\n    }\n    function markRef$1(workInProgress) {\n      workInProgress.flags |= Ref;\n    }\n    var appendAllChildren;\n    var updateHostContainer;\n    var updateHostComponent$1;\n    var updateHostText$1;\n    {\n      appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {\n        var node = workInProgress.child;\n        while (node !== null) {\n          if (node.tag === HostComponent || node.tag === HostText) {\n            appendInitialChild(parent, node.stateNode);\n          } else if (node.tag === HostPortal) ;else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          if (node === workInProgress) {\n            return;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === workInProgress) {\n              return;\n            }\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      };\n      updateHostContainer = function updateHostContainer(current, workInProgress) {};\n      updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance) {\n        var oldProps = current.memoizedProps;\n        if (oldProps === newProps) {\n          return;\n        }\n        var instance = workInProgress.stateNode;\n        var currentHostContext = getHostContext();\n        var updatePayload = prepareUpdate();\n        workInProgress.updateQueue = updatePayload;\n        if (updatePayload) {\n          markUpdate(workInProgress);\n        }\n      };\n      updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {\n        if (oldText !== newText) {\n          markUpdate(workInProgress);\n        }\n      };\n    }\n    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\n      switch (renderState.tailMode) {\n        case \"hidden\":\n          {\n            var tailNode = renderState.tail;\n            var lastTailNode = null;\n            while (tailNode !== null) {\n              if (tailNode.alternate !== null) {\n                lastTailNode = tailNode;\n              }\n              tailNode = tailNode.sibling;\n            }\n            if (lastTailNode === null) {\n              renderState.tail = null;\n            } else {\n              lastTailNode.sibling = null;\n            }\n            break;\n          }\n        case \"collapsed\":\n          {\n            var _tailNode = renderState.tail;\n            var _lastTailNode = null;\n            while (_tailNode !== null) {\n              if (_tailNode.alternate !== null) {\n                _lastTailNode = _tailNode;\n              }\n              _tailNode = _tailNode.sibling;\n            }\n            if (_lastTailNode === null) {\n              if (!hasRenderedATailFallback && renderState.tail !== null) {\n                renderState.tail.sibling = null;\n              } else {\n                renderState.tail = null;\n              }\n            } else {\n              _lastTailNode.sibling = null;\n            }\n            break;\n          }\n      }\n    }\n    function bubbleProperties(completedWork) {\n      var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;\n      var newChildLanes = NoLanes;\n      var subtreeFlags = NoFlags;\n      if (!didBailout) {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var actualDuration = completedWork.actualDuration;\n          var treeBaseDuration = completedWork.selfBaseDuration;\n          var child = completedWork.child;\n          while (child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));\n            subtreeFlags |= child.subtreeFlags;\n            subtreeFlags |= child.flags;\n            actualDuration += child.actualDuration;\n            treeBaseDuration += child.treeBaseDuration;\n            child = child.sibling;\n          }\n          completedWork.actualDuration = actualDuration;\n          completedWork.treeBaseDuration = treeBaseDuration;\n        } else {\n          var _child = completedWork.child;\n          while (_child !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));\n            subtreeFlags |= _child.subtreeFlags;\n            subtreeFlags |= _child.flags;\n            _child.return = completedWork;\n            _child = _child.sibling;\n          }\n        }\n        completedWork.subtreeFlags |= subtreeFlags;\n      } else {\n        if ((completedWork.mode & ProfileMode) !== NoMode) {\n          var _treeBaseDuration = completedWork.selfBaseDuration;\n          var _child2 = completedWork.child;\n          while (_child2 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));\n            subtreeFlags |= _child2.subtreeFlags & StaticMask;\n            subtreeFlags |= _child2.flags & StaticMask;\n            _treeBaseDuration += _child2.treeBaseDuration;\n            _child2 = _child2.sibling;\n          }\n          completedWork.treeBaseDuration = _treeBaseDuration;\n        } else {\n          var _child3 = completedWork.child;\n          while (_child3 !== null) {\n            newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));\n            subtreeFlags |= _child3.subtreeFlags & StaticMask;\n            subtreeFlags |= _child3.flags & StaticMask;\n            _child3.return = completedWork;\n            _child3 = _child3.sibling;\n          }\n        }\n        completedWork.subtreeFlags |= subtreeFlags;\n      }\n      completedWork.childLanes = newChildLanes;\n      return didBailout;\n    }\n    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {\n      var wasHydrated = popHydrationState();\n      if (nextState !== null && nextState.dehydrated !== null) {\n        if (current === null) {\n          if (!wasHydrated) {\n            throw new Error(\"A dehydrated suspense component was completed without a hydrated node. \" + \"This is probably a bug in React.\");\n          }\n          prepareToHydrateHostSuspenseInstance();\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var isTimedOutSuspense = nextState !== null;\n              if (isTimedOutSuspense) {\n                var primaryChildFragment = workInProgress.child;\n                if (primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        } else {\n          if ((workInProgress.flags & DidCapture) === NoFlags) {\n            workInProgress.memoizedState = null;\n          }\n          workInProgress.flags |= Update;\n          bubbleProperties(workInProgress);\n          {\n            if ((workInProgress.mode & ProfileMode) !== NoMode) {\n              var _isTimedOutSuspense = nextState !== null;\n              if (_isTimedOutSuspense) {\n                var _primaryChildFragment = workInProgress.child;\n                if (_primaryChildFragment !== null) {\n                  workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;\n                }\n              }\n            }\n          }\n          return false;\n        }\n      } else {\n        upgradeHydrationErrorsToRecoverable();\n        return true;\n      }\n    }\n    function completeWork(current, workInProgress, renderLanes) {\n      var newProps = workInProgress.pendingProps;\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case IndeterminateComponent:\n        case LazyComponent:\n        case SimpleMemoComponent:\n        case FunctionComponent:\n        case ForwardRef:\n        case Fragment:\n        case Mode:\n        case Profiler:\n        case ContextConsumer:\n        case MemoComponent:\n          bubbleProperties(workInProgress);\n          return null;\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostRoot:\n          {\n            var fiberRoot = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n            if (fiberRoot.pendingContext) {\n              fiberRoot.context = fiberRoot.pendingContext;\n              fiberRoot.pendingContext = null;\n            }\n            if (current === null || current.child === null) {\n              var wasHydrated = popHydrationState();\n              if (wasHydrated) {\n                markUpdate(workInProgress);\n              } else {\n                if (current !== null) {\n                  var prevState = current.memoizedState;\n                  if (!prevState.isDehydrated || (workInProgress.flags & ForceClientRender) !== NoFlags) {\n                    workInProgress.flags |= Snapshot;\n                    upgradeHydrationErrorsToRecoverable();\n                  }\n                }\n              }\n            }\n            updateHostContainer(current, workInProgress);\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            var rootContainerInstance = getRootHostContainer();\n            var type = workInProgress.type;\n            if (current !== null && workInProgress.stateNode != null) {\n              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);\n              if (current.ref !== workInProgress.ref) {\n                markRef$1(workInProgress);\n              }\n            } else {\n              if (!newProps) {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n                bubbleProperties(workInProgress);\n                return null;\n              }\n              var currentHostContext = getHostContext();\n              var _wasHydrated = popHydrationState();\n              if (_wasHydrated) {\n                if (prepareToHydrateHostInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);\n                appendAllChildren(instance, workInProgress, false, false);\n                workInProgress.stateNode = instance;\n                if (finalizeInitialChildren(instance)) {\n                  markUpdate(workInProgress);\n                }\n              }\n              if (workInProgress.ref !== null) {\n                markRef$1(workInProgress);\n              }\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case HostText:\n          {\n            var newText = newProps;\n            if (current && workInProgress.stateNode != null) {\n              var oldText = current.memoizedProps;\n              updateHostText$1(current, workInProgress, oldText, newText);\n            } else {\n              if (typeof newText !== \"string\") {\n                if (workInProgress.stateNode === null) {\n                  throw new Error(\"We must have new props for new mounts. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n              }\n              var _rootContainerInstance = getRootHostContainer();\n              var _currentHostContext = getHostContext();\n              var _wasHydrated2 = popHydrationState();\n              if (_wasHydrated2) {\n                if (prepareToHydrateHostTextInstance()) {\n                  markUpdate(workInProgress);\n                }\n              } else {\n                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);\n              }\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var nextState = workInProgress.memoizedState;\n            if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {\n              var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);\n              if (!fallthroughToNormalSuspensePath) {\n                if (workInProgress.flags & ShouldCapture) {\n                  return workInProgress;\n                } else {\n                  return null;\n                }\n              }\n            }\n            if ((workInProgress.flags & DidCapture) !== NoFlags) {\n              workInProgress.lanes = renderLanes;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            var nextDidTimeout = nextState !== null;\n            var prevDidTimeout = current !== null && current.memoizedState !== null;\n            if (nextDidTimeout !== prevDidTimeout) {\n              if (nextDidTimeout) {\n                var _offscreenFiber2 = workInProgress.child;\n                _offscreenFiber2.flags |= Visibility;\n                if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n                  var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);\n                  if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {\n                    renderDidSuspend();\n                  } else {\n                    renderDidSuspendDelayIfPossible();\n                  }\n                }\n              }\n            }\n            var wakeables = workInProgress.updateQueue;\n            if (wakeables !== null) {\n              workInProgress.flags |= Update;\n            }\n            bubbleProperties(workInProgress);\n            {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                if (nextDidTimeout) {\n                  var primaryChildFragment = workInProgress.child;\n                  if (primaryChildFragment !== null) {\n                    workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;\n                  }\n                }\n              }\n            }\n            return null;\n          }\n        case HostPortal:\n          popHostContainer(workInProgress);\n          updateHostContainer(current, workInProgress);\n          if (current === null) {\n            preparePortalMount(workInProgress.stateNode.containerInfo);\n          }\n          bubbleProperties(workInProgress);\n          return null;\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          bubbleProperties(workInProgress);\n          return null;\n        case IncompleteClassComponent:\n          {\n            var _Component = workInProgress.type;\n            if (isContextProvider(_Component)) {\n              popContext(workInProgress);\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var renderState = workInProgress.memoizedState;\n            if (renderState === null) {\n              bubbleProperties(workInProgress);\n              return null;\n            }\n            var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n            var renderedTail = renderState.rendering;\n            if (renderedTail === null) {\n              if (!didSuspendAlready) {\n                var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);\n                if (!cannotBeSuspended) {\n                  var row = workInProgress.child;\n                  while (row !== null) {\n                    var suspended = findFirstSuspended(row);\n                    if (suspended !== null) {\n                      didSuspendAlready = true;\n                      workInProgress.flags |= DidCapture;\n                      cutOffTailIfNeeded(renderState, false);\n                      var newThenables = suspended.updateQueue;\n                      if (newThenables !== null) {\n                        workInProgress.updateQueue = newThenables;\n                        workInProgress.flags |= Update;\n                      }\n                      workInProgress.subtreeFlags = NoFlags;\n                      resetChildFibers(workInProgress, renderLanes);\n                      pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));\n                      return workInProgress.child;\n                    }\n                    row = row.sibling;\n                  }\n                }\n                if (renderState.tail !== null && now() > getRenderTargetTime()) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              } else {\n                cutOffTailIfNeeded(renderState, false);\n              }\n            } else {\n              if (!didSuspendAlready) {\n                var _suspended = findFirstSuspended(renderedTail);\n                if (_suspended !== null) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  var _newThenables = _suspended.updateQueue;\n                  if (_newThenables !== null) {\n                    workInProgress.updateQueue = _newThenables;\n                    workInProgress.flags |= Update;\n                  }\n                  cutOffTailIfNeeded(renderState, true);\n                  if (renderState.tail === null && renderState.tailMode === \"hidden\" && !renderedTail.alternate && !getIsHydrating()) {\n                    bubbleProperties(workInProgress);\n                    return null;\n                  }\n                } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {\n                  workInProgress.flags |= DidCapture;\n                  didSuspendAlready = true;\n                  cutOffTailIfNeeded(renderState, false);\n                  workInProgress.lanes = SomeRetryLane;\n                }\n              }\n              if (renderState.isBackwards) {\n                renderedTail.sibling = workInProgress.child;\n                workInProgress.child = renderedTail;\n              } else {\n                var previousSibling = renderState.last;\n                if (previousSibling !== null) {\n                  previousSibling.sibling = renderedTail;\n                } else {\n                  workInProgress.child = renderedTail;\n                }\n                renderState.last = renderedTail;\n              }\n            }\n            if (renderState.tail !== null) {\n              var next = renderState.tail;\n              renderState.rendering = next;\n              renderState.tail = next.sibling;\n              renderState.renderingStartTime = now();\n              next.sibling = null;\n              var suspenseContext = suspenseStackCursor.current;\n              if (didSuspendAlready) {\n                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);\n              } else {\n                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n              }\n              pushSuspenseContext(workInProgress, suspenseContext);\n              return next;\n            }\n            bubbleProperties(workInProgress);\n            return null;\n          }\n        case ScopeComponent:\n          {\n            break;\n          }\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          {\n            popRenderLanes(workInProgress);\n            var _nextState = workInProgress.memoizedState;\n            var nextIsHidden = _nextState !== null;\n            if (current !== null) {\n              var _prevState = current.memoizedState;\n              var prevIsHidden = _prevState !== null;\n              if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) {\n                workInProgress.flags |= Visibility;\n              }\n            }\n            if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n              bubbleProperties(workInProgress);\n            } else {\n              if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\n                bubbleProperties(workInProgress);\n                {\n                  if (workInProgress.subtreeFlags & (Placement | Update)) {\n                    workInProgress.flags |= Visibility;\n                  }\n                }\n              }\n            }\n            return null;\n          }\n        case CacheComponent:\n          {\n            return null;\n          }\n        case TracingMarkerComponent:\n          {\n            return null;\n          }\n      }\n      throw new Error(\"Unknown unit of work tag (\" + workInProgress.tag + \"). This error is likely caused by a bug in \" + \"React. Please file an issue.\");\n    }\n    function unwindWork(current, workInProgress, renderLanes) {\n      popTreeContext(workInProgress);\n      switch (workInProgress.tag) {\n        case ClassComponent:\n          {\n            var Component = workInProgress.type;\n            if (isContextProvider(Component)) {\n              popContext(workInProgress);\n            }\n            var flags = workInProgress.flags;\n            if (flags & ShouldCapture) {\n              workInProgress.flags = flags & ~ShouldCapture | DidCapture;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            return null;\n          }\n        case HostRoot:\n          {\n            var root = workInProgress.stateNode;\n            popHostContainer(workInProgress);\n            popTopLevelContextObject(workInProgress);\n            resetWorkInProgressVersions();\n            var _flags = workInProgress.flags;\n            if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {\n              workInProgress.flags = _flags & ~ShouldCapture | DidCapture;\n              return workInProgress;\n            }\n            return null;\n          }\n        case HostComponent:\n          {\n            popHostContext(workInProgress);\n            return null;\n          }\n        case SuspenseComponent:\n          {\n            popSuspenseContext(workInProgress);\n            var suspenseState = workInProgress.memoizedState;\n            if (suspenseState !== null && suspenseState.dehydrated !== null) {\n              if (workInProgress.alternate === null) {\n                throw new Error(\"Threw in newly mounted dehydrated component. This is likely a bug in \" + \"React. Please file an issue.\");\n              }\n            }\n            var _flags2 = workInProgress.flags;\n            if (_flags2 & ShouldCapture) {\n              workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture;\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                transferActualDuration(workInProgress);\n              }\n              return workInProgress;\n            }\n            return null;\n          }\n        case SuspenseListComponent:\n          {\n            popSuspenseContext(workInProgress);\n            return null;\n          }\n        case HostPortal:\n          popHostContainer(workInProgress);\n          return null;\n        case ContextProvider:\n          var context = workInProgress.type._context;\n          popProvider(context, workInProgress);\n          return null;\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(workInProgress);\n          return null;\n        case CacheComponent:\n          return null;\n        default:\n          return null;\n      }\n    }\n    function unwindInterruptedWork(current, interruptedWork, renderLanes) {\n      popTreeContext(interruptedWork);\n      switch (interruptedWork.tag) {\n        case ClassComponent:\n          {\n            var childContextTypes = interruptedWork.type.childContextTypes;\n            if (childContextTypes !== null && childContextTypes !== undefined) {\n              popContext(interruptedWork);\n            }\n            break;\n          }\n        case HostRoot:\n          {\n            var root = interruptedWork.stateNode;\n            popHostContainer(interruptedWork);\n            popTopLevelContextObject(interruptedWork);\n            resetWorkInProgressVersions();\n            break;\n          }\n        case HostComponent:\n          {\n            popHostContext(interruptedWork);\n            break;\n          }\n        case HostPortal:\n          popHostContainer(interruptedWork);\n          break;\n        case SuspenseComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n        case SuspenseListComponent:\n          popSuspenseContext(interruptedWork);\n          break;\n        case ContextProvider:\n          var context = interruptedWork.type._context;\n          popProvider(context, interruptedWork);\n          break;\n        case OffscreenComponent:\n        case LegacyHiddenComponent:\n          popRenderLanes(interruptedWork);\n          break;\n      }\n    }\n    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;\n    {\n      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n    }\n    var PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\n    var nextEffect = null;\n    var inProgressLanes = null;\n    var inProgressRoot = null;\n    function reportUncaughtErrorInDEV(error) {\n      {\n        invokeGuardedCallback(null, function () {\n          throw error;\n        });\n        clearCaughtError();\n      }\n    }\n    var callComponentWillUnmountWithTimer = function callComponentWillUnmountWithTimer(current, instance) {\n      instance.props = current.memoizedProps;\n      instance.state = current.memoizedState;\n      if (current.mode & ProfileMode) {\n        try {\n          startLayoutEffectTimer();\n          instance.componentWillUnmount();\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        instance.componentWillUnmount();\n      }\n    };\n    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {\n      try {\n        callComponentWillUnmountWithTimer(current, instance);\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n    function safelyDetachRef(current, nearestMountedAncestor) {\n      var ref = current.ref;\n      if (ref !== null) {\n        if (typeof ref === \"function\") {\n          var retVal;\n          try {\n            if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {\n              try {\n                startLayoutEffectTimer();\n                retVal = ref(null);\n              } finally {\n                recordLayoutEffectDuration(current);\n              }\n            } else {\n              retVal = ref(null);\n            }\n          } catch (error) {\n            captureCommitPhaseError(current, nearestMountedAncestor, error);\n          }\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(current));\n            }\n          }\n        } else {\n          ref.current = null;\n        }\n      }\n    }\n    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {\n      try {\n        destroy();\n      } catch (error) {\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    }\n    var focusedInstanceHandle = null;\n    var shouldFireAfterActiveInstanceBlur = false;\n    function commitBeforeMutationEffects(root, firstChild) {\n      focusedInstanceHandle = prepareForCommit(root.containerInfo);\n      nextEffect = firstChild;\n      commitBeforeMutationEffects_begin();\n      var shouldFire = shouldFireAfterActiveInstanceBlur;\n      shouldFireAfterActiveInstanceBlur = false;\n      focusedInstanceHandle = null;\n      return shouldFire;\n    }\n    function commitBeforeMutationEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n        if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitBeforeMutationEffects_complete();\n        }\n      }\n    }\n    function commitBeforeMutationEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n        try {\n          commitBeforeMutationEffectsOnFiber(fiber);\n        } catch (error) {\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        resetCurrentFiber();\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitBeforeMutationEffectsOnFiber(finishedWork) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n      if ((flags & Snapshot) !== NoFlags) {\n        setCurrentFiber(finishedWork);\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              break;\n            }\n          case ClassComponent:\n            {\n              if (current !== null) {\n                var prevProps = current.memoizedProps;\n                var prevState = current.memoizedState;\n                var instance = finishedWork.stateNode;\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"getSnapshotBeforeUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);\n                {\n                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\n                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n                    didWarnSet.add(finishedWork.type);\n                    error(\"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" + \"must be returned. You have returned undefined.\", getComponentNameFromFiber(finishedWork));\n                  }\n                }\n                instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n              }\n              break;\n            }\n          case HostRoot:\n            {\n              {\n                var root = finishedWork.stateNode;\n                clearContainer(root.containerInfo);\n              }\n              break;\n            }\n          case HostComponent:\n          case HostText:\n          case HostPortal:\n          case IncompleteClassComponent:\n            break;\n          default:\n            {\n              throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n            }\n        }\n        resetCurrentFiber();\n      }\n    }\n    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n        do {\n          if ((effect.tag & flags) === flags) {\n            var destroy = effect.destroy;\n            effect.destroy = undefined;\n            if (destroy !== undefined) {\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(true);\n                }\n              }\n              safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n              {\n                if ((flags & Insertion) !== NoFlags$1) {\n                  setIsRunningInsertionEffect(false);\n                }\n              }\n            }\n          }\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n    function commitHookEffectListMount(flags, finishedWork) {\n      var updateQueue = finishedWork.updateQueue;\n      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n      if (lastEffect !== null) {\n        var firstEffect = lastEffect.next;\n        var effect = firstEffect;\n        do {\n          if ((effect.tag & flags) === flags) {\n            var create = effect.create;\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(true);\n              }\n            }\n            effect.destroy = create();\n            {\n              if ((flags & Insertion) !== NoFlags$1) {\n                setIsRunningInsertionEffect(false);\n              }\n            }\n            {\n              var destroy = effect.destroy;\n              if (destroy !== undefined && typeof destroy !== \"function\") {\n                var hookName = void 0;\n                if ((effect.tag & Layout) !== NoFlags) {\n                  hookName = \"useLayoutEffect\";\n                } else if ((effect.tag & Insertion) !== NoFlags) {\n                  hookName = \"useInsertionEffect\";\n                } else {\n                  hookName = \"useEffect\";\n                }\n                var addendum = void 0;\n                if (destroy === null) {\n                  addendum = \" You returned null. If your effect does not require clean \" + \"up, return undefined (or nothing).\";\n                } else if (typeof destroy.then === \"function\") {\n                  addendum = \"\\n\\nIt looks like you wrote \" + hookName + \"(async () => ...) or returned a Promise. \" + \"Instead, write the async function inside your effect \" + \"and call it immediately:\\n\\n\" + hookName + \"(() => {\\n\" + \"  async function fetchData() {\\n\" + \"    // You can await here\\n\" + \"    const response = await MyAPI.getData(someId);\\n\" + \"    // ...\\n\" + \"  }\\n\" + \"  fetchData();\\n\" + \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" + \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\n                } else {\n                  addendum = \" You returned: \" + destroy;\n                }\n                error(\"%s must not return anything besides a function, \" + \"which is used for clean-up.%s\", hookName, addendum);\n              }\n            }\n          }\n          effect = effect.next;\n        } while (effect !== firstEffect);\n      }\n    }\n    function commitPassiveEffectDurations(finishedRoot, finishedWork) {\n      {\n        if ((finishedWork.flags & Update) !== NoFlags) {\n          switch (finishedWork.tag) {\n            case Profiler:\n              {\n                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;\n                var _finishedWork$memoize = finishedWork.memoizedProps,\n                  id = _finishedWork$memoize.id,\n                  onPostCommit = _finishedWork$memoize.onPostCommit;\n                var commitTime = getCommitTime();\n                var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n                if (typeof onPostCommit === \"function\") {\n                  onPostCommit(id, phase, passiveEffectDuration, commitTime);\n                }\n                var parentFiber = finishedWork.return;\n                outer: while (parentFiber !== null) {\n                  switch (parentFiber.tag) {\n                    case HostRoot:\n                      var root = parentFiber.stateNode;\n                      root.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n                    case Profiler:\n                      var parentStateNode = parentFiber.stateNode;\n                      parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                      break outer;\n                  }\n                  parentFiber = parentFiber.return;\n                }\n                break;\n              }\n          }\n        }\n      }\n    }\n    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {\n      if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n        switch (finishedWork.tag) {\n          case FunctionComponent:\n          case ForwardRef:\n          case SimpleMemoComponent:\n            {\n              {\n                if (finishedWork.mode & ProfileMode) {\n                  try {\n                    startLayoutEffectTimer();\n                    commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                  } finally {\n                    recordLayoutEffectDuration(finishedWork);\n                  }\n                } else {\n                  commitHookEffectListMount(Layout | HasEffect, finishedWork);\n                }\n              }\n              break;\n            }\n          case ClassComponent:\n            {\n              var instance = finishedWork.stateNode;\n              if (finishedWork.flags & Update) {\n                {\n                  if (current === null) {\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidMount. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidMount();\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidMount();\n                    }\n                  } else {\n                    var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);\n                    var prevState = current.memoizedState;\n                    {\n                      if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                        if (instance.props !== finishedWork.memoizedProps) {\n                          error(\"Expected %s props to match memoized props before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                        if (instance.state !== finishedWork.memoizedState) {\n                          error(\"Expected %s state to match memoized state before \" + \"componentDidUpdate. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                        }\n                      }\n                    }\n                    if (finishedWork.mode & ProfileMode) {\n                      try {\n                        startLayoutEffectTimer();\n                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                      } finally {\n                        recordLayoutEffectDuration(finishedWork);\n                      }\n                    } else {\n                      instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);\n                    }\n                  }\n                }\n              }\n              var updateQueue = finishedWork.updateQueue;\n              if (updateQueue !== null) {\n                {\n                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {\n                    if (instance.props !== finishedWork.memoizedProps) {\n                      error(\"Expected %s props to match memoized props before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.props`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                    if (instance.state !== finishedWork.memoizedState) {\n                      error(\"Expected %s state to match memoized state before \" + \"processing the update queue. \" + \"This might either be because of a bug in React, or because \" + \"a component reassigns its own `this.state`. \" + \"Please file an issue.\", getComponentNameFromFiber(finishedWork) || \"instance\");\n                    }\n                  }\n                }\n                commitUpdateQueue(finishedWork, updateQueue, instance);\n              }\n              break;\n            }\n          case HostRoot:\n            {\n              var _updateQueue = finishedWork.updateQueue;\n              if (_updateQueue !== null) {\n                var _instance = null;\n                if (finishedWork.child !== null) {\n                  switch (finishedWork.child.tag) {\n                    case HostComponent:\n                      _instance = getPublicInstance(finishedWork.child.stateNode);\n                      break;\n                    case ClassComponent:\n                      _instance = finishedWork.child.stateNode;\n                      break;\n                  }\n                }\n                commitUpdateQueue(finishedWork, _updateQueue, _instance);\n              }\n              break;\n            }\n          case HostComponent:\n            {\n              var _instance2 = finishedWork.stateNode;\n              if (current === null && finishedWork.flags & Update) {\n                var type = finishedWork.type;\n                var props = finishedWork.memoizedProps;\n              }\n              break;\n            }\n          case HostText:\n            {\n              break;\n            }\n          case HostPortal:\n            {\n              break;\n            }\n          case Profiler:\n            {\n              {\n                var _finishedWork$memoize2 = finishedWork.memoizedProps,\n                  onCommit = _finishedWork$memoize2.onCommit,\n                  onRender = _finishedWork$memoize2.onRender;\n                var effectDuration = finishedWork.stateNode.effectDuration;\n                var commitTime = getCommitTime();\n                var phase = current === null ? \"mount\" : \"update\";\n                {\n                  if (isCurrentUpdateNested()) {\n                    phase = \"nested-update\";\n                  }\n                }\n                if (typeof onRender === \"function\") {\n                  onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);\n                }\n                {\n                  if (typeof onCommit === \"function\") {\n                    onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);\n                  }\n                  enqueuePendingPassiveProfilerEffect(finishedWork);\n                  var parentFiber = finishedWork.return;\n                  outer: while (parentFiber !== null) {\n                    switch (parentFiber.tag) {\n                      case HostRoot:\n                        var root = parentFiber.stateNode;\n                        root.effectDuration += effectDuration;\n                        break outer;\n                      case Profiler:\n                        var parentStateNode = parentFiber.stateNode;\n                        parentStateNode.effectDuration += effectDuration;\n                        break outer;\n                    }\n                    parentFiber = parentFiber.return;\n                  }\n                }\n              }\n              break;\n            }\n          case SuspenseComponent:\n            {\n              break;\n            }\n          case SuspenseListComponent:\n          case IncompleteClassComponent:\n          case ScopeComponent:\n          case OffscreenComponent:\n          case LegacyHiddenComponent:\n          case TracingMarkerComponent:\n            {\n              break;\n            }\n          default:\n            throw new Error(\"This unit of work tag should not have side-effects. This error is \" + \"likely caused by a bug in React. Please file an issue.\");\n        }\n      }\n      {\n        {\n          if (finishedWork.flags & Ref) {\n            commitAttachRef(finishedWork);\n          }\n        }\n      }\n    }\n    function hideOrUnhideAllChildren(finishedWork, isHidden) {\n      var hostSubtreeRoot = null;\n      {\n        var node = finishedWork;\n        while (true) {\n          if (node.tag === HostComponent) {\n            if (hostSubtreeRoot === null) {\n              hostSubtreeRoot = node;\n              try {\n                var instance = node.stateNode;\n                if (isHidden) {\n                  hideInstance(instance);\n                } else {\n                  unhideInstance(node.stateNode, node.memoizedProps);\n                }\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n            }\n          } else if (node.tag === HostText) {\n            if (hostSubtreeRoot === null) {\n              try {\n                var _instance3 = node.stateNode;\n                if (isHidden) {\n                  hideTextInstance(_instance3);\n                } else {\n                  unhideTextInstance(_instance3, node.memoizedProps);\n                }\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n            }\n          } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          if (node === finishedWork) {\n            return;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === finishedWork) {\n              return;\n            }\n            if (hostSubtreeRoot === node) {\n              hostSubtreeRoot = null;\n            }\n            node = node.return;\n          }\n          if (hostSubtreeRoot === node) {\n            hostSubtreeRoot = null;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n    }\n    function commitAttachRef(finishedWork) {\n      var ref = finishedWork.ref;\n      if (ref !== null) {\n        var instance = finishedWork.stateNode;\n        var instanceToUse;\n        switch (finishedWork.tag) {\n          case HostComponent:\n            instanceToUse = getPublicInstance(instance);\n            break;\n          default:\n            instanceToUse = instance;\n        }\n        if (typeof ref === \"function\") {\n          var retVal;\n          if (finishedWork.mode & ProfileMode) {\n            try {\n              startLayoutEffectTimer();\n              retVal = ref(instanceToUse);\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            retVal = ref(instanceToUse);\n          }\n          {\n            if (typeof retVal === \"function\") {\n              error(\"Unexpected return value from a callback ref in %s. \" + \"A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n        } else {\n          {\n            if (!ref.hasOwnProperty(\"current\")) {\n              error(\"Unexpected ref object provided for %s. \" + \"Use either a ref-setter function or React.createRef().\", getComponentNameFromFiber(finishedWork));\n            }\n          }\n          ref.current = instanceToUse;\n        }\n      }\n    }\n    function detachFiberMutation(fiber) {\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        alternate.return = null;\n      }\n      fiber.return = null;\n    }\n    function detachFiberAfterEffects(fiber) {\n      var alternate = fiber.alternate;\n      if (alternate !== null) {\n        fiber.alternate = null;\n        detachFiberAfterEffects(alternate);\n      }\n      {\n        fiber.child = null;\n        fiber.deletions = null;\n        fiber.sibling = null;\n        if (fiber.tag === HostComponent) {\n          var hostInstance = fiber.stateNode;\n        }\n        fiber.stateNode = null;\n        {\n          fiber._debugOwner = null;\n        }\n        {\n          fiber.return = null;\n          fiber.dependencies = null;\n          fiber.memoizedProps = null;\n          fiber.memoizedState = null;\n          fiber.pendingProps = null;\n          fiber.stateNode = null;\n          fiber.updateQueue = null;\n        }\n      }\n    }\n    function getHostParentFiber(fiber) {\n      var parent = fiber.return;\n      while (parent !== null) {\n        if (isHostParent(parent)) {\n          return parent;\n        }\n        parent = parent.return;\n      }\n      throw new Error(\"Expected to find a host parent. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n    }\n    function isHostParent(fiber) {\n      return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;\n    }\n    function getHostSibling(fiber) {\n      var node = fiber;\n      siblings: while (true) {\n        while (node.sibling === null) {\n          if (node.return === null || isHostParent(node.return)) {\n            return null;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n        while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {\n          if (node.flags & Placement) {\n            continue siblings;\n          }\n          if (node.child === null || node.tag === HostPortal) {\n            continue siblings;\n          } else {\n            node.child.return = node;\n            node = node.child;\n          }\n        }\n        if (!(node.flags & Placement)) {\n          return node.stateNode;\n        }\n      }\n    }\n    function commitPlacement(finishedWork) {\n      var parentFiber = getHostParentFiber(finishedWork);\n      switch (parentFiber.tag) {\n        case HostComponent:\n          {\n            var parent = parentFiber.stateNode;\n            if (parentFiber.flags & ContentReset) {\n              parentFiber.flags &= ~ContentReset;\n            }\n            var before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNode(finishedWork, before, parent);\n            break;\n          }\n        case HostRoot:\n        case HostPortal:\n          {\n            var _parent = parentFiber.stateNode.containerInfo;\n            var _before = getHostSibling(finishedWork);\n            insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\n            break;\n          }\n        default:\n          throw new Error(\"Invalid host parent fiber. This error is likely caused by a bug \" + \"in React. Please file an issue.\");\n      }\n    }\n    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\n      var tag = node.tag;\n      var isHost = tag === HostComponent || tag === HostText;\n      if (isHost) {\n        var stateNode = node.stateNode;\n        if (before) {\n          insertInContainerBefore(parent);\n        } else {\n          appendChildToContainer(parent, stateNode);\n        }\n      } else if (tag === HostPortal) ;else {\n        var child = node.child;\n        if (child !== null) {\n          insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n          var sibling = child.sibling;\n          while (sibling !== null) {\n            insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n            sibling = sibling.sibling;\n          }\n        }\n      }\n    }\n    function insertOrAppendPlacementNode(node, before, parent) {\n      var tag = node.tag;\n      var isHost = tag === HostComponent || tag === HostText;\n      if (isHost) {\n        var stateNode = node.stateNode;\n        if (before) {\n          insertBefore(parent, stateNode, before);\n        } else {\n          appendChild(parent, stateNode);\n        }\n      } else if (tag === HostPortal) ;else {\n        var child = node.child;\n        if (child !== null) {\n          insertOrAppendPlacementNode(child, before, parent);\n          var sibling = child.sibling;\n          while (sibling !== null) {\n            insertOrAppendPlacementNode(sibling, before, parent);\n            sibling = sibling.sibling;\n          }\n        }\n      }\n    }\n    var hostParent = null;\n    var hostParentIsContainer = false;\n    function commitDeletionEffects(root, returnFiber, deletedFiber) {\n      {\n        var parent = returnFiber;\n        findParent: while (parent !== null) {\n          switch (parent.tag) {\n            case HostComponent:\n              {\n                hostParent = parent.stateNode;\n                hostParentIsContainer = false;\n                break findParent;\n              }\n            case HostRoot:\n              {\n                hostParent = parent.stateNode.containerInfo;\n                hostParentIsContainer = true;\n                break findParent;\n              }\n            case HostPortal:\n              {\n                hostParent = parent.stateNode.containerInfo;\n                hostParentIsContainer = true;\n                break findParent;\n              }\n          }\n          parent = parent.return;\n        }\n        if (hostParent === null) {\n          throw new Error(\"Expected to find a host parent. This error is likely caused by \" + \"a bug in React. Please file an issue.\");\n        }\n        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\n        hostParent = null;\n        hostParentIsContainer = false;\n      }\n      detachFiberMutation(deletedFiber);\n    }\n    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {\n      var child = parent.child;\n      while (child !== null) {\n        commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\n        child = child.sibling;\n      }\n    }\n    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {\n      onCommitUnmount(deletedFiber);\n      switch (deletedFiber.tag) {\n        case HostComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n            }\n          }\n        case HostText:\n          {\n            {\n              var prevHostParent = hostParent;\n              var prevHostParentIsContainer = hostParentIsContainer;\n              hostParent = null;\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n              hostParent = prevHostParent;\n              hostParentIsContainer = prevHostParentIsContainer;\n              if (hostParent !== null) {\n                if (hostParentIsContainer) {\n                  removeChildFromContainer(hostParent, deletedFiber.stateNode);\n                } else {\n                  removeChild(hostParent, deletedFiber.stateNode);\n                }\n              }\n            }\n            return;\n          }\n        case DehydratedFragment:\n          {\n            {\n              if (hostParent !== null) {\n                if (hostParentIsContainer) {\n                  clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);\n                } else {\n                  clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\n                }\n              }\n            }\n            return;\n          }\n        case HostPortal:\n          {\n            {\n              var _prevHostParent = hostParent;\n              var _prevHostParentIsContainer = hostParentIsContainer;\n              hostParent = deletedFiber.stateNode.containerInfo;\n              hostParentIsContainer = true;\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n              hostParent = _prevHostParent;\n              hostParentIsContainer = _prevHostParentIsContainer;\n            }\n            return;\n          }\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            {\n              var updateQueue = deletedFiber.updateQueue;\n              if (updateQueue !== null) {\n                var lastEffect = updateQueue.lastEffect;\n                if (lastEffect !== null) {\n                  var firstEffect = lastEffect.next;\n                  var effect = firstEffect;\n                  do {\n                    var _effect = effect,\n                      destroy = _effect.destroy,\n                      tag = _effect.tag;\n                    if (destroy !== undefined) {\n                      if ((tag & Insertion) !== NoFlags$1) {\n                        safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                      } else if ((tag & Layout) !== NoFlags$1) {\n                        if (deletedFiber.mode & ProfileMode) {\n                          startLayoutEffectTimer();\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                          recordLayoutEffectDuration(deletedFiber);\n                        } else {\n                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);\n                        }\n                      }\n                    }\n                    effect = effect.next;\n                  } while (effect !== firstEffect);\n                }\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case ClassComponent:\n          {\n            {\n              safelyDetachRef(deletedFiber, nearestMountedAncestor);\n              var instance = deletedFiber.stateNode;\n              if (typeof instance.componentWillUnmount === \"function\") {\n                safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);\n              }\n            }\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case ScopeComponent:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n        case OffscreenComponent:\n          {\n            {\n              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            }\n            break;\n          }\n        default:\n          {\n            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);\n            return;\n          }\n      }\n    }\n    function commitSuspenseCallback(finishedWork) {\n      var newState = finishedWork.memoizedState;\n    }\n    function attachSuspenseRetryListeners(finishedWork) {\n      var wakeables = finishedWork.updateQueue;\n      if (wakeables !== null) {\n        finishedWork.updateQueue = null;\n        var retryCache = finishedWork.stateNode;\n        if (retryCache === null) {\n          retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n        }\n        wakeables.forEach(function (wakeable) {\n          var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n          if (!retryCache.has(wakeable)) {\n            retryCache.add(wakeable);\n            {\n              if (isDevToolsPresent) {\n                if (inProgressLanes !== null && inProgressRoot !== null) {\n                  restorePendingUpdaters(inProgressRoot, inProgressLanes);\n                } else {\n                  throw Error(\"Expected finished root and lanes to be set. This is a bug in React.\");\n                }\n              }\n            }\n            wakeable.then(retry, retry);\n          }\n        });\n      }\n    }\n    function commitMutationEffects(root, finishedWork, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      setCurrentFiber(finishedWork);\n      commitMutationEffectsOnFiber(finishedWork, root);\n      setCurrentFiber(finishedWork);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\n      var deletions = parentFiber.deletions;\n      if (deletions !== null) {\n        for (var i = 0; i < deletions.length; i++) {\n          var childToDelete = deletions[i];\n          try {\n            commitDeletionEffects(root, parentFiber, childToDelete);\n          } catch (error) {\n            captureCommitPhaseError(childToDelete, parentFiber, error);\n          }\n        }\n      }\n      var prevDebugFiber = getCurrentFiber();\n      if (parentFiber.subtreeFlags & MutationMask) {\n        var child = parentFiber.child;\n        while (child !== null) {\n          setCurrentFiber(child);\n          commitMutationEffectsOnFiber(child, root);\n          child = child.sibling;\n        }\n      }\n      setCurrentFiber(prevDebugFiber);\n    }\n    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {\n      var current = finishedWork.alternate;\n      var flags = finishedWork.flags;\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case MemoComponent:\n        case SimpleMemoComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              try {\n                commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);\n                commitHookEffectListMount(Insertion | HasEffect, finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n              if (finishedWork.mode & ProfileMode) {\n                try {\n                  startLayoutEffectTimer();\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n                recordLayoutEffectDuration(finishedWork);\n              } else {\n                try {\n                  commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n            return;\n          }\n        case ClassComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n            return;\n          }\n        case HostComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Ref) {\n              if (current !== null) {\n                safelyDetachRef(current, current.return);\n              }\n            }\n            {\n              if (finishedWork.flags & ContentReset) {\n                var instance = finishedWork.stateNode;\n                try {\n                  resetTextContent(instance);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n              if (flags & Update) {\n                var _instance4 = finishedWork.stateNode;\n                if (_instance4 != null) {\n                  var newProps = finishedWork.memoizedProps;\n                  var oldProps = current !== null ? current.memoizedProps : newProps;\n                  var type = finishedWork.type;\n                  var updatePayload = finishedWork.updateQueue;\n                  finishedWork.updateQueue = null;\n                  if (updatePayload !== null) {\n                    try {\n                      commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);\n                    } catch (error) {\n                      captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                    }\n                  }\n                }\n              }\n            }\n            return;\n          }\n        case HostText:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              {\n                if (finishedWork.stateNode === null) {\n                  throw new Error(\"This should have a text node initialized. This error is likely \" + \"caused by a bug in React. Please file an issue.\");\n                }\n                var textInstance = finishedWork.stateNode;\n                var newText = finishedWork.memoizedProps;\n                var oldText = current !== null ? current.memoizedProps : newText;\n                try {\n                  commitTextUpdate(textInstance, oldText, newText);\n                } catch (error) {\n                  captureCommitPhaseError(finishedWork, finishedWork.return, error);\n                }\n              }\n            }\n            return;\n          }\n        case HostRoot:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n        case HostPortal:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n        case SuspenseComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            var offscreenFiber = finishedWork.child;\n            if (offscreenFiber.flags & Visibility) {\n              var offscreenInstance = offscreenFiber.stateNode;\n              var newState = offscreenFiber.memoizedState;\n              var isHidden = newState !== null;\n              offscreenInstance.isHidden = isHidden;\n              if (isHidden) {\n                var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;\n                if (!wasHidden) {\n                  markCommitTimeOfFallback();\n                }\n              }\n            }\n            if (flags & Update) {\n              try {\n                commitSuspenseCallback(finishedWork);\n              } catch (error) {\n                captureCommitPhaseError(finishedWork, finishedWork.return, error);\n              }\n              attachSuspenseRetryListeners(finishedWork);\n            }\n            return;\n          }\n        case OffscreenComponent:\n          {\n            var _wasHidden = current !== null && current.memoizedState !== null;\n            {\n              recursivelyTraverseMutationEffects(root, finishedWork);\n            }\n            commitReconciliationEffects(finishedWork);\n            if (flags & Visibility) {\n              var _offscreenInstance = finishedWork.stateNode;\n              var _newState = finishedWork.memoizedState;\n              var _isHidden = _newState !== null;\n              var offscreenBoundary = finishedWork;\n              _offscreenInstance.isHidden = _isHidden;\n              {\n                hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\n              }\n            }\n            return;\n          }\n        case SuspenseListComponent:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            if (flags & Update) {\n              attachSuspenseRetryListeners(finishedWork);\n            }\n            return;\n          }\n        case ScopeComponent:\n          {\n            return;\n          }\n        default:\n          {\n            recursivelyTraverseMutationEffects(root, finishedWork);\n            commitReconciliationEffects(finishedWork);\n            return;\n          }\n      }\n    }\n    function commitReconciliationEffects(finishedWork) {\n      var flags = finishedWork.flags;\n      if (flags & Placement) {\n        try {\n          commitPlacement(finishedWork);\n        } catch (error) {\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\n        }\n        finishedWork.flags &= ~Placement;\n      }\n      if (flags & Hydrating) {\n        finishedWork.flags &= ~Hydrating;\n      }\n    }\n    function commitLayoutEffects(finishedWork, root, committedLanes) {\n      inProgressLanes = committedLanes;\n      inProgressRoot = root;\n      nextEffect = finishedWork;\n      commitLayoutEffects_begin(finishedWork, root, committedLanes);\n      inProgressLanes = null;\n      inProgressRoot = null;\n    }\n    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\n      var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n        if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        }\n      }\n    }\n    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & LayoutMask) !== NoFlags) {\n          var current = fiber.alternate;\n          setCurrentFiber(fiber);\n          try {\n            commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n          resetCurrentFiber();\n        }\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {\n      nextEffect = finishedWork;\n      commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);\n    }\n    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var firstChild = fiber.child;\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n          firstChild.return = fiber;\n          nextEffect = firstChild;\n        } else {\n          commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);\n        }\n      }\n    }\n    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n          try {\n            commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);\n          } catch (error) {\n            captureCommitPhaseError(fiber, fiber.return, error);\n          }\n          resetCurrentFiber();\n        }\n        if (fiber === subtreeRoot) {\n          nextEffect = null;\n          return;\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              try {\n                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n              } finally {\n                recordPassiveEffectDuration(finishedWork);\n              }\n            } else {\n              commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\n            }\n            break;\n          }\n      }\n    }\n    function commitPassiveUnmountEffects(firstChild) {\n      nextEffect = firstChild;\n      commitPassiveUnmountEffects_begin();\n    }\n    function commitPassiveUnmountEffects_begin() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var child = fiber.child;\n        if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n          var deletions = fiber.deletions;\n          if (deletions !== null) {\n            for (var i = 0; i < deletions.length; i++) {\n              var fiberToDelete = deletions[i];\n              nextEffect = fiberToDelete;\n              commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);\n            }\n            {\n              var previousFiber = fiber.alternate;\n              if (previousFiber !== null) {\n                var detachedChild = previousFiber.child;\n                if (detachedChild !== null) {\n                  previousFiber.child = null;\n                  do {\n                    var detachedSibling = detachedChild.sibling;\n                    detachedChild.sibling = null;\n                    detachedChild = detachedSibling;\n                  } while (detachedChild !== null);\n                }\n              }\n            }\n            nextEffect = fiber;\n          }\n        }\n        if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffects_complete();\n        }\n      }\n    }\n    function commitPassiveUnmountEffects_complete() {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        if ((fiber.flags & Passive) !== NoFlags) {\n          setCurrentFiber(fiber);\n          commitPassiveUnmountOnFiber(fiber);\n          resetCurrentFiber();\n        }\n        var sibling = fiber.sibling;\n        if (sibling !== null) {\n          sibling.return = fiber.return;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = fiber.return;\n      }\n    }\n    function commitPassiveUnmountOnFiber(finishedWork) {\n      switch (finishedWork.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (finishedWork.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n              recordPassiveEffectDuration(finishedWork);\n            } else {\n              commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);\n            }\n            break;\n          }\n      }\n    }\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        setCurrentFiber(fiber);\n        commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n        resetCurrentFiber();\n        var child = fiber.child;\n        if (child !== null) {\n          child.return = fiber;\n          nextEffect = child;\n        } else {\n          commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);\n        }\n      }\n    }\n    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {\n      while (nextEffect !== null) {\n        var fiber = nextEffect;\n        var sibling = fiber.sibling;\n        var returnFiber = fiber.return;\n        {\n          detachFiberAfterEffects(fiber);\n          if (fiber === deletedSubtreeRoot) {\n            nextEffect = null;\n            return;\n          }\n        }\n        if (sibling !== null) {\n          sibling.return = returnFiber;\n          nextEffect = sibling;\n          return;\n        }\n        nextEffect = returnFiber;\n      }\n    }\n    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {\n      switch (current.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent:\n          {\n            if (current.mode & ProfileMode) {\n              startPassiveEffectTimer();\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n              recordPassiveEffectDuration(current);\n            } else {\n              commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\n            }\n            break;\n          }\n      }\n    }\n    var COMPONENT_TYPE = 0;\n    var HAS_PSEUDO_CLASS_TYPE = 1;\n    var ROLE_TYPE = 2;\n    var TEST_NAME_TYPE = 3;\n    var TEXT_TYPE = 4;\n    if (typeof Symbol === \"function\" && Symbol.for) {\n      var symbolFor = Symbol.for;\n      COMPONENT_TYPE = symbolFor(\"selector.component\");\n      HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\n      ROLE_TYPE = symbolFor(\"selector.role\");\n      TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\n      TEXT_TYPE = symbolFor(\"selector.text\");\n    }\n    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\n    function isLegacyActEnvironment(fiber) {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n        var jestIsDefined = typeof jest !== \"undefined\";\n        return jestIsDefined && isReactActEnvironmentGlobal !== false;\n      }\n    }\n    function isConcurrentActEnvironment() {\n      {\n        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\" ? IS_REACT_ACT_ENVIRONMENT : undefined;\n        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\n          error(\"The current testing environment is not configured to support \" + \"act(...)\");\n        }\n        return isReactActEnvironmentGlobal;\n      }\n    }\n    var ceil = Math.ceil;\n    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\n      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\n      ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\n      ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\n    var NoContext = 0;\n    var BatchedContext = 1;\n    var RenderContext = 2;\n    var CommitContext = 4;\n    var RootInProgress = 0;\n    var RootFatalErrored = 1;\n    var RootErrored = 2;\n    var RootSuspended = 3;\n    var RootSuspendedWithDelay = 4;\n    var RootCompleted = 5;\n    var RootDidNotComplete = 6;\n    var executionContext = NoContext;\n    var workInProgressRoot = null;\n    var workInProgress = null;\n    var workInProgressRootRenderLanes = NoLanes;\n    var subtreeRenderLanes = NoLanes;\n    var subtreeRenderLanesCursor = createCursor(NoLanes);\n    var workInProgressRootExitStatus = RootInProgress;\n    var workInProgressRootFatalError = null;\n    var workInProgressRootIncludedLanes = NoLanes;\n    var workInProgressRootSkippedLanes = NoLanes;\n    var workInProgressRootInterleavedUpdatedLanes = NoLanes;\n    var workInProgressRootPingedLanes = NoLanes;\n    var workInProgressRootConcurrentErrors = null;\n    var workInProgressRootRecoverableErrors = null;\n    var globalMostRecentFallbackTime = 0;\n    var FALLBACK_THROTTLE_MS = 500;\n    var workInProgressRootRenderTargetTime = Infinity;\n    var RENDER_TIMEOUT_MS = 500;\n    var workInProgressTransitions = null;\n    function resetRenderTimer() {\n      workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n    }\n    function getRenderTargetTime() {\n      return workInProgressRootRenderTargetTime;\n    }\n    var hasUncaughtError = false;\n    var firstUncaughtError = null;\n    var legacyErrorBoundariesThatAlreadyFailed = null;\n    var rootDoesHavePassiveEffects = false;\n    var rootWithPendingPassiveEffects = null;\n    var pendingPassiveEffectsLanes = NoLanes;\n    var pendingPassiveProfilerEffects = [];\n    var pendingPassiveTransitions = null;\n    var NESTED_UPDATE_LIMIT = 50;\n    var nestedUpdateCount = 0;\n    var rootWithNestedUpdates = null;\n    var isFlushingPassiveEffects = false;\n    var didScheduleUpdateDuringPassiveEffects = false;\n    var NESTED_PASSIVE_UPDATE_LIMIT = 50;\n    var nestedPassiveUpdateCount = 0;\n    var rootWithPassiveNestedUpdates = null;\n    var currentEventTime = NoTimestamp;\n    var currentEventTransitionLane = NoLanes;\n    var isRunningInsertionEffect = false;\n    function getWorkInProgressRoot() {\n      return workInProgressRoot;\n    }\n    function requestEventTime() {\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        return now();\n      }\n      if (currentEventTime !== NoTimestamp) {\n        return currentEventTime;\n      }\n      currentEventTime = now();\n      return currentEventTime;\n    }\n    function requestUpdateLane(fiber) {\n      var mode = fiber.mode;\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {\n        return pickArbitraryLane(workInProgressRootRenderLanes);\n      }\n      var isTransition = requestCurrentTransition() !== NoTransition;\n      if (isTransition) {\n        if (ReactCurrentBatchConfig$2.transition !== null) {\n          var transition = ReactCurrentBatchConfig$2.transition;\n          if (!transition._updatedFibers) {\n            transition._updatedFibers = new Set();\n          }\n          transition._updatedFibers.add(fiber);\n        }\n        if (currentEventTransitionLane === NoLane) {\n          currentEventTransitionLane = claimNextTransitionLane();\n        }\n        return currentEventTransitionLane;\n      }\n      var updateLane = getCurrentUpdatePriority();\n      if (updateLane !== NoLane) {\n        return updateLane;\n      }\n      var eventLane = getCurrentEventPriority();\n      return eventLane;\n    }\n    function requestRetryLane(fiber) {\n      var mode = fiber.mode;\n      if ((mode & ConcurrentMode) === NoMode) {\n        return SyncLane;\n      }\n      return claimNextRetryLane();\n    }\n    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\n      checkForNestedUpdates();\n      {\n        if (isRunningInsertionEffect) {\n          error(\"useInsertionEffect must not schedule updates.\");\n        }\n      }\n      {\n        if (isFlushingPassiveEffects) {\n          didScheduleUpdateDuringPassiveEffects = true;\n        }\n      }\n      markRootUpdated(root, lane, eventTime);\n      if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {\n        warnAboutRenderPhaseUpdatesInDEV(fiber);\n      } else {\n        {\n          if (isDevToolsPresent) {\n            addFiberToLanesMap(root, fiber, lane);\n          }\n        }\n        warnIfUpdatesNotWrappedWithActDEV(fiber);\n        if (root === workInProgressRoot) {\n          if ((executionContext & RenderContext) === NoContext) {\n            workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);\n          }\n          if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n            markRootSuspended$1(root, workInProgressRootRenderLanes);\n          }\n        }\n        ensureRootIsScheduled(root, eventTime);\n        if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n    }\n    function isUnsafeClassRenderPhaseUpdate(fiber) {\n      return (executionContext & RenderContext) !== NoContext;\n    }\n    function ensureRootIsScheduled(root, currentTime) {\n      var existingCallbackNode = root.callbackNode;\n      markStarvedLanesAsExpired(root, currentTime);\n      var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n      if (nextLanes === NoLanes) {\n        if (existingCallbackNode !== null) {\n          cancelCallback$1(existingCallbackNode);\n        }\n        root.callbackNode = null;\n        root.callbackPriority = NoLane;\n        return;\n      }\n      var newCallbackPriority = getHighestPriorityLane(nextLanes);\n      var existingCallbackPriority = root.callbackPriority;\n      if (existingCallbackPriority === newCallbackPriority && !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {\n        {\n          if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {\n            error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\");\n          }\n        }\n        return;\n      }\n      if (existingCallbackNode != null) {\n        cancelCallback$1(existingCallbackNode);\n      }\n      var newCallbackNode;\n      if (newCallbackPriority === SyncLane) {\n        if (root.tag === LegacyRoot) {\n          if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\n            ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\n          }\n          scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n        } else {\n          scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n        }\n        {\n          scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\n        }\n        newCallbackNode = null;\n      } else {\n        var schedulerPriorityLevel;\n        switch (lanesToEventPriority(nextLanes)) {\n          case DiscreteEventPriority:\n            schedulerPriorityLevel = ImmediatePriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriorityLevel = UserBlockingPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriorityLevel = IdlePriority;\n            break;\n          default:\n            schedulerPriorityLevel = NormalPriority;\n            break;\n        }\n        newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));\n      }\n      root.callbackPriority = newCallbackPriority;\n      root.callbackNode = newCallbackNode;\n    }\n    function performConcurrentWorkOnRoot(root, didTimeout) {\n      {\n        resetNestedUpdateFlag();\n      }\n      currentEventTime = NoTimestamp;\n      currentEventTransitionLane = NoLanes;\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      var originalCallbackNode = root.callbackNode;\n      var didFlushPassiveEffects = flushPassiveEffects();\n      if (didFlushPassiveEffects) {\n        if (root.callbackNode !== originalCallbackNode) {\n          return null;\n        }\n      }\n      var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);\n      if (lanes === NoLanes) {\n        return null;\n      }\n      var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;\n      var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);\n      if (exitStatus !== RootInProgress) {\n        if (exitStatus === RootErrored) {\n          var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n          if (errorRetryLanes !== NoLanes) {\n            lanes = errorRetryLanes;\n            exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n          }\n        }\n        if (exitStatus === RootFatalErrored) {\n          var fatalError = workInProgressRootFatalError;\n          prepareFreshStack(root, NoLanes);\n          markRootSuspended$1(root, lanes);\n          ensureRootIsScheduled(root, now());\n          throw fatalError;\n        }\n        if (exitStatus === RootDidNotComplete) {\n          markRootSuspended$1(root, lanes);\n        } else {\n          var renderWasConcurrent = !includesBlockingLane(root, lanes);\n          var finishedWork = root.current.alternate;\n          if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {\n            exitStatus = renderRootSync(root, lanes);\n            if (exitStatus === RootErrored) {\n              var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n              if (_errorRetryLanes !== NoLanes) {\n                lanes = _errorRetryLanes;\n                exitStatus = recoverFromConcurrentError(root, _errorRetryLanes);\n              }\n            }\n            if (exitStatus === RootFatalErrored) {\n              var _fatalError = workInProgressRootFatalError;\n              prepareFreshStack(root, NoLanes);\n              markRootSuspended$1(root, lanes);\n              ensureRootIsScheduled(root, now());\n              throw _fatalError;\n            }\n          }\n          root.finishedWork = finishedWork;\n          root.finishedLanes = lanes;\n          finishConcurrentRender(root, exitStatus, lanes);\n        }\n      }\n      ensureRootIsScheduled(root, now());\n      if (root.callbackNode === originalCallbackNode) {\n        return performConcurrentWorkOnRoot.bind(null, root);\n      }\n      return null;\n    }\n    function recoverFromConcurrentError(root, errorRetryLanes) {\n      var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\n      if (isRootDehydrated(root)) {\n        var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\n        rootWorkInProgress.flags |= ForceClientRender;\n        {\n          errorHydratingContainer(root.containerInfo);\n        }\n      }\n      var exitStatus = renderRootSync(root, errorRetryLanes);\n      if (exitStatus !== RootErrored) {\n        var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\n        workInProgressRootRecoverableErrors = errorsFromFirstAttempt;\n        if (errorsFromSecondAttempt !== null) {\n          queueRecoverableErrors(errorsFromSecondAttempt);\n        }\n      }\n      return exitStatus;\n    }\n    function queueRecoverableErrors(errors) {\n      if (workInProgressRootRecoverableErrors === null) {\n        workInProgressRootRecoverableErrors = errors;\n      } else {\n        workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);\n      }\n    }\n    function finishConcurrentRender(root, exitStatus, lanes) {\n      switch (exitStatus) {\n        case RootInProgress:\n        case RootFatalErrored:\n          {\n            throw new Error(\"Root did not complete. This is a bug in React.\");\n          }\n        case RootErrored:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootSuspended:\n          {\n            markRootSuspended$1(root, lanes);\n            if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {\n              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n              if (msUntilTimeout > 10) {\n                var nextLanes = getNextLanes(root, NoLanes);\n                if (nextLanes !== NoLanes) {\n                  break;\n                }\n                var suspendedLanes = root.suspendedLanes;\n                if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n                  var eventTime = requestEventTime();\n                  markRootPinged(root, suspendedLanes);\n                  break;\n                }\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);\n                break;\n              }\n            }\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootSuspendedWithDelay:\n          {\n            markRootSuspended$1(root, lanes);\n            if (includesOnlyTransitions(lanes)) {\n              break;\n            }\n            if (!shouldForceFlushFallbacksInDEV()) {\n              var mostRecentEventTime = getMostRecentEventTime(root, lanes);\n              var eventTimeMs = mostRecentEventTime;\n              var timeElapsedMs = now() - eventTimeMs;\n              var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n              if (_msUntilTimeout > 10) {\n                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);\n                break;\n              }\n            }\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        case RootCompleted:\n          {\n            commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n            break;\n          }\n        default:\n          {\n            throw new Error(\"Unknown root exit status.\");\n          }\n      }\n    }\n    function isRenderConsistentWithExternalStores(finishedWork) {\n      var node = finishedWork;\n      while (true) {\n        if (node.flags & StoreConsistency) {\n          var updateQueue = node.updateQueue;\n          if (updateQueue !== null) {\n            var checks = updateQueue.stores;\n            if (checks !== null) {\n              for (var i = 0; i < checks.length; i++) {\n                var check = checks[i];\n                var getSnapshot = check.getSnapshot;\n                var renderedValue = check.value;\n                try {\n                  if (!objectIs(getSnapshot(), renderedValue)) {\n                    return false;\n                  }\n                } catch (error) {\n                  return false;\n                }\n              }\n            }\n          }\n        }\n        var child = node.child;\n        if (node.subtreeFlags & StoreConsistency && child !== null) {\n          child.return = node;\n          node = child;\n          continue;\n        }\n        if (node === finishedWork) {\n          return true;\n        }\n        while (node.sibling === null) {\n          if (node.return === null || node.return === finishedWork) {\n            return true;\n          }\n          node = node.return;\n        }\n        node.sibling.return = node.return;\n        node = node.sibling;\n      }\n      return true;\n    }\n    function markRootSuspended$1(root, suspendedLanes) {\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);\n      markRootSuspended(root, suspendedLanes);\n    }\n    function performSyncWorkOnRoot(root) {\n      {\n        syncNestedUpdateFlag();\n      }\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      flushPassiveEffects();\n      var lanes = getNextLanes(root, NoLanes);\n      if (!includesSomeLane(lanes, SyncLane)) {\n        ensureRootIsScheduled(root, now());\n        return null;\n      }\n      var exitStatus = renderRootSync(root, lanes);\n      if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n        var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n        if (errorRetryLanes !== NoLanes) {\n          lanes = errorRetryLanes;\n          exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\n        }\n      }\n      if (exitStatus === RootFatalErrored) {\n        var fatalError = workInProgressRootFatalError;\n        prepareFreshStack(root, NoLanes);\n        markRootSuspended$1(root, lanes);\n        ensureRootIsScheduled(root, now());\n        throw fatalError;\n      }\n      if (exitStatus === RootDidNotComplete) {\n        throw new Error(\"Root did not complete. This is a bug in React.\");\n      }\n      var finishedWork = root.current.alternate;\n      root.finishedWork = finishedWork;\n      root.finishedLanes = lanes;\n      commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);\n      ensureRootIsScheduled(root, now());\n      return null;\n    }\n    function batchedUpdates$1(fn, a) {\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n      try {\n        return fn(a);\n      } finally {\n        executionContext = prevExecutionContext;\n        if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {\n          resetRenderTimer();\n          flushSyncCallbacksOnlyInLegacyMode();\n        }\n      }\n    }\n    function flushSync(fn) {\n      if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {\n        flushPassiveEffects();\n      }\n      var prevExecutionContext = executionContext;\n      executionContext |= BatchedContext;\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n      var previousPriority = getCurrentUpdatePriority();\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        if (fn) {\n          return fn();\n        } else {\n          return undefined;\n        }\n      } finally {\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        executionContext = prevExecutionContext;\n        if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n          flushSyncCallbacks();\n        }\n      }\n    }\n    function pushRenderLanes(fiber, lanes) {\n      push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n      subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n      workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);\n    }\n    function popRenderLanes(fiber) {\n      subtreeRenderLanes = subtreeRenderLanesCursor.current;\n      pop(subtreeRenderLanesCursor, fiber);\n    }\n    function prepareFreshStack(root, lanes) {\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n      var timeoutHandle = root.timeoutHandle;\n      if (timeoutHandle !== noTimeout) {\n        root.timeoutHandle = noTimeout;\n        cancelTimeout(timeoutHandle);\n      }\n      if (workInProgress !== null) {\n        var interruptedWork = workInProgress.return;\n        while (interruptedWork !== null) {\n          var current = interruptedWork.alternate;\n          unwindInterruptedWork(current, interruptedWork);\n          interruptedWork = interruptedWork.return;\n        }\n      }\n      workInProgressRoot = root;\n      var rootWorkInProgress = createWorkInProgress(root.current, null);\n      workInProgress = rootWorkInProgress;\n      workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n      workInProgressRootExitStatus = RootInProgress;\n      workInProgressRootFatalError = null;\n      workInProgressRootSkippedLanes = NoLanes;\n      workInProgressRootInterleavedUpdatedLanes = NoLanes;\n      workInProgressRootPingedLanes = NoLanes;\n      workInProgressRootConcurrentErrors = null;\n      workInProgressRootRecoverableErrors = null;\n      finishQueueingConcurrentUpdates();\n      {\n        ReactStrictModeWarnings.discardPendingWarnings();\n      }\n      return rootWorkInProgress;\n    }\n    function handleError(root, thrownValue) {\n      do {\n        var erroredWork = workInProgress;\n        try {\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          resetCurrentFiber();\n          ReactCurrentOwner$2.current = null;\n          if (erroredWork === null || erroredWork.return === null) {\n            workInProgressRootExitStatus = RootFatalErrored;\n            workInProgressRootFatalError = thrownValue;\n            workInProgress = null;\n            return;\n          }\n          if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n          }\n          if (enableSchedulingProfiler) {\n            markComponentRenderStopped();\n            if (thrownValue !== null && typeof thrownValue === \"object\" && typeof thrownValue.then === \"function\") {\n              var wakeable = thrownValue;\n              markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);\n            } else {\n              markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);\n            }\n          }\n          throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);\n          completeUnitOfWork(erroredWork);\n        } catch (yetAnotherThrownValue) {\n          thrownValue = yetAnotherThrownValue;\n          if (workInProgress === erroredWork && erroredWork !== null) {\n            erroredWork = erroredWork.return;\n            workInProgress = erroredWork;\n          } else {\n            erroredWork = workInProgress;\n          }\n          continue;\n        }\n        return;\n      } while (true);\n    }\n    function pushDispatcher() {\n      var prevDispatcher = ReactCurrentDispatcher$2.current;\n      ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\n      if (prevDispatcher === null) {\n        return ContextOnlyDispatcher;\n      } else {\n        return prevDispatcher;\n      }\n    }\n    function popDispatcher(prevDispatcher) {\n      ReactCurrentDispatcher$2.current = prevDispatcher;\n    }\n    function markCommitTimeOfFallback() {\n      globalMostRecentFallbackTime = now();\n    }\n    function markSkippedUpdateLanes(lane) {\n      workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);\n    }\n    function renderDidSuspend() {\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootSuspended;\n      }\n    }\n    function renderDidSuspendDelayIfPossible() {\n      if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {\n        workInProgressRootExitStatus = RootSuspendedWithDelay;\n      }\n      if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {\n        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\n      }\n    }\n    function renderDidError(error) {\n      if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\n        workInProgressRootExitStatus = RootErrored;\n      }\n      if (workInProgressRootConcurrentErrors === null) {\n        workInProgressRootConcurrentErrors = [error];\n      } else {\n        workInProgressRootConcurrentErrors.push(error);\n      }\n    }\n    function renderHasNotSuspendedYet() {\n      return workInProgressRootExitStatus === RootInProgress;\n    }\n    function renderRootSync(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        prepareFreshStack(root, lanes);\n      }\n      do {\n        try {\n          workLoopSync();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n      resetContextDependencies();\n      executionContext = prevExecutionContext;\n      popDispatcher(prevDispatcher);\n      if (workInProgress !== null) {\n        throw new Error(\"Cannot commit an incomplete root. This error is likely caused by a \" + \"bug in React. Please file an issue.\");\n      }\n      workInProgressRoot = null;\n      workInProgressRootRenderLanes = NoLanes;\n      return workInProgressRootExitStatus;\n    }\n    function workLoopSync() {\n      while (workInProgress !== null) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n    function renderRootConcurrent(root, lanes) {\n      var prevExecutionContext = executionContext;\n      executionContext |= RenderContext;\n      var prevDispatcher = pushDispatcher();\n      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n        {\n          if (isDevToolsPresent) {\n            var memoizedUpdaters = root.memoizedUpdaters;\n            if (memoizedUpdaters.size > 0) {\n              restorePendingUpdaters(root, workInProgressRootRenderLanes);\n              memoizedUpdaters.clear();\n            }\n            movePendingFibersToMemoized(root, lanes);\n          }\n        }\n        workInProgressTransitions = getTransitionsForLanes();\n        resetRenderTimer();\n        prepareFreshStack(root, lanes);\n      }\n      do {\n        try {\n          workLoopConcurrent();\n          break;\n        } catch (thrownValue) {\n          handleError(root, thrownValue);\n        }\n      } while (true);\n      resetContextDependencies();\n      popDispatcher(prevDispatcher);\n      executionContext = prevExecutionContext;\n      if (workInProgress !== null) {\n        return RootInProgress;\n      } else {\n        workInProgressRoot = null;\n        workInProgressRootRenderLanes = NoLanes;\n        return workInProgressRootExitStatus;\n      }\n    }\n    function workLoopConcurrent() {\n      while (workInProgress !== null && !shouldYield()) {\n        performUnitOfWork(workInProgress);\n      }\n    }\n    function performUnitOfWork(unitOfWork) {\n      var current = unitOfWork.alternate;\n      setCurrentFiber(unitOfWork);\n      var next;\n      if ((unitOfWork.mode & ProfileMode) !== NoMode) {\n        startProfilerTimer(unitOfWork);\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n        stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n      } else {\n        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\n      }\n      resetCurrentFiber();\n      unitOfWork.memoizedProps = unitOfWork.pendingProps;\n      if (next === null) {\n        completeUnitOfWork(unitOfWork);\n      } else {\n        workInProgress = next;\n      }\n      ReactCurrentOwner$2.current = null;\n    }\n    function completeUnitOfWork(unitOfWork) {\n      var completedWork = unitOfWork;\n      do {\n        var current = completedWork.alternate;\n        var returnFiber = completedWork.return;\n        if ((completedWork.flags & Incomplete) === NoFlags) {\n          setCurrentFiber(completedWork);\n          var next = void 0;\n          if ((completedWork.mode & ProfileMode) === NoMode) {\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n          } else {\n            startProfilerTimer(completedWork);\n            next = completeWork(current, completedWork, subtreeRenderLanes);\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n          }\n          resetCurrentFiber();\n          if (next !== null) {\n            workInProgress = next;\n            return;\n          }\n        } else {\n          var _next = unwindWork(current, completedWork);\n          if (_next !== null) {\n            _next.flags &= HostEffectMask;\n            workInProgress = _next;\n            return;\n          }\n          if ((completedWork.mode & ProfileMode) !== NoMode) {\n            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n            var actualDuration = completedWork.actualDuration;\n            var child = completedWork.child;\n            while (child !== null) {\n              actualDuration += child.actualDuration;\n              child = child.sibling;\n            }\n            completedWork.actualDuration = actualDuration;\n          }\n          if (returnFiber !== null) {\n            returnFiber.flags |= Incomplete;\n            returnFiber.subtreeFlags = NoFlags;\n            returnFiber.deletions = null;\n          } else {\n            workInProgressRootExitStatus = RootDidNotComplete;\n            workInProgress = null;\n            return;\n          }\n        }\n        var siblingFiber = completedWork.sibling;\n        if (siblingFiber !== null) {\n          workInProgress = siblingFiber;\n          return;\n        }\n        completedWork = returnFiber;\n        workInProgress = completedWork;\n      } while (completedWork !== null);\n      if (workInProgressRootExitStatus === RootInProgress) {\n        workInProgressRootExitStatus = RootCompleted;\n      }\n    }\n    function commitRoot(root, recoverableErrors, transitions) {\n      var previousUpdateLanePriority = getCurrentUpdatePriority();\n      var prevTransition = ReactCurrentBatchConfig$2.transition;\n      try {\n        ReactCurrentBatchConfig$2.transition = null;\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);\n      } finally {\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n        setCurrentUpdatePriority(previousUpdateLanePriority);\n      }\n      return null;\n    }\n    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {\n      do {\n        flushPassiveEffects();\n      } while (rootWithPendingPassiveEffects !== null);\n      flushRenderPhaseStrictModeWarningsInDEV();\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Should not already be working.\");\n      }\n      var finishedWork = root.finishedWork;\n      var lanes = root.finishedLanes;\n      if (finishedWork === null) {\n        return null;\n      } else {\n        {\n          if (lanes === NoLanes) {\n            error(\"root.finishedLanes should not be empty during a commit. This is a \" + \"bug in React.\");\n          }\n        }\n      }\n      root.finishedWork = null;\n      root.finishedLanes = NoLanes;\n      if (finishedWork === root.current) {\n        throw new Error(\"Cannot commit the same tree as before. This error is likely caused by \" + \"a bug in React. Please file an issue.\");\n      }\n      root.callbackNode = null;\n      root.callbackPriority = NoLane;\n      var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n      markRootFinished(root, remainingLanes);\n      if (root === workInProgressRoot) {\n        workInProgressRoot = null;\n        workInProgress = null;\n        workInProgressRootRenderLanes = NoLanes;\n      }\n      if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          pendingPassiveTransitions = transitions;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n      var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n      var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;\n      if (subtreeHasEffects || rootHasEffect) {\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        ReactCurrentBatchConfig$2.transition = null;\n        var previousPriority = getCurrentUpdatePriority();\n        setCurrentUpdatePriority(DiscreteEventPriority);\n        var prevExecutionContext = executionContext;\n        executionContext |= CommitContext;\n        ReactCurrentOwner$2.current = null;\n        var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);\n        {\n          recordCommitTime();\n        }\n        commitMutationEffects(root, finishedWork, lanes);\n        resetAfterCommit(root.containerInfo);\n        root.current = finishedWork;\n        commitLayoutEffects(finishedWork, root, lanes);\n        requestPaint();\n        executionContext = prevExecutionContext;\n        setCurrentUpdatePriority(previousPriority);\n        ReactCurrentBatchConfig$2.transition = prevTransition;\n      } else {\n        root.current = finishedWork;\n        {\n          recordCommitTime();\n        }\n      }\n      if (rootDoesHavePassiveEffects) {\n        rootDoesHavePassiveEffects = false;\n        rootWithPendingPassiveEffects = root;\n        pendingPassiveEffectsLanes = lanes;\n      } else {\n        {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n        }\n      }\n      remainingLanes = root.pendingLanes;\n      if (remainingLanes === NoLanes) {\n        legacyErrorBoundariesThatAlreadyFailed = null;\n      }\n      onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\n      {\n        if (isDevToolsPresent) {\n          root.memoizedUpdaters.clear();\n        }\n      }\n      ensureRootIsScheduled(root, now());\n      if (recoverableErrors !== null) {\n        var onRecoverableError = root.onRecoverableError;\n        for (var i = 0; i < recoverableErrors.length; i++) {\n          var recoverableError = recoverableErrors[i];\n          var componentStack = recoverableError.stack;\n          var digest = recoverableError.digest;\n          onRecoverableError(recoverableError.value, {\n            componentStack: componentStack,\n            digest: digest\n          });\n        }\n      }\n      if (hasUncaughtError) {\n        hasUncaughtError = false;\n        var error$1 = firstUncaughtError;\n        firstUncaughtError = null;\n        throw error$1;\n      }\n      if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {\n        flushPassiveEffects();\n      }\n      remainingLanes = root.pendingLanes;\n      if (includesSomeLane(remainingLanes, SyncLane)) {\n        {\n          markNestedUpdateScheduled();\n        }\n        if (root === rootWithNestedUpdates) {\n          nestedUpdateCount++;\n        } else {\n          nestedUpdateCount = 0;\n          rootWithNestedUpdates = root;\n        }\n      } else {\n        nestedUpdateCount = 0;\n      }\n      flushSyncCallbacks();\n      return null;\n    }\n    function flushPassiveEffects() {\n      if (rootWithPendingPassiveEffects !== null) {\n        var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n        var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n        var prevTransition = ReactCurrentBatchConfig$2.transition;\n        var previousPriority = getCurrentUpdatePriority();\n        try {\n          ReactCurrentBatchConfig$2.transition = null;\n          setCurrentUpdatePriority(priority);\n          return flushPassiveEffectsImpl();\n        } finally {\n          setCurrentUpdatePriority(previousPriority);\n          ReactCurrentBatchConfig$2.transition = prevTransition;\n        }\n      }\n      return false;\n    }\n    function enqueuePendingPassiveProfilerEffect(fiber) {\n      {\n        pendingPassiveProfilerEffects.push(fiber);\n        if (!rootDoesHavePassiveEffects) {\n          rootDoesHavePassiveEffects = true;\n          scheduleCallback$1(NormalPriority, function () {\n            flushPassiveEffects();\n            return null;\n          });\n        }\n      }\n    }\n    function flushPassiveEffectsImpl() {\n      if (rootWithPendingPassiveEffects === null) {\n        return false;\n      }\n      var transitions = pendingPassiveTransitions;\n      pendingPassiveTransitions = null;\n      var root = rootWithPendingPassiveEffects;\n      var lanes = pendingPassiveEffectsLanes;\n      rootWithPendingPassiveEffects = null;\n      pendingPassiveEffectsLanes = NoLanes;\n      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n        throw new Error(\"Cannot flush passive effects while already rendering.\");\n      }\n      {\n        isFlushingPassiveEffects = true;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      var prevExecutionContext = executionContext;\n      executionContext |= CommitContext;\n      commitPassiveUnmountEffects(root.current);\n      commitPassiveMountEffects(root, root.current, lanes, transitions);\n      {\n        var profilerEffects = pendingPassiveProfilerEffects;\n        pendingPassiveProfilerEffects = [];\n        for (var i = 0; i < profilerEffects.length; i++) {\n          var _fiber = profilerEffects[i];\n          commitPassiveEffectDurations(root, _fiber);\n        }\n      }\n      executionContext = prevExecutionContext;\n      flushSyncCallbacks();\n      {\n        if (didScheduleUpdateDuringPassiveEffects) {\n          if (root === rootWithPassiveNestedUpdates) {\n            nestedPassiveUpdateCount++;\n          } else {\n            nestedPassiveUpdateCount = 0;\n            rootWithPassiveNestedUpdates = root;\n          }\n        } else {\n          nestedPassiveUpdateCount = 0;\n        }\n        isFlushingPassiveEffects = false;\n        didScheduleUpdateDuringPassiveEffects = false;\n      }\n      onPostCommitRoot(root);\n      {\n        var stateNode = root.current.stateNode;\n        stateNode.effectDuration = 0;\n        stateNode.passiveEffectDuration = 0;\n      }\n      return true;\n    }\n    function isAlreadyFailedLegacyErrorBoundary(instance) {\n      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);\n    }\n    function markLegacyErrorBoundaryAsFailed(instance) {\n      if (legacyErrorBoundariesThatAlreadyFailed === null) {\n        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n      } else {\n        legacyErrorBoundariesThatAlreadyFailed.add(instance);\n      }\n    }\n    function prepareToThrowUncaughtError(error) {\n      if (!hasUncaughtError) {\n        hasUncaughtError = true;\n        firstUncaughtError = error;\n      }\n    }\n    var onUncaughtError = prepareToThrowUncaughtError;\n    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\n      var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\n      var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\n      var root = enqueueUpdate(rootFiber, update, SyncLane);\n      var eventTime = requestEventTime();\n      if (root !== null) {\n        markRootUpdated(root, SyncLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\n      {\n        reportUncaughtErrorInDEV(error$1);\n        setIsRunningInsertionEffect(false);\n      }\n      if (sourceFiber.tag === HostRoot) {\n        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\n        return;\n      }\n      var fiber = null;\n      {\n        fiber = sourceFiber.return;\n      }\n      while (fiber !== null) {\n        if (fiber.tag === HostRoot) {\n          captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\n          return;\n        } else if (fiber.tag === ClassComponent) {\n          var ctor = fiber.type;\n          var instance = fiber.stateNode;\n          if (typeof ctor.getDerivedStateFromError === \"function\" || typeof instance.componentDidCatch === \"function\" && !isAlreadyFailedLegacyErrorBoundary(instance)) {\n            var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\n            var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\n            var root = enqueueUpdate(fiber, update, SyncLane);\n            var eventTime = requestEventTime();\n            if (root !== null) {\n              markRootUpdated(root, SyncLane, eventTime);\n              ensureRootIsScheduled(root, eventTime);\n            }\n            return;\n          }\n        }\n        fiber = fiber.return;\n      }\n      {\n        error(\"Internal React error: Attempted to capture a commit phase error \" + \"inside a detached tree. This indicates a bug in React. Likely \" + \"causes include deleting the same fiber more than once, committing an \" + \"already-finished tree, or an inconsistent return pointer.\\n\\n\" + \"Error message:\\n\\n%s\", error$1);\n      }\n    }\n    function pingSuspendedRoot(root, wakeable, pingedLanes) {\n      var pingCache = root.pingCache;\n      if (pingCache !== null) {\n        pingCache.delete(wakeable);\n      }\n      var eventTime = requestEventTime();\n      markRootPinged(root, pingedLanes);\n      warnIfSuspenseResolutionNotWrappedWithActDEV(root);\n      if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {\n        if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {\n          prepareFreshStack(root, NoLanes);\n        } else {\n          workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);\n        }\n      }\n      ensureRootIsScheduled(root, eventTime);\n    }\n    function retryTimedOutBoundary(boundaryFiber, retryLane) {\n      if (retryLane === NoLane) {\n        retryLane = requestRetryLane(boundaryFiber);\n      }\n      var eventTime = requestEventTime();\n      var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\n      if (root !== null) {\n        markRootUpdated(root, retryLane, eventTime);\n        ensureRootIsScheduled(root, eventTime);\n      }\n    }\n    function retryDehydratedSuspenseBoundary(boundaryFiber) {\n      var suspenseState = boundaryFiber.memoizedState;\n      var retryLane = NoLane;\n      if (suspenseState !== null) {\n        retryLane = suspenseState.retryLane;\n      }\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function resolveRetryWakeable(boundaryFiber, wakeable) {\n      var retryLane = NoLane;\n      var retryCache;\n      switch (boundaryFiber.tag) {\n        case SuspenseComponent:\n          retryCache = boundaryFiber.stateNode;\n          var suspenseState = boundaryFiber.memoizedState;\n          if (suspenseState !== null) {\n            retryLane = suspenseState.retryLane;\n          }\n          break;\n        case SuspenseListComponent:\n          retryCache = boundaryFiber.stateNode;\n          break;\n        default:\n          throw new Error(\"Pinged unknown suspense boundary type. \" + \"This is probably a bug in React.\");\n      }\n      if (retryCache !== null) {\n        retryCache.delete(wakeable);\n      }\n      retryTimedOutBoundary(boundaryFiber, retryLane);\n    }\n    function jnd(timeElapsed) {\n      return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;\n    }\n    function checkForNestedUpdates() {\n      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n        nestedUpdateCount = 0;\n        rootWithNestedUpdates = null;\n        throw new Error(\"Maximum update depth exceeded. This can happen when a component \" + \"repeatedly calls setState inside componentWillUpdate or \" + \"componentDidUpdate. React limits the number of nested updates to \" + \"prevent infinite loops.\");\n      }\n      {\n        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n          nestedPassiveUpdateCount = 0;\n          rootWithPassiveNestedUpdates = null;\n          error(\"Maximum update depth exceeded. This can happen when a component \" + \"calls setState inside useEffect, but useEffect either doesn't \" + \"have a dependency array, or one of the dependencies changes on \" + \"every render.\");\n        }\n      }\n    }\n    function flushRenderPhaseStrictModeWarningsInDEV() {\n      {\n        ReactStrictModeWarnings.flushLegacyContextWarning();\n        {\n          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n        }\n      }\n    }\n    var didWarnStateUpdateForNotYetMountedComponent = null;\n    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n      {\n        if ((executionContext & RenderContext) !== NoContext) {\n          return;\n        }\n        if (!(fiber.mode & ConcurrentMode)) {\n          return;\n        }\n        var tag = fiber.tag;\n        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {\n          return;\n        }\n        var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\n        if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n          if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n            return;\n          }\n          didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n        } else {\n          didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n        }\n        var previousFiber = current;\n        try {\n          setCurrentFiber(fiber);\n          error(\"Can't perform a React state update on a component that hasn't mounted yet. \" + \"This indicates that you have a side-effect in your render function that \" + \"asynchronously later calls tries to update the component. Move this work to \" + \"useEffect instead.\");\n        } finally {\n          if (previousFiber) {\n            setCurrentFiber(fiber);\n          } else {\n            resetCurrentFiber();\n          }\n        }\n      }\n    }\n    var beginWork$1;\n    {\n      var dummyFiber = null;\n      beginWork$1 = function beginWork$1(current, unitOfWork, lanes) {\n        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);\n        try {\n          return beginWork(current, unitOfWork, lanes);\n        } catch (originalError) {\n          if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === \"object\" && typeof originalError.then === \"function\") {\n            throw originalError;\n          }\n          resetContextDependencies();\n          resetHooksAfterThrow();\n          unwindInterruptedWork(current, unitOfWork);\n          assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n          if (unitOfWork.mode & ProfileMode) {\n            startProfilerTimer(unitOfWork);\n          }\n          invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\n          if (hasCaughtError()) {\n            var replayError = clearCaughtError();\n            if (typeof replayError === \"object\" && replayError !== null && replayError._suppressLogging && typeof originalError === \"object\" && originalError !== null && !originalError._suppressLogging) {\n              originalError._suppressLogging = true;\n            }\n          }\n          throw originalError;\n        }\n      };\n    }\n    var didWarnAboutUpdateInRender = false;\n    var didWarnAboutUpdateInRenderForAnotherComponent;\n    {\n      didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n    }\n    function warnAboutRenderPhaseUpdatesInDEV(fiber) {\n      {\n        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\n          switch (fiber.tag) {\n            case FunctionComponent:\n            case ForwardRef:\n            case SimpleMemoComponent:\n              {\n                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || \"Unknown\";\n                var dedupeKey = renderingComponentName;\n                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n                  didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n                  var setStateComponentName = getComponentNameFromFiber(fiber) || \"Unknown\";\n                  error(\"Cannot update a component (`%s`) while rendering a \" + \"different component (`%s`). To locate the bad setState() call inside `%s`, \" + \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\", setStateComponentName, renderingComponentName, renderingComponentName);\n                }\n                break;\n              }\n            case ClassComponent:\n              {\n                if (!didWarnAboutUpdateInRender) {\n                  error(\"Cannot update during an existing state transition (such as \" + \"within `render`). Render methods should be a pure \" + \"function of props and state.\");\n                  didWarnAboutUpdateInRender = true;\n                }\n                break;\n              }\n          }\n        }\n      }\n    }\n    function restorePendingUpdaters(root, lanes) {\n      {\n        if (isDevToolsPresent) {\n          var memoizedUpdaters = root.memoizedUpdaters;\n          memoizedUpdaters.forEach(function (schedulingFiber) {\n            addFiberToLanesMap(root, schedulingFiber, lanes);\n          });\n        }\n      }\n    }\n    var fakeActCallbackNode = {};\n    function scheduleCallback$1(priorityLevel, callback) {\n      {\n        var actQueue = ReactCurrentActQueue$1.current;\n        if (actQueue !== null) {\n          actQueue.push(callback);\n          return fakeActCallbackNode;\n        } else {\n          return scheduleCallback(priorityLevel, callback);\n        }\n      }\n    }\n    function cancelCallback$1(callbackNode) {\n      if (callbackNode === fakeActCallbackNode) {\n        return;\n      }\n      return cancelCallback(callbackNode);\n    }\n    function shouldForceFlushFallbacksInDEV() {\n      return ReactCurrentActQueue$1.current !== null;\n    }\n    function warnIfUpdatesNotWrappedWithActDEV(fiber) {\n      {\n        if (fiber.mode & ConcurrentMode) {\n          if (!isConcurrentActEnvironment()) {\n            return;\n          }\n        } else {\n          if (!isLegacyActEnvironment()) {\n            return;\n          }\n          if (executionContext !== NoContext) {\n            return;\n          }\n          if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {\n            return;\n          }\n        }\n        if (ReactCurrentActQueue$1.current === null) {\n          var previousFiber = current;\n          try {\n            setCurrentFiber(fiber);\n            error(\"An update to %s inside a test was not wrapped in act(...).\\n\\n\" + \"When testing, code that causes React state updates should be \" + \"wrapped into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* fire events that update state */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\", getComponentNameFromFiber(fiber));\n          } finally {\n            if (previousFiber) {\n              setCurrentFiber(fiber);\n            } else {\n              resetCurrentFiber();\n            }\n          }\n        }\n      }\n    }\n    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\n      {\n        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {\n          error(\"A suspended resource finished loading inside a test, but the event \" + \"was not wrapped in act(...).\\n\\n\" + \"When testing, code that resolves suspended data should be wrapped \" + \"into act(...):\\n\\n\" + \"act(() => {\\n\" + \"  /* finish loading suspended data */\\n\" + \"});\\n\" + \"/* assert on the output */\\n\\n\" + \"This ensures that you're testing the behavior the user would see \" + \"in the browser.\" + \" Learn more at https://reactjs.org/link/wrap-tests-with-act\");\n        }\n      }\n    }\n    function setIsRunningInsertionEffect(isRunning) {\n      {\n        isRunningInsertionEffect = isRunning;\n      }\n    }\n    var resolveFamily = null;\n    var failedBoundaries = null;\n    var setRefreshHandler = function setRefreshHandler(handler) {\n      {\n        resolveFamily = handler;\n      }\n    };\n    function resolveFunctionForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n        var family = resolveFamily(type);\n        if (family === undefined) {\n          return type;\n        }\n        return family.current;\n      }\n    }\n    function resolveClassForHotReloading(type) {\n      return resolveFunctionForHotReloading(type);\n    }\n    function resolveForwardRefForHotReloading(type) {\n      {\n        if (resolveFamily === null) {\n          return type;\n        }\n        var family = resolveFamily(type);\n        if (family === undefined) {\n          if (type !== null && type !== undefined && typeof type.render === \"function\") {\n            var currentRender = resolveFunctionForHotReloading(type.render);\n            if (type.render !== currentRender) {\n              var syntheticType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: currentRender\n              };\n              if (type.displayName !== undefined) {\n                syntheticType.displayName = type.displayName;\n              }\n              return syntheticType;\n            }\n          }\n          return type;\n        }\n        return family.current;\n      }\n    }\n    function isCompatibleFamilyForHotReloading(fiber, element) {\n      {\n        if (resolveFamily === null) {\n          return false;\n        }\n        var prevType = fiber.elementType;\n        var nextType = element.type;\n        var needsCompareFamilies = false;\n        var $$typeofNextType = typeof nextType === \"object\" && nextType !== null ? nextType.$$typeof : null;\n        switch (fiber.tag) {\n          case ClassComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case FunctionComponent:\n            {\n              if (typeof nextType === \"function\") {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case ForwardRef:\n            {\n              if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          case MemoComponent:\n          case SimpleMemoComponent:\n            {\n              if ($$typeofNextType === REACT_MEMO_TYPE) {\n                needsCompareFamilies = true;\n              } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n                needsCompareFamilies = true;\n              }\n              break;\n            }\n          default:\n            return false;\n        }\n        if (needsCompareFamilies) {\n          var prevFamily = resolveFamily(prevType);\n          if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n    function markFailedErrorBoundaryForHotReloading(fiber) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n        if (typeof WeakSet !== \"function\") {\n          return;\n        }\n        if (failedBoundaries === null) {\n          failedBoundaries = new WeakSet();\n        }\n        failedBoundaries.add(fiber);\n      }\n    }\n    var scheduleRefresh = function scheduleRefresh(root, update) {\n      {\n        if (resolveFamily === null) {\n          return;\n        }\n        var staleFamilies = update.staleFamilies,\n          updatedFamilies = update.updatedFamilies;\n        flushPassiveEffects();\n        flushSync(function () {\n          scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);\n        });\n      }\n    };\n    var scheduleRoot = function scheduleRoot(root, element) {\n      {\n        if (root.context !== emptyContextObject) {\n          return;\n        }\n        flushPassiveEffects();\n        flushSync(function () {\n          updateContainer(element, root, null, null);\n        });\n      }\n    };\n    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {\n      {\n        var alternate = fiber.alternate,\n          child = fiber.child,\n          sibling = fiber.sibling,\n          tag = fiber.tag,\n          type = fiber.type;\n        var candidateType = null;\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n        if (resolveFamily === null) {\n          throw new Error(\"Expected resolveFamily to be set during hot reload.\");\n        }\n        var needsRender = false;\n        var needsRemount = false;\n        if (candidateType !== null) {\n          var family = resolveFamily(candidateType);\n          if (family !== undefined) {\n            if (staleFamilies.has(family)) {\n              needsRemount = true;\n            } else if (updatedFamilies.has(family)) {\n              if (tag === ClassComponent) {\n                needsRemount = true;\n              } else {\n                needsRender = true;\n              }\n            }\n          }\n        }\n        if (failedBoundaries !== null) {\n          if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {\n            needsRemount = true;\n          }\n        }\n        if (needsRemount) {\n          fiber._debugNeedsRemount = true;\n        }\n        if (needsRemount || needsRender) {\n          var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (_root !== null) {\n            scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n        if (child !== null && !needsRemount) {\n          scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);\n        }\n        if (sibling !== null) {\n          scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);\n        }\n      }\n    }\n    var findHostInstancesForRefresh = function findHostInstancesForRefresh(root, families) {\n      {\n        var hostInstances = new Set();\n        var types = new Set(families.map(function (family) {\n          return family.current;\n        }));\n        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);\n        return hostInstances;\n      }\n    };\n    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {\n      {\n        var child = fiber.child,\n          sibling = fiber.sibling,\n          tag = fiber.tag,\n          type = fiber.type;\n        var candidateType = null;\n        switch (tag) {\n          case FunctionComponent:\n          case SimpleMemoComponent:\n          case ClassComponent:\n            candidateType = type;\n            break;\n          case ForwardRef:\n            candidateType = type.render;\n            break;\n        }\n        var didMatch = false;\n        if (candidateType !== null) {\n          if (types.has(candidateType)) {\n            didMatch = true;\n          }\n        }\n        if (didMatch) {\n          findHostInstancesForFiberShallowly(fiber, hostInstances);\n        } else {\n          if (child !== null) {\n            findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);\n          }\n        }\n        if (sibling !== null) {\n          findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);\n        }\n      }\n    }\n    function findHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);\n        if (foundHostInstances) {\n          return;\n        }\n        var node = fiber;\n        while (true) {\n          switch (node.tag) {\n            case HostComponent:\n              hostInstances.add(node.stateNode);\n              return;\n            case HostPortal:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n            case HostRoot:\n              hostInstances.add(node.stateNode.containerInfo);\n              return;\n          }\n          if (node.return === null) {\n            throw new Error(\"Expected to reach root first.\");\n          }\n          node = node.return;\n        }\n      }\n    }\n    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\n      {\n        var node = fiber;\n        var foundHostInstances = false;\n        while (true) {\n          if (node.tag === HostComponent) {\n            foundHostInstances = true;\n            hostInstances.add(node.stateNode);\n          } else if (node.child !== null) {\n            node.child.return = node;\n            node = node.child;\n            continue;\n          }\n          if (node === fiber) {\n            return foundHostInstances;\n          }\n          while (node.sibling === null) {\n            if (node.return === null || node.return === fiber) {\n              return foundHostInstances;\n            }\n            node = node.return;\n          }\n          node.sibling.return = node.return;\n          node = node.sibling;\n        }\n      }\n      return false;\n    }\n    var hasBadMapPolyfill;\n    {\n      hasBadMapPolyfill = false;\n      try {\n        var nonExtensibleObject = Object.preventExtensions({});\n        new Map([[nonExtensibleObject, null]]);\n        new Set([nonExtensibleObject]);\n      } catch (e) {\n        hasBadMapPolyfill = true;\n      }\n    }\n    function FiberNode(tag, pendingProps, key, mode) {\n      this.tag = tag;\n      this.key = key;\n      this.elementType = null;\n      this.type = null;\n      this.stateNode = null;\n      this.return = null;\n      this.child = null;\n      this.sibling = null;\n      this.index = 0;\n      this.ref = null;\n      this.pendingProps = pendingProps;\n      this.memoizedProps = null;\n      this.updateQueue = null;\n      this.memoizedState = null;\n      this.dependencies = null;\n      this.mode = mode;\n      this.flags = NoFlags;\n      this.subtreeFlags = NoFlags;\n      this.deletions = null;\n      this.lanes = NoLanes;\n      this.childLanes = NoLanes;\n      this.alternate = null;\n      {\n        this.actualDuration = Number.NaN;\n        this.actualStartTime = Number.NaN;\n        this.selfBaseDuration = Number.NaN;\n        this.treeBaseDuration = Number.NaN;\n        this.actualDuration = 0;\n        this.actualStartTime = -1;\n        this.selfBaseDuration = 0;\n        this.treeBaseDuration = 0;\n      }\n      {\n        this._debugSource = null;\n        this._debugOwner = null;\n        this._debugNeedsRemount = false;\n        this._debugHookTypes = null;\n        if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\n          Object.preventExtensions(this);\n        }\n      }\n    }\n    var createFiber = function createFiber(tag, pendingProps, key, mode) {\n      return new FiberNode(tag, pendingProps, key, mode);\n    };\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n    function isSimpleFunctionComponent(type) {\n      return typeof type === \"function\" && !shouldConstruct(type) && type.defaultProps === undefined;\n    }\n    function resolveLazyComponentTag(Component) {\n      if (typeof Component === \"function\") {\n        return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n      } else if (Component !== undefined && Component !== null) {\n        var $$typeof = Component.$$typeof;\n        if ($$typeof === REACT_FORWARD_REF_TYPE) {\n          return ForwardRef;\n        }\n        if ($$typeof === REACT_MEMO_TYPE) {\n          return MemoComponent;\n        }\n      }\n      return IndeterminateComponent;\n    }\n    function createWorkInProgress(current, pendingProps) {\n      var workInProgress = current.alternate;\n      if (workInProgress === null) {\n        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);\n        workInProgress.elementType = current.elementType;\n        workInProgress.type = current.type;\n        workInProgress.stateNode = current.stateNode;\n        {\n          workInProgress._debugSource = current._debugSource;\n          workInProgress._debugOwner = current._debugOwner;\n          workInProgress._debugHookTypes = current._debugHookTypes;\n        }\n        workInProgress.alternate = current;\n        current.alternate = workInProgress;\n      } else {\n        workInProgress.pendingProps = pendingProps;\n        workInProgress.type = current.type;\n        workInProgress.flags = NoFlags;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        {\n          workInProgress.actualDuration = 0;\n          workInProgress.actualStartTime = -1;\n        }\n      }\n      workInProgress.flags = current.flags & StaticMask;\n      workInProgress.childLanes = current.childLanes;\n      workInProgress.lanes = current.lanes;\n      workInProgress.child = current.child;\n      workInProgress.memoizedProps = current.memoizedProps;\n      workInProgress.memoizedState = current.memoizedState;\n      workInProgress.updateQueue = current.updateQueue;\n      var currentDependencies = current.dependencies;\n      workInProgress.dependencies = currentDependencies === null ? null : {\n        lanes: currentDependencies.lanes,\n        firstContext: currentDependencies.firstContext\n      };\n      workInProgress.sibling = current.sibling;\n      workInProgress.index = current.index;\n      workInProgress.ref = current.ref;\n      {\n        workInProgress.selfBaseDuration = current.selfBaseDuration;\n        workInProgress.treeBaseDuration = current.treeBaseDuration;\n      }\n      {\n        workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n        switch (workInProgress.tag) {\n          case IndeterminateComponent:\n          case FunctionComponent:\n          case SimpleMemoComponent:\n            workInProgress.type = resolveFunctionForHotReloading(current.type);\n            break;\n          case ClassComponent:\n            workInProgress.type = resolveClassForHotReloading(current.type);\n            break;\n          case ForwardRef:\n            workInProgress.type = resolveForwardRefForHotReloading(current.type);\n            break;\n        }\n      }\n      return workInProgress;\n    }\n    function resetWorkInProgress(workInProgress, renderLanes) {\n      workInProgress.flags &= StaticMask | Placement;\n      var current = workInProgress.alternate;\n      if (current === null) {\n        workInProgress.childLanes = NoLanes;\n        workInProgress.lanes = renderLanes;\n        workInProgress.child = null;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.memoizedProps = null;\n        workInProgress.memoizedState = null;\n        workInProgress.updateQueue = null;\n        workInProgress.dependencies = null;\n        workInProgress.stateNode = null;\n        {\n          workInProgress.selfBaseDuration = 0;\n          workInProgress.treeBaseDuration = 0;\n        }\n      } else {\n        workInProgress.childLanes = current.childLanes;\n        workInProgress.lanes = current.lanes;\n        workInProgress.child = current.child;\n        workInProgress.subtreeFlags = NoFlags;\n        workInProgress.deletions = null;\n        workInProgress.memoizedProps = current.memoizedProps;\n        workInProgress.memoizedState = current.memoizedState;\n        workInProgress.updateQueue = current.updateQueue;\n        workInProgress.type = current.type;\n        var currentDependencies = current.dependencies;\n        workInProgress.dependencies = currentDependencies === null ? null : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext\n        };\n        {\n          workInProgress.selfBaseDuration = current.selfBaseDuration;\n          workInProgress.treeBaseDuration = current.treeBaseDuration;\n        }\n      }\n      return workInProgress;\n    }\n    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {\n      var mode;\n      if (tag === ConcurrentRoot) {\n        mode = ConcurrentMode;\n        if (isStrictMode === true) {\n          mode |= StrictLegacyMode;\n        }\n      } else {\n        mode = NoMode;\n      }\n      if (isDevToolsPresent) {\n        mode |= ProfileMode;\n      }\n      return createFiber(HostRoot, null, null, mode);\n    }\n    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {\n      var fiberTag = IndeterminateComponent;\n      var resolvedType = type;\n      if (typeof type === \"function\") {\n        if (shouldConstruct(type)) {\n          fiberTag = ClassComponent;\n          {\n            resolvedType = resolveClassForHotReloading(resolvedType);\n          }\n        } else {\n          {\n            resolvedType = resolveFunctionForHotReloading(resolvedType);\n          }\n        }\n      } else if (typeof type === \"string\") {\n        fiberTag = HostComponent;\n      } else {\n        getTag: switch (type) {\n          case REACT_FRAGMENT_TYPE:\n            return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n          case REACT_STRICT_MODE_TYPE:\n            fiberTag = Mode;\n            mode |= StrictLegacyMode;\n            break;\n          case REACT_PROFILER_TYPE:\n            return createFiberFromProfiler(pendingProps, mode, lanes, key);\n          case REACT_SUSPENSE_TYPE:\n            return createFiberFromSuspense(pendingProps, mode, lanes, key);\n          case REACT_SUSPENSE_LIST_TYPE:\n            return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n          case REACT_OFFSCREEN_TYPE:\n            return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n          case REACT_LEGACY_HIDDEN_TYPE:\n          case REACT_SCOPE_TYPE:\n          case REACT_CACHE_TYPE:\n          case REACT_TRACING_MARKER_TYPE:\n          case REACT_DEBUG_TRACING_MODE_TYPE:\n          default:\n            {\n              if (typeof type === \"object\" && type !== null) {\n                switch (type.$$typeof) {\n                  case REACT_PROVIDER_TYPE:\n                    fiberTag = ContextProvider;\n                    break getTag;\n                  case REACT_CONTEXT_TYPE:\n                    fiberTag = ContextConsumer;\n                    break getTag;\n                  case REACT_FORWARD_REF_TYPE:\n                    fiberTag = ForwardRef;\n                    {\n                      resolvedType = resolveForwardRefForHotReloading(resolvedType);\n                    }\n                    break getTag;\n                  case REACT_MEMO_TYPE:\n                    fiberTag = MemoComponent;\n                    break getTag;\n                  case REACT_LAZY_TYPE:\n                    fiberTag = LazyComponent;\n                    resolvedType = null;\n                    break getTag;\n                }\n              }\n              var info = \"\";\n              {\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                  info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and \" + \"named imports.\";\n                }\n                var ownerName = owner ? getComponentNameFromFiber(owner) : null;\n                if (ownerName) {\n                  info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\n                }\n              }\n              throw new Error(\"Element type is invalid: expected a string (for built-in \" + \"components) or a class/function (for composite components) \" + (\"but got: \" + (type == null ? type : typeof type) + \".\" + info));\n            }\n        }\n      }\n      var fiber = createFiber(fiberTag, pendingProps, key, mode);\n      fiber.elementType = type;\n      fiber.type = resolvedType;\n      fiber.lanes = lanes;\n      {\n        fiber._debugOwner = owner;\n      }\n      return fiber;\n    }\n    function createFiberFromElement(element, mode, lanes) {\n      var owner = null;\n      {\n        owner = element._owner;\n      }\n      var type = element.type;\n      var key = element.key;\n      var pendingProps = element.props;\n      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);\n      {\n        fiber._debugSource = element._source;\n        fiber._debugOwner = element._owner;\n      }\n      return fiber;\n    }\n    function createFiberFromFragment(elements, mode, lanes, key) {\n      var fiber = createFiber(Fragment, elements, key, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromProfiler(pendingProps, mode, lanes, key) {\n      {\n        if (typeof pendingProps.id !== \"string\") {\n          error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);\n        }\n      }\n      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n      fiber.elementType = REACT_PROFILER_TYPE;\n      fiber.lanes = lanes;\n      {\n        fiber.stateNode = {\n          effectDuration: 0,\n          passiveEffectDuration: 0\n        };\n      }\n      return fiber;\n    }\n    function createFiberFromSuspense(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {\n      var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n      fiber.elementType = REACT_OFFSCREEN_TYPE;\n      fiber.lanes = lanes;\n      var primaryChildInstance = {\n        isHidden: false\n      };\n      fiber.stateNode = primaryChildInstance;\n      return fiber;\n    }\n    function createFiberFromText(content, mode, lanes) {\n      var fiber = createFiber(HostText, content, null, mode);\n      fiber.lanes = lanes;\n      return fiber;\n    }\n    function createFiberFromPortal(portal, mode, lanes) {\n      var pendingProps = portal.children !== null ? portal.children : [];\n      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n      fiber.lanes = lanes;\n      fiber.stateNode = {\n        containerInfo: portal.containerInfo,\n        pendingChildren: null,\n        implementation: portal.implementation\n      };\n      return fiber;\n    }\n    function assignFiberPropertiesInDEV(target, source) {\n      if (target === null) {\n        target = createFiber(IndeterminateComponent, null, null, NoMode);\n      }\n      target.tag = source.tag;\n      target.key = source.key;\n      target.elementType = source.elementType;\n      target.type = source.type;\n      target.stateNode = source.stateNode;\n      target.return = source.return;\n      target.child = source.child;\n      target.sibling = source.sibling;\n      target.index = source.index;\n      target.ref = source.ref;\n      target.pendingProps = source.pendingProps;\n      target.memoizedProps = source.memoizedProps;\n      target.updateQueue = source.updateQueue;\n      target.memoizedState = source.memoizedState;\n      target.dependencies = source.dependencies;\n      target.mode = source.mode;\n      target.flags = source.flags;\n      target.subtreeFlags = source.subtreeFlags;\n      target.deletions = source.deletions;\n      target.lanes = source.lanes;\n      target.childLanes = source.childLanes;\n      target.alternate = source.alternate;\n      {\n        target.actualDuration = source.actualDuration;\n        target.actualStartTime = source.actualStartTime;\n        target.selfBaseDuration = source.selfBaseDuration;\n        target.treeBaseDuration = source.treeBaseDuration;\n      }\n      target._debugSource = source._debugSource;\n      target._debugOwner = source._debugOwner;\n      target._debugNeedsRemount = source._debugNeedsRemount;\n      target._debugHookTypes = source._debugHookTypes;\n      return target;\n    }\n    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {\n      this.tag = tag;\n      this.containerInfo = containerInfo;\n      this.pendingChildren = null;\n      this.current = null;\n      this.pingCache = null;\n      this.finishedWork = null;\n      this.timeoutHandle = noTimeout;\n      this.context = null;\n      this.pendingContext = null;\n      this.callbackNode = null;\n      this.callbackPriority = NoLane;\n      this.eventTimes = createLaneMap(NoLanes);\n      this.expirationTimes = createLaneMap(NoTimestamp);\n      this.pendingLanes = NoLanes;\n      this.suspendedLanes = NoLanes;\n      this.pingedLanes = NoLanes;\n      this.expiredLanes = NoLanes;\n      this.mutableReadLanes = NoLanes;\n      this.finishedLanes = NoLanes;\n      this.entangledLanes = NoLanes;\n      this.entanglements = createLaneMap(NoLanes);\n      this.identifierPrefix = identifierPrefix;\n      this.onRecoverableError = onRecoverableError;\n      {\n        this.effectDuration = 0;\n        this.passiveEffectDuration = 0;\n      }\n      {\n        this.memoizedUpdaters = new Set();\n        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];\n        for (var _i = 0; _i < TotalLanes; _i++) {\n          pendingUpdatersLaneMap.push(new Set());\n        }\n      }\n      {\n        switch (tag) {\n          case ConcurrentRoot:\n            this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\n            break;\n          case LegacyRoot:\n            this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\n            break;\n        }\n      }\n    }\n    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);\n      var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\n      root.current = uninitializedFiber;\n      uninitializedFiber.stateNode = root;\n      {\n        var _initialState = {\n          element: initialChildren,\n          isDehydrated: hydrate,\n          cache: null,\n          transitions: null,\n          pendingSuspenseBoundaries: null\n        };\n        uninitializedFiber.memoizedState = _initialState;\n      }\n      initializeUpdateQueue(uninitializedFiber);\n      return root;\n    }\n    var ReactVersion = \"18.2.0-next-9e3b772b8-20220608\";\n    function createPortal(children, containerInfo, implementation) {\n      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      {\n        checkKeyStringCoercion(key);\n      }\n      return {\n        $$typeof: REACT_PORTAL_TYPE,\n        key: key == null ? null : \"\" + key,\n        children: children,\n        containerInfo: containerInfo,\n        implementation: implementation\n      };\n    }\n    var didWarnAboutNestedUpdates;\n    var didWarnAboutFindNodeInStrictMode;\n    {\n      didWarnAboutNestedUpdates = false;\n      didWarnAboutFindNodeInStrictMode = {};\n    }\n    function getContextForSubtree(parentComponent) {\n      if (!parentComponent) {\n        return emptyContextObject;\n      }\n      var fiber = get(parentComponent);\n      var parentContext = findCurrentUnmaskedContext(fiber);\n      if (fiber.tag === ClassComponent) {\n        var Component = fiber.type;\n        if (isContextProvider(Component)) {\n          return processChildContext(fiber, Component, parentContext);\n        }\n      }\n      return parentContext;\n    }\n    function findHostInstanceWithWarning(component, methodName) {\n      {\n        var fiber = get(component);\n        if (fiber === undefined) {\n          if (typeof component.render === \"function\") {\n            throw new Error(\"Unable to find node on an unmounted component.\");\n          } else {\n            var keys = Object.keys(component).join(\",\");\n            throw new Error(\"Argument appears to not be a ReactComponent. Keys: \" + keys);\n          }\n        }\n        var hostFiber = findCurrentHostFiber(fiber);\n        if (hostFiber === null) {\n          return null;\n        }\n        if (hostFiber.mode & StrictLegacyMode) {\n          var componentName = getComponentNameFromFiber(fiber) || \"Component\";\n          if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n            didWarnAboutFindNodeInStrictMode[componentName] = true;\n            var previousFiber = current;\n            try {\n              setCurrentFiber(hostFiber);\n              if (fiber.mode & StrictLegacyMode) {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which is inside StrictMode. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              } else {\n                error(\"%s is deprecated in StrictMode. \" + \"%s was passed an instance of %s which renders StrictMode children. \" + \"Instead, add a ref directly to the element you want to reference. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName);\n              }\n            } finally {\n              if (previousFiber) {\n                setCurrentFiber(previousFiber);\n              } else {\n                resetCurrentFiber();\n              }\n            }\n          }\n        }\n        return hostFiber.stateNode;\n      }\n    }\n    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {\n      var hydrate = false;\n      var initialChildren = null;\n      return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);\n    }\n    function updateContainer(element, container, parentComponent, callback) {\n      {\n        onScheduleRoot(container, element);\n      }\n      var current$1 = container.current;\n      var eventTime = requestEventTime();\n      var lane = requestUpdateLane(current$1);\n      var context = getContextForSubtree(parentComponent);\n      if (container.context === null) {\n        container.context = context;\n      } else {\n        container.pendingContext = context;\n      }\n      {\n        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\n          didWarnAboutNestedUpdates = true;\n          error(\"Render methods should be a pure function of props and state; \" + \"triggering nested component updates from render is not allowed. \" + \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" + \"Check the render method of %s.\", getComponentNameFromFiber(current) || \"Unknown\");\n        }\n      }\n      var update = createUpdate(eventTime, lane);\n      update.payload = {\n        element: element\n      };\n      callback = callback === undefined ? null : callback;\n      if (callback !== null) {\n        {\n          if (typeof callback !== \"function\") {\n            error(\"render(...): Expected the last optional `callback` argument to be a \" + \"function. Instead received: %s.\", callback);\n          }\n        }\n        update.callback = callback;\n      }\n      var root = enqueueUpdate(current$1, update, lane);\n      if (root !== null) {\n        scheduleUpdateOnFiber(root, current$1, lane, eventTime);\n        entangleTransitions(root, current$1, lane);\n      }\n      return lane;\n    }\n    function getPublicRootInstance(container) {\n      var containerFiber = container.current;\n      if (!containerFiber.child) {\n        return null;\n      }\n      switch (containerFiber.child.tag) {\n        case HostComponent:\n          return getPublicInstance(containerFiber.child.stateNode);\n        default:\n          return containerFiber.child.stateNode;\n      }\n    }\n    var shouldErrorImpl = function shouldErrorImpl(fiber) {\n      return null;\n    };\n    function shouldError(fiber) {\n      return shouldErrorImpl(fiber);\n    }\n    var shouldSuspendImpl = function shouldSuspendImpl(fiber) {\n      return false;\n    };\n    function shouldSuspend(fiber) {\n      return shouldSuspendImpl(fiber);\n    }\n    var overrideHookState = null;\n    var overrideHookStateDeletePath = null;\n    var overrideHookStateRenamePath = null;\n    var overrideProps = null;\n    var overridePropsDeletePath = null;\n    var overridePropsRenamePath = null;\n    var scheduleUpdate = null;\n    var setErrorHandler = null;\n    var setSuspenseHandler = null;\n    {\n      var copyWithDeleteImpl = function copyWithDeleteImpl(obj, path, index) {\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        if (index + 1 === path.length) {\n          if (isArray(updated)) {\n            updated.splice(key, 1);\n          } else {\n            delete updated[key];\n          }\n          return updated;\n        }\n        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n        return updated;\n      };\n      var copyWithDelete = function copyWithDelete(obj, path) {\n        return copyWithDeleteImpl(obj, path, 0);\n      };\n      var copyWithRenameImpl = function copyWithRenameImpl(obj, oldPath, newPath, index) {\n        var oldKey = oldPath[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        if (index + 1 === oldPath.length) {\n          var newKey = newPath[index];\n          updated[newKey] = updated[oldKey];\n          if (isArray(updated)) {\n            updated.splice(oldKey, 1);\n          } else {\n            delete updated[oldKey];\n          }\n        } else {\n          updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);\n        }\n        return updated;\n      };\n      var copyWithRename = function copyWithRename(obj, oldPath, newPath) {\n        if (oldPath.length !== newPath.length) {\n          warn(\"copyWithRename() expects paths of the same length\");\n          return;\n        } else {\n          for (var i = 0; i < newPath.length - 1; i++) {\n            if (oldPath[i] !== newPath[i]) {\n              warn(\"copyWithRename() expects paths to be the same except for the deepest key\");\n              return;\n            }\n          }\n        }\n        return copyWithRenameImpl(obj, oldPath, newPath, 0);\n      };\n      var copyWithSetImpl = function copyWithSetImpl(obj, path, index, value) {\n        if (index >= path.length) {\n          return value;\n        }\n        var key = path[index];\n        var updated = isArray(obj) ? obj.slice() : assign({}, obj);\n        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n        return updated;\n      };\n      var copyWithSet = function copyWithSet(obj, path, value) {\n        return copyWithSetImpl(obj, path, 0, value);\n      };\n      var findHook = function findHook(fiber, id) {\n        var currentHook = fiber.memoizedState;\n        while (currentHook !== null && id > 0) {\n          currentHook = currentHook.next;\n          id--;\n        }\n        return currentHook;\n      };\n      overrideHookState = function overrideHookState(fiber, id, path, value) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithSet(hook.memoizedState, path, value);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n      overrideHookStateDeletePath = function overrideHookStateDeletePath(fiber, id, path) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithDelete(hook.memoizedState, path);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n      overrideHookStateRenamePath = function overrideHookStateRenamePath(fiber, id, oldPath, newPath) {\n        var hook = findHook(fiber, id);\n        if (hook !== null) {\n          var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n          hook.memoizedState = newState;\n          hook.baseState = newState;\n          fiber.memoizedProps = assign({}, fiber.memoizedProps);\n          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n          if (root !== null) {\n            scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n          }\n        }\n      };\n      overrideProps = function overrideProps(fiber, path, value) {\n        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      overridePropsDeletePath = function overridePropsDeletePath(fiber, path) {\n        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      overridePropsRenamePath = function overridePropsRenamePath(fiber, oldPath, newPath) {\n        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n        if (fiber.alternate) {\n          fiber.alternate.pendingProps = fiber.pendingProps;\n        }\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      scheduleUpdate = function scheduleUpdate(fiber) {\n        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\n        if (root !== null) {\n          scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\n        }\n      };\n      setErrorHandler = function setErrorHandler(newShouldErrorImpl) {\n        shouldErrorImpl = newShouldErrorImpl;\n      };\n      setSuspenseHandler = function setSuspenseHandler(newShouldSuspendImpl) {\n        shouldSuspendImpl = newShouldSuspendImpl;\n      };\n    }\n    function findHostInstanceByFiber(fiber) {\n      var hostFiber = findCurrentHostFiber(fiber);\n      if (hostFiber === null) {\n        return null;\n      }\n      return hostFiber.stateNode;\n    }\n    function emptyFindFiberByHostInstance(instance) {\n      return null;\n    }\n    function getCurrentFiberForDevTools() {\n      return current;\n    }\n    function injectIntoDevTools(devToolsConfig) {\n      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\n      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n      return injectInternals({\n        bundleType: devToolsConfig.bundleType,\n        version: devToolsConfig.version,\n        rendererPackageName: devToolsConfig.rendererPackageName,\n        rendererConfig: devToolsConfig.rendererConfig,\n        overrideHookState: overrideHookState,\n        overrideHookStateDeletePath: overrideHookStateDeletePath,\n        overrideHookStateRenamePath: overrideHookStateRenamePath,\n        overrideProps: overrideProps,\n        overridePropsDeletePath: overridePropsDeletePath,\n        overridePropsRenamePath: overridePropsRenamePath,\n        setErrorHandler: setErrorHandler,\n        setSuspenseHandler: setSuspenseHandler,\n        scheduleUpdate: scheduleUpdate,\n        currentDispatcherRef: ReactCurrentDispatcher,\n        findHostInstanceByFiber: findHostInstanceByFiber,\n        findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,\n        findHostInstancesForRefresh: findHostInstancesForRefresh,\n        scheduleRefresh: scheduleRefresh,\n        scheduleRoot: scheduleRoot,\n        setRefreshHandler: setRefreshHandler,\n        getCurrentFiber: getCurrentFiberForDevTools,\n        reconcilerVersion: ReactVersion\n      });\n    }\n    var emptyObject$1 = {};\n    {\n      Object.freeze(emptyObject$1);\n    }\n    var createHierarchy;\n    var getHostNode;\n    var getHostProps;\n    var lastNonHostInstance;\n    var getOwnerHierarchy;\n    var _traverseOwnerTreeUp;\n    {\n      createHierarchy = function createHierarchy(fiberHierarchy) {\n        return fiberHierarchy.map(function (fiber) {\n          return {\n            name: getComponentNameFromType(fiber.type),\n            getInspectorData: function getInspectorData(findNodeHandle) {\n              return {\n                props: getHostProps(fiber),\n                source: fiber._debugSource,\n                measure: function measure(callback) {\n                  var hostFiber = findCurrentHostFiber(fiber);\n                  var shadowNode = hostFiber != null && hostFiber.stateNode !== null && hostFiber.stateNode.node;\n                  if (shadowNode) {\n                    nativeFabricUIManager.measure(shadowNode, callback);\n                  } else {\n                    return ReactNativePrivateInterface.UIManager.measure(getHostNode(fiber, findNodeHandle), callback);\n                  }\n                }\n              };\n            }\n          };\n        });\n      };\n      getHostNode = function getHostNode(fiber, findNodeHandle) {\n        var hostNode;\n        while (fiber) {\n          if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n            hostNode = findNodeHandle(fiber.stateNode);\n          }\n          if (hostNode) {\n            return hostNode;\n          }\n          fiber = fiber.child;\n        }\n        return null;\n      };\n      getHostProps = function getHostProps(fiber) {\n        var host = findCurrentHostFiber(fiber);\n        if (host) {\n          return host.memoizedProps || emptyObject$1;\n        }\n        return emptyObject$1;\n      };\n      exports.getInspectorDataForInstance = function (closestInstance) {\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n      getOwnerHierarchy = function getOwnerHierarchy(instance) {\n        var hierarchy = [];\n        _traverseOwnerTreeUp(hierarchy, instance);\n        return hierarchy;\n      };\n      lastNonHostInstance = function lastNonHostInstance(hierarchy) {\n        for (var i = hierarchy.length - 1; i > 1; i--) {\n          var instance = hierarchy[i];\n          if (instance.tag !== HostComponent) {\n            return instance;\n          }\n        }\n        return hierarchy[0];\n      };\n      _traverseOwnerTreeUp = function traverseOwnerTreeUp(hierarchy, instance) {\n        if (instance) {\n          hierarchy.unshift(instance);\n          _traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n        }\n      };\n    }\n    var getInspectorDataForViewTag;\n    var getInspectorDataForViewAtPoint;\n    {\n      getInspectorDataForViewTag = function getInspectorDataForViewTag(viewTag) {\n        var closestInstance = getInstanceFromTag(viewTag);\n        if (!closestInstance) {\n          return {\n            hierarchy: [],\n            props: emptyObject$1,\n            selectedIndex: null,\n            source: null\n          };\n        }\n        var fiber = findCurrentFiberUsingSlowPath(closestInstance);\n        var fiberHierarchy = getOwnerHierarchy(fiber);\n        var instance = lastNonHostInstance(fiberHierarchy);\n        var hierarchy = createHierarchy(fiberHierarchy);\n        var props = getHostProps(instance);\n        var source = instance._debugSource;\n        var selectedIndex = fiberHierarchy.indexOf(instance);\n        return {\n          hierarchy: hierarchy,\n          props: props,\n          selectedIndex: selectedIndex,\n          source: source\n        };\n      };\n      getInspectorDataForViewAtPoint = function getInspectorDataForViewAtPoint(findNodeHandle, inspectedView, locationX, locationY, callback) {\n        var closestInstance = null;\n        if (inspectedView._internalInstanceHandle != null) {\n          nativeFabricUIManager.findNodeAtPoint(inspectedView._internalInstanceHandle.stateNode.node, locationX, locationY, function (internalInstanceHandle) {\n            if (internalInstanceHandle == null) {\n              callback(assign({\n                pointerY: locationY,\n                frame: {\n                  left: 0,\n                  top: 0,\n                  width: 0,\n                  height: 0\n                }\n              }, exports.getInspectorDataForInstance(closestInstance)));\n            }\n            closestInstance = internalInstanceHandle.stateNode.canonical._internalInstanceHandle;\n            var nativeViewTag = internalInstanceHandle.stateNode.canonical._nativeTag;\n            nativeFabricUIManager.measure(internalInstanceHandle.stateNode.node, function (x, y, width, height, pageX, pageY) {\n              var inspectorData = exports.getInspectorDataForInstance(closestInstance);\n              callback(assign({}, inspectorData, {\n                pointerY: locationY,\n                frame: {\n                  left: pageX,\n                  top: pageY,\n                  width: width,\n                  height: height\n                },\n                touchedViewTag: nativeViewTag\n              }));\n            });\n          });\n        } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n          ReactNativePrivateInterface.UIManager.findSubviewIn(findNodeHandle(inspectedView), [locationX, locationY], function (nativeViewTag, left, top, width, height) {\n            var inspectorData = exports.getInspectorDataForInstance(getInstanceFromTag(nativeViewTag));\n            callback(assign({}, inspectorData, {\n              pointerY: locationY,\n              frame: {\n                left: left,\n                top: top,\n                width: width,\n                height: height\n              },\n              touchedViewTag: nativeViewTag\n            }));\n          });\n        } else {\n          error(\"getInspectorDataForViewAtPoint expects to receive a host component\");\n          return;\n        }\n      };\n    }\n    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\n    function findHostInstance_DEPRECATED(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n      if (componentOrHandle == null) {\n        return null;\n      }\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle;\n      }\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical;\n      }\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findHostInstance_DEPRECATED\");\n      }\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n      if (hostInstance.canonical) {\n        return hostInstance.canonical;\n      }\n      return hostInstance;\n    }\n    function findNodeHandle(componentOrHandle) {\n      {\n        var owner = ReactCurrentOwner$3.current;\n        if (owner !== null && owner.stateNode !== null) {\n          if (!owner.stateNode._warnedAboutRefsInRender) {\n            error(\"%s is accessing findNodeHandle inside its render(). \" + \"render() should be a pure function of props and state. It should \" + \"never access something that requires stale data from the previous \" + \"render, such as refs. Move this logic to componentDidMount and \" + \"componentDidUpdate instead.\", getComponentNameFromType(owner.type) || \"A component\");\n          }\n          owner.stateNode._warnedAboutRefsInRender = true;\n        }\n      }\n      if (componentOrHandle == null) {\n        return null;\n      }\n      if (typeof componentOrHandle === \"number\") {\n        return componentOrHandle;\n      }\n      if (componentOrHandle._nativeTag) {\n        return componentOrHandle._nativeTag;\n      }\n      if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n        return componentOrHandle.canonical._nativeTag;\n      }\n      var hostInstance;\n      {\n        hostInstance = findHostInstanceWithWarning(componentOrHandle, \"findNodeHandle\");\n      }\n      if (hostInstance == null) {\n        return hostInstance;\n      }\n      if (hostInstance.canonical) {\n        return hostInstance.canonical._nativeTag;\n      }\n      return hostInstance._nativeTag;\n    }\n    function dispatchCommand(handle, command, args) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"dispatchCommand was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n        }\n      } else {\n        ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);\n      }\n    }\n    function sendAccessibilityEvent(handle, eventType) {\n      if (handle._nativeTag == null) {\n        {\n          error(\"sendAccessibilityEvent was called with a ref that isn't a \" + \"native component. Use React.forwardRef to get access to the underlying native component\");\n        }\n        return;\n      }\n      if (handle._internalInstanceHandle != null) {\n        var stateNode = handle._internalInstanceHandle.stateNode;\n        if (stateNode != null) {\n          nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n        }\n      } else {\n        ReactNativePrivateInterface.legacySendAccessibilityEvent(handle._nativeTag, eventType);\n      }\n    }\n    function onRecoverableError(error$1) {\n      error(error$1);\n    }\n    function render(element, containerTag, callback) {\n      var root = roots.get(containerTag);\n      if (!root) {\n        root = createContainer(containerTag, LegacyRoot, null, false, null, \"\", onRecoverableError);\n        roots.set(containerTag, root);\n      }\n      updateContainer(element, root, null, callback);\n      return getPublicRootInstance(root);\n    }\n    function unmountComponentAtNode(containerTag) {\n      var root = roots.get(containerTag);\n      if (root) {\n        updateContainer(null, root, null, function () {\n          roots.delete(containerTag);\n        });\n      }\n    }\n    function unmountComponentAtNodeAndRemoveContainer(containerTag) {\n      unmountComponentAtNode(containerTag);\n      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);\n    }\n    function createPortal$1(children, containerTag) {\n      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return createPortal(children, containerTag, null, key);\n    }\n    setBatchingImplementation(batchedUpdates$1);\n    function computeComponentStackForErrorReporting(reactTag) {\n      var fiber = getInstanceFromTag(reactTag);\n      if (!fiber) {\n        return \"\";\n      }\n      return getStackByFiberInDevAndProd(fiber);\n    }\n    var roots = new Map();\n    var Internals = {\n      computeComponentStackForErrorReporting: computeComponentStackForErrorReporting\n    };\n    injectIntoDevTools({\n      findFiberByHostInstance: getInstanceFromTag,\n      bundleType: 1,\n      version: ReactVersion,\n      rendererPackageName: \"react-native-renderer\",\n      rendererConfig: {\n        getInspectorDataForViewTag: getInspectorDataForViewTag,\n        getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(null, findNodeHandle)\n      }\n    });\n    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\n    exports.createPortal = createPortal$1;\n    exports.dispatchCommand = dispatchCommand;\n    exports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\n    exports.findNodeHandle = findNodeHandle;\n    exports.render = render;\n    exports.sendAccessibilityEvent = sendAccessibilityEvent;\n    exports.unmountComponentAtNode = unmountComponentAtNode;\n    exports.unmountComponentAtNodeAndRemoveContainer = unmountComponentAtNodeAndRemoveContainer;\n    exports.unstable_batchedUpdates = batchedUpdates;\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"names":["__DEV__","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React","require","ReactNativePrivateInterface","Scheduler","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","invokeGuardedCallbackProd","name","func","context","a","b","c","d","e","f","funcArgs","slice","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","didError","windowEvent","event","windowEventDescriptor","Object","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","callCallback","hasOwnProperty","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","defineProperty","invokeGuardedCallbackImpl$1","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","rethrowCaughtError","hasCaughtError","isArrayImpl","isArray","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","setComponentTree","getFiberCurrentPropsFromNodeImpl","getInstanceFromNodeImpl","getNodeFromInstanceImpl","validateEventDispatches","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","listenersLen","instancesIsArr","instancesLen","executeDispatch","listener","inst","type","currentTarget","undefined","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","assign","EVENT_POOL_SIZE","EventInterface","target","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","isDefaultPrevented","_targetInst","Interface","constructor","propName","normalize","returnValue","cancelBubble","persist","isPersistent","destructor","getPooledWarningPropertyDefinition","extend","Super","E","Class","addEventPoolingTo","getVal","set","val","action","isFunction","get","result","configurable","createOrGetPooledEvent","nativeInst","EventConstructor","eventPool","instance","pop","releasePooledEvent","push","getPooled","release","ResponderSyntheticEvent","touchHistory","TOP_TOUCH_START","TOP_TOUCH_MOVE","TOP_TOUCH_END","TOP_TOUCH_CANCEL","TOP_SCROLL","TOP_SELECTION_CHANGE","isStartish","topLevelType","isMoveish","isEndish","startDependencies","moveDependencies","endDependencies","MAX_TOUCH_BANK","touchBank","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","_ref","identifier","recordTouchStart","recordTouchMove","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","instrumentationCallback","ResponderTouchHistoryStore","instrument","callback","recordTouchTrack","changedTouches","forEach","touches","touchTrackToCheck","activeRecord","accumulate","current","next","accumulateInto","forEachAccumulated","arr","cb","scope","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","TracingMarkerComponent","responderInst","trackedTouchCount","changeResponder","nextResponderInst","blockHostResponder","oldResponderInst","ResponderEventPlugin","GlobalResponderHandler","onChange","eventTypes","startShouldSetResponder","phasedRegistrationNames","bubbled","captured","dependencies","scrollShouldSetResponder","selectionChangeShouldSetResponder","moveShouldSetResponder","responderStart","registrationName","responderMove","responderEnd","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","getParent","return","tag","getLowestCommonAncestor","instA","instB","depthA","tempA","depthB","tempB","depth","alternate","isAncestor","traverseTwoPhase","fn","arg","path","getListener","stateNode","props","listenerAtPhase","propagationPhase","accumulateDirectionalDispatches","phase","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateDirectDispatches","events","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","accumulateTwoPhaseDispatchesSkipTarget","accumulateTwoPhaseDispatchesSingle","accumulateTwoPhaseDispatches","setResponderAndExtractTransfer","shouldSetEventType","bubbleShouldSetFrom","skipOverBubbleShouldSetFrom","shouldSetEvent","wantsResponderInst","extracted","grantEvent","terminationRequestEvent","shouldSwitch","terminateEvent","rejectEvent","canTriggerTransfer","topLevelInst","responderIgnoreScroll","noResponderTouches","activeTouch","_getResponder","extractEvents","eventSystemFlags","isResponderTouchStart","isResponderTouchMove","isResponderTouchEnd","incrementalTouch","gesture","isResponderTerminate","isResponderRelease","finalTouch","finalEvent","injection","injectGlobalResponderHandler","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","publishedEvents","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","registrationNameModules","registrationNameDependencies","lowerCasedName","toLowerCase","injectEventPluginOrder","injectedEventPluginOrder","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","getListeners","dispatchToImperativeListeners","canonical","_eventListeners","listeners","requestedPhaseIsCapture","mangledImperativeRegistrationName","replace","eventListeners","listenerObj","isCaptureEvent","options","capture","listenerFnWrapper","syntheticEvent","eventInst","CustomEvent","detail","setSyntheticEvent","once","removeEventListener_unstable","invalidated","customBubblingEventTypes","ReactNativeViewConfigRegistry","customDirectEventTypes","listenersAtPhase","accumulateListenersAndInstances","listenersLength","accumulateDirectionalDispatches$1","getParent$1","traverseTwoPhase$1","skipBubbling","accumulateTwoPhaseDispatchesSingle$1","accumulateTwoPhaseDispatches$1","accumulateCapturePhaseDispatches","accumulateDispatches$1","accumulateDirectDispatchesSingle$1","accumulateDirectDispatches$1","ReactNativeBridgeEventPlugin","bubbleDispatchConfig","directDispatchConfig","ReactNativeEventPluginOrder","instanceCache","Map","instanceProps","precacheFiberNode","hostInst","uncacheFiberNode","delete","getInstanceFromTag","getTagFromInstance","nativeInstance","_nativeTag","getFiberCurrentPropsFromNode$1","updateFiberProps","batchedUpdatesImpl","bookkeeping","isInsideEventHandler","batchedUpdates","setBatchingImplementation","_batchedUpdatesImpl","_discreteUpdatesImpl","eventQueue","executeDispatchesAndRelease","executeDispatchesAndReleaseTopLevel","runEventsInBatch","processingEventQueue","EMPTY_NATIVE_EVENT","touchSubsequence","indices","removeTouchesAtIndices","rippedOut","temp","index","fillAt","j","cur","_receiveRootNodeIDEvent","rootNodeID","nativeEventParam","runExtractedPluginEventsInBatch","extractPluginEvents","legacyPlugins","possiblePlugin","extractedEvents","receiveEvent","receiveTouches","eventTopLevelType","changedIndices","jj","ReactNativeGlobalResponderHandler","from","to","blockNativeResponder","UIManager","setJSResponder","clearJSResponder","RCTEventEmitter","register","key","_reactInternals","value","enableSchedulingProfiler","enableProfilerTimer","enableProfilerCommitHooks","warnAboutStringRefs","enableSuspenseAvoidThisFallback","enableNewReconciler","enableLazyContextPropagation","enableLegacyHidden","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","REACT_TRACING_MARKER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getWrappedName$1","getContextName$1","getComponentNameFromFiber","fiber","NoFlags","PerformedWork","Placement","Update","ChildDeletion","ContentReset","Callback","DidCapture","ForceClientRender","Ref","Snapshot","Passive","Hydrating","Visibility","StoreConsistency","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","Forked","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","nextNode","flags","isFiberMounted","isMounted","component","owner","ownerFiber","_warnedAboutRefsInRender","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","child","sibling","didFindChild","_child","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","updatePayload","validAttributes","obj","propKey","attributeConfig","diff","process","nextValue","diffNestedArrayProperty","prevArray","nextArray","minLength","diffNestedProperty","clearNestedProperty","addNestedProperty","diffProperties","flattenStyle","addProperties","clearProperties","prevProps","nextProps","shouldUpdate","_nextValue","_propKey","create","mountSafeCallback_NOT_REALLY_SAFE","__isMounted","warnForStyleProps","style","ReactNativeFiberHostComponent","viewConfig","internalInstanceHandleDEV","_children","_internalFiberInstanceHandleDEV","_proto","blur","TextInputState","blurTextInput","focus","focusTextInput","measure","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","relativeNode","nativeNode","setNativeProps","nativeProps","updateView","uiViewClassName","scheduleCallback","unstable_scheduleCallback","cancelCallback","unstable_cancelCallback","shouldYield","unstable_shouldYield","requestPaint","unstable_requestPaint","unstable_now","ImmediatePriority","unstable_ImmediatePriority","UserBlockingPriority","unstable_UserBlockingPriority","NormalPriority","unstable_NormalPriority","IdlePriority","unstable_IdlePriority","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","injectInternals","internals","hook","isDisabled","supportsFiber","getLaneLabelMap","injectProfilingHooks","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","schedulerPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","IdleEventPriority","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","profilingHooks","markComponentRenderStopped","markComponentErrored","thrownValue","lanes","markComponentSuspended","wakeable","NoMode","ConcurrentMode","ProfileMode","StrictLegacyMode","clz32","Math","clz32Fallback","log","LN2","asUint","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesSyncLane","includesNonIdleWork","includesOnlyRetries","includesOnlyNonUrgentLanes","UrgentLanes","includesOnlyTransitions","includesBlockingLane","SyncDefaultLanes","includesExpiredLane","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootFinished","remainingLanes","noLongerPendingLanes","mutableReadLanes","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","addFiberToLanesMap","pendingUpdatersLaneMap","updaters","add","movePendingFibersToMemoized","memoizedUpdaters","size","has","clear","getTransitionsForLanes","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","getSuspenseInstanceFallbackErrorDetails","registerSuspenseInstanceRetry","hydrateTextInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","errorHydratingContainer","getViewConfigForType","UPDATE_SIGNAL","freeze","nextReactTag","allocateTag","recursivelyUncacheFiberNode","appendInitialChild","parentInstance","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","deepFreezeAndThrowOnMutationInDev","createView","createTextInstance","text","isInAParentText","finalizeInitialChildren","nativeTags","setChildren","getRootHostContext","getChildHostContext","parentHostContext","prevIsInAParentText","getPublicInstance","prepareForCommit","containerInfo","prepareUpdate","oldProps","newProps","resetAfterCommit","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","getCurrentEventPriority","appendChild","childTag","splice","manageChildren","appendChildToContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayloadTODO","insertBefore","beforeChild","beforeChildIndex","_beforeChildIndex","insertInContainerBefore","removeChild","removeChildFromContainer","resetTextContent","hideInstance","display","hideTextInstance","unhideInstance","clearContainer","container","unhideTextInstance","preparePortalMount","portalInstance","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","ownerName","describeComponentFrame","componentFrameCache","PossiblyWeakMap","WeakMap","BEFORE_SLASH_RE","sourceInfo","fileName","test","pathBeforeSlash","folderName","lineNumber","describeClassComponentFrame","ctor","describeFunctionComponentFrame","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","bind","typeSpecName","error$1","ex","message","valueStack","fiberStack","createCursor","defaultValue","cursor","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","is","y","objectIs","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","isRootDehydrated","currentState","memoizedState","isDehydrated","forkStack","forkStackIndex","treeForkProvider","treeForkCount","idStack","idStackIndex","treeContextProvider","treeContextId","treeContextOverflow","popTreeContext","isHydrating","didSuspendOrErrorDEV","hydrationErrors","didSuspendOrErrorWhileHydratingDEV","reenterHydrationStateFromDehydratedSuspenseInstance","suspenseInstance","treeContext","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","prepareToHydrateHostSuspenseInstance","popHydrationState","upgradeHydrationErrorsToRecoverable","queueRecoverableErrors","getIsHydrating","queueHydrationError","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","shallowEqual","objA","objB","keysA","keys","keysB","currentKey","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","info","ReactDebugCurrentFrame$1","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","getCurrentFiber","setIsRendering","rendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","_sortedNames","_sortedNames2","_sortedNames3","_sortedNames4","_sortedNames5","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","typeName","hasToStringTag","toStringTag","willCoercionThrow","testStringCoercion","checkKeyStringCoercion","checkPropStringCoercion","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","_currentValue","_currentRenderer","popProvider","currentValue","scheduleContextWorkOnParentPath","propagationRoot","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","parentSuspense","_alternate","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","memoizedValue","concurrentQueues","pushConcurrentUpdateQueue","finishQueueingConcurrentUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","enqueueConcurrentHookUpdate","markUpdateLaneFromFiberToRoot","enqueueConcurrentHookUpdateAndEagerlyBailout","enqueueConcurrentClassUpdate","enqueueConcurrentRenderForLane","unsafe_markUpdateLaneFromFiberToRoot","sourceFiber","warnAboutUpdateOnNotYetMountedFiberInDEV","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isUnsafeClassRenderPhaseUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","_clone","_lastPendingUpdate","_firstPendingUpdate","lastInterleaved","markSkippedUpdateLanes","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","enumerable","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","_state","adoptClassInstance","updater","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","_componentName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","_fiberFlags","_fiberFlags2","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","resolvedInst","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","_created","_created2","_created3","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","_matchedFiber","_matchedFiber2","_matchedFiber3","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","_newFiber","_newFiber2","reconcileChildrenIterator","newChildrenIterable","iteratorFn","entries","_newChildren","_step","done","step","_newFiber3","_newFiber4","reconcileSingleTextNode","reconcileSingleElement","_existing","_created4","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextStackCursor$1","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","findFirstSuspended","row","revealOrder","didSuspend","NoFlags$1","HasEffect","Insertion","Layout","Passive$1","workInProgressSources","resetWorkInProgressVersions","mutableSource","_workInProgressVersionPrimary","ReactCurrentDispatcher$1","ReactCurrentBatchConfig$1","didWarnAboutMismatchedHooksForComponent","didWarnUncachedGetSnapshot","currentlyRenderingFiber$1","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","globalClientIdCounter","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","bailoutHooks","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","stores","basicStateReducer","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchReducerAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","hasEagerState","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","mountMutableSource","getSnapshot","subscribe","updateMutableSource","mountSyncExternalStore","getServerSnapshot","nextSnapshot","cachedSnapshot","getWorkInProgressRoot","pushStoreConsistencyCheck","mountEffect","subscribeToStore","pushEffect","updateStoreInstance","updateSyncExternalStore","prevSnapshot","snapshotChanged","updateEffect","renderedSnapshot","check","componentUpdateQueue","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","latestGetSnapshot","prevValue","mountState","dispatchSetState","updateState","rerenderState","destroy","firstEffect","mountRef","initialValue","_ref2","updateRef","mountEffectImpl","hookFlags","updateEffectImpl","prevEffect","mountInsertionEffect","updateInsertionEffect","mountLayoutEffect","updateLayoutEffect","imperativeHandleEffect","refCallback","_inst","refObject","_inst2","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","updateDeferredValue","resolvedCurrentHook","updateDeferredValueImpl","rerenderDeferredValue","shouldDeferValue","deferredLane","startTransition","setPending","previousPriority","prevTransition","currentTransition","_updatedFibers","updatedFibersCount","mountTransition","_mountState","isPending","start","updateTransition","_updateState","rerenderTransition","_rerenderState","getIsUpdatingOpaqueValueInRenderPhaseInDEV","mountId","identifierPrefix","id","globalClientId","updateId","isRenderPhaseUpdate","enqueueRenderPhaseUpdate","entangleTransitionUpdate","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","now$1","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValueAtFiber","digest","createCapturedValue","ReactFiberErrorDialog","showErrorDialog","boundary","errorInfo","capturedError","componentStack","errorBoundary","logCapturedError","logError","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","PossiblyWeakMap$1","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","restorePendingUpdaters","then","attachRetryListener","suspenseBoundary","wakeables","resetSuspendedComponent","rootRenderLanes","currentSource","getNearestSuspenseBoundaryToCapture","markSuspenseBoundaryShouldCapture","currentSourceFiber","throwException","renderDidSuspendDelayIfPossible","uncaughtSuspenseError","renderDidError","_errorInfo","isAlreadyFailedLegacyErrorBoundary","_lane","_update","getSuspendedCache","ReactCurrentOwner$1","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","_type","_innerPropTypes","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","transitions","pushRenderLanes","spawnedCachePool","nextBaseLanes","prevBaseLanes","_nextState","_nextState2","subtreeRenderLanes","_subtreeRenderLanes","updateMode","updateProfiler","markRef","updateClassComponent","shouldError","_instance","tempInstance","hasContext","resetSuspendedCurrentOnMountInLegacyMode","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","pendingContext","updateHostRoot","prevChildren","updateHostComponent","updateHostText","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","_componentName2","warningKey","debugSource","_componentName3","_componentName4","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseContext","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","primaryChildFragment","mountSuspensePrimaryChildren","_dehydrated","updateDehydratedSuspenseComponent","_nextFallbackChildren","_nextPrimaryChildren","fallbackChildFragment","updateSuspenseFallbackChildren","_primaryChildFragment2","_nextPrimaryChildren2","_primaryChildFragment3","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","treeBaseDuration","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","subtreeFlags","retrySuspenseComponentWithoutHydrating","recoverableError","mountSuspenseFallbackAfterRetryWithoutHydrating","fiberMode","_getSuspenseInstanceF","capturedValue","attemptHydrationAtLane","_capturedValue","retry","retryDehydratedSuspenseBoundary","_capturedValue2","_primaryChildFragment4","scheduleSuspenseWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","validateTailOptions","tailMode","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","_i","initSuspenseListRenderState","isBackwards","tail","renderState","renderingStartTime","last","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","_tail","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","_hasChildWork","beginWork","_debugNeedsRemount","unresolvedProps","_Component","_unresolvedProps","_resolvedProps","_unresolvedProps2","_resolvedProps2","_type2","_unresolvedProps3","_resolvedProps3","_Component2","_unresolvedProps4","_resolvedProps4","markUpdate","markRef$1","appendAllChildren","updateHostContainer","updateHostComponent$1","updateHostText$1","needsVisibilityToggle","isHidden","currentHostContext","cutOffTailIfNeeded","hasRenderedATailFallback","tailNode","lastTailNode","_tailNode","_lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","_treeBaseDuration","_child2","_child3","completeDehydratedSuspenseBoundary","wasHydrated","isTimedOutSuspense","_isTimedOutSuspense","_primaryChildFragment","completeWork","fiberRoot","_wasHydrated","_rootContainerInstance","_currentHostContext","_wasHydrated2","fallthroughToNormalSuspensePath","nextDidTimeout","prevDidTimeout","_offscreenFiber2","hasInvisibleChildContext","unstable_avoidThisFallback","renderDidSuspend","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","_suspended","_newThenables","previousSibling","popRenderLanes","nextIsHidden","_prevState","prevIsHidden","unwindWork","_flags","_flags2","unwindInterruptedWork","interruptedWork","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","nearestMountedAncestor","captureCommitPhaseError","safelyDetachRef","retVal","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","snapshot","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","setIsRunningInsertionEffect","commitHookEffectListMount","commitPassiveEffectDurations","finishedRoot","_finishedWork$memoize","onPostCommit","outer","commitLayoutEffectOnFiber","committedLanes","_updateQueue","_instance2","_finishedWork$memoize2","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitAttachRef","hideOrUnhideAllChildren","hostSubtreeRoot","_instance3","instanceToUse","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","before","insertOrAppendPlacementNode","_parent","_before","insertOrAppendPlacementNodeIntoContainer","isHost","hostParent","hostParentIsContainer","commitDeletionEffects","deletedFiber","findParent","commitDeletionEffectsOnFiber","recursivelyTraverseDeletionEffects","prevHostParent","prevHostParentIsContainer","_prevHostParent","_prevHostParentIsContainer","_effect","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitMutationEffects","commitMutationEffectsOnFiber","recursivelyTraverseMutationEffects","prevDebugFiber","commitReconciliationEffects","_instance4","offscreenFiber","offscreenInstance","wasHidden","markCommitTimeOfFallback","_wasHidden","_offscreenInstance","_newState","_isHidden","offscreenBoundary","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","commitLayoutMountEffects_complete","commitPassiveMountEffects","committedTransitions","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","symbolFor","ReactCurrentActQueue","isLegacyActEnvironment","isReactActEnvironmentGlobal","IS_REACT_ACT_ENVIRONMENT","jestIsDefined","jest","isConcurrentActEnvironment","ceil","ReactCurrentDispatcher$2","ReactCurrentOwner$2","ReactCurrentBatchConfig$2","ReactCurrentActQueue$1","NoContext","BatchedContext","RenderContext","CommitContext","RootInProgress","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","RootDidNotComplete","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootInterleavedUpdatedLanes","workInProgressRootPingedLanes","workInProgressRootConcurrentErrors","workInProgressRootRecoverableErrors","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","workInProgressTransitions","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","pendingPassiveTransitions","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","isFlushingPassiveEffects","didScheduleUpdateDuringPassiveEffects","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","rootWithPassiveNestedUpdates","currentEventTime","currentEventTransitionLane","isRunningInsertionEffect","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","warnIfUpdatesNotWrappedWithActDEV","markRootSuspended$1","ensureRootIsScheduled","isBatchingLegacy","existingCallbackNode","callbackNode","cancelCallback$1","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","scheduleCallback$1","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","shouldTimeSlice","exitStatus","renderRootConcurrent","renderRootSync","errorRetryLanes","recoverFromConcurrentError","fatalError","prepareFreshStack","renderWasConcurrent","isRenderConsistentWithExternalStores","_errorRetryLanes","_fatalError","finishedLanes","finishConcurrentRender","errorsFromFirstAttempt","rootWorkInProgress","errorsFromSecondAttempt","errors","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","_msUntilTimeout","jnd","checks","renderedValue","batchedUpdates$1","prevExecutionContext","flushSync","handleError","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","beginWork$1","_next","siblingFiber","recoverableErrors","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","onRecoverableError","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","_fiber","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","warnIfSuspenseResolutionNotWrappedWithActDEV","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","renderingComponentName","dedupeKey","setStateComponentName","schedulingFiber","priorityLevel","actQueue","isRunning","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","_root","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","shouldConstruct","isReactComponent","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","elements","primaryChildInstance","content","pendingChildren","FiberRootNode","hydrate","_debugRootType","createFiberRoot","initialChildren","hydrationCallbacks","transitionCallbacks","uninitializedFiber","_initialState","cache","pendingSuspenseBoundaries","ReactVersion","createPortal","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","findHostInstanceWithWarning","methodName","hostFiber","createContainer","current$1","getPublicRootInstance","containerFiber","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","version","rendererPackageName","rendererConfig","currentDispatcherRef","reconcilerVersion","emptyObject$1","createHierarchy","getHostNode","getHostProps","lastNonHostInstance","getOwnerHierarchy","traverseOwnerTreeUp","fiberHierarchy","getInspectorData","findNodeHandle","shadowNode","nativeFabricUIManager","hostNode","host","exports","getInspectorDataForInstance","closestInstance","hierarchy","selectedIndex","getInspectorDataForViewTag","getInspectorDataForViewAtPoint","viewTag","inspectedView","locationX","locationY","_internalInstanceHandle","findNodeAtPoint","pointerY","frame","left","top","width","height","nativeViewTag","inspectorData","touchedViewTag","findSubviewIn","ReactCurrentOwner$3","findHostInstance_DEPRECATED","componentOrHandle","dispatchCommand","handle","command","dispatchViewManagerCommand","sendAccessibilityEvent","eventType","legacySendAccessibilityEvent","containerTag","roots","unmountComponentAtNode","unmountComponentAtNodeAndRemoveContainer","removeRootView","createPortal$1","computeComponentStackForErrorReporting","reactTag","Internals","unstable_batchedUpdates","registerInternalModuleStop"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @noflow\r\n * @nolint\r\n * @providesModule ReactNativeRenderer-dev\r\n * @preventMunge\r\n * @generated SignedSource<<bfa2bf0648000d40e0e1b109070049f6>>\r\n */\r\n\r\n'use strict';\r\n\r\nif (__DEV__) {\r\n  (function() {\r\n\r\n          'use strict';\r\n\r\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\nif (\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\r\n    'function'\r\n) {\r\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\r\n}\r\n          \"use strict\";\r\n\r\nvar React = require(\"react\");\r\nrequire(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore\");\r\nvar ReactNativePrivateInterface = require(\"react-native/Libraries/ReactPrivate/ReactNativePrivateInterface\");\r\nvar Scheduler = require(\"scheduler\");\r\n\r\nvar ReactSharedInternals =\r\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n\r\n// by calls to these methods by a Babel plugin.\r\n//\r\n// In PROD (or in packages without access to React internals),\r\n// they are left as they are instead.\r\n\r\nfunction warn(format) {\r\n  {\r\n    {\r\n      for (\r\n        var _len = arguments.length,\r\n          args = new Array(_len > 1 ? _len - 1 : 0),\r\n          _key = 1;\r\n        _key < _len;\r\n        _key++\r\n      ) {\r\n        args[_key - 1] = arguments[_key];\r\n      }\r\n\r\n      printWarning(\"warn\", format, args);\r\n    }\r\n  }\r\n}\r\nfunction error(format) {\r\n  {\r\n    {\r\n      for (\r\n        var _len2 = arguments.length,\r\n          args = new Array(_len2 > 1 ? _len2 - 1 : 0),\r\n          _key2 = 1;\r\n        _key2 < _len2;\r\n        _key2++\r\n      ) {\r\n        args[_key2 - 1] = arguments[_key2];\r\n      }\r\n\r\n      printWarning(\"error\", format, args);\r\n    }\r\n  }\r\n}\r\n\r\nfunction printWarning(level, format, args) {\r\n  // When changing this logic, you might want to also\r\n  // update consoleWithStackDev.www.js as well.\r\n  {\r\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n\r\n    if (stack !== \"\") {\r\n      format += \"%s\";\r\n      args = args.concat([stack]);\r\n    } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n    var argsWithFormat = args.map(function(item) {\r\n      return String(item);\r\n    }); // Careful: RN currently depends on this prefix\r\n\r\n    argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\r\n    // breaks IE9: https://github.com/facebook/react/issues/13610\r\n    // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n  }\r\n}\r\n\r\nfunction invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {\r\n  var funcArgs = Array.prototype.slice.call(arguments, 3);\r\n\r\n  try {\r\n    func.apply(context, funcArgs);\r\n  } catch (error) {\r\n    this.onError(error);\r\n  }\r\n}\r\n\r\nvar invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\r\n\r\n{\r\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\r\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\r\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\r\n  // functions in invokeGuardedCallback, and the production version of\r\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\r\n  // like caught exceptions, and the DevTools won't pause unless the developer\r\n  // takes the extra step of enabling pause on caught exceptions. This is\r\n  // unintuitive, though, because even though React has caught the error, from\r\n  // the developer's perspective, the error is uncaught.\r\n  //\r\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\r\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\r\n  // DOM node, and call the user-provided callback from inside an event handler\r\n  // for that fake event. If the callback throws, the error is \"captured\" using\r\n  // a global event handler. But because the error happens in a different\r\n  // event loop context, it does not interrupt the normal program flow.\r\n  // Effectively, this gives us try-catch behavior without actually using\r\n  // try-catch. Neat!\r\n  // Check that the browser supports the APIs we need to implement our special\r\n  // DEV version of invokeGuardedCallback\r\n  if (\r\n    typeof window !== \"undefined\" &&\r\n    typeof window.dispatchEvent === \"function\" &&\r\n    typeof document !== \"undefined\" &&\r\n    typeof document.createEvent === \"function\"\r\n  ) {\r\n    var fakeNode = document.createElement(\"react\");\r\n\r\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(\r\n      name,\r\n      func,\r\n      context,\r\n      a,\r\n      b,\r\n      c,\r\n      d,\r\n      e,\r\n      f\r\n    ) {\r\n      // If document doesn't exist we know for sure we will crash in this method\r\n      // when we call document.createEvent(). However this can cause confusing\r\n      // errors: https://github.com/facebook/create-react-app/issues/3482\r\n      // So we preemptively throw with a better message instead.\r\n      if (typeof document === \"undefined\" || document === null) {\r\n        throw new Error(\r\n          \"The `document` global was defined when React was initialized, but is not \" +\r\n            \"defined anymore. This can happen in a test environment if a component \" +\r\n            \"schedules an update from an asynchronous callback, but the test has already \" +\r\n            \"finished running. To solve this, you can either unmount the component at \" +\r\n            \"the end of your test (and ensure that any asynchronous operations get \" +\r\n            \"canceled in `componentWillUnmount`), or you can change the test itself \" +\r\n            \"to be asynchronous.\"\r\n        );\r\n      }\r\n\r\n      var evt = document.createEvent(\"Event\");\r\n      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We\r\n      // set this to true at the beginning, then set it to false right after\r\n      // calling the function. If the function errors, `didError` will never be\r\n      // set to false. This strategy works even if the browser is flaky and\r\n      // fails to call our global error handler, because it doesn't rely on\r\n      // the error event at all.\r\n\r\n      var didError = true; // Keeps track of the value of window.event so that we can reset it\r\n      // during the callback to let user code access window.event in the\r\n      // browsers that support it.\r\n\r\n      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event\r\n      // dispatching: https://github.com/facebook/react/issues/13688\r\n\r\n      var windowEventDescriptor = Object.getOwnPropertyDescriptor(\r\n        window,\r\n        \"event\"\r\n      );\r\n\r\n      function restoreAfterDispatch() {\r\n        // We immediately remove the callback from event listeners so that\r\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\r\n        // nested call would trigger the fake event handlers of any call higher\r\n        // in the stack.\r\n        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the\r\n        // window.event assignment in both IE <= 10 as they throw an error\r\n        // \"Member not found\" in strict mode, and in Firefox which does not\r\n        // support window.event.\r\n\r\n        if (\r\n          typeof window.event !== \"undefined\" &&\r\n          window.hasOwnProperty(\"event\")\r\n        ) {\r\n          window.event = windowEvent;\r\n        }\r\n      } // Create an event handler for our fake event. We will synchronously\r\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\r\n      // call the user-provided callback.\r\n\r\n      var funcArgs = Array.prototype.slice.call(arguments, 3);\r\n\r\n      function callCallback() {\r\n        didCall = true;\r\n        restoreAfterDispatch();\r\n        func.apply(context, funcArgs);\r\n        didError = false;\r\n      } // Create a global error event handler. We use this to capture the value\r\n      // that was thrown. It's possible that this error handler will fire more\r\n      // than once; for example, if non-React code also calls `dispatchEvent`\r\n      // and a handler for that event throws. We should be resilient to most of\r\n      // those cases. Even if our error event handler fires more than once, the\r\n      // last error event is always used. If the callback actually does error,\r\n      // we know that the last error event is the correct one, because it's not\r\n      // possible for anything else to have happened in between our callback\r\n      // erroring and the code that follows the `dispatchEvent` call below. If\r\n      // the callback doesn't error, but the error event was fired, we know to\r\n      // ignore it because `didError` will be false, as described above.\r\n\r\n      var error; // Use this to track whether the error event is ever called.\r\n\r\n      var didSetError = false;\r\n      var isCrossOriginError = false;\r\n\r\n      function handleWindowError(event) {\r\n        error = event.error;\r\n        didSetError = true;\r\n\r\n        if (error === null && event.colno === 0 && event.lineno === 0) {\r\n          isCrossOriginError = true;\r\n        }\r\n\r\n        if (event.defaultPrevented) {\r\n          // Some other error handler has prevented default.\r\n          // Browsers silence the error report if this happens.\r\n          // We'll remember this to later decide whether to log it or not.\r\n          if (error != null && typeof error === \"object\") {\r\n            try {\r\n              error._suppressLogging = true;\r\n            } catch (inner) {\r\n              // Ignore.\r\n            }\r\n          }\r\n        }\r\n      } // Create a fake event type.\r\n\r\n      var evtType = \"react-\" + (name ? name : \"invokeguardedcallback\"); // Attach our event handlers\r\n\r\n      window.addEventListener(\"error\", handleWindowError);\r\n      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function\r\n      // errors, it will trigger our global error handler.\r\n\r\n      evt.initEvent(evtType, false, false);\r\n      fakeNode.dispatchEvent(evt);\r\n\r\n      if (windowEventDescriptor) {\r\n        Object.defineProperty(window, \"event\", windowEventDescriptor);\r\n      }\r\n\r\n      if (didCall && didError) {\r\n        if (!didSetError) {\r\n          // The callback errored, but the error event never fired.\r\n          // eslint-disable-next-line react-internal/prod-error-codes\r\n          error = new Error(\r\n            \"An error was thrown inside one of your components, but React \" +\r\n              \"doesn't know what it was. This is likely due to browser \" +\r\n              'flakiness. React does its best to preserve the \"Pause on ' +\r\n              'exceptions\" behavior of the DevTools, which requires some ' +\r\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\r\n              \"your browser. Try triggering the error in production mode, \" +\r\n              \"or switching to a modern browser. If you suspect that this is \" +\r\n              \"actually an issue with React, please file an issue.\"\r\n          );\r\n        } else if (isCrossOriginError) {\r\n          // eslint-disable-next-line react-internal/prod-error-codes\r\n          error = new Error(\r\n            \"A cross-origin error was thrown. React doesn't have access to \" +\r\n              \"the actual error object in development. \" +\r\n              \"See https://reactjs.org/link/crossorigin-error for more information.\"\r\n          );\r\n        }\r\n\r\n        this.onError(error);\r\n      } // Remove our event listeners\r\n\r\n      window.removeEventListener(\"error\", handleWindowError);\r\n\r\n      if (!didCall) {\r\n        // Something went really wrong, and our event was not dispatched.\r\n        // https://github.com/facebook/react/issues/16734\r\n        // https://github.com/facebook/react/issues/16585\r\n        // Fall back to the production implementation.\r\n        restoreAfterDispatch();\r\n        return invokeGuardedCallbackProd.apply(this, arguments);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nvar invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;\r\n\r\nvar hasError = false;\r\nvar caughtError = null; // Used by event system to capture/rethrow the first error.\r\n\r\nvar hasRethrowError = false;\r\nvar rethrowError = null;\r\nvar reporter = {\r\n  onError: function(error) {\r\n    hasError = true;\r\n    caughtError = error;\r\n  }\r\n};\r\n/**\r\n * Call a function while guarding against errors that happens within it.\r\n * Returns an error if it throws, otherwise null.\r\n *\r\n * In production, this is implemented using a try-catch. The reason we don't\r\n * use a try-catch directly is so that we can swap out a different\r\n * implementation in DEV mode.\r\n *\r\n * @param {String} name of the guard to use for logging or debugging\r\n * @param {Function} func The function to invoke\r\n * @param {*} context The context to use when calling the function\r\n * @param {...*} args Arguments for function\r\n */\r\n\r\nfunction invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {\r\n  hasError = false;\r\n  caughtError = null;\r\n  invokeGuardedCallbackImpl$1.apply(reporter, arguments);\r\n}\r\n/**\r\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\r\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\r\n * TODO: See if caughtError and rethrowError can be unified.\r\n *\r\n * @param {String} name of the guard to use for logging or debugging\r\n * @param {Function} func The function to invoke\r\n * @param {*} context The context to use when calling the function\r\n * @param {...*} args Arguments for function\r\n */\r\n\r\nfunction invokeGuardedCallbackAndCatchFirstError(\r\n  name,\r\n  func,\r\n  context,\r\n  a,\r\n  b,\r\n  c,\r\n  d,\r\n  e,\r\n  f\r\n) {\r\n  invokeGuardedCallback.apply(this, arguments);\r\n\r\n  if (hasError) {\r\n    var error = clearCaughtError();\r\n\r\n    if (!hasRethrowError) {\r\n      hasRethrowError = true;\r\n      rethrowError = error;\r\n    }\r\n  }\r\n}\r\n/**\r\n * During execution of guarded functions we will capture the first error which\r\n * we will rethrow to be handled by the top level error handler.\r\n */\r\n\r\nfunction rethrowCaughtError() {\r\n  if (hasRethrowError) {\r\n    var error = rethrowError;\r\n    hasRethrowError = false;\r\n    rethrowError = null;\r\n    throw error;\r\n  }\r\n}\r\nfunction hasCaughtError() {\r\n  return hasError;\r\n}\r\nfunction clearCaughtError() {\r\n  if (hasError) {\r\n    var error = caughtError;\r\n    hasError = false;\r\n    caughtError = null;\r\n    return error;\r\n  } else {\r\n    throw new Error(\r\n      \"clearCaughtError was called but no error was captured. This error \" +\r\n        \"is likely caused by a bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n}\r\n\r\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\r\n\r\nfunction isArray(a) {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nvar getFiberCurrentPropsFromNode = null;\r\nvar getInstanceFromNode = null;\r\nvar getNodeFromInstance = null;\r\nfunction setComponentTree(\r\n  getFiberCurrentPropsFromNodeImpl,\r\n  getInstanceFromNodeImpl,\r\n  getNodeFromInstanceImpl\r\n) {\r\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\r\n  getInstanceFromNode = getInstanceFromNodeImpl;\r\n  getNodeFromInstance = getNodeFromInstanceImpl;\r\n\r\n  {\r\n    if (!getNodeFromInstance || !getInstanceFromNode) {\r\n      error(\r\n        \"EventPluginUtils.setComponentTree(...): Injected \" +\r\n          \"module is missing getNodeFromInstance or getInstanceFromNode.\"\r\n      );\r\n    }\r\n  }\r\n}\r\nvar validateEventDispatches;\r\n\r\n{\r\n  validateEventDispatches = function(event) {\r\n    var dispatchListeners = event._dispatchListeners;\r\n    var dispatchInstances = event._dispatchInstances;\r\n    var listenersIsArr = isArray(dispatchListeners);\r\n    var listenersLen = listenersIsArr\r\n      ? dispatchListeners.length\r\n      : dispatchListeners\r\n      ? 1\r\n      : 0;\r\n    var instancesIsArr = isArray(dispatchInstances);\r\n    var instancesLen = instancesIsArr\r\n      ? dispatchInstances.length\r\n      : dispatchInstances\r\n      ? 1\r\n      : 0;\r\n\r\n    if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\r\n      error(\"EventPluginUtils: Invalid `event`.\");\r\n    }\r\n  };\r\n}\r\n/**\r\n * Dispatch the event to the listener.\r\n * @param {SyntheticEvent} event SyntheticEvent to handle\r\n * @param {function} listener Application-level callback\r\n * @param {*} inst Internal component instance\r\n */\r\n\r\nfunction executeDispatch(event, listener, inst) {\r\n  var type = event.type || \"unknown-event\";\r\n  event.currentTarget = getNodeFromInstance(inst);\r\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\r\n  event.currentTarget = null;\r\n}\r\n/**\r\n * Standard/simple iteration through an event's collected dispatches.\r\n */\r\n\r\nfunction executeDispatchesInOrder(event) {\r\n  var dispatchListeners = event._dispatchListeners;\r\n  var dispatchInstances = event._dispatchInstances;\r\n\r\n  {\r\n    validateEventDispatches(event);\r\n  }\r\n\r\n  if (isArray(dispatchListeners)) {\r\n    for (var i = 0; i < dispatchListeners.length; i++) {\r\n      if (event.isPropagationStopped()) {\r\n        break;\r\n      } // Listeners and Instances are two parallel arrays that are always in sync.\r\n\r\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\r\n    }\r\n  } else if (dispatchListeners) {\r\n    executeDispatch(event, dispatchListeners, dispatchInstances);\r\n  }\r\n\r\n  event._dispatchListeners = null;\r\n  event._dispatchInstances = null;\r\n}\r\n/**\r\n * Standard/simple iteration through an event's collected dispatches, but stops\r\n * at the first dispatch execution returning true, and returns that id.\r\n *\r\n * @return {?string} id of the first dispatch execution who's listener returns\r\n * true, or null if no listener returned true.\r\n */\r\n\r\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\r\n  var dispatchListeners = event._dispatchListeners;\r\n  var dispatchInstances = event._dispatchInstances;\r\n\r\n  {\r\n    validateEventDispatches(event);\r\n  }\r\n\r\n  if (isArray(dispatchListeners)) {\r\n    for (var i = 0; i < dispatchListeners.length; i++) {\r\n      if (event.isPropagationStopped()) {\r\n        break;\r\n      } // Listeners and Instances are two parallel arrays that are always in sync.\r\n\r\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\r\n        return dispatchInstances[i];\r\n      }\r\n    }\r\n  } else if (dispatchListeners) {\r\n    if (dispatchListeners(event, dispatchInstances)) {\r\n      return dispatchInstances;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n/**\r\n * @see executeDispatchesInOrderStopAtTrueImpl\r\n */\r\n\r\nfunction executeDispatchesInOrderStopAtTrue(event) {\r\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\r\n  event._dispatchInstances = null;\r\n  event._dispatchListeners = null;\r\n  return ret;\r\n}\r\n/**\r\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\r\n * accumulated on the event or it is considered an error. It doesn't really make\r\n * sense for an event with multiple dispatches (bubbled) to keep track of the\r\n * return values at each dispatch execution, but it does tend to make sense when\r\n * dealing with \"direct\" dispatches.\r\n *\r\n * @return {*} The return value of executing the single dispatch.\r\n */\r\n\r\nfunction executeDirectDispatch(event) {\r\n  {\r\n    validateEventDispatches(event);\r\n  }\r\n\r\n  var dispatchListener = event._dispatchListeners;\r\n  var dispatchInstance = event._dispatchInstances;\r\n\r\n  if (isArray(dispatchListener)) {\r\n    throw new Error(\"executeDirectDispatch(...): Invalid `event`.\");\r\n  }\r\n\r\n  event.currentTarget = dispatchListener\r\n    ? getNodeFromInstance(dispatchInstance)\r\n    : null;\r\n  var res = dispatchListener ? dispatchListener(event) : null;\r\n  event.currentTarget = null;\r\n  event._dispatchListeners = null;\r\n  event._dispatchInstances = null;\r\n  return res;\r\n}\r\n/**\r\n * @param {SyntheticEvent} event\r\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\r\n */\r\n\r\nfunction hasDispatches(event) {\r\n  return !!event._dispatchListeners;\r\n}\r\n\r\nvar assign = Object.assign;\r\n\r\nvar EVENT_POOL_SIZE = 10;\r\n/**\r\n * @interface Event\r\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\r\n */\r\n\r\nvar EventInterface = {\r\n  type: null,\r\n  target: null,\r\n  // currentTarget is set when dispatching; no use in copying it here\r\n  currentTarget: function() {\r\n    return null;\r\n  },\r\n  eventPhase: null,\r\n  bubbles: null,\r\n  cancelable: null,\r\n  timeStamp: function(event) {\r\n    return event.timeStamp || Date.now();\r\n  },\r\n  defaultPrevented: null,\r\n  isTrusted: null\r\n};\r\n\r\nfunction functionThatReturnsTrue() {\r\n  return true;\r\n}\r\n\r\nfunction functionThatReturnsFalse() {\r\n  return false;\r\n}\r\n/**\r\n * Synthetic events are dispatched by event plugins, typically in response to a\r\n * top-level event delegation handler.\r\n *\r\n * These systems should generally use pooling to reduce the frequency of garbage\r\n * collection. The system should check `isPersistent` to determine whether the\r\n * event should be released into the pool after being dispatched. Users that\r\n * need a persisted event should invoke `persist`.\r\n *\r\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\r\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\r\n * DOM interface; custom application-specific events can also subclass this.\r\n *\r\n * @param {object} dispatchConfig Configuration used to dispatch this event.\r\n * @param {*} targetInst Marker identifying the event target.\r\n * @param {object} nativeEvent Native browser event.\r\n * @param {DOMEventTarget} nativeEventTarget Target node.\r\n */\r\n\r\nfunction SyntheticEvent(\r\n  dispatchConfig,\r\n  targetInst,\r\n  nativeEvent,\r\n  nativeEventTarget\r\n) {\r\n  {\r\n    // these have a getter/setter for warnings\r\n    delete this.nativeEvent;\r\n    delete this.preventDefault;\r\n    delete this.stopPropagation;\r\n    delete this.isDefaultPrevented;\r\n    delete this.isPropagationStopped;\r\n  }\r\n\r\n  this.dispatchConfig = dispatchConfig;\r\n  this._targetInst = targetInst;\r\n  this.nativeEvent = nativeEvent;\r\n  this._dispatchListeners = null;\r\n  this._dispatchInstances = null;\r\n  var Interface = this.constructor.Interface;\r\n\r\n  for (var propName in Interface) {\r\n    if (!Interface.hasOwnProperty(propName)) {\r\n      continue;\r\n    }\r\n\r\n    {\r\n      delete this[propName]; // this has a getter/setter for warnings\r\n    }\r\n\r\n    var normalize = Interface[propName];\r\n\r\n    if (normalize) {\r\n      this[propName] = normalize(nativeEvent);\r\n    } else {\r\n      if (propName === \"target\") {\r\n        this.target = nativeEventTarget;\r\n      } else {\r\n        this[propName] = nativeEvent[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  var defaultPrevented =\r\n    nativeEvent.defaultPrevented != null\r\n      ? nativeEvent.defaultPrevented\r\n      : nativeEvent.returnValue === false;\r\n\r\n  if (defaultPrevented) {\r\n    this.isDefaultPrevented = functionThatReturnsTrue;\r\n  } else {\r\n    this.isDefaultPrevented = functionThatReturnsFalse;\r\n  }\r\n\r\n  this.isPropagationStopped = functionThatReturnsFalse;\r\n  return this;\r\n}\r\n\r\nassign(SyntheticEvent.prototype, {\r\n  preventDefault: function() {\r\n    this.defaultPrevented = true;\r\n    var event = this.nativeEvent;\r\n\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    if (event.preventDefault) {\r\n      event.preventDefault();\r\n    } else if (typeof event.returnValue !== \"unknown\") {\r\n      event.returnValue = false;\r\n    }\r\n\r\n    this.isDefaultPrevented = functionThatReturnsTrue;\r\n  },\r\n  stopPropagation: function() {\r\n    var event = this.nativeEvent;\r\n\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    if (event.stopPropagation) {\r\n      event.stopPropagation();\r\n    } else if (typeof event.cancelBubble !== \"unknown\") {\r\n      // The ChangeEventPlugin registers a \"propertychange\" event for\r\n      // IE. This event does not support bubbling or cancelling, and\r\n      // any references to cancelBubble throw \"Member not found\".  A\r\n      // typeof check of \"unknown\" circumvents this issue (and is also\r\n      // IE specific).\r\n      event.cancelBubble = true;\r\n    }\r\n\r\n    this.isPropagationStopped = functionThatReturnsTrue;\r\n  },\r\n\r\n  /**\r\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\r\n   * them back into the pool. This allows a way to hold onto a reference that\r\n   * won't be added back into the pool.\r\n   */\r\n  persist: function() {\r\n    this.isPersistent = functionThatReturnsTrue;\r\n  },\r\n\r\n  /**\r\n   * Checks if this event should be released back into the pool.\r\n   *\r\n   * @return {boolean} True if this should not be released, false otherwise.\r\n   */\r\n  isPersistent: functionThatReturnsFalse,\r\n\r\n  /**\r\n   * `PooledClass` looks for `destructor` on each instance it releases.\r\n   */\r\n  destructor: function() {\r\n    var Interface = this.constructor.Interface;\r\n\r\n    for (var propName in Interface) {\r\n      {\r\n        Object.defineProperty(\r\n          this,\r\n          propName,\r\n          getPooledWarningPropertyDefinition(propName, Interface[propName])\r\n        );\r\n      }\r\n    }\r\n\r\n    this.dispatchConfig = null;\r\n    this._targetInst = null;\r\n    this.nativeEvent = null;\r\n    this.isDefaultPrevented = functionThatReturnsFalse;\r\n    this.isPropagationStopped = functionThatReturnsFalse;\r\n    this._dispatchListeners = null;\r\n    this._dispatchInstances = null;\r\n\r\n    {\r\n      Object.defineProperty(\r\n        this,\r\n        \"nativeEvent\",\r\n        getPooledWarningPropertyDefinition(\"nativeEvent\", null)\r\n      );\r\n      Object.defineProperty(\r\n        this,\r\n        \"isDefaultPrevented\",\r\n        getPooledWarningPropertyDefinition(\r\n          \"isDefaultPrevented\",\r\n          functionThatReturnsFalse\r\n        )\r\n      );\r\n      Object.defineProperty(\r\n        this,\r\n        \"isPropagationStopped\",\r\n        getPooledWarningPropertyDefinition(\r\n          \"isPropagationStopped\",\r\n          functionThatReturnsFalse\r\n        )\r\n      );\r\n      Object.defineProperty(\r\n        this,\r\n        \"preventDefault\",\r\n        getPooledWarningPropertyDefinition(\"preventDefault\", function() {})\r\n      );\r\n      Object.defineProperty(\r\n        this,\r\n        \"stopPropagation\",\r\n        getPooledWarningPropertyDefinition(\"stopPropagation\", function() {})\r\n      );\r\n    }\r\n  }\r\n});\r\nSyntheticEvent.Interface = EventInterface;\r\n/**\r\n * Helper to reduce boilerplate when creating subclasses.\r\n */\r\n\r\nSyntheticEvent.extend = function(Interface) {\r\n  var Super = this;\r\n\r\n  var E = function() {};\r\n\r\n  E.prototype = Super.prototype;\r\n  var prototype = new E();\r\n\r\n  function Class() {\r\n    return Super.apply(this, arguments);\r\n  }\r\n\r\n  assign(prototype, Class.prototype);\r\n  Class.prototype = prototype;\r\n  Class.prototype.constructor = Class;\r\n  Class.Interface = assign({}, Super.Interface, Interface);\r\n  Class.extend = Super.extend;\r\n  addEventPoolingTo(Class);\r\n  return Class;\r\n};\r\n\r\naddEventPoolingTo(SyntheticEvent);\r\n/**\r\n * Helper to nullify syntheticEvent instance properties when destructing\r\n *\r\n * @param {String} propName\r\n * @param {?object} getVal\r\n * @return {object} defineProperty object\r\n */\r\n\r\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\r\n  function set(val) {\r\n    var action = isFunction ? \"setting the method\" : \"setting the property\";\r\n    warn(action, \"This is effectively a no-op\");\r\n    return val;\r\n  }\r\n\r\n  function get() {\r\n    var action = isFunction ? \"accessing the method\" : \"accessing the property\";\r\n    var result = isFunction\r\n      ? \"This is a no-op function\"\r\n      : \"This is set to null\";\r\n    warn(action, result);\r\n    return getVal;\r\n  }\r\n\r\n  function warn(action, result) {\r\n    {\r\n      error(\r\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\r\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\r\n          \"If you must keep the original synthetic event around, use event.persist(). \" +\r\n          \"See https://reactjs.org/link/event-pooling for more information.\",\r\n        action,\r\n        propName,\r\n        result\r\n      );\r\n    }\r\n  }\r\n\r\n  var isFunction = typeof getVal === \"function\";\r\n  return {\r\n    configurable: true,\r\n    set: set,\r\n    get: get\r\n  };\r\n}\r\n\r\nfunction createOrGetPooledEvent(\r\n  dispatchConfig,\r\n  targetInst,\r\n  nativeEvent,\r\n  nativeInst\r\n) {\r\n  var EventConstructor = this;\r\n\r\n  if (EventConstructor.eventPool.length) {\r\n    var instance = EventConstructor.eventPool.pop();\r\n    EventConstructor.call(\r\n      instance,\r\n      dispatchConfig,\r\n      targetInst,\r\n      nativeEvent,\r\n      nativeInst\r\n    );\r\n    return instance;\r\n  }\r\n\r\n  return new EventConstructor(\r\n    dispatchConfig,\r\n    targetInst,\r\n    nativeEvent,\r\n    nativeInst\r\n  );\r\n}\r\n\r\nfunction releasePooledEvent(event) {\r\n  var EventConstructor = this;\r\n\r\n  if (!(event instanceof EventConstructor)) {\r\n    throw new Error(\r\n      \"Trying to release an event instance into a pool of a different type.\"\r\n    );\r\n  }\r\n\r\n  event.destructor();\r\n\r\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\r\n    EventConstructor.eventPool.push(event);\r\n  }\r\n}\r\n\r\nfunction addEventPoolingTo(EventConstructor) {\r\n  EventConstructor.getPooled = createOrGetPooledEvent;\r\n  EventConstructor.eventPool = [];\r\n  EventConstructor.release = releasePooledEvent;\r\n}\r\n\r\n/**\r\n * `touchHistory` isn't actually on the native event, but putting it in the\r\n * interface will ensure that it is cleaned up when pooled/destroyed. The\r\n * `ResponderEventPlugin` will populate it appropriately.\r\n */\r\n\r\nvar ResponderSyntheticEvent = SyntheticEvent.extend({\r\n  touchHistory: function(nativeEvent) {\r\n    return null; // Actually doesn't even look at the native event.\r\n  }\r\n});\r\n\r\nvar TOP_TOUCH_START = \"topTouchStart\";\r\nvar TOP_TOUCH_MOVE = \"topTouchMove\";\r\nvar TOP_TOUCH_END = \"topTouchEnd\";\r\nvar TOP_TOUCH_CANCEL = \"topTouchCancel\";\r\nvar TOP_SCROLL = \"topScroll\";\r\nvar TOP_SELECTION_CHANGE = \"topSelectionChange\";\r\nfunction isStartish(topLevelType) {\r\n  return topLevelType === TOP_TOUCH_START;\r\n}\r\nfunction isMoveish(topLevelType) {\r\n  return topLevelType === TOP_TOUCH_MOVE;\r\n}\r\nfunction isEndish(topLevelType) {\r\n  return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\r\n}\r\nvar startDependencies = [TOP_TOUCH_START];\r\nvar moveDependencies = [TOP_TOUCH_MOVE];\r\nvar endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\r\n\r\n/**\r\n * Tracks the position and time of each active touch by `touch.identifier`. We\r\n * should typically only see IDs in the range of 1-20 because IDs get recycled\r\n * when touches end and start again.\r\n */\r\n\r\nvar MAX_TOUCH_BANK = 20;\r\nvar touchBank = [];\r\nvar touchHistory = {\r\n  touchBank: touchBank,\r\n  numberActiveTouches: 0,\r\n  // If there is only one active touch, we remember its location. This prevents\r\n  // us having to loop through all of the touches all the time in the most\r\n  // common case.\r\n  indexOfSingleActiveTouch: -1,\r\n  mostRecentTimeStamp: 0\r\n};\r\n\r\nfunction timestampForTouch(touch) {\r\n  // The legacy internal implementation provides \"timeStamp\", which has been\r\n  // renamed to \"timestamp\". Let both work for now while we iron it out\r\n  // TODO (evv): rename timeStamp to timestamp in internal code\r\n  return touch.timeStamp || touch.timestamp;\r\n}\r\n/**\r\n * TODO: Instead of making gestures recompute filtered velocity, we could\r\n * include a built in velocity computation that can be reused globally.\r\n */\r\n\r\nfunction createTouchRecord(touch) {\r\n  return {\r\n    touchActive: true,\r\n    startPageX: touch.pageX,\r\n    startPageY: touch.pageY,\r\n    startTimeStamp: timestampForTouch(touch),\r\n    currentPageX: touch.pageX,\r\n    currentPageY: touch.pageY,\r\n    currentTimeStamp: timestampForTouch(touch),\r\n    previousPageX: touch.pageX,\r\n    previousPageY: touch.pageY,\r\n    previousTimeStamp: timestampForTouch(touch)\r\n  };\r\n}\r\n\r\nfunction resetTouchRecord(touchRecord, touch) {\r\n  touchRecord.touchActive = true;\r\n  touchRecord.startPageX = touch.pageX;\r\n  touchRecord.startPageY = touch.pageY;\r\n  touchRecord.startTimeStamp = timestampForTouch(touch);\r\n  touchRecord.currentPageX = touch.pageX;\r\n  touchRecord.currentPageY = touch.pageY;\r\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n  touchRecord.previousPageX = touch.pageX;\r\n  touchRecord.previousPageY = touch.pageY;\r\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\r\n}\r\n\r\nfunction getTouchIdentifier(_ref) {\r\n  var identifier = _ref.identifier;\r\n\r\n  if (identifier == null) {\r\n    throw new Error(\"Touch object is missing identifier.\");\r\n  }\r\n\r\n  {\r\n    if (identifier > MAX_TOUCH_BANK) {\r\n      error(\r\n        \"Touch identifier %s is greater than maximum supported %s which causes \" +\r\n          \"performance issues backfilling array locations for all of the indices.\",\r\n        identifier,\r\n        MAX_TOUCH_BANK\r\n      );\r\n    }\r\n  }\r\n\r\n  return identifier;\r\n}\r\n\r\nfunction recordTouchStart(touch) {\r\n  var identifier = getTouchIdentifier(touch);\r\n  var touchRecord = touchBank[identifier];\r\n\r\n  if (touchRecord) {\r\n    resetTouchRecord(touchRecord, touch);\r\n  } else {\r\n    touchBank[identifier] = createTouchRecord(touch);\r\n  }\r\n\r\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n}\r\n\r\nfunction recordTouchMove(touch) {\r\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\r\n\r\n  if (touchRecord) {\r\n    touchRecord.touchActive = true;\r\n    touchRecord.previousPageX = touchRecord.currentPageX;\r\n    touchRecord.previousPageY = touchRecord.currentPageY;\r\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\r\n    touchRecord.currentPageX = touch.pageX;\r\n    touchRecord.currentPageY = touch.pageY;\r\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n  } else {\r\n    {\r\n      warn(\r\n        \"Cannot record touch move without a touch start.\\n\" +\r\n          \"Touch Move: %s\\n\" +\r\n          \"Touch Bank: %s\",\r\n        printTouch(touch),\r\n        printTouchBank()\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction recordTouchEnd(touch) {\r\n  var touchRecord = touchBank[getTouchIdentifier(touch)];\r\n\r\n  if (touchRecord) {\r\n    touchRecord.touchActive = false;\r\n    touchRecord.previousPageX = touchRecord.currentPageX;\r\n    touchRecord.previousPageY = touchRecord.currentPageY;\r\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\r\n    touchRecord.currentPageX = touch.pageX;\r\n    touchRecord.currentPageY = touch.pageY;\r\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\r\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\r\n  } else {\r\n    {\r\n      warn(\r\n        \"Cannot record touch end without a touch start.\\n\" +\r\n          \"Touch End: %s\\n\" +\r\n          \"Touch Bank: %s\",\r\n        printTouch(touch),\r\n        printTouchBank()\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction printTouch(touch) {\r\n  return JSON.stringify({\r\n    identifier: touch.identifier,\r\n    pageX: touch.pageX,\r\n    pageY: touch.pageY,\r\n    timestamp: timestampForTouch(touch)\r\n  });\r\n}\r\n\r\nfunction printTouchBank() {\r\n  var printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\r\n\r\n  if (touchBank.length > MAX_TOUCH_BANK) {\r\n    printed += \" (original size: \" + touchBank.length + \")\";\r\n  }\r\n\r\n  return printed;\r\n}\r\n\r\nvar instrumentationCallback;\r\nvar ResponderTouchHistoryStore = {\r\n  /**\r\n   * Registers a listener which can be used to instrument every touch event.\r\n   */\r\n  instrument: function(callback) {\r\n    instrumentationCallback = callback;\r\n  },\r\n  recordTouchTrack: function(topLevelType, nativeEvent) {\r\n    if (instrumentationCallback != null) {\r\n      instrumentationCallback(topLevelType, nativeEvent);\r\n    }\r\n\r\n    if (isMoveish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchMove);\r\n    } else if (isStartish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchStart);\r\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\r\n\r\n      if (touchHistory.numberActiveTouches === 1) {\r\n        touchHistory.indexOfSingleActiveTouch =\r\n          nativeEvent.touches[0].identifier;\r\n      }\r\n    } else if (isEndish(topLevelType)) {\r\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\r\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\r\n\r\n      if (touchHistory.numberActiveTouches === 1) {\r\n        for (var i = 0; i < touchBank.length; i++) {\r\n          var touchTrackToCheck = touchBank[i];\r\n\r\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\r\n            touchHistory.indexOfSingleActiveTouch = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        {\r\n          var activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\r\n\r\n          if (activeRecord == null || !activeRecord.touchActive) {\r\n            error(\"Cannot find single active touch.\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  touchHistory: touchHistory\r\n};\r\n\r\n/**\r\n * Accumulates items that must not be null or undefined.\r\n *\r\n * This is used to conserve memory by avoiding array allocations.\r\n *\r\n * @return {*|array<*>} An accumulation of items.\r\n */\r\n\r\nfunction accumulate(current, next) {\r\n  if (next == null) {\r\n    throw new Error(\r\n      \"accumulate(...): Accumulated items must not be null or undefined.\"\r\n    );\r\n  }\r\n\r\n  if (current == null) {\r\n    return next;\r\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\r\n  // certain that x is an Array (x could be a string with concat method).\r\n\r\n  if (isArray(current)) {\r\n    return current.concat(next);\r\n  }\r\n\r\n  if (isArray(next)) {\r\n    return [current].concat(next);\r\n  }\r\n\r\n  return [current, next];\r\n}\r\n\r\n/**\r\n * Accumulates items that must not be null or undefined into the first one. This\r\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\r\n * API cleanness. Since `current` can be null before being passed in and not\r\n * null after this function, make sure to assign it back to `current`:\r\n *\r\n * `a = accumulateInto(a, b);`\r\n *\r\n * This API should be sparingly used. Try `accumulate` for something cleaner.\r\n *\r\n * @return {*|array<*>} An accumulation of items.\r\n */\r\n\r\nfunction accumulateInto(current, next) {\r\n  if (next == null) {\r\n    throw new Error(\r\n      \"accumulateInto(...): Accumulated items must not be null or undefined.\"\r\n    );\r\n  }\r\n\r\n  if (current == null) {\r\n    return next;\r\n  } // Both are not empty. Warning: Never call x.concat(y) when you are not\r\n  // certain that x is an Array (x could be a string with concat method).\r\n\r\n  if (isArray(current)) {\r\n    if (isArray(next)) {\r\n      current.push.apply(current, next);\r\n      return current;\r\n    }\r\n\r\n    current.push(next);\r\n    return current;\r\n  }\r\n\r\n  if (isArray(next)) {\r\n    // A bit too dangerous to mutate `next`.\r\n    return [current].concat(next);\r\n  }\r\n\r\n  return [current, next];\r\n}\r\n\r\n/**\r\n * @param {array} arr an \"accumulation\" of items which is either an Array or\r\n * a single item. Useful when paired with the `accumulate` module. This is a\r\n * simple utility that allows us to reason about a collection of items, but\r\n * handling the case when there is exactly one item (and we do not need to\r\n * allocate an array).\r\n * @param {function} cb Callback invoked with each element or a collection.\r\n * @param {?} [scope] Scope used as `this` in a callback.\r\n */\r\nfunction forEachAccumulated(arr, cb, scope) {\r\n  if (Array.isArray(arr)) {\r\n    arr.forEach(cb, scope);\r\n  } else if (arr) {\r\n    cb.call(scope, arr);\r\n  }\r\n}\r\n\r\nvar FunctionComponent = 0;\r\nvar ClassComponent = 1;\r\nvar IndeterminateComponent = 2; // Before we know whether it is function or class\r\n\r\nvar HostRoot = 3; // Root of a host tree. Could be nested inside another node.\r\n\r\nvar HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\r\n\r\nvar HostComponent = 5;\r\nvar HostText = 6;\r\nvar Fragment = 7;\r\nvar Mode = 8;\r\nvar ContextConsumer = 9;\r\nvar ContextProvider = 10;\r\nvar ForwardRef = 11;\r\nvar Profiler = 12;\r\nvar SuspenseComponent = 13;\r\nvar MemoComponent = 14;\r\nvar SimpleMemoComponent = 15;\r\nvar LazyComponent = 16;\r\nvar IncompleteClassComponent = 17;\r\nvar DehydratedFragment = 18;\r\nvar SuspenseListComponent = 19;\r\nvar ScopeComponent = 21;\r\nvar OffscreenComponent = 22;\r\nvar LegacyHiddenComponent = 23;\r\nvar CacheComponent = 24;\r\nvar TracingMarkerComponent = 25;\r\n\r\n/**\r\n * Instance of element that should respond to touch/move types of interactions,\r\n * as indicated explicitly by relevant callbacks.\r\n */\r\n\r\nvar responderInst = null;\r\n/**\r\n * Count of current touches. A textInput should become responder iff the\r\n * selection changes while there is a touch on the screen.\r\n */\r\n\r\nvar trackedTouchCount = 0;\r\n\r\nvar changeResponder = function(nextResponderInst, blockHostResponder) {\r\n  var oldResponderInst = responderInst;\r\n  responderInst = nextResponderInst;\r\n\r\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\r\n    ResponderEventPlugin.GlobalResponderHandler.onChange(\r\n      oldResponderInst,\r\n      nextResponderInst,\r\n      blockHostResponder\r\n    );\r\n  }\r\n};\r\n\r\nvar eventTypes = {\r\n  /**\r\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\r\n   * responder?\r\n   */\r\n  startShouldSetResponder: {\r\n    phasedRegistrationNames: {\r\n      bubbled: \"onStartShouldSetResponder\",\r\n      captured: \"onStartShouldSetResponderCapture\"\r\n    },\r\n    dependencies: startDependencies\r\n  },\r\n\r\n  /**\r\n   * On a `scroll`, is it desired that this element become the responder? This\r\n   * is usually not needed, but should be used to retroactively infer that a\r\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\r\n   * a touch start will be immediately followed by a scroll event if the view is\r\n   * currently scrolling.\r\n   *\r\n   * TODO: This shouldn't bubble.\r\n   */\r\n  scrollShouldSetResponder: {\r\n    phasedRegistrationNames: {\r\n      bubbled: \"onScrollShouldSetResponder\",\r\n      captured: \"onScrollShouldSetResponderCapture\"\r\n    },\r\n    dependencies: [TOP_SCROLL]\r\n  },\r\n\r\n  /**\r\n   * On text selection change, should this element become the responder? This\r\n   * is needed for text inputs or other views with native selection, so the\r\n   * JS view can claim the responder.\r\n   *\r\n   * TODO: This shouldn't bubble.\r\n   */\r\n  selectionChangeShouldSetResponder: {\r\n    phasedRegistrationNames: {\r\n      bubbled: \"onSelectionChangeShouldSetResponder\",\r\n      captured: \"onSelectionChangeShouldSetResponderCapture\"\r\n    },\r\n    dependencies: [TOP_SELECTION_CHANGE]\r\n  },\r\n\r\n  /**\r\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\r\n   * responder?\r\n   */\r\n  moveShouldSetResponder: {\r\n    phasedRegistrationNames: {\r\n      bubbled: \"onMoveShouldSetResponder\",\r\n      captured: \"onMoveShouldSetResponderCapture\"\r\n    },\r\n    dependencies: moveDependencies\r\n  },\r\n\r\n  /**\r\n   * Direct responder events dispatched directly to responder. Do not bubble.\r\n   */\r\n  responderStart: {\r\n    registrationName: \"onResponderStart\",\r\n    dependencies: startDependencies\r\n  },\r\n  responderMove: {\r\n    registrationName: \"onResponderMove\",\r\n    dependencies: moveDependencies\r\n  },\r\n  responderEnd: {\r\n    registrationName: \"onResponderEnd\",\r\n    dependencies: endDependencies\r\n  },\r\n  responderRelease: {\r\n    registrationName: \"onResponderRelease\",\r\n    dependencies: endDependencies\r\n  },\r\n  responderTerminationRequest: {\r\n    registrationName: \"onResponderTerminationRequest\",\r\n    dependencies: []\r\n  },\r\n  responderGrant: {\r\n    registrationName: \"onResponderGrant\",\r\n    dependencies: []\r\n  },\r\n  responderReject: {\r\n    registrationName: \"onResponderReject\",\r\n    dependencies: []\r\n  },\r\n  responderTerminate: {\r\n    registrationName: \"onResponderTerminate\",\r\n    dependencies: []\r\n  }\r\n}; // Start of inline: the below functions were inlined from\r\n// EventPropagator.js, as they deviated from ReactDOM's newer\r\n// implementations.\r\n\r\nfunction getParent(inst) {\r\n  do {\r\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\r\n    // That is depending on if we want nested subtrees (layers) to bubble\r\n    // events to their parent. We could also go through parentNode on the\r\n    // host node but that wouldn't work for React Native and doesn't let us\r\n    // do the portal feature.\r\n  } while (inst && inst.tag !== HostComponent);\r\n\r\n  if (inst) {\r\n    return inst;\r\n  }\r\n\r\n  return null;\r\n}\r\n/**\r\n * Return the lowest common ancestor of A and B, or null if they are in\r\n * different trees.\r\n */\r\n\r\nfunction getLowestCommonAncestor(instA, instB) {\r\n  var depthA = 0;\r\n\r\n  for (var tempA = instA; tempA; tempA = getParent(tempA)) {\r\n    depthA++;\r\n  }\r\n\r\n  var depthB = 0;\r\n\r\n  for (var tempB = instB; tempB; tempB = getParent(tempB)) {\r\n    depthB++;\r\n  } // If A is deeper, crawl up.\r\n\r\n  while (depthA - depthB > 0) {\r\n    instA = getParent(instA);\r\n    depthA--;\r\n  } // If B is deeper, crawl up.\r\n\r\n  while (depthB - depthA > 0) {\r\n    instB = getParent(instB);\r\n    depthB--;\r\n  } // Walk in lockstep until we find a match.\r\n\r\n  var depth = depthA;\r\n\r\n  while (depth--) {\r\n    if (instA === instB || instA === instB.alternate) {\r\n      return instA;\r\n    }\r\n\r\n    instA = getParent(instA);\r\n    instB = getParent(instB);\r\n  }\r\n\r\n  return null;\r\n}\r\n/**\r\n * Return if A is an ancestor of B.\r\n */\r\n\r\nfunction isAncestor(instA, instB) {\r\n  while (instB) {\r\n    if (instA === instB || instA === instB.alternate) {\r\n      return true;\r\n    }\r\n\r\n    instB = getParent(instB);\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\r\n */\r\n\r\nfunction traverseTwoPhase(inst, fn, arg) {\r\n  var path = [];\r\n\r\n  while (inst) {\r\n    path.push(inst);\r\n    inst = getParent(inst);\r\n  }\r\n\r\n  var i;\r\n\r\n  for (i = path.length; i-- > 0; ) {\r\n    fn(path[i], \"captured\", arg);\r\n  }\r\n\r\n  for (i = 0; i < path.length; i++) {\r\n    fn(path[i], \"bubbled\", arg);\r\n  }\r\n}\r\n\r\nfunction getListener(inst, registrationName) {\r\n  var stateNode = inst.stateNode;\r\n\r\n  if (stateNode === null) {\r\n    // Work in progress (ex: onload events in incremental mode).\r\n    return null;\r\n  }\r\n\r\n  var props = getFiberCurrentPropsFromNode(stateNode);\r\n\r\n  if (props === null) {\r\n    // Work in progress.\r\n    return null;\r\n  }\r\n\r\n  var listener = props[registrationName];\r\n\r\n  if (listener && typeof listener !== \"function\") {\r\n    throw new Error(\r\n      \"Expected `\" +\r\n        registrationName +\r\n        \"` listener to be a function, instead got a value of `\" +\r\n        typeof listener +\r\n        \"` type.\"\r\n    );\r\n  }\r\n\r\n  return listener;\r\n}\r\n\r\nfunction listenerAtPhase(inst, event, propagationPhase) {\r\n  var registrationName =\r\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\r\n  return getListener(inst, registrationName);\r\n}\r\n\r\nfunction accumulateDirectionalDispatches(inst, phase, event) {\r\n  {\r\n    if (!inst) {\r\n      error(\"Dispatching inst must not be null\");\r\n    }\r\n  }\r\n\r\n  var listener = listenerAtPhase(inst, event, phase);\r\n\r\n  if (listener) {\r\n    event._dispatchListeners = accumulateInto(\r\n      event._dispatchListeners,\r\n      listener\r\n    );\r\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\r\n  }\r\n}\r\n/**\r\n * Accumulates without regard to direction, does not look for phased\r\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\r\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\r\n */\r\n\r\nfunction accumulateDispatches(inst, ignoredDirection, event) {\r\n  if (inst && event && event.dispatchConfig.registrationName) {\r\n    var registrationName = event.dispatchConfig.registrationName;\r\n    var listener = getListener(inst, registrationName);\r\n\r\n    if (listener) {\r\n      event._dispatchListeners = accumulateInto(\r\n        event._dispatchListeners,\r\n        listener\r\n      );\r\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\r\n    }\r\n  }\r\n}\r\n/**\r\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\r\n * `dispatchMarker`.\r\n * @param {SyntheticEvent} event\r\n */\r\n\r\nfunction accumulateDirectDispatchesSingle(event) {\r\n  if (event && event.dispatchConfig.registrationName) {\r\n    accumulateDispatches(event._targetInst, null, event);\r\n  }\r\n}\r\n\r\nfunction accumulateDirectDispatches(events) {\r\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\r\n}\r\n\r\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\r\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\r\n    var targetInst = event._targetInst;\r\n    var parentInst = targetInst ? getParent(targetInst) : null;\r\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\r\n  }\r\n}\r\n\r\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\r\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\r\n}\r\n\r\nfunction accumulateTwoPhaseDispatchesSingle(event) {\r\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\r\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\r\n  }\r\n}\r\n\r\nfunction accumulateTwoPhaseDispatches(events) {\r\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\r\n} // End of inline\r\n\r\n/**\r\n *\r\n * Responder System:\r\n * ----------------\r\n *\r\n * - A global, solitary \"interaction lock\" on a view.\r\n * - If a node becomes the responder, it should convey visual feedback\r\n *   immediately to indicate so, either by highlighting or moving accordingly.\r\n * - To be the responder means, that touches are exclusively important to that\r\n *   responder view, and no other view.\r\n * - While touches are still occurring, the responder lock can be transferred to\r\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\r\n *   the current responder).\r\n *\r\n * Responder being granted:\r\n * ------------------------\r\n *\r\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\r\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\r\n *   the \"appropriate place\".\r\n * - If nothing is currently the responder, the \"appropriate place\" is the\r\n *   initiating event's `targetID`.\r\n * - If something *is* already the responder, the \"appropriate place\" is the\r\n *   first common ancestor of the event target and the current `responderInst`.\r\n * - Some negotiation happens: See the timing diagram below.\r\n * - Scrolled views automatically become responder. The reasoning is that a\r\n *   platform scroll view that isn't built on top of the responder system has\r\n *   began scrolling, and the active responder must now be notified that the\r\n *   interaction is no longer locked to it - the system has taken over.\r\n *\r\n * - Responder being released:\r\n *   As soon as no more touches that *started* inside of descendants of the\r\n *   *current* responderInst, an `onResponderRelease` event is dispatched to the\r\n *   current responder, and the responder lock is released.\r\n *\r\n * TODO:\r\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\r\n *   determines if the responder lock should remain.\r\n * - If a view shouldn't \"remain\" the responder, any active touches should by\r\n *   default be considered \"dead\" and do not influence future negotiations or\r\n *   bubble paths. It should be as if those touches do not exist.\r\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\r\n *  after one out of many touches ended. For translate-y, usually the view\r\n *  doesn't wish to \"remain\" responder after one of many touches end.\r\n * - Consider building this on top of a `stopPropagation` model similar to\r\n *   `W3C` events.\r\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\r\n *   not `onResponderTerminationRequest` returns `true` or `false`.\r\n *\r\n */\r\n\r\n/*                                             Negotiation Performed\r\n                                             +-----------------------+\r\n                                            /                         \\\r\nProcess low level events to    +     Current Responder      +   wantsResponderID\r\ndetermine who to perform negot-|   (if any exists at all)   |\r\niation/transition              | Otherwise just pass through|\r\n-------------------------------+----------------------------+------------------+\r\nBubble to find first ID        |                            |\r\nto return true:wantsResponderID|                            |\r\n                               |                            |\r\n     +-------------+           |                            |\r\n     | onTouchStart|           |                            |\r\n     +------+------+     none  |                            |\r\n            |            return|                            |\r\n+-----------v-------------+true| +------------------------+ |\r\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\r\n+-----------+-------------+    | +------------------------+ |          |\r\n            |                  |                            | +--------+-------+\r\n            | returned true for|       false:REJECT +-------->|onResponderReject\r\n            | wantsResponderID |                    |       | +----------------+\r\n            | (now attempt     | +------------------+-----+ |\r\n            |  handoff)        | |   onResponder          | |\r\n            +------------------->|      TerminationRequest| |\r\n                               | +------------------+-----+ |\r\n                               |                    |       | +----------------+\r\n                               |         true:GRANT +-------->|onResponderGrant|\r\n                               |                            | +--------+-------+\r\n                               | +------------------------+ |          |\r\n                               | |   onResponderTerminate |<-----------+\r\n                               | +------------------+-----+ |\r\n                               |                    |       | +----------------+\r\n                               |                    +-------->|onResponderStart|\r\n                               |                            | +----------------+\r\nBubble to find first ID        |                            |\r\nto return true:wantsResponderID|                            |\r\n                               |                            |\r\n     +-------------+           |                            |\r\n     | onTouchMove |           |                            |\r\n     +------+------+     none  |                            |\r\n            |            return|                            |\r\n+-----------v-------------+true| +------------------------+ |\r\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\r\n+-----------+-------------+    | +------------------------+ |          |\r\n            |                  |                            | +--------+-------+\r\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\r\n            | wantsResponderID |                    |       | +----------------+\r\n            | (now attempt     | +------------------+-----+ |\r\n            |  handoff)        | |   onResponder          | |\r\n            +------------------->|      TerminationRequest| |\r\n                               | +------------------+-----+ |\r\n                               |                    |       | +----------------+\r\n                               |         true:GRANT +-------->|onResponderGrant|\r\n                               |                            | +--------+-------+\r\n                               | +------------------------+ |          |\r\n                               | |   onResponderTerminate |<-----------+\r\n                               | +------------------+-----+ |\r\n                               |                    |       | +----------------+\r\n                               |                    +-------->|onResponderMove |\r\n                               |                            | +----------------+\r\n                               |                            |\r\n                               |                            |\r\n      Some active touch started|                            |\r\n      inside current responder | +------------------------+ |\r\n      +------------------------->|      onResponderEnd    | |\r\n      |                        | +------------------------+ |\r\n  +---+---------+              |                            |\r\n  | onTouchEnd  |              |                            |\r\n  +---+---------+              |                            |\r\n      |                        | +------------------------+ |\r\n      +------------------------->|     onResponderEnd     | |\r\n      No active touches started| +-----------+------------+ |\r\n      inside current responder |             |              |\r\n                               |             v              |\r\n                               | +------------------------+ |\r\n                               | |    onResponderRelease  | |\r\n                               | +------------------------+ |\r\n                               |                            |\r\n                               +                            + */\r\n\r\n/**\r\n * A note about event ordering in the `EventPluginRegistry`.\r\n *\r\n * Suppose plugins are injected in the following order:\r\n *\r\n * `[R, S, C]`\r\n *\r\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\r\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\r\n *\r\n * \"Deferred-Dispatched Events\":\r\n *\r\n * - The current event plugin system will traverse the list of injected plugins,\r\n *   in order, and extract events by collecting the plugin's return value of\r\n *   `extractEvents()`.\r\n * - These events that are returned from `extractEvents` are \"deferred\r\n *   dispatched events\".\r\n * - When returned from `extractEvents`, deferred-dispatched events contain an\r\n *   \"accumulation\" of deferred dispatches.\r\n * - These deferred dispatches are accumulated/collected before they are\r\n *   returned, but processed at a later time by the `EventPluginRegistry` (hence the\r\n *   name deferred).\r\n *\r\n * In the process of returning their deferred-dispatched events, event plugins\r\n * themselves can dispatch events on-demand without returning them from\r\n * `extractEvents`. Plugins might want to do this, so that they can use event\r\n * dispatching as a tool that helps them decide which events should be extracted\r\n * in the first place.\r\n *\r\n * \"On-Demand-Dispatched Events\":\r\n *\r\n * - On-demand-dispatched events are not returned from `extractEvents`.\r\n * - On-demand-dispatched events are dispatched during the process of returning\r\n *   the deferred-dispatched events.\r\n * - They should not have side effects.\r\n * - They should be avoided, and/or eventually be replaced with another\r\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\r\n *   extraction.\r\n *\r\n * Therefore, the sequence of event dispatches becomes:\r\n *\r\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\r\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\r\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\r\n * - `R`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\r\n * - `S`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\r\n * - `C`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\r\n *\r\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\r\n * on-demand dispatch returns `true` (and some other details are satisfied) the\r\n * `onResponderGrant` deferred dispatched event is returned from\r\n * `extractEvents`. The sequence of dispatch executions in this case\r\n * will appear as follows:\r\n *\r\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\r\n * - `touchStartCapture`       (`EventPluginRegistry` dispatches as usual)\r\n * - `touchStart`              (`EventPluginRegistry` dispatches as usual)\r\n * - `responderGrant/Reject`   (`EventPluginRegistry` dispatches as usual)\r\n */\r\n\r\nfunction setResponderAndExtractTransfer(\r\n  topLevelType,\r\n  targetInst,\r\n  nativeEvent,\r\n  nativeEventTarget\r\n) {\r\n  var shouldSetEventType = isStartish(topLevelType)\r\n    ? eventTypes.startShouldSetResponder\r\n    : isMoveish(topLevelType)\r\n    ? eventTypes.moveShouldSetResponder\r\n    : topLevelType === TOP_SELECTION_CHANGE\r\n    ? eventTypes.selectionChangeShouldSetResponder\r\n    : eventTypes.scrollShouldSetResponder; // TODO: stop one short of the current responder.\r\n\r\n  var bubbleShouldSetFrom = !responderInst\r\n    ? targetInst\r\n    : getLowestCommonAncestor(responderInst, targetInst); // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\r\n  // (deepest ID) if it happens to be the current responder. The reasoning:\r\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\r\n  // the responder.\r\n\r\n  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\r\n  var shouldSetEvent = ResponderSyntheticEvent.getPooled(\r\n    shouldSetEventType,\r\n    bubbleShouldSetFrom,\r\n    nativeEvent,\r\n    nativeEventTarget\r\n  );\r\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\r\n\r\n  if (skipOverBubbleShouldSetFrom) {\r\n    accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\r\n  } else {\r\n    accumulateTwoPhaseDispatches(shouldSetEvent);\r\n  }\r\n\r\n  var wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\r\n\r\n  if (!shouldSetEvent.isPersistent()) {\r\n    shouldSetEvent.constructor.release(shouldSetEvent);\r\n  }\r\n\r\n  if (!wantsResponderInst || wantsResponderInst === responderInst) {\r\n    return null;\r\n  }\r\n\r\n  var extracted;\r\n  var grantEvent = ResponderSyntheticEvent.getPooled(\r\n    eventTypes.responderGrant,\r\n    wantsResponderInst,\r\n    nativeEvent,\r\n    nativeEventTarget\r\n  );\r\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\r\n  accumulateDirectDispatches(grantEvent);\r\n  var blockHostResponder = executeDirectDispatch(grantEvent) === true;\r\n\r\n  if (responderInst) {\r\n    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(\r\n      eventTypes.responderTerminationRequest,\r\n      responderInst,\r\n      nativeEvent,\r\n      nativeEventTarget\r\n    );\r\n    terminationRequestEvent.touchHistory =\r\n      ResponderTouchHistoryStore.touchHistory;\r\n    accumulateDirectDispatches(terminationRequestEvent);\r\n    var shouldSwitch =\r\n      !hasDispatches(terminationRequestEvent) ||\r\n      executeDirectDispatch(terminationRequestEvent);\r\n\r\n    if (!terminationRequestEvent.isPersistent()) {\r\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\r\n    }\r\n\r\n    if (shouldSwitch) {\r\n      var terminateEvent = ResponderSyntheticEvent.getPooled(\r\n        eventTypes.responderTerminate,\r\n        responderInst,\r\n        nativeEvent,\r\n        nativeEventTarget\r\n      );\r\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\r\n      accumulateDirectDispatches(terminateEvent);\r\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\r\n      changeResponder(wantsResponderInst, blockHostResponder);\r\n    } else {\r\n      var rejectEvent = ResponderSyntheticEvent.getPooled(\r\n        eventTypes.responderReject,\r\n        wantsResponderInst,\r\n        nativeEvent,\r\n        nativeEventTarget\r\n      );\r\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\r\n      accumulateDirectDispatches(rejectEvent);\r\n      extracted = accumulate(extracted, rejectEvent);\r\n    }\r\n  } else {\r\n    extracted = accumulate(extracted, grantEvent);\r\n    changeResponder(wantsResponderInst, blockHostResponder);\r\n  }\r\n\r\n  return extracted;\r\n}\r\n/**\r\n * A transfer is a negotiation between a currently set responder and the next\r\n * element to claim responder status. Any start event could trigger a transfer\r\n * of responderInst. Any move event could trigger a transfer.\r\n *\r\n * @param {string} topLevelType Record from `BrowserEventConstants`.\r\n * @return {boolean} True if a transfer of responder could possibly occur.\r\n */\r\n\r\nfunction canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\r\n  return (\r\n    topLevelInst && // responderIgnoreScroll: We are trying to migrate away from specifically\r\n    // tracking native scroll events here and responderIgnoreScroll indicates we\r\n    // will send topTouchCancel to handle canceling touch events instead\r\n    ((topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll) ||\r\n      (trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE) ||\r\n      isStartish(topLevelType) ||\r\n      isMoveish(topLevelType))\r\n  );\r\n}\r\n/**\r\n * Returns whether or not this touch end event makes it such that there are no\r\n * longer any touches that started inside of the current `responderInst`.\r\n *\r\n * @param {NativeEvent} nativeEvent Native touch end event.\r\n * @return {boolean} Whether or not this touch end event ends the responder.\r\n */\r\n\r\nfunction noResponderTouches(nativeEvent) {\r\n  var touches = nativeEvent.touches;\r\n\r\n  if (!touches || touches.length === 0) {\r\n    return true;\r\n  }\r\n\r\n  for (var i = 0; i < touches.length; i++) {\r\n    var activeTouch = touches[i];\r\n    var target = activeTouch.target;\r\n\r\n    if (target !== null && target !== undefined && target !== 0) {\r\n      // Is the original touch location inside of the current responder?\r\n      var targetInst = getInstanceFromNode(target);\r\n\r\n      if (isAncestor(responderInst, targetInst)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nvar ResponderEventPlugin = {\r\n  /* For unit testing only */\r\n  _getResponder: function() {\r\n    return responderInst;\r\n  },\r\n  eventTypes: eventTypes,\r\n\r\n  /**\r\n   * We must be resilient to `targetInst` being `null` on `touchMove` or\r\n   * `touchEnd`. On certain platforms, this means that a native scroll has\r\n   * assumed control and the original touch targets are destroyed.\r\n   */\r\n  extractEvents: function(\r\n    topLevelType,\r\n    targetInst,\r\n    nativeEvent,\r\n    nativeEventTarget,\r\n    eventSystemFlags\r\n  ) {\r\n    if (isStartish(topLevelType)) {\r\n      trackedTouchCount += 1;\r\n    } else if (isEndish(topLevelType)) {\r\n      if (trackedTouchCount >= 0) {\r\n        trackedTouchCount -= 1;\r\n      } else {\r\n        {\r\n          warn(\r\n            \"Ended a touch event which was not counted in `trackedTouchCount`.\"\r\n          );\r\n        }\r\n\r\n        return null;\r\n      }\r\n    }\r\n\r\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\r\n    var extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)\r\n      ? setResponderAndExtractTransfer(\r\n          topLevelType,\r\n          targetInst,\r\n          nativeEvent,\r\n          nativeEventTarget\r\n        )\r\n      : null; // Responder may or may not have transferred on a new touch start/move.\r\n    // Regardless, whoever is the responder after any potential transfer, we\r\n    // direct all touch start/move/ends to them in the form of\r\n    // `onResponderMove/Start/End`. These will be called for *every* additional\r\n    // finger that move/start/end, dispatched directly to whoever is the\r\n    // current responder at that moment, until the responder is \"released\".\r\n    //\r\n    // These multiple individual change touch events are are always bookended\r\n    // by `onResponderGrant`, and one of\r\n    // (`onResponderRelease/onResponderTerminate`).\r\n\r\n    var isResponderTouchStart = responderInst && isStartish(topLevelType);\r\n    var isResponderTouchMove = responderInst && isMoveish(topLevelType);\r\n    var isResponderTouchEnd = responderInst && isEndish(topLevelType);\r\n    var incrementalTouch = isResponderTouchStart\r\n      ? eventTypes.responderStart\r\n      : isResponderTouchMove\r\n      ? eventTypes.responderMove\r\n      : isResponderTouchEnd\r\n      ? eventTypes.responderEnd\r\n      : null;\r\n\r\n    if (incrementalTouch) {\r\n      var gesture = ResponderSyntheticEvent.getPooled(\r\n        incrementalTouch,\r\n        responderInst,\r\n        nativeEvent,\r\n        nativeEventTarget\r\n      );\r\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\r\n      accumulateDirectDispatches(gesture);\r\n      extracted = accumulate(extracted, gesture);\r\n    }\r\n\r\n    var isResponderTerminate =\r\n      responderInst && topLevelType === TOP_TOUCH_CANCEL;\r\n    var isResponderRelease =\r\n      responderInst &&\r\n      !isResponderTerminate &&\r\n      isEndish(topLevelType) &&\r\n      noResponderTouches(nativeEvent);\r\n    var finalTouch = isResponderTerminate\r\n      ? eventTypes.responderTerminate\r\n      : isResponderRelease\r\n      ? eventTypes.responderRelease\r\n      : null;\r\n\r\n    if (finalTouch) {\r\n      var finalEvent = ResponderSyntheticEvent.getPooled(\r\n        finalTouch,\r\n        responderInst,\r\n        nativeEvent,\r\n        nativeEventTarget\r\n      );\r\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\r\n      accumulateDirectDispatches(finalEvent);\r\n      extracted = accumulate(extracted, finalEvent);\r\n      changeResponder(null);\r\n    }\r\n\r\n    return extracted;\r\n  },\r\n  GlobalResponderHandler: null,\r\n  injection: {\r\n    /**\r\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\r\n     * Object that handles any change in responder. Use this to inject\r\n     * integration with an existing touch handling system etc.\r\n     */\r\n    injectGlobalResponderHandler: function(GlobalResponderHandler) {\r\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Injectable ordering of event plugins.\r\n */\r\nvar eventPluginOrder = null;\r\n/**\r\n * Injectable mapping from names to event plugin modules.\r\n */\r\n\r\nvar namesToPlugins = {};\r\n/**\r\n * Recomputes the plugin list using the injected plugins and plugin ordering.\r\n *\r\n * @private\r\n */\r\n\r\nfunction recomputePluginOrdering() {\r\n  if (!eventPluginOrder) {\r\n    // Wait until an `eventPluginOrder` is injected.\r\n    return;\r\n  }\r\n\r\n  for (var pluginName in namesToPlugins) {\r\n    var pluginModule = namesToPlugins[pluginName];\r\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\r\n\r\n    if (pluginIndex <= -1) {\r\n      throw new Error(\r\n        \"EventPluginRegistry: Cannot inject event plugins that do not exist in \" +\r\n          (\"the plugin ordering, `\" + pluginName + \"`.\")\r\n      );\r\n    }\r\n\r\n    if (plugins[pluginIndex]) {\r\n      continue;\r\n    }\r\n\r\n    if (!pluginModule.extractEvents) {\r\n      throw new Error(\r\n        \"EventPluginRegistry: Event plugins must implement an `extractEvents` \" +\r\n          (\"method, but `\" + pluginName + \"` does not.\")\r\n      );\r\n    }\r\n\r\n    plugins[pluginIndex] = pluginModule;\r\n    var publishedEvents = pluginModule.eventTypes;\r\n\r\n    for (var eventName in publishedEvents) {\r\n      if (\r\n        !publishEventForPlugin(\r\n          publishedEvents[eventName],\r\n          pluginModule,\r\n          eventName\r\n        )\r\n      ) {\r\n        throw new Error(\r\n          \"EventPluginRegistry: Failed to publish event `\" +\r\n            eventName +\r\n            \"` for plugin `\" +\r\n            pluginName +\r\n            \"`.\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * Publishes an event so that it can be dispatched by the supplied plugin.\r\n *\r\n * @param {object} dispatchConfig Dispatch configuration for the event.\r\n * @param {object} PluginModule Plugin publishing the event.\r\n * @return {boolean} True if the event was successfully published.\r\n * @private\r\n */\r\n\r\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\r\n  if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\r\n    throw new Error(\r\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\r\n        (\"event name, `\" + eventName + \"`.\")\r\n    );\r\n  }\r\n\r\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\r\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\r\n\r\n  if (phasedRegistrationNames) {\r\n    for (var phaseName in phasedRegistrationNames) {\r\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\r\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\r\n        publishRegistrationName(\r\n          phasedRegistrationName,\r\n          pluginModule,\r\n          eventName\r\n        );\r\n      }\r\n    }\r\n\r\n    return true;\r\n  } else if (dispatchConfig.registrationName) {\r\n    publishRegistrationName(\r\n      dispatchConfig.registrationName,\r\n      pluginModule,\r\n      eventName\r\n    );\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * Publishes a registration name that is used to identify dispatched events.\r\n *\r\n * @param {string} registrationName Registration name to add.\r\n * @param {object} PluginModule Plugin publishing the event.\r\n * @private\r\n */\r\n\r\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\r\n  if (registrationNameModules[registrationName]) {\r\n    throw new Error(\r\n      \"EventPluginRegistry: More than one plugin attempted to publish the same \" +\r\n        (\"registration name, `\" + registrationName + \"`.\")\r\n    );\r\n  }\r\n\r\n  registrationNameModules[registrationName] = pluginModule;\r\n  registrationNameDependencies[registrationName] =\r\n    pluginModule.eventTypes[eventName].dependencies;\r\n\r\n  {\r\n    var lowerCasedName = registrationName.toLowerCase();\r\n  }\r\n}\r\n/**\r\n * Registers plugins so that they can extract and dispatch events.\r\n */\r\n\r\n/**\r\n * Ordered list of injected plugins.\r\n */\r\n\r\nvar plugins = [];\r\n/**\r\n * Mapping from event name to dispatch config\r\n */\r\n\r\nvar eventNameDispatchConfigs = {};\r\n/**\r\n * Mapping from registration name to plugin module\r\n */\r\n\r\nvar registrationNameModules = {};\r\n/**\r\n * Mapping from registration name to event name\r\n */\r\n\r\nvar registrationNameDependencies = {};\r\n\r\n/**\r\n * Injects an ordering of plugins (by plugin name). This allows the ordering\r\n * to be decoupled from injection of the actual plugins so that ordering is\r\n * always deterministic regardless of packaging, on-the-fly injection, etc.\r\n *\r\n * @param {array} InjectedEventPluginOrder\r\n * @internal\r\n */\r\n\r\nfunction injectEventPluginOrder(injectedEventPluginOrder) {\r\n  if (eventPluginOrder) {\r\n    throw new Error(\r\n      \"EventPluginRegistry: Cannot inject event plugin ordering more than \" +\r\n        \"once. You are likely trying to load more than one copy of React.\"\r\n    );\r\n  } // Clone the ordering so it cannot be dynamically mutated.\r\n\r\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\r\n  recomputePluginOrdering();\r\n}\r\n/**\r\n * Injects plugins to be used by plugin event system. The plugin names must be\r\n * in the ordering injected by `injectEventPluginOrder`.\r\n *\r\n * Plugins can be injected as part of page initialization or on-the-fly.\r\n *\r\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\r\n * @internal\r\n */\r\n\r\nfunction injectEventPluginsByName(injectedNamesToPlugins) {\r\n  var isOrderingDirty = false;\r\n\r\n  for (var pluginName in injectedNamesToPlugins) {\r\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\r\n      continue;\r\n    }\r\n\r\n    var pluginModule = injectedNamesToPlugins[pluginName];\r\n\r\n    if (\r\n      !namesToPlugins.hasOwnProperty(pluginName) ||\r\n      namesToPlugins[pluginName] !== pluginModule\r\n    ) {\r\n      if (namesToPlugins[pluginName]) {\r\n        throw new Error(\r\n          \"EventPluginRegistry: Cannot inject two different event plugins \" +\r\n            (\"using the same name, `\" + pluginName + \"`.\")\r\n        );\r\n      }\r\n\r\n      namesToPlugins[pluginName] = pluginModule;\r\n      isOrderingDirty = true;\r\n    }\r\n  }\r\n\r\n  if (isOrderingDirty) {\r\n    recomputePluginOrdering();\r\n  }\r\n}\r\n\r\n/**\r\n * Get a list of listeners for a specific event, in-order.\r\n * For React Native we treat the props-based function handlers\r\n * as the first-class citizens, and they are always executed first\r\n * for both capture and bubbling phase.\r\n *\r\n * We need \"phase\" propagated to this point to support the HostComponent\r\n * EventEmitter API, which does not mutate the name of the handler based\r\n * on phase (whereas prop handlers are registered as `onMyEvent` and `onMyEvent_Capture`).\r\n *\r\n * Native system events emitted into React Native\r\n * will be emitted both to the prop handler function and to imperative event\r\n * listeners.\r\n *\r\n * This will either return null, a single Function without an array, or\r\n * an array of 2+ items.\r\n */\r\n\r\nfunction getListeners(\r\n  inst,\r\n  registrationName,\r\n  phase,\r\n  dispatchToImperativeListeners\r\n) {\r\n  var stateNode = inst.stateNode;\r\n\r\n  if (stateNode === null) {\r\n    return null;\r\n  } // If null: Work in progress (ex: onload events in incremental mode).\r\n\r\n  var props = getFiberCurrentPropsFromNode(stateNode);\r\n\r\n  if (props === null) {\r\n    // Work in progress.\r\n    return null;\r\n  }\r\n\r\n  var listener = props[registrationName];\r\n\r\n  if (listener && typeof listener !== \"function\") {\r\n    throw new Error(\r\n      \"Expected `\" +\r\n        registrationName +\r\n        \"` listener to be a function, instead got a value of `\" +\r\n        typeof listener +\r\n        \"` type.\"\r\n    );\r\n  } // If there are no imperative listeners, early exit.\r\n\r\n  if (\r\n    !(\r\n      dispatchToImperativeListeners &&\r\n      stateNode.canonical &&\r\n      stateNode.canonical._eventListeners\r\n    )\r\n  ) {\r\n    return listener;\r\n  } // Below this is the de-optimized path.\r\n  // If you are using _eventListeners, we do not (yet)\r\n  // expect this to be as performant as the props-only path.\r\n  // If/when this becomes a bottleneck, it can be refactored\r\n  // to avoid unnecessary closures and array allocations.\r\n  //\r\n  // Previously, there was only one possible listener for an event:\r\n  // the onEventName property in props.\r\n  // Now, it is also possible to have N listeners\r\n  // for a specific event on a node. Thus, we accumulate all of the listeners,\r\n  // including the props listener, and return a function that calls them all in\r\n  // order, starting with the handler prop and then the listeners in order.\r\n  // We return either a non-empty array or null.\r\n\r\n  var listeners = [];\r\n\r\n  if (listener) {\r\n    listeners.push(listener);\r\n  } // TODO: for now, all of these events get an `rn:` prefix to enforce\r\n  // that the user knows they're only getting non-W3C-compliant events\r\n  // through this imperative event API.\r\n  // Events might not necessarily be noncompliant, but we currently have\r\n  // no verification that /any/ events are compliant.\r\n  // Thus, we prefix to ensure no collision with W3C event names.\r\n\r\n  var requestedPhaseIsCapture = phase === \"captured\";\r\n  var mangledImperativeRegistrationName = requestedPhaseIsCapture\r\n    ? \"rn:\" + registrationName.replace(/Capture$/, \"\")\r\n    : \"rn:\" + registrationName; // Get imperative event listeners for this event\r\n\r\n  if (\r\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName] &&\r\n    stateNode.canonical._eventListeners[mangledImperativeRegistrationName]\r\n      .length > 0\r\n  ) {\r\n    var eventListeners =\r\n      stateNode.canonical._eventListeners[mangledImperativeRegistrationName];\r\n    eventListeners.forEach(function(listenerObj) {\r\n      // Make sure phase of listener matches requested phase\r\n      var isCaptureEvent =\r\n        listenerObj.options.capture != null && listenerObj.options.capture;\r\n\r\n      if (isCaptureEvent !== requestedPhaseIsCapture) {\r\n        return;\r\n      } // For now (this is an area of future optimization) we must wrap\r\n      // all imperative event listeners in a function to unwrap the SyntheticEvent\r\n      // and pass them an Event.\r\n      // When this API is more stable and used more frequently, we can revisit.\r\n\r\n      var listenerFnWrapper = function(syntheticEvent) {\r\n        var eventInst = new ReactNativePrivateInterface.CustomEvent(\r\n          mangledImperativeRegistrationName,\r\n          {\r\n            detail: syntheticEvent.nativeEvent\r\n          }\r\n        );\r\n        eventInst.isTrusted = true; // setSyntheticEvent is present on the React Native Event shim.\r\n        // It is used to forward method calls on Event to the underlying SyntheticEvent.\r\n        // $FlowFixMe\r\n\r\n        eventInst.setSyntheticEvent(syntheticEvent);\r\n\r\n        for (\r\n          var _len = arguments.length,\r\n            args = new Array(_len > 1 ? _len - 1 : 0),\r\n            _key = 1;\r\n          _key < _len;\r\n          _key++\r\n        ) {\r\n          args[_key - 1] = arguments[_key];\r\n        }\r\n\r\n        listenerObj.listener.apply(listenerObj, [eventInst].concat(args));\r\n      }; // Only call once?\r\n      // If so, we ensure that it's only called once by setting a flag\r\n      // and by removing it from eventListeners once it is called (but only\r\n      // when it's actually been executed).\r\n\r\n      if (listenerObj.options.once) {\r\n        listeners.push(function() {\r\n          // Remove from the event listener once it's been called\r\n          stateNode.canonical.removeEventListener_unstable(\r\n            mangledImperativeRegistrationName,\r\n            listenerObj.listener,\r\n            listenerObj.capture\r\n          ); // Guard against function being called more than once in\r\n          // case there are somehow multiple in-flight references to\r\n          // it being processed\r\n\r\n          if (!listenerObj.invalidated) {\r\n            listenerObj.invalidated = true;\r\n            listenerObj.listener.apply(listenerObj, arguments);\r\n          }\r\n        });\r\n      } else {\r\n        listeners.push(listenerFnWrapper);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (listeners.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  if (listeners.length === 1) {\r\n    return listeners[0];\r\n  }\r\n\r\n  return listeners;\r\n}\r\n\r\nvar customBubblingEventTypes =\r\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\r\n      .customBubblingEventTypes,\r\n  customDirectEventTypes =\r\n    ReactNativePrivateInterface.ReactNativeViewConfigRegistry\r\n      .customDirectEventTypes; // Start of inline: the below functions were inlined from\r\n// EventPropagator.js, as they deviated from ReactDOM's newer\r\n// implementations.\r\n\r\nfunction listenersAtPhase(inst, event, propagationPhase) {\r\n  var registrationName =\r\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\r\n  return getListeners(inst, registrationName, propagationPhase, true);\r\n}\r\n\r\nfunction accumulateListenersAndInstances(inst, event, listeners) {\r\n  var listenersLength = listeners\r\n    ? isArray(listeners)\r\n      ? listeners.length\r\n      : 1\r\n    : 0;\r\n\r\n  if (listenersLength > 0) {\r\n    event._dispatchListeners = accumulateInto(\r\n      event._dispatchListeners,\r\n      listeners\r\n    ); // Avoid allocating additional arrays here\r\n\r\n    if (event._dispatchInstances == null && listenersLength === 1) {\r\n      event._dispatchInstances = inst;\r\n    } else {\r\n      event._dispatchInstances = event._dispatchInstances || [];\r\n\r\n      if (!isArray(event._dispatchInstances)) {\r\n        event._dispatchInstances = [event._dispatchInstances];\r\n      }\r\n\r\n      for (var i = 0; i < listenersLength; i++) {\r\n        event._dispatchInstances.push(inst);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction accumulateDirectionalDispatches$1(inst, phase, event) {\r\n  {\r\n    if (!inst) {\r\n      error(\"Dispatching inst must not be null\");\r\n    }\r\n  }\r\n\r\n  var listeners = listenersAtPhase(inst, event, phase);\r\n  accumulateListenersAndInstances(inst, event, listeners);\r\n}\r\n\r\nfunction getParent$1(inst) {\r\n  do {\r\n    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.\r\n    // That is depending on if we want nested subtrees (layers) to bubble\r\n    // events to their parent. We could also go through parentNode on the\r\n    // host node but that wouldn't work for React Native and doesn't let us\r\n    // do the portal feature.\r\n  } while (inst && inst.tag !== HostComponent);\r\n\r\n  if (inst) {\r\n    return inst;\r\n  }\r\n\r\n  return null;\r\n}\r\n/**\r\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\r\n */\r\n\r\nfunction traverseTwoPhase$1(inst, fn, arg, skipBubbling) {\r\n  var path = [];\r\n\r\n  while (inst) {\r\n    path.push(inst);\r\n    inst = getParent$1(inst);\r\n  }\r\n\r\n  var i;\r\n\r\n  for (i = path.length; i-- > 0; ) {\r\n    fn(path[i], \"captured\", arg);\r\n  }\r\n\r\n  if (skipBubbling) {\r\n    // Dispatch on target only\r\n    fn(path[0], \"bubbled\", arg);\r\n  } else {\r\n    for (i = 0; i < path.length; i++) {\r\n      fn(path[i], \"bubbled\", arg);\r\n    }\r\n  }\r\n}\r\n\r\nfunction accumulateTwoPhaseDispatchesSingle$1(event) {\r\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\r\n    traverseTwoPhase$1(\r\n      event._targetInst,\r\n      accumulateDirectionalDispatches$1,\r\n      event,\r\n      false\r\n    );\r\n  }\r\n}\r\n\r\nfunction accumulateTwoPhaseDispatches$1(events) {\r\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle$1);\r\n}\r\n\r\nfunction accumulateCapturePhaseDispatches(event) {\r\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\r\n    traverseTwoPhase$1(\r\n      event._targetInst,\r\n      accumulateDirectionalDispatches$1,\r\n      event,\r\n      true\r\n    );\r\n  }\r\n}\r\n/**\r\n * Accumulates without regard to direction, does not look for phased\r\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\r\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\r\n */\r\n\r\nfunction accumulateDispatches$1(inst, ignoredDirection, event) {\r\n  if (inst && event && event.dispatchConfig.registrationName) {\r\n    var registrationName = event.dispatchConfig.registrationName;\r\n    var listeners = getListeners(inst, registrationName, \"bubbled\", false);\r\n    accumulateListenersAndInstances(inst, event, listeners);\r\n  }\r\n}\r\n/**\r\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\r\n * `dispatchMarker`.\r\n * @param {SyntheticEvent} event\r\n */\r\n\r\nfunction accumulateDirectDispatchesSingle$1(event) {\r\n  if (event && event.dispatchConfig.registrationName) {\r\n    accumulateDispatches$1(event._targetInst, null, event);\r\n  }\r\n}\r\n\r\nfunction accumulateDirectDispatches$1(events) {\r\n  forEachAccumulated(events, accumulateDirectDispatchesSingle$1);\r\n} // End of inline\r\n\r\nvar ReactNativeBridgeEventPlugin = {\r\n  eventTypes: {},\r\n  extractEvents: function(\r\n    topLevelType,\r\n    targetInst,\r\n    nativeEvent,\r\n    nativeEventTarget\r\n  ) {\r\n    if (targetInst == null) {\r\n      // Probably a node belonging to another renderer's tree.\r\n      return null;\r\n    }\r\n\r\n    var bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\r\n    var directDispatchConfig = customDirectEventTypes[topLevelType];\r\n\r\n    if (!bubbleDispatchConfig && !directDispatchConfig) {\r\n      throw new Error( // $FlowFixMe - Flow doesn't like this string coercion because DOMTopLevelEventType is opaque\r\n        'Unsupported top level event type \"' + topLevelType + '\" dispatched'\r\n      );\r\n    }\r\n\r\n    var event = SyntheticEvent.getPooled(\r\n      bubbleDispatchConfig || directDispatchConfig,\r\n      targetInst,\r\n      nativeEvent,\r\n      nativeEventTarget\r\n    );\r\n\r\n    if (bubbleDispatchConfig) {\r\n      var skipBubbling =\r\n        event != null &&\r\n        event.dispatchConfig.phasedRegistrationNames != null &&\r\n        event.dispatchConfig.phasedRegistrationNames.skipBubbling;\r\n\r\n      if (skipBubbling) {\r\n        accumulateCapturePhaseDispatches(event);\r\n      } else {\r\n        accumulateTwoPhaseDispatches$1(event);\r\n      }\r\n    } else if (directDispatchConfig) {\r\n      accumulateDirectDispatches$1(event);\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n    return event;\r\n  }\r\n};\r\n\r\nvar ReactNativeEventPluginOrder = [\r\n  \"ResponderEventPlugin\",\r\n  \"ReactNativeBridgeEventPlugin\"\r\n];\r\n\r\n/**\r\n * Make sure essential globals are available and are patched correctly. Please don't remove this\r\n * line. Bundles created by react-packager `require` it before executing any application code. This\r\n * ensures it exists in the dependency graph and can be `require`d.\r\n * TODO: require this in packager, not in React #10932517\r\n */\r\n/**\r\n * Inject module for resolving DOM hierarchy and plugin ordering.\r\n */\r\n\r\ninjectEventPluginOrder(ReactNativeEventPluginOrder);\r\n/**\r\n * Some important event plugins included by default (without having to require\r\n * them).\r\n */\r\n\r\ninjectEventPluginsByName({\r\n  ResponderEventPlugin: ResponderEventPlugin,\r\n  ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin\r\n});\r\n\r\nvar instanceCache = new Map();\r\nvar instanceProps = new Map();\r\nfunction precacheFiberNode(hostInst, tag) {\r\n  instanceCache.set(tag, hostInst);\r\n}\r\nfunction uncacheFiberNode(tag) {\r\n  instanceCache.delete(tag);\r\n  instanceProps.delete(tag);\r\n}\r\n\r\nfunction getInstanceFromTag(tag) {\r\n  return instanceCache.get(tag) || null;\r\n}\r\n\r\nfunction getTagFromInstance(inst) {\r\n  var nativeInstance = inst.stateNode;\r\n  var tag = nativeInstance._nativeTag;\r\n\r\n  if (tag === undefined) {\r\n    nativeInstance = nativeInstance.canonical;\r\n    tag = nativeInstance._nativeTag;\r\n  }\r\n\r\n  if (!tag) {\r\n    throw new Error(\"All native instances should have a tag.\");\r\n  }\r\n\r\n  return nativeInstance;\r\n}\r\nfunction getFiberCurrentPropsFromNode$1(stateNode) {\r\n  return instanceProps.get(stateNode._nativeTag) || null;\r\n}\r\nfunction updateFiberProps(tag, props) {\r\n  instanceProps.set(tag, props);\r\n}\r\n\r\n// Used as a way to call batchedUpdates when we don't have a reference to\r\n// the renderer. Such as when we're dispatching events or if third party\r\n// libraries need to call batchedUpdates. Eventually, this API will go away when\r\n// everything is batched by default. We'll then have a similar API to opt-out of\r\n// scheduled work and instead do synchronous work.\r\n// Defaults\r\nvar batchedUpdatesImpl = function(fn, bookkeeping) {\r\n  return fn(bookkeeping);\r\n};\r\n\r\nvar isInsideEventHandler = false;\r\nfunction batchedUpdates(fn, bookkeeping) {\r\n  if (isInsideEventHandler) {\r\n    // If we are currently inside another batch, we need to wait until it\r\n    // fully completes before restoring state.\r\n    return fn(bookkeeping);\r\n  }\r\n\r\n  isInsideEventHandler = true;\r\n\r\n  try {\r\n    return batchedUpdatesImpl(fn, bookkeeping);\r\n  } finally {\r\n    isInsideEventHandler = false;\r\n  }\r\n}\r\nfunction setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl) {\r\n  batchedUpdatesImpl = _batchedUpdatesImpl;\r\n}\r\n\r\n/**\r\n * Internal queue of events that have accumulated their dispatches and are\r\n * waiting to have their dispatches executed.\r\n */\r\n\r\nvar eventQueue = null;\r\n/**\r\n * Dispatches an event and releases it back into the pool, unless persistent.\r\n *\r\n * @param {?object} event Synthetic event to be dispatched.\r\n * @private\r\n */\r\n\r\nvar executeDispatchesAndRelease = function(event) {\r\n  if (event) {\r\n    executeDispatchesInOrder(event);\r\n\r\n    if (!event.isPersistent()) {\r\n      event.constructor.release(event);\r\n    }\r\n  }\r\n};\r\n\r\nvar executeDispatchesAndReleaseTopLevel = function(e) {\r\n  return executeDispatchesAndRelease(e);\r\n};\r\n\r\nfunction runEventsInBatch(events) {\r\n  if (events !== null) {\r\n    eventQueue = accumulateInto(eventQueue, events);\r\n  } // Set `eventQueue` to null before processing it so that we can tell if more\r\n  // events get enqueued while processing.\r\n\r\n  var processingEventQueue = eventQueue;\r\n  eventQueue = null;\r\n\r\n  if (!processingEventQueue) {\r\n    return;\r\n  }\r\n\r\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\r\n\r\n  if (eventQueue) {\r\n    throw new Error(\r\n      \"processEventQueue(): Additional events were enqueued while processing \" +\r\n        \"an event queue. Support for this has not yet been implemented.\"\r\n    );\r\n  } // This would be a good time to rethrow if any of the event handlers threw.\r\n\r\n  rethrowCaughtError();\r\n}\r\n\r\n/**\r\n * Version of `ReactBrowserEventEmitter` that works on the receiving side of a\r\n * serialized worker boundary.\r\n */\r\n// Shared default empty native event - conserve memory.\r\n\r\nvar EMPTY_NATIVE_EVENT = {};\r\n/**\r\n * Selects a subsequence of `Touch`es, without destroying `touches`.\r\n *\r\n * @param {Array<Touch>} touches Deserialized touch objects.\r\n * @param {Array<number>} indices Indices by which to pull subsequence.\r\n * @return {Array<Touch>} Subsequence of touch objects.\r\n */\r\n\r\nvar touchSubsequence = function(touches, indices) {\r\n  var ret = [];\r\n\r\n  for (var i = 0; i < indices.length; i++) {\r\n    ret.push(touches[indices[i]]);\r\n  }\r\n\r\n  return ret;\r\n};\r\n/**\r\n * TODO: Pool all of this.\r\n *\r\n * Destroys `touches` by removing touch objects at indices `indices`. This is\r\n * to maintain compatibility with W3C touch \"end\" events, where the active\r\n * touches don't include the set that has just been \"ended\".\r\n *\r\n * @param {Array<Touch>} touches Deserialized touch objects.\r\n * @param {Array<number>} indices Indices to remove from `touches`.\r\n * @return {Array<Touch>} Subsequence of removed touch objects.\r\n */\r\n\r\nvar removeTouchesAtIndices = function(touches, indices) {\r\n  var rippedOut = []; // use an unsafe downcast to alias to nullable elements,\r\n  // so we can delete and then compact.\r\n\r\n  var temp = touches;\r\n\r\n  for (var i = 0; i < indices.length; i++) {\r\n    var index = indices[i];\r\n    rippedOut.push(touches[index]);\r\n    temp[index] = null;\r\n  }\r\n\r\n  var fillAt = 0;\r\n\r\n  for (var j = 0; j < temp.length; j++) {\r\n    var cur = temp[j];\r\n\r\n    if (cur !== null) {\r\n      temp[fillAt++] = cur;\r\n    }\r\n  }\r\n\r\n  temp.length = fillAt;\r\n  return rippedOut;\r\n};\r\n/**\r\n * Internal version of `receiveEvent` in terms of normalized (non-tag)\r\n * `rootNodeID`.\r\n *\r\n * @see receiveEvent.\r\n *\r\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\r\n * @param {TopLevelType} topLevelType Top level type of event.\r\n * @param {?object} nativeEventParam Object passed from native.\r\n */\r\n\r\nfunction _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {\r\n  var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\r\n  var inst = getInstanceFromTag(rootNodeID);\r\n  var target = null;\r\n\r\n  if (inst != null) {\r\n    target = inst.stateNode;\r\n  }\r\n\r\n  batchedUpdates(function() {\r\n    runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\r\n  }); // React Native doesn't use ReactControlledComponent but if it did, here's\r\n  // where it would do it.\r\n}\r\n/**\r\n * Allows registered plugins an opportunity to extract events from top-level\r\n * native browser events.\r\n *\r\n * @return {*} An accumulation of synthetic events.\r\n * @internal\r\n */\r\n\r\nfunction extractPluginEvents(\r\n  topLevelType,\r\n  targetInst,\r\n  nativeEvent,\r\n  nativeEventTarget\r\n) {\r\n  var events = null;\r\n  var legacyPlugins = plugins;\r\n\r\n  for (var i = 0; i < legacyPlugins.length; i++) {\r\n    // Not every plugin in the ordering may be loaded at runtime.\r\n    var possiblePlugin = legacyPlugins[i];\r\n\r\n    if (possiblePlugin) {\r\n      var extractedEvents = possiblePlugin.extractEvents(\r\n        topLevelType,\r\n        targetInst,\r\n        nativeEvent,\r\n        nativeEventTarget\r\n      );\r\n\r\n      if (extractedEvents) {\r\n        events = accumulateInto(events, extractedEvents);\r\n      }\r\n    }\r\n  }\r\n\r\n  return events;\r\n}\r\n\r\nfunction runExtractedPluginEventsInBatch(\r\n  topLevelType,\r\n  targetInst,\r\n  nativeEvent,\r\n  nativeEventTarget\r\n) {\r\n  var events = extractPluginEvents(\r\n    topLevelType,\r\n    targetInst,\r\n    nativeEvent,\r\n    nativeEventTarget\r\n  );\r\n  runEventsInBatch(events);\r\n}\r\n/**\r\n * Publicly exposed method on module for native objc to invoke when a top\r\n * level event is extracted.\r\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\r\n * @param {TopLevelType} topLevelType Top level type of event.\r\n * @param {object} nativeEventParam Object passed from native.\r\n */\r\n\r\nfunction receiveEvent(rootNodeID, topLevelType, nativeEventParam) {\r\n  _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\r\n}\r\n/**\r\n * Simple multi-wrapper around `receiveEvent` that is intended to receive an\r\n * efficient representation of `Touch` objects, and other information that\r\n * can be used to construct W3C compliant `Event` and `Touch` lists.\r\n *\r\n * This may create dispatch behavior that differs than web touch handling. We\r\n * loop through each of the changed touches and receive it as a single event.\r\n * So two `touchStart`/`touchMove`s that occur simultaneously are received as\r\n * two separate touch event dispatches - when they arguably should be one.\r\n *\r\n * This implementation reuses the `Touch` objects themselves as the `Event`s\r\n * since we dispatch an event for each touch (though that might not be spec\r\n * compliant). The main purpose of reusing them is to save allocations.\r\n *\r\n * TODO: Dispatch multiple changed touches in one event. The bubble path\r\n * could be the first common ancestor of all the `changedTouches`.\r\n *\r\n * One difference between this behavior and W3C spec: cancelled touches will\r\n * not appear in `.touches`, or in any future `.touches`, though they may\r\n * still be \"actively touching the surface\".\r\n *\r\n * Web desktop polyfills only need to construct a fake touch event with\r\n * identifier 0, also abandoning traditional click handlers.\r\n */\r\n\r\nfunction receiveTouches(eventTopLevelType, touches, changedIndices) {\r\n  var changedTouches =\r\n    eventTopLevelType === \"topTouchEnd\" ||\r\n    eventTopLevelType === \"topTouchCancel\"\r\n      ? removeTouchesAtIndices(touches, changedIndices)\r\n      : touchSubsequence(touches, changedIndices);\r\n\r\n  for (var jj = 0; jj < changedTouches.length; jj++) {\r\n    var touch = changedTouches[jj]; // Touch objects can fulfill the role of `DOM` `Event` objects if we set\r\n    // the `changedTouches`/`touches`. This saves allocations.\r\n\r\n    touch.changedTouches = changedTouches;\r\n    touch.touches = touches;\r\n    var nativeEvent = touch;\r\n    var rootNodeID = null;\r\n    var target = nativeEvent.target;\r\n\r\n    if (target !== null && target !== undefined) {\r\n      if (target < 1) {\r\n        {\r\n          error(\"A view is reporting that a touch occurred on tag zero.\");\r\n        }\r\n      } else {\r\n        rootNodeID = target;\r\n      }\r\n    } // $FlowFixMe Shouldn't we *not* call it if rootNodeID is null?\r\n\r\n    _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\r\n  }\r\n}\r\n\r\n// Module provided by RN:\r\nvar ReactNativeGlobalResponderHandler = {\r\n  onChange: function(from, to, blockNativeResponder) {\r\n    if (to !== null) {\r\n      var tag = to.stateNode._nativeTag;\r\n      ReactNativePrivateInterface.UIManager.setJSResponder(\r\n        tag,\r\n        blockNativeResponder\r\n      );\r\n    } else {\r\n      ReactNativePrivateInterface.UIManager.clearJSResponder();\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Register the event emitter with the native bridge\r\n */\r\n\r\nReactNativePrivateInterface.RCTEventEmitter.register({\r\n  receiveEvent: receiveEvent,\r\n  receiveTouches: receiveTouches\r\n});\r\nsetComponentTree(\r\n  getFiberCurrentPropsFromNode$1,\r\n  getInstanceFromTag,\r\n  getTagFromInstance\r\n);\r\nResponderEventPlugin.injection.injectGlobalResponderHandler(\r\n  ReactNativeGlobalResponderHandler\r\n);\r\n\r\n/**\r\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\r\n * instance (key) and the internal representation (value). This allows public\r\n * methods to accept the user facing instance as an argument and map them back\r\n * to internal methods.\r\n *\r\n * Note that this module is currently shared and assumed to be stateless.\r\n * If this becomes an actual Map, that will break.\r\n */\r\nfunction get(key) {\r\n  return key._reactInternals;\r\n}\r\nfunction set(key, value) {\r\n  key._reactInternals = value;\r\n}\r\n\r\nvar enableSchedulingProfiler = false;\r\nvar enableProfilerTimer = true;\r\nvar enableProfilerCommitHooks = true;\r\nvar warnAboutStringRefs = false;\r\nvar enableSuspenseAvoidThisFallback = false;\r\nvar enableNewReconciler = false;\r\nvar enableLazyContextPropagation = false;\r\nvar enableLegacyHidden = false;\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n// The Symbol used to tag the ReactElement-like types.\r\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\r\nvar REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\r\nvar REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\r\nvar REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\r\nvar REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\r\nvar REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\r\nvar REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\r\nvar REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\r\nvar REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\r\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\r\nvar REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\r\nvar REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\r\nvar REACT_SCOPE_TYPE = Symbol.for(\"react.scope\");\r\nvar REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for(\"react.debug_trace_mode\");\r\nvar REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\r\nvar REACT_LEGACY_HIDDEN_TYPE = Symbol.for(\"react.legacy_hidden\");\r\nvar REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\r\nvar REACT_TRACING_MARKER_TYPE = Symbol.for(\"react.tracing_marker\");\r\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nvar FAUX_ITERATOR_SYMBOL = \"@@iterator\";\r\nfunction getIteratorFn(maybeIterable) {\r\n  if (maybeIterable === null || typeof maybeIterable !== \"object\") {\r\n    return null;\r\n  }\r\n\r\n  var maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n\r\n  if (typeof maybeIterator === \"function\") {\r\n    return maybeIterator;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getWrappedName(outerType, innerType, wrapperName) {\r\n  var displayName = outerType.displayName;\r\n\r\n  if (displayName) {\r\n    return displayName;\r\n  }\r\n\r\n  var functionName = innerType.displayName || innerType.name || \"\";\r\n  return functionName !== \"\"\r\n    ? wrapperName + \"(\" + functionName + \")\"\r\n    : wrapperName;\r\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\r\n\r\nfunction getContextName(type) {\r\n  return type.displayName || \"Context\";\r\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\r\n\r\nfunction getComponentNameFromType(type) {\r\n  if (type == null) {\r\n    // Host root, text node or just invalid type.\r\n    return null;\r\n  }\r\n\r\n  {\r\n    if (typeof type.tag === \"number\") {\r\n      error(\r\n        \"Received an unexpected object in getComponentNameFromType(). \" +\r\n          \"This is likely a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (typeof type === \"function\") {\r\n    return type.displayName || type.name || null;\r\n  }\r\n\r\n  if (typeof type === \"string\") {\r\n    return type;\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_FRAGMENT_TYPE:\r\n      return \"Fragment\";\r\n\r\n    case REACT_PORTAL_TYPE:\r\n      return \"Portal\";\r\n\r\n    case REACT_PROFILER_TYPE:\r\n      return \"Profiler\";\r\n\r\n    case REACT_STRICT_MODE_TYPE:\r\n      return \"StrictMode\";\r\n\r\n    case REACT_SUSPENSE_TYPE:\r\n      return \"Suspense\";\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return \"SuspenseList\";\r\n  }\r\n\r\n  if (typeof type === \"object\") {\r\n    switch (type.$$typeof) {\r\n      case REACT_CONTEXT_TYPE:\r\n        var context = type;\r\n        return getContextName(context) + \".Consumer\";\r\n\r\n      case REACT_PROVIDER_TYPE:\r\n        var provider = type;\r\n        return getContextName(provider._context) + \".Provider\";\r\n\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return getWrappedName(type, type.render, \"ForwardRef\");\r\n\r\n      case REACT_MEMO_TYPE:\r\n        var outerName = type.displayName || null;\r\n\r\n        if (outerName !== null) {\r\n          return outerName;\r\n        }\r\n\r\n        return getComponentNameFromType(type.type) || \"Memo\";\r\n\r\n      case REACT_LAZY_TYPE: {\r\n        var lazyComponent = type;\r\n        var payload = lazyComponent._payload;\r\n        var init = lazyComponent._init;\r\n\r\n        try {\r\n          return getComponentNameFromType(init(payload));\r\n        } catch (x) {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getWrappedName$1(outerType, innerType, wrapperName) {\r\n  var functionName = innerType.displayName || innerType.name || \"\";\r\n  return (\r\n    outerType.displayName ||\r\n    (functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName)\r\n  );\r\n} // Keep in sync with shared/getComponentNameFromType\r\n\r\nfunction getContextName$1(type) {\r\n  return type.displayName || \"Context\";\r\n}\r\n\r\nfunction getComponentNameFromFiber(fiber) {\r\n  var tag = fiber.tag,\r\n    type = fiber.type;\r\n\r\n  switch (tag) {\r\n    case CacheComponent:\r\n      return \"Cache\";\r\n\r\n    case ContextConsumer:\r\n      var context = type;\r\n      return getContextName$1(context) + \".Consumer\";\r\n\r\n    case ContextProvider:\r\n      var provider = type;\r\n      return getContextName$1(provider._context) + \".Provider\";\r\n\r\n    case DehydratedFragment:\r\n      return \"DehydratedFragment\";\r\n\r\n    case ForwardRef:\r\n      return getWrappedName$1(type, type.render, \"ForwardRef\");\r\n\r\n    case Fragment:\r\n      return \"Fragment\";\r\n\r\n    case HostComponent:\r\n      // Host component type is the display name (e.g. \"div\", \"View\")\r\n      return type;\r\n\r\n    case HostPortal:\r\n      return \"Portal\";\r\n\r\n    case HostRoot:\r\n      return \"Root\";\r\n\r\n    case HostText:\r\n      return \"Text\";\r\n\r\n    case LazyComponent:\r\n      // Name comes from the type in this case; we don't have a tag.\r\n      return getComponentNameFromType(type);\r\n\r\n    case Mode:\r\n      if (type === REACT_STRICT_MODE_TYPE) {\r\n        // Don't be less specific than shared/getComponentNameFromType\r\n        return \"StrictMode\";\r\n      }\r\n\r\n      return \"Mode\";\r\n\r\n    case OffscreenComponent:\r\n      return \"Offscreen\";\r\n\r\n    case Profiler:\r\n      return \"Profiler\";\r\n\r\n    case ScopeComponent:\r\n      return \"Scope\";\r\n\r\n    case SuspenseComponent:\r\n      return \"Suspense\";\r\n\r\n    case SuspenseListComponent:\r\n      return \"SuspenseList\";\r\n\r\n    case TracingMarkerComponent:\r\n      return \"TracingMarker\";\r\n    // The display name for this tags come from the user-provided type:\r\n\r\n    case ClassComponent:\r\n    case FunctionComponent:\r\n    case IncompleteClassComponent:\r\n    case IndeterminateComponent:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent:\r\n      if (typeof type === \"function\") {\r\n        return type.displayName || type.name || null;\r\n      }\r\n\r\n      if (typeof type === \"string\") {\r\n        return type;\r\n      }\r\n\r\n      break;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// Don't change these two values. They're used by React Dev Tools.\r\nvar NoFlags =\r\n  /*                      */\r\n  0;\r\nvar PerformedWork =\r\n  /*                */\r\n  1; // You can change the rest (and add more).\r\n\r\nvar Placement =\r\n  /*                    */\r\n  2;\r\nvar Update =\r\n  /*                       */\r\n  4;\r\nvar ChildDeletion =\r\n  /*                */\r\n  16;\r\nvar ContentReset =\r\n  /*                 */\r\n  32;\r\nvar Callback =\r\n  /*                     */\r\n  64;\r\nvar DidCapture =\r\n  /*                   */\r\n  128;\r\nvar ForceClientRender =\r\n  /*            */\r\n  256;\r\nvar Ref =\r\n  /*                          */\r\n  512;\r\nvar Snapshot =\r\n  /*                     */\r\n  1024;\r\nvar Passive =\r\n  /*                      */\r\n  2048;\r\nvar Hydrating =\r\n  /*                    */\r\n  4096;\r\nvar Visibility =\r\n  /*                   */\r\n  8192;\r\nvar StoreConsistency =\r\n  /*             */\r\n  16384;\r\nvar LifecycleEffectMask =\r\n  Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)\r\n\r\nvar HostEffectMask =\r\n  /*               */\r\n  32767; // These are not really side effects, but we still reuse this field.\r\n\r\nvar Incomplete =\r\n  /*                   */\r\n  32768;\r\nvar ShouldCapture =\r\n  /*                */\r\n  65536;\r\nvar ForceUpdateForLegacySuspense =\r\n  /* */\r\n  131072;\r\nvar Forked =\r\n  /*                       */\r\n  1048576; // Static tags describe aspects of a fiber that are not specific to a render,\r\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\r\n// This enables us to defer more work in the unmount case,\r\n// since we can defer traversing the tree during layout to look for Passive effects,\r\n// and instead rely on the static flag as a signal that there may be cleanup work.\r\n\r\nvar RefStatic =\r\n  /*                    */\r\n  2097152;\r\nvar LayoutStatic =\r\n  /*                 */\r\n  4194304;\r\nvar PassiveStatic =\r\n  /*                */\r\n  8388608; // These flags allow us to traverse to fibers that have effects on mount\r\n// don't contain effects, by checking subtreeFlags.\r\n\r\nvar BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility\r\n  // flag logic (see #20043)\r\n  Update | Snapshot | 0;\r\nvar MutationMask =\r\n  Placement |\r\n  Update |\r\n  ChildDeletion |\r\n  ContentReset |\r\n  Ref |\r\n  Hydrating |\r\n  Visibility;\r\nvar LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask\r\n\r\nvar PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.\r\n// This allows certain concepts to persist without recalculating them,\r\n// e.g. whether a subtree contains passive effects or portals.\r\n\r\nvar StaticMask = LayoutStatic | PassiveStatic | RefStatic;\r\n\r\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\r\nfunction getNearestMountedFiber(fiber) {\r\n  var node = fiber;\r\n  var nearestMounted = fiber;\r\n\r\n  if (!fiber.alternate) {\r\n    // If there is no alternate, this might be a new tree that isn't inserted\r\n    // yet. If it is, then it will have a pending insertion effect on it.\r\n    var nextNode = node;\r\n\r\n    do {\r\n      node = nextNode;\r\n\r\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\r\n        // This is an insertion or in-progress hydration. The nearest possible\r\n        // mounted fiber is the parent but we need to continue to figure out\r\n        // if that one is still mounted.\r\n        nearestMounted = node.return;\r\n      }\r\n\r\n      nextNode = node.return;\r\n    } while (nextNode);\r\n  } else {\r\n    while (node.return) {\r\n      node = node.return;\r\n    }\r\n  }\r\n\r\n  if (node.tag === HostRoot) {\r\n    // TODO: Check if this was a nested HostRoot when used with\r\n    // renderContainerIntoSubtree.\r\n    return nearestMounted;\r\n  } // If we didn't hit the root, that means that we're in an disconnected tree\r\n  // that has been unmounted.\r\n\r\n  return null;\r\n}\r\nfunction isFiberMounted(fiber) {\r\n  return getNearestMountedFiber(fiber) === fiber;\r\n}\r\nfunction isMounted(component) {\r\n  {\r\n    var owner = ReactCurrentOwner.current;\r\n\r\n    if (owner !== null && owner.tag === ClassComponent) {\r\n      var ownerFiber = owner;\r\n      var instance = ownerFiber.stateNode;\r\n\r\n      if (!instance._warnedAboutRefsInRender) {\r\n        error(\r\n          \"%s is accessing isMounted inside its render() function. \" +\r\n            \"render() should be a pure function of props and state. It should \" +\r\n            \"never access something that requires stale data from the previous \" +\r\n            \"render, such as refs. Move this logic to componentDidMount and \" +\r\n            \"componentDidUpdate instead.\",\r\n          getComponentNameFromFiber(ownerFiber) || \"A component\"\r\n        );\r\n      }\r\n\r\n      instance._warnedAboutRefsInRender = true;\r\n    }\r\n  }\r\n\r\n  var fiber = get(component);\r\n\r\n  if (!fiber) {\r\n    return false;\r\n  }\r\n\r\n  return getNearestMountedFiber(fiber) === fiber;\r\n}\r\n\r\nfunction assertIsMounted(fiber) {\r\n  if (getNearestMountedFiber(fiber) !== fiber) {\r\n    throw new Error(\"Unable to find node on an unmounted component.\");\r\n  }\r\n}\r\n\r\nfunction findCurrentFiberUsingSlowPath(fiber) {\r\n  var alternate = fiber.alternate;\r\n\r\n  if (!alternate) {\r\n    // If there is no alternate, then we only need to check if it is mounted.\r\n    var nearestMounted = getNearestMountedFiber(fiber);\r\n\r\n    if (nearestMounted === null) {\r\n      throw new Error(\"Unable to find node on an unmounted component.\");\r\n    }\r\n\r\n    if (nearestMounted !== fiber) {\r\n      return null;\r\n    }\r\n\r\n    return fiber;\r\n  } // If we have two possible branches, we'll walk backwards up to the root\r\n  // to see what path the root points to. On the way we may hit one of the\r\n  // special cases and we'll deal with them.\r\n\r\n  var a = fiber;\r\n  var b = alternate;\r\n\r\n  while (true) {\r\n    var parentA = a.return;\r\n\r\n    if (parentA === null) {\r\n      // We're at the root.\r\n      break;\r\n    }\r\n\r\n    var parentB = parentA.alternate;\r\n\r\n    if (parentB === null) {\r\n      // There is no alternate. This is an unusual case. Currently, it only\r\n      // happens when a Suspense component is hidden. An extra fragment fiber\r\n      // is inserted in between the Suspense fiber and its children. Skip\r\n      // over this extra fragment fiber and proceed to the next parent.\r\n      var nextParent = parentA.return;\r\n\r\n      if (nextParent !== null) {\r\n        a = b = nextParent;\r\n        continue;\r\n      } // If there's no parent, we're at the root.\r\n\r\n      break;\r\n    } // If both copies of the parent fiber point to the same child, we can\r\n    // assume that the child is current. This happens when we bailout on low\r\n    // priority: the bailed out fiber's child reuses the current child.\r\n\r\n    if (parentA.child === parentB.child) {\r\n      var child = parentA.child;\r\n\r\n      while (child) {\r\n        if (child === a) {\r\n          // We've determined that A is the current branch.\r\n          assertIsMounted(parentA);\r\n          return fiber;\r\n        }\r\n\r\n        if (child === b) {\r\n          // We've determined that B is the current branch.\r\n          assertIsMounted(parentA);\r\n          return alternate;\r\n        }\r\n\r\n        child = child.sibling;\r\n      } // We should never have an alternate for any mounting node. So the only\r\n      // way this could possibly happen is if this was unmounted, if at all.\r\n\r\n      throw new Error(\"Unable to find node on an unmounted component.\");\r\n    }\r\n\r\n    if (a.return !== b.return) {\r\n      // The return pointer of A and the return pointer of B point to different\r\n      // fibers. We assume that return pointers never criss-cross, so A must\r\n      // belong to the child set of A.return, and B must belong to the child\r\n      // set of B.return.\r\n      a = parentA;\r\n      b = parentB;\r\n    } else {\r\n      // The return pointers point to the same fiber. We'll have to use the\r\n      // default, slow path: scan the child sets of each parent alternate to see\r\n      // which child belongs to which set.\r\n      //\r\n      // Search parent A's child set\r\n      var didFindChild = false;\r\n      var _child = parentA.child;\r\n\r\n      while (_child) {\r\n        if (_child === a) {\r\n          didFindChild = true;\r\n          a = parentA;\r\n          b = parentB;\r\n          break;\r\n        }\r\n\r\n        if (_child === b) {\r\n          didFindChild = true;\r\n          b = parentA;\r\n          a = parentB;\r\n          break;\r\n        }\r\n\r\n        _child = _child.sibling;\r\n      }\r\n\r\n      if (!didFindChild) {\r\n        // Search parent B's child set\r\n        _child = parentB.child;\r\n\r\n        while (_child) {\r\n          if (_child === a) {\r\n            didFindChild = true;\r\n            a = parentB;\r\n            b = parentA;\r\n            break;\r\n          }\r\n\r\n          if (_child === b) {\r\n            didFindChild = true;\r\n            b = parentB;\r\n            a = parentA;\r\n            break;\r\n          }\r\n\r\n          _child = _child.sibling;\r\n        }\r\n\r\n        if (!didFindChild) {\r\n          throw new Error(\r\n            \"Child was not found in either parent set. This indicates a bug \" +\r\n              \"in React related to the return pointer. Please file an issue.\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (a.alternate !== b) {\r\n      throw new Error(\r\n        \"Return fibers should always be each others' alternates. \" +\r\n          \"This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n  } // If the root is not a host container, we're in a disconnected tree. I.e.\r\n  // unmounted.\r\n\r\n  if (a.tag !== HostRoot) {\r\n    throw new Error(\"Unable to find node on an unmounted component.\");\r\n  }\r\n\r\n  if (a.stateNode.current === a) {\r\n    // We've determined that A is the current branch.\r\n    return fiber;\r\n  } // Otherwise B has to be current branch.\r\n\r\n  return alternate;\r\n}\r\nfunction findCurrentHostFiber(parent) {\r\n  var currentParent = findCurrentFiberUsingSlowPath(parent);\r\n  return currentParent !== null\r\n    ? findCurrentHostFiberImpl(currentParent)\r\n    : null;\r\n}\r\n\r\nfunction findCurrentHostFiberImpl(node) {\r\n  // Next we'll drill down this component to find the first HostComponent/Text.\r\n  if (node.tag === HostComponent || node.tag === HostText) {\r\n    return node;\r\n  }\r\n\r\n  var child = node.child;\r\n\r\n  while (child !== null) {\r\n    var match = findCurrentHostFiberImpl(child);\r\n\r\n    if (match !== null) {\r\n      return match;\r\n    }\r\n\r\n    child = child.sibling;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// Modules provided by RN:\r\nvar emptyObject = {};\r\n/**\r\n * Create a payload that contains all the updates between two sets of props.\r\n *\r\n * These helpers are all encapsulated into a single module, because they use\r\n * mutation as a performance optimization which leads to subtle shared\r\n * dependencies between the code paths. To avoid this mutable state leaking\r\n * across modules, I've kept them isolated to this module.\r\n */\r\n\r\n// Tracks removed keys\r\nvar removedKeys = null;\r\nvar removedKeyCount = 0;\r\nvar deepDifferOptions = {\r\n  unsafelyIgnoreFunctions: true\r\n};\r\n\r\nfunction defaultDiffer(prevProp, nextProp) {\r\n  if (typeof nextProp !== \"object\" || nextProp === null) {\r\n    // Scalars have already been checked for equality\r\n    return true;\r\n  } else {\r\n    // For objects and arrays, the default diffing algorithm is a deep compare\r\n    return ReactNativePrivateInterface.deepDiffer(\r\n      prevProp,\r\n      nextProp,\r\n      deepDifferOptions\r\n    );\r\n  }\r\n}\r\n\r\nfunction restoreDeletedValuesInNestedArray(\r\n  updatePayload,\r\n  node,\r\n  validAttributes\r\n) {\r\n  if (isArray(node)) {\r\n    var i = node.length;\r\n\r\n    while (i-- && removedKeyCount > 0) {\r\n      restoreDeletedValuesInNestedArray(\r\n        updatePayload,\r\n        node[i],\r\n        validAttributes\r\n      );\r\n    }\r\n  } else if (node && removedKeyCount > 0) {\r\n    var obj = node;\r\n\r\n    for (var propKey in removedKeys) {\r\n      if (!removedKeys[propKey]) {\r\n        continue;\r\n      }\r\n\r\n      var nextProp = obj[propKey];\r\n\r\n      if (nextProp === undefined) {\r\n        continue;\r\n      }\r\n\r\n      var attributeConfig = validAttributes[propKey];\r\n\r\n      if (!attributeConfig) {\r\n        continue; // not a valid native prop\r\n      }\r\n\r\n      if (typeof nextProp === \"function\") {\r\n        nextProp = true;\r\n      }\r\n\r\n      if (typeof nextProp === \"undefined\") {\r\n        nextProp = null;\r\n      }\r\n\r\n      if (typeof attributeConfig !== \"object\") {\r\n        // case: !Object is the default case\r\n        updatePayload[propKey] = nextProp;\r\n      } else if (\r\n        typeof attributeConfig.diff === \"function\" ||\r\n        typeof attributeConfig.process === \"function\"\r\n      ) {\r\n        // case: CustomAttributeConfiguration\r\n        var nextValue =\r\n          typeof attributeConfig.process === \"function\"\r\n            ? attributeConfig.process(nextProp)\r\n            : nextProp;\r\n        updatePayload[propKey] = nextValue;\r\n      }\r\n\r\n      removedKeys[propKey] = false;\r\n      removedKeyCount--;\r\n    }\r\n  }\r\n}\r\n\r\nfunction diffNestedArrayProperty(\r\n  updatePayload,\r\n  prevArray,\r\n  nextArray,\r\n  validAttributes\r\n) {\r\n  var minLength =\r\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\r\n  var i;\r\n\r\n  for (i = 0; i < minLength; i++) {\r\n    // Diff any items in the array in the forward direction. Repeated keys\r\n    // will be overwritten by later values.\r\n    updatePayload = diffNestedProperty(\r\n      updatePayload,\r\n      prevArray[i],\r\n      nextArray[i],\r\n      validAttributes\r\n    );\r\n  }\r\n\r\n  for (; i < prevArray.length; i++) {\r\n    // Clear out all remaining properties.\r\n    updatePayload = clearNestedProperty(\r\n      updatePayload,\r\n      prevArray[i],\r\n      validAttributes\r\n    );\r\n  }\r\n\r\n  for (; i < nextArray.length; i++) {\r\n    // Add all remaining properties.\r\n    updatePayload = addNestedProperty(\r\n      updatePayload,\r\n      nextArray[i],\r\n      validAttributes\r\n    );\r\n  }\r\n\r\n  return updatePayload;\r\n}\r\n\r\nfunction diffNestedProperty(\r\n  updatePayload,\r\n  prevProp,\r\n  nextProp,\r\n  validAttributes\r\n) {\r\n  if (!updatePayload && prevProp === nextProp) {\r\n    // If no properties have been added, then we can bail out quickly on object\r\n    // equality.\r\n    return updatePayload;\r\n  }\r\n\r\n  if (!prevProp || !nextProp) {\r\n    if (nextProp) {\r\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\r\n    }\r\n\r\n    if (prevProp) {\r\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\r\n    }\r\n\r\n    return updatePayload;\r\n  }\r\n\r\n  if (!isArray(prevProp) && !isArray(nextProp)) {\r\n    // Both are leaves, we can diff the leaves.\r\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\r\n  }\r\n\r\n  if (isArray(prevProp) && isArray(nextProp)) {\r\n    // Both are arrays, we can diff the arrays.\r\n    return diffNestedArrayProperty(\r\n      updatePayload,\r\n      prevProp,\r\n      nextProp,\r\n      validAttributes\r\n    );\r\n  }\r\n\r\n  if (isArray(prevProp)) {\r\n    return diffProperties(\r\n      updatePayload, // $FlowFixMe - We know that this is always an object when the input is.\r\n      ReactNativePrivateInterface.flattenStyle(prevProp), // $FlowFixMe - We know that this isn't an array because of above flow.\r\n      nextProp,\r\n      validAttributes\r\n    );\r\n  }\r\n\r\n  return diffProperties(\r\n    updatePayload,\r\n    prevProp, // $FlowFixMe - We know that this is always an object when the input is.\r\n    ReactNativePrivateInterface.flattenStyle(nextProp),\r\n    validAttributes\r\n  );\r\n}\r\n/**\r\n * addNestedProperty takes a single set of props and valid attribute\r\n * attribute configurations. It processes each prop and adds it to the\r\n * updatePayload.\r\n */\r\n\r\nfunction addNestedProperty(updatePayload, nextProp, validAttributes) {\r\n  if (!nextProp) {\r\n    return updatePayload;\r\n  }\r\n\r\n  if (!isArray(nextProp)) {\r\n    // Add each property of the leaf.\r\n    return addProperties(updatePayload, nextProp, validAttributes);\r\n  }\r\n\r\n  for (var i = 0; i < nextProp.length; i++) {\r\n    // Add all the properties of the array.\r\n    updatePayload = addNestedProperty(\r\n      updatePayload,\r\n      nextProp[i],\r\n      validAttributes\r\n    );\r\n  }\r\n\r\n  return updatePayload;\r\n}\r\n/**\r\n * clearNestedProperty takes a single set of props and valid attributes. It\r\n * adds a null sentinel to the updatePayload, for each prop key.\r\n */\r\n\r\nfunction clearNestedProperty(updatePayload, prevProp, validAttributes) {\r\n  if (!prevProp) {\r\n    return updatePayload;\r\n  }\r\n\r\n  if (!isArray(prevProp)) {\r\n    // Add each property of the leaf.\r\n    return clearProperties(updatePayload, prevProp, validAttributes);\r\n  }\r\n\r\n  for (var i = 0; i < prevProp.length; i++) {\r\n    // Add all the properties of the array.\r\n    updatePayload = clearNestedProperty(\r\n      updatePayload,\r\n      prevProp[i],\r\n      validAttributes\r\n    );\r\n  }\r\n\r\n  return updatePayload;\r\n}\r\n/**\r\n * diffProperties takes two sets of props and a set of valid attributes\r\n * and write to updatePayload the values that changed or were deleted.\r\n * If no updatePayload is provided, a new one is created and returned if\r\n * anything changed.\r\n */\r\n\r\nfunction diffProperties(updatePayload, prevProps, nextProps, validAttributes) {\r\n  var attributeConfig;\r\n  var nextProp;\r\n  var prevProp;\r\n\r\n  for (var propKey in nextProps) {\r\n    attributeConfig = validAttributes[propKey];\r\n\r\n    if (!attributeConfig) {\r\n      continue; // not a valid native prop\r\n    }\r\n\r\n    prevProp = prevProps[propKey];\r\n    nextProp = nextProps[propKey]; // functions are converted to booleans as markers that the associated\r\n    // events should be sent from native.\r\n\r\n    if (typeof nextProp === \"function\") {\r\n      nextProp = true; // If nextProp is not a function, then don't bother changing prevProp\r\n      // since nextProp will win and go into the updatePayload regardless.\r\n\r\n      if (typeof prevProp === \"function\") {\r\n        prevProp = true;\r\n      }\r\n    } // An explicit value of undefined is treated as a null because it overrides\r\n    // any other preceding value.\r\n\r\n    if (typeof nextProp === \"undefined\") {\r\n      nextProp = null;\r\n\r\n      if (typeof prevProp === \"undefined\") {\r\n        prevProp = null;\r\n      }\r\n    }\r\n\r\n    if (removedKeys) {\r\n      removedKeys[propKey] = false;\r\n    }\r\n\r\n    if (updatePayload && updatePayload[propKey] !== undefined) {\r\n      // Something else already triggered an update to this key because another\r\n      // value diffed. Since we're now later in the nested arrays our value is\r\n      // more important so we need to calculate it and override the existing\r\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\r\n      // Pattern match on: attributeConfig\r\n      if (typeof attributeConfig !== \"object\") {\r\n        // case: !Object is the default case\r\n        updatePayload[propKey] = nextProp;\r\n      } else if (\r\n        typeof attributeConfig.diff === \"function\" ||\r\n        typeof attributeConfig.process === \"function\"\r\n      ) {\r\n        // case: CustomAttributeConfiguration\r\n        var nextValue =\r\n          typeof attributeConfig.process === \"function\"\r\n            ? attributeConfig.process(nextProp)\r\n            : nextProp;\r\n        updatePayload[propKey] = nextValue;\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    if (prevProp === nextProp) {\r\n      continue; // nothing changed\r\n    } // Pattern match on: attributeConfig\r\n\r\n    if (typeof attributeConfig !== \"object\") {\r\n      // case: !Object is the default case\r\n      if (defaultDiffer(prevProp, nextProp)) {\r\n        // a normal leaf has changed\r\n        (updatePayload || (updatePayload = {}))[propKey] = nextProp;\r\n      }\r\n    } else if (\r\n      typeof attributeConfig.diff === \"function\" ||\r\n      typeof attributeConfig.process === \"function\"\r\n    ) {\r\n      // case: CustomAttributeConfiguration\r\n      var shouldUpdate =\r\n        prevProp === undefined ||\r\n        (typeof attributeConfig.diff === \"function\"\r\n          ? attributeConfig.diff(prevProp, nextProp)\r\n          : defaultDiffer(prevProp, nextProp));\r\n\r\n      if (shouldUpdate) {\r\n        var _nextValue =\r\n          typeof attributeConfig.process === \"function\"\r\n            ? attributeConfig.process(nextProp)\r\n            : nextProp;\r\n\r\n        (updatePayload || (updatePayload = {}))[propKey] = _nextValue;\r\n      }\r\n    } else {\r\n      // default: fallthrough case when nested properties are defined\r\n      removedKeys = null;\r\n      removedKeyCount = 0; // We think that attributeConfig is not CustomAttributeConfiguration at\r\n      // this point so we assume it must be AttributeConfiguration.\r\n\r\n      updatePayload = diffNestedProperty(\r\n        updatePayload,\r\n        prevProp,\r\n        nextProp,\r\n        attributeConfig\r\n      );\r\n\r\n      if (removedKeyCount > 0 && updatePayload) {\r\n        restoreDeletedValuesInNestedArray(\r\n          updatePayload,\r\n          nextProp,\r\n          attributeConfig\r\n        );\r\n        removedKeys = null;\r\n      }\r\n    }\r\n  } // Also iterate through all the previous props to catch any that have been\r\n  // removed and make sure native gets the signal so it can reset them to the\r\n  // default.\r\n\r\n  for (var _propKey in prevProps) {\r\n    if (nextProps[_propKey] !== undefined) {\r\n      continue; // we've already covered this key in the previous pass\r\n    }\r\n\r\n    attributeConfig = validAttributes[_propKey];\r\n\r\n    if (!attributeConfig) {\r\n      continue; // not a valid native prop\r\n    }\r\n\r\n    if (updatePayload && updatePayload[_propKey] !== undefined) {\r\n      // This was already updated to a diff result earlier.\r\n      continue;\r\n    }\r\n\r\n    prevProp = prevProps[_propKey];\r\n\r\n    if (prevProp === undefined) {\r\n      continue; // was already empty anyway\r\n    } // Pattern match on: attributeConfig\r\n\r\n    if (\r\n      typeof attributeConfig !== \"object\" ||\r\n      typeof attributeConfig.diff === \"function\" ||\r\n      typeof attributeConfig.process === \"function\"\r\n    ) {\r\n      // case: CustomAttributeConfiguration | !Object\r\n      // Flag the leaf property for removal by sending a sentinel.\r\n      (updatePayload || (updatePayload = {}))[_propKey] = null;\r\n\r\n      if (!removedKeys) {\r\n        removedKeys = {};\r\n      }\r\n\r\n      if (!removedKeys[_propKey]) {\r\n        removedKeys[_propKey] = true;\r\n        removedKeyCount++;\r\n      }\r\n    } else {\r\n      // default:\r\n      // This is a nested attribute configuration where all the properties\r\n      // were removed so we need to go through and clear out all of them.\r\n      updatePayload = clearNestedProperty(\r\n        updatePayload,\r\n        prevProp,\r\n        attributeConfig\r\n      );\r\n    }\r\n  }\r\n\r\n  return updatePayload;\r\n}\r\n/**\r\n * addProperties adds all the valid props to the payload after being processed.\r\n */\r\n\r\nfunction addProperties(updatePayload, props, validAttributes) {\r\n  // TODO: Fast path\r\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\r\n}\r\n/**\r\n * clearProperties clears all the previous props by adding a null sentinel\r\n * to the payload for each valid key.\r\n */\r\n\r\nfunction clearProperties(updatePayload, prevProps, validAttributes) {\r\n  // TODO: Fast path\r\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\r\n}\r\n\r\nfunction create(props, validAttributes) {\r\n  return addProperties(\r\n    null, // updatePayload\r\n    props,\r\n    validAttributes\r\n  );\r\n}\r\nfunction diff(prevProps, nextProps, validAttributes) {\r\n  return diffProperties(\r\n    null, // updatePayload\r\n    prevProps,\r\n    nextProps,\r\n    validAttributes\r\n  );\r\n}\r\n\r\n/**\r\n * In the future, we should cleanup callbacks by cancelling them instead of\r\n * using this.\r\n */\r\nfunction mountSafeCallback_NOT_REALLY_SAFE(context, callback) {\r\n  return function() {\r\n    if (!callback) {\r\n      return undefined;\r\n    } // This protects against createClass() components.\r\n    // We don't know if there is code depending on it.\r\n    // We intentionally don't use isMounted() because even accessing\r\n    // isMounted property on a React ES6 class will trigger a warning.\r\n\r\n    if (typeof context.__isMounted === \"boolean\") {\r\n      if (!context.__isMounted) {\r\n        return undefined;\r\n      }\r\n    } // FIXME: there used to be other branches that protected\r\n    // against unmounted host components. But RN host components don't\r\n    // define isMounted() anymore, so those checks didn't do anything.\r\n    // They caused false positive warning noise so we removed them:\r\n    // https://github.com/facebook/react-native/issues/18868#issuecomment-413579095\r\n    // However, this means that the callback is NOT guaranteed to be safe\r\n    // for host components. The solution we should implement is to make\r\n    // UIManager.measure() and similar calls truly cancelable. Then we\r\n    // can change our own code calling them to cancel when something unmounts.\r\n\r\n    return callback.apply(context, arguments);\r\n  };\r\n}\r\nfunction warnForStyleProps(props, validAttributes) {\r\n  {\r\n    for (var key in validAttributes.style) {\r\n      if (!(validAttributes[key] || props[key] === undefined)) {\r\n        error(\r\n          \"You are setting the style `{ %s\" +\r\n            \": ... }` as a prop. You \" +\r\n            \"should nest it in a style object. \" +\r\n            \"E.g. `{ style: { %s\" +\r\n            \": ... } }`\",\r\n          key,\r\n          key\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar ReactNativeFiberHostComponent = /*#__PURE__*/ (function() {\r\n  function ReactNativeFiberHostComponent(\r\n    tag,\r\n    viewConfig,\r\n    internalInstanceHandleDEV\r\n  ) {\r\n    this._nativeTag = tag;\r\n    this._children = [];\r\n    this.viewConfig = viewConfig;\r\n\r\n    {\r\n      this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\r\n    }\r\n  }\r\n\r\n  var _proto = ReactNativeFiberHostComponent.prototype;\r\n\r\n  _proto.blur = function blur() {\r\n    ReactNativePrivateInterface.TextInputState.blurTextInput(this);\r\n  };\r\n\r\n  _proto.focus = function focus() {\r\n    ReactNativePrivateInterface.TextInputState.focusTextInput(this);\r\n  };\r\n\r\n  _proto.measure = function measure(callback) {\r\n    ReactNativePrivateInterface.UIManager.measure(\r\n      this._nativeTag,\r\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback)\r\n    );\r\n  };\r\n\r\n  _proto.measureInWindow = function measureInWindow(callback) {\r\n    ReactNativePrivateInterface.UIManager.measureInWindow(\r\n      this._nativeTag,\r\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback)\r\n    );\r\n  };\r\n\r\n  _proto.measureLayout = function measureLayout(\r\n    relativeToNativeNode,\r\n    onSuccess,\r\n    onFail\r\n  ) /* currently unused */\r\n  {\r\n    var relativeNode;\r\n\r\n    if (typeof relativeToNativeNode === \"number\") {\r\n      // Already a node handle\r\n      relativeNode = relativeToNativeNode;\r\n    } else {\r\n      var nativeNode = relativeToNativeNode;\r\n\r\n      if (nativeNode._nativeTag) {\r\n        relativeNode = nativeNode._nativeTag;\r\n      }\r\n    }\r\n\r\n    if (relativeNode == null) {\r\n      {\r\n        error(\r\n          \"Warning: ref.measureLayout must be called with a node handle or a ref to a native component.\"\r\n        );\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    ReactNativePrivateInterface.UIManager.measureLayout(\r\n      this._nativeTag,\r\n      relativeNode,\r\n      mountSafeCallback_NOT_REALLY_SAFE(this, onFail),\r\n      mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)\r\n    );\r\n  };\r\n\r\n  _proto.setNativeProps = function setNativeProps(nativeProps) {\r\n    {\r\n      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\r\n    }\r\n\r\n    var updatePayload = create(nativeProps, this.viewConfig.validAttributes); // Avoid the overhead of bridge calls if there's no update.\r\n    // This is an expensive no-op for Android, and causes an unnecessary\r\n    // view invalidation for certain components (eg RCTTextInput) on iOS.\r\n\r\n    if (updatePayload != null) {\r\n      ReactNativePrivateInterface.UIManager.updateView(\r\n        this._nativeTag,\r\n        this.viewConfig.uiViewClassName,\r\n        updatePayload\r\n      );\r\n    }\r\n  };\r\n\r\n  return ReactNativeFiberHostComponent;\r\n})(); // eslint-disable-next-line no-unused-expressions\r\n\r\n// This module only exists as an ESM wrapper around the external CommonJS\r\nvar scheduleCallback = Scheduler.unstable_scheduleCallback;\r\nvar cancelCallback = Scheduler.unstable_cancelCallback;\r\nvar shouldYield = Scheduler.unstable_shouldYield;\r\nvar requestPaint = Scheduler.unstable_requestPaint;\r\nvar now = Scheduler.unstable_now;\r\nvar ImmediatePriority = Scheduler.unstable_ImmediatePriority;\r\nvar UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\r\nvar NormalPriority = Scheduler.unstable_NormalPriority;\r\nvar IdlePriority = Scheduler.unstable_IdlePriority;\r\n\r\nvar rendererID = null;\r\nvar injectedHook = null;\r\nvar hasLoggedError = false;\r\nvar isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\";\r\nfunction injectInternals(internals) {\r\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === \"undefined\") {\r\n    // No DevTools\r\n    return false;\r\n  }\r\n\r\n  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\r\n\r\n  if (hook.isDisabled) {\r\n    // This isn't a real property on the hook, but it can be set to opt out\r\n    // of DevTools integration and associated warnings and logs.\r\n    // https://github.com/facebook/react/issues/3877\r\n    return true;\r\n  }\r\n\r\n  if (!hook.supportsFiber) {\r\n    {\r\n      error(\r\n        \"The installed version of React DevTools is too old and will not work \" +\r\n          \"with the current version of React. Please update React DevTools. \" +\r\n          \"https://reactjs.org/link/react-devtools\"\r\n      );\r\n    } // DevTools exists, even though it doesn't support Fiber.\r\n\r\n    return true;\r\n  }\r\n\r\n  try {\r\n    if (enableSchedulingProfiler) {\r\n      // Conditionally inject these hooks only if Timeline profiler is supported by this build.\r\n      // This gives DevTools a way to feature detect that isn't tied to version number\r\n      // (since profiling and timeline are controlled by different feature flags).\r\n      internals = assign({}, internals, {\r\n        getLaneLabelMap: getLaneLabelMap,\r\n        injectProfilingHooks: injectProfilingHooks\r\n      });\r\n    }\r\n\r\n    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\r\n\r\n    injectedHook = hook;\r\n  } catch (err) {\r\n    // Catch all errors because it is unsafe to throw during initialization.\r\n    {\r\n      error(\"React instrumentation encountered an error: %s.\", err);\r\n    }\r\n  }\r\n\r\n  if (hook.checkDCE) {\r\n    // This is the real DevTools.\r\n    return true;\r\n  } else {\r\n    // This is likely a hook installed by Fast Refresh runtime.\r\n    return false;\r\n  }\r\n}\r\nfunction onScheduleRoot(root, children) {\r\n  {\r\n    if (\r\n      injectedHook &&\r\n      typeof injectedHook.onScheduleFiberRoot === \"function\"\r\n    ) {\r\n      try {\r\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\r\n      } catch (err) {\r\n        if (!hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error(\"React instrumentation encountered an error: %s\", err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction onCommitRoot(root, eventPriority) {\r\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === \"function\") {\r\n    try {\r\n      var didError = (root.current.flags & DidCapture) === DidCapture;\r\n\r\n      if (enableProfilerTimer) {\r\n        var schedulerPriority;\r\n\r\n        switch (eventPriority) {\r\n          case DiscreteEventPriority:\r\n            schedulerPriority = ImmediatePriority;\r\n            break;\r\n\r\n          case ContinuousEventPriority:\r\n            schedulerPriority = UserBlockingPriority;\r\n            break;\r\n\r\n          case DefaultEventPriority:\r\n            schedulerPriority = NormalPriority;\r\n            break;\r\n\r\n          case IdleEventPriority:\r\n            schedulerPriority = IdlePriority;\r\n            break;\r\n\r\n          default:\r\n            schedulerPriority = NormalPriority;\r\n            break;\r\n        }\r\n\r\n        injectedHook.onCommitFiberRoot(\r\n          rendererID,\r\n          root,\r\n          schedulerPriority,\r\n          didError\r\n        );\r\n      } else {\r\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\r\n      }\r\n    } catch (err) {\r\n      {\r\n        if (!hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error(\"React instrumentation encountered an error: %s\", err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction onPostCommitRoot(root) {\r\n  if (\r\n    injectedHook &&\r\n    typeof injectedHook.onPostCommitFiberRoot === \"function\"\r\n  ) {\r\n    try {\r\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\r\n    } catch (err) {\r\n      {\r\n        if (!hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error(\"React instrumentation encountered an error: %s\", err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction onCommitUnmount(fiber) {\r\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === \"function\") {\r\n    try {\r\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\r\n    } catch (err) {\r\n      {\r\n        if (!hasLoggedError) {\r\n          hasLoggedError = true;\r\n\r\n          error(\"React instrumentation encountered an error: %s\", err);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction injectProfilingHooks(profilingHooks) {}\r\n\r\nfunction getLaneLabelMap() {\r\n  {\r\n    return null;\r\n  }\r\n}\r\nfunction markComponentRenderStopped() {}\r\nfunction markComponentErrored(fiber, thrownValue, lanes) {}\r\nfunction markComponentSuspended(fiber, wakeable, lanes) {}\r\n\r\nvar NoMode =\r\n  /*                         */\r\n  0; // TODO: Remove ConcurrentMode by reading from the root tag instead\r\n\r\nvar ConcurrentMode =\r\n  /*                 */\r\n  1;\r\nvar ProfileMode =\r\n  /*                    */\r\n  2;\r\nvar StrictLegacyMode =\r\n  /*               */\r\n  8;\r\n\r\n// TODO: This is pretty well supported by browsers. Maybe we can drop it.\r\nvar clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.\r\n// Based on:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\nvar log = Math.log;\r\nvar LN2 = Math.LN2;\r\n\r\nfunction clz32Fallback(x) {\r\n  var asUint = x >>> 0;\r\n\r\n  if (asUint === 0) {\r\n    return 32;\r\n  }\r\n\r\n  return (31 - ((log(asUint) / LN2) | 0)) | 0;\r\n}\r\n\r\n// If those values are changed that package should be rebuilt and redeployed.\r\n\r\nvar TotalLanes = 31;\r\nvar NoLanes =\r\n  /*                        */\r\n  0;\r\nvar NoLane =\r\n  /*                          */\r\n  0;\r\nvar SyncLane =\r\n  /*                        */\r\n  1;\r\nvar InputContinuousHydrationLane =\r\n  /*    */\r\n  2;\r\nvar InputContinuousLane =\r\n  /*             */\r\n  4;\r\nvar DefaultHydrationLane =\r\n  /*            */\r\n  8;\r\nvar DefaultLane =\r\n  /*                     */\r\n  16;\r\nvar TransitionHydrationLane =\r\n  /*                */\r\n  32;\r\nvar TransitionLanes =\r\n  /*                       */\r\n  4194240;\r\nvar TransitionLane1 =\r\n  /*                        */\r\n  64;\r\nvar TransitionLane2 =\r\n  /*                        */\r\n  128;\r\nvar TransitionLane3 =\r\n  /*                        */\r\n  256;\r\nvar TransitionLane4 =\r\n  /*                        */\r\n  512;\r\nvar TransitionLane5 =\r\n  /*                        */\r\n  1024;\r\nvar TransitionLane6 =\r\n  /*                        */\r\n  2048;\r\nvar TransitionLane7 =\r\n  /*                        */\r\n  4096;\r\nvar TransitionLane8 =\r\n  /*                        */\r\n  8192;\r\nvar TransitionLane9 =\r\n  /*                        */\r\n  16384;\r\nvar TransitionLane10 =\r\n  /*                       */\r\n  32768;\r\nvar TransitionLane11 =\r\n  /*                       */\r\n  65536;\r\nvar TransitionLane12 =\r\n  /*                       */\r\n  131072;\r\nvar TransitionLane13 =\r\n  /*                       */\r\n  262144;\r\nvar TransitionLane14 =\r\n  /*                       */\r\n  524288;\r\nvar TransitionLane15 =\r\n  /*                       */\r\n  1048576;\r\nvar TransitionLane16 =\r\n  /*                       */\r\n  2097152;\r\nvar RetryLanes =\r\n  /*                            */\r\n  130023424;\r\nvar RetryLane1 =\r\n  /*                             */\r\n  4194304;\r\nvar RetryLane2 =\r\n  /*                             */\r\n  8388608;\r\nvar RetryLane3 =\r\n  /*                             */\r\n  16777216;\r\nvar RetryLane4 =\r\n  /*                             */\r\n  33554432;\r\nvar RetryLane5 =\r\n  /*                             */\r\n  67108864;\r\nvar SomeRetryLane = RetryLane1;\r\nvar SelectiveHydrationLane =\r\n  /*          */\r\n  134217728;\r\nvar NonIdleLanes =\r\n  /*                          */\r\n  268435455;\r\nvar IdleHydrationLane =\r\n  /*               */\r\n  268435456;\r\nvar IdleLane =\r\n  /*                        */\r\n  536870912;\r\nvar OffscreenLane =\r\n  /*                   */\r\n  1073741824; // This function is used for the experimental timeline (react-devtools-timeline)\r\nvar NoTimestamp = -1;\r\nvar nextTransitionLane = TransitionLane1;\r\nvar nextRetryLane = RetryLane1;\r\n\r\nfunction getHighestPriorityLanes(lanes) {\r\n  switch (getHighestPriorityLane(lanes)) {\r\n    case SyncLane:\r\n      return SyncLane;\r\n\r\n    case InputContinuousHydrationLane:\r\n      return InputContinuousHydrationLane;\r\n\r\n    case InputContinuousLane:\r\n      return InputContinuousLane;\r\n\r\n    case DefaultHydrationLane:\r\n      return DefaultHydrationLane;\r\n\r\n    case DefaultLane:\r\n      return DefaultLane;\r\n\r\n    case TransitionHydrationLane:\r\n      return TransitionHydrationLane;\r\n\r\n    case TransitionLane1:\r\n    case TransitionLane2:\r\n    case TransitionLane3:\r\n    case TransitionLane4:\r\n    case TransitionLane5:\r\n    case TransitionLane6:\r\n    case TransitionLane7:\r\n    case TransitionLane8:\r\n    case TransitionLane9:\r\n    case TransitionLane10:\r\n    case TransitionLane11:\r\n    case TransitionLane12:\r\n    case TransitionLane13:\r\n    case TransitionLane14:\r\n    case TransitionLane15:\r\n    case TransitionLane16:\r\n      return lanes & TransitionLanes;\r\n\r\n    case RetryLane1:\r\n    case RetryLane2:\r\n    case RetryLane3:\r\n    case RetryLane4:\r\n    case RetryLane5:\r\n      return lanes & RetryLanes;\r\n\r\n    case SelectiveHydrationLane:\r\n      return SelectiveHydrationLane;\r\n\r\n    case IdleHydrationLane:\r\n      return IdleHydrationLane;\r\n\r\n    case IdleLane:\r\n      return IdleLane;\r\n\r\n    case OffscreenLane:\r\n      return OffscreenLane;\r\n\r\n    default:\r\n      {\r\n        error(\"Should have found matching lanes. This is a bug in React.\");\r\n      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.\r\n\r\n      return lanes;\r\n  }\r\n}\r\n\r\nfunction getNextLanes(root, wipLanes) {\r\n  // Early bailout if there's no pending work left.\r\n  var pendingLanes = root.pendingLanes;\r\n\r\n  if (pendingLanes === NoLanes) {\r\n    return NoLanes;\r\n  }\r\n\r\n  var nextLanes = NoLanes;\r\n  var suspendedLanes = root.suspendedLanes;\r\n  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,\r\n  // even if the work is suspended.\r\n\r\n  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;\r\n\r\n  if (nonIdlePendingLanes !== NoLanes) {\r\n    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\r\n\r\n    if (nonIdleUnblockedLanes !== NoLanes) {\r\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\r\n    } else {\r\n      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\r\n\r\n      if (nonIdlePingedLanes !== NoLanes) {\r\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\r\n      }\r\n    }\r\n  } else {\r\n    // The only remaining work is Idle.\r\n    var unblockedLanes = pendingLanes & ~suspendedLanes;\r\n\r\n    if (unblockedLanes !== NoLanes) {\r\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\r\n    } else {\r\n      if (pingedLanes !== NoLanes) {\r\n        nextLanes = getHighestPriorityLanes(pingedLanes);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (nextLanes === NoLanes) {\r\n    // This should only be reachable if we're suspended\r\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\r\n    return NoLanes;\r\n  } // If we're already in the middle of a render, switching lanes will interrupt\r\n  // it and we'll lose our progress. We should only do this if the new lanes are\r\n  // higher priority.\r\n\r\n  if (\r\n    wipLanes !== NoLanes &&\r\n    wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't\r\n    // bother waiting until the root is complete.\r\n    (wipLanes & suspendedLanes) === NoLanes\r\n  ) {\r\n    var nextLane = getHighestPriorityLane(nextLanes);\r\n    var wipLane = getHighestPriorityLane(wipLanes);\r\n\r\n    if (\r\n      // Tests whether the next lane is equal or lower priority than the wip\r\n      // one. This works because the bits decrease in priority as you go left.\r\n      nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The\r\n      // only difference between default updates and transition updates is that\r\n      // default updates do not support refresh transitions.\r\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\r\n    ) {\r\n      // Keep working on the existing in-progress tree. Do not interrupt.\r\n      return wipLanes;\r\n    }\r\n  }\r\n\r\n  if ((nextLanes & InputContinuousLane) !== NoLanes) {\r\n    // When updates are sync by default, we entangle continuous priority updates\r\n    // and default updates, so they render in the same batch. The only reason\r\n    // they use separate lanes is because continuous updates should interrupt\r\n    // transitions, but default updates should not.\r\n    nextLanes |= pendingLanes & DefaultLane;\r\n  } // Check for entangled lanes and add them to the batch.\r\n  //\r\n  // A lane is said to be entangled with another when it's not allowed to render\r\n  // in a batch that does not also include the other lane. Typically we do this\r\n  // when multiple updates have the same source, and we only want to respond to\r\n  // the most recent event from that source.\r\n  //\r\n  // Note that we apply entanglements *after* checking for partial work above.\r\n  // This means that if a lane is entangled during an interleaved event while\r\n  // it's already rendering, we won't interrupt it. This is intentional, since\r\n  // entanglement is usually \"best effort\": we'll try our best to render the\r\n  // lanes in the same batch, but it's not worth throwing out partially\r\n  // completed work in order to do it.\r\n  // TODO: Reconsider this. The counter-argument is that the partial work\r\n  // represents an intermediate state, which we don't want to show to the user.\r\n  // And by spending extra time finishing it, we're increasing the amount of\r\n  // time it takes to show the final state, which is what they are actually\r\n  // waiting for.\r\n  //\r\n  // For those exceptions where entanglement is semantically important, like\r\n  // useMutableSource, we should ensure that there is no partial work at the\r\n  // time we apply the entanglement.\r\n\r\n  var entangledLanes = root.entangledLanes;\r\n\r\n  if (entangledLanes !== NoLanes) {\r\n    var entanglements = root.entanglements;\r\n    var lanes = nextLanes & entangledLanes;\r\n\r\n    while (lanes > 0) {\r\n      var index = pickArbitraryLaneIndex(lanes);\r\n      var lane = 1 << index;\r\n      nextLanes |= entanglements[index];\r\n      lanes &= ~lane;\r\n    }\r\n  }\r\n\r\n  return nextLanes;\r\n}\r\nfunction getMostRecentEventTime(root, lanes) {\r\n  var eventTimes = root.eventTimes;\r\n  var mostRecentEventTime = NoTimestamp;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    var eventTime = eventTimes[index];\r\n\r\n    if (eventTime > mostRecentEventTime) {\r\n      mostRecentEventTime = eventTime;\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n\r\n  return mostRecentEventTime;\r\n}\r\n\r\nfunction computeExpirationTime(lane, currentTime) {\r\n  switch (lane) {\r\n    case SyncLane:\r\n    case InputContinuousHydrationLane:\r\n    case InputContinuousLane:\r\n      // User interactions should expire slightly more quickly.\r\n      //\r\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\r\n      // When we made it larger, a product metric in www regressed, suggesting\r\n      // there's a user interaction that's being starved by a series of\r\n      // synchronous updates. If that theory is correct, the proper solution is\r\n      // to fix the starvation. However, this scenario supports the idea that\r\n      // expiration times are an important safeguard when starvation\r\n      // does happen.\r\n      return currentTime + 250;\r\n\r\n    case DefaultHydrationLane:\r\n    case DefaultLane:\r\n    case TransitionHydrationLane:\r\n    case TransitionLane1:\r\n    case TransitionLane2:\r\n    case TransitionLane3:\r\n    case TransitionLane4:\r\n    case TransitionLane5:\r\n    case TransitionLane6:\r\n    case TransitionLane7:\r\n    case TransitionLane8:\r\n    case TransitionLane9:\r\n    case TransitionLane10:\r\n    case TransitionLane11:\r\n    case TransitionLane12:\r\n    case TransitionLane13:\r\n    case TransitionLane14:\r\n    case TransitionLane15:\r\n    case TransitionLane16:\r\n      return currentTime + 5000;\r\n\r\n    case RetryLane1:\r\n    case RetryLane2:\r\n    case RetryLane3:\r\n    case RetryLane4:\r\n    case RetryLane5:\r\n      // TODO: Retries should be allowed to expire if they are CPU bound for\r\n      // too long, but when I made this change it caused a spike in browser\r\n      // crashes. There must be some other underlying bug; not super urgent but\r\n      // ideally should figure out why and fix it. Unfortunately we don't have\r\n      // a repro for the crashes, only detected via production metrics.\r\n      return NoTimestamp;\r\n\r\n    case SelectiveHydrationLane:\r\n    case IdleHydrationLane:\r\n    case IdleLane:\r\n    case OffscreenLane:\r\n      // Anything idle priority or lower should never expire.\r\n      return NoTimestamp;\r\n\r\n    default:\r\n      {\r\n        error(\"Should have found matching lanes. This is a bug in React.\");\r\n      }\r\n\r\n      return NoTimestamp;\r\n  }\r\n}\r\n\r\nfunction markStarvedLanesAsExpired(root, currentTime) {\r\n  // TODO: This gets called every time we yield. We can optimize by storing\r\n  // the earliest expiration time on the root. Then use that to quickly bail out\r\n  // of this function.\r\n  var pendingLanes = root.pendingLanes;\r\n  var suspendedLanes = root.suspendedLanes;\r\n  var pingedLanes = root.pingedLanes;\r\n  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their\r\n  // expiration time. If so, we'll assume the update is being starved and mark\r\n  // it as expired to force it to finish.\r\n\r\n  var lanes = pendingLanes;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    var expirationTime = expirationTimes[index];\r\n\r\n    if (expirationTime === NoTimestamp) {\r\n      // Found a pending lane with no expiration time. If it's not suspended, or\r\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\r\n      // using the current time.\r\n      if (\r\n        (lane & suspendedLanes) === NoLanes ||\r\n        (lane & pingedLanes) !== NoLanes\r\n      ) {\r\n        // Assumes timestamps are monotonically increasing.\r\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\r\n      }\r\n    } else if (expirationTime <= currentTime) {\r\n      // This lane expired\r\n      root.expiredLanes |= lane;\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n} // This returns the highest priority pending lanes regardless of whether they\r\nfunction getLanesToRetrySynchronouslyOnError(root) {\r\n  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\r\n\r\n  if (everythingButOffscreen !== NoLanes) {\r\n    return everythingButOffscreen;\r\n  }\r\n\r\n  if (everythingButOffscreen & OffscreenLane) {\r\n    return OffscreenLane;\r\n  }\r\n\r\n  return NoLanes;\r\n}\r\nfunction includesSyncLane(lanes) {\r\n  return (lanes & SyncLane) !== NoLanes;\r\n}\r\nfunction includesNonIdleWork(lanes) {\r\n  return (lanes & NonIdleLanes) !== NoLanes;\r\n}\r\nfunction includesOnlyRetries(lanes) {\r\n  return (lanes & RetryLanes) === lanes;\r\n}\r\nfunction includesOnlyNonUrgentLanes(lanes) {\r\n  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;\r\n  return (lanes & UrgentLanes) === NoLanes;\r\n}\r\nfunction includesOnlyTransitions(lanes) {\r\n  return (lanes & TransitionLanes) === lanes;\r\n}\r\nfunction includesBlockingLane(root, lanes) {\r\n  var SyncDefaultLanes =\r\n    InputContinuousHydrationLane |\r\n    InputContinuousLane |\r\n    DefaultHydrationLane |\r\n    DefaultLane;\r\n  return (lanes & SyncDefaultLanes) !== NoLanes;\r\n}\r\nfunction includesExpiredLane(root, lanes) {\r\n  // This is a separate check from includesBlockingLane because a lane can\r\n  // expire after a render has already started.\r\n  return (lanes & root.expiredLanes) !== NoLanes;\r\n}\r\nfunction isTransitionLane(lane) {\r\n  return (lane & TransitionLanes) !== NoLanes;\r\n}\r\nfunction claimNextTransitionLane() {\r\n  // Cycle through the lanes, assigning each new transition to the next lane.\r\n  // In most cases, this means every transition gets its own lane, until we\r\n  // run out of lanes and cycle back to the beginning.\r\n  var lane = nextTransitionLane;\r\n  nextTransitionLane <<= 1;\r\n\r\n  if ((nextTransitionLane & TransitionLanes) === NoLanes) {\r\n    nextTransitionLane = TransitionLane1;\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction claimNextRetryLane() {\r\n  var lane = nextRetryLane;\r\n  nextRetryLane <<= 1;\r\n\r\n  if ((nextRetryLane & RetryLanes) === NoLanes) {\r\n    nextRetryLane = RetryLane1;\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction getHighestPriorityLane(lanes) {\r\n  return lanes & -lanes;\r\n}\r\nfunction pickArbitraryLane(lanes) {\r\n  // This wrapper function gets inlined. Only exists so to communicate that it\r\n  // doesn't matter which bit is selected; you can pick any bit without\r\n  // affecting the algorithms where its used. Here I'm using\r\n  // getHighestPriorityLane because it requires the fewest operations.\r\n  return getHighestPriorityLane(lanes);\r\n}\r\n\r\nfunction pickArbitraryLaneIndex(lanes) {\r\n  return 31 - clz32(lanes);\r\n}\r\n\r\nfunction laneToIndex(lane) {\r\n  return pickArbitraryLaneIndex(lane);\r\n}\r\n\r\nfunction includesSomeLane(a, b) {\r\n  return (a & b) !== NoLanes;\r\n}\r\nfunction isSubsetOfLanes(set, subset) {\r\n  return (set & subset) === subset;\r\n}\r\nfunction mergeLanes(a, b) {\r\n  return a | b;\r\n}\r\nfunction removeLanes(set, subset) {\r\n  return set & ~subset;\r\n}\r\nfunction intersectLanes(a, b) {\r\n  return a & b;\r\n} // Seems redundant, but it changes the type from a single lane (used for\r\n// updates) to a group of lanes (used for flushing work).\r\n\r\nfunction laneToLanes(lane) {\r\n  return lane;\r\n}\r\nfunction createLaneMap(initial) {\r\n  // Intentionally pushing one by one.\r\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\r\n  var laneMap = [];\r\n\r\n  for (var i = 0; i < TotalLanes; i++) {\r\n    laneMap.push(initial);\r\n  }\r\n\r\n  return laneMap;\r\n}\r\nfunction markRootUpdated(root, updateLane, eventTime) {\r\n  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update\r\n  // could unblock them. Clear the suspended lanes so that we can try rendering\r\n  // them again.\r\n  //\r\n  // TODO: We really only need to unsuspend only lanes that are in the\r\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\r\n  // path. This would exclude suspended updates in an unrelated sibling tree,\r\n  // since there's no way for this update to unblock it.\r\n  //\r\n  // We don't do this if the incoming update is idle, because we never process\r\n  // idle updates until after all the regular updates have finished; there's no\r\n  // way it could unblock a transition.\r\n\r\n  if (updateLane !== IdleLane) {\r\n    root.suspendedLanes = NoLanes;\r\n    root.pingedLanes = NoLanes;\r\n  }\r\n\r\n  var eventTimes = root.eventTimes;\r\n  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most\r\n  // recent event, and we assume time is monotonically increasing.\r\n\r\n  eventTimes[index] = eventTime;\r\n}\r\nfunction markRootSuspended(root, suspendedLanes) {\r\n  root.suspendedLanes |= suspendedLanes;\r\n  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.\r\n\r\n  var expirationTimes = root.expirationTimes;\r\n  var lanes = suspendedLanes;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    expirationTimes[index] = NoTimestamp;\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction markRootPinged(root, pingedLanes, eventTime) {\r\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\r\n}\r\nfunction markRootFinished(root, remainingLanes) {\r\n  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\r\n  root.pendingLanes = remainingLanes; // Let's try everything again\r\n\r\n  root.suspendedLanes = NoLanes;\r\n  root.pingedLanes = NoLanes;\r\n  root.expiredLanes &= remainingLanes;\r\n  root.mutableReadLanes &= remainingLanes;\r\n  root.entangledLanes &= remainingLanes;\r\n  var entanglements = root.entanglements;\r\n  var eventTimes = root.eventTimes;\r\n  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work\r\n\r\n  var lanes = noLongerPendingLanes;\r\n\r\n  while (lanes > 0) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n    entanglements[index] = NoLanes;\r\n    eventTimes[index] = NoTimestamp;\r\n    expirationTimes[index] = NoTimestamp;\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction markRootEntangled(root, entangledLanes) {\r\n  // In addition to entangling each of the given lanes with each other, we also\r\n  // have to consider _transitive_ entanglements. For each lane that is already\r\n  // entangled with *any* of the given lanes, that lane is now transitively\r\n  // entangled with *all* the given lanes.\r\n  //\r\n  // Translated: If C is entangled with A, then entangling A with B also\r\n  // entangles C with B.\r\n  //\r\n  // If this is hard to grasp, it might help to intentionally break this\r\n  // function and look at the tests that fail in ReactTransition-test.js. Try\r\n  // commenting out one of the conditions below.\r\n  var rootEntangledLanes = (root.entangledLanes |= entangledLanes);\r\n  var entanglements = root.entanglements;\r\n  var lanes = rootEntangledLanes;\r\n\r\n  while (lanes) {\r\n    var index = pickArbitraryLaneIndex(lanes);\r\n    var lane = 1 << index;\r\n\r\n    if (\r\n      // Is this one of the newly entangled lanes?\r\n      (lane & entangledLanes) | // Is this lane transitively entangled with the newly entangled lanes?\r\n      (entanglements[index] & entangledLanes)\r\n    ) {\r\n      entanglements[index] |= entangledLanes;\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction getBumpedLaneForHydration(root, renderLanes) {\r\n  var renderLane = getHighestPriorityLane(renderLanes);\r\n  var lane;\r\n\r\n  switch (renderLane) {\r\n    case InputContinuousLane:\r\n      lane = InputContinuousHydrationLane;\r\n      break;\r\n\r\n    case DefaultLane:\r\n      lane = DefaultHydrationLane;\r\n      break;\r\n\r\n    case TransitionLane1:\r\n    case TransitionLane2:\r\n    case TransitionLane3:\r\n    case TransitionLane4:\r\n    case TransitionLane5:\r\n    case TransitionLane6:\r\n    case TransitionLane7:\r\n    case TransitionLane8:\r\n    case TransitionLane9:\r\n    case TransitionLane10:\r\n    case TransitionLane11:\r\n    case TransitionLane12:\r\n    case TransitionLane13:\r\n    case TransitionLane14:\r\n    case TransitionLane15:\r\n    case TransitionLane16:\r\n    case RetryLane1:\r\n    case RetryLane2:\r\n    case RetryLane3:\r\n    case RetryLane4:\r\n    case RetryLane5:\r\n      lane = TransitionHydrationLane;\r\n      break;\r\n\r\n    case IdleLane:\r\n      lane = IdleHydrationLane;\r\n      break;\r\n\r\n    default:\r\n      // Everything else is already either a hydration lane, or shouldn't\r\n      // be retried at a hydration lane.\r\n      lane = NoLane;\r\n      break;\r\n  } // Check if the lane we chose is suspended. If so, that indicates that we\r\n  // already attempted and failed to hydrate at that level. Also check if we're\r\n  // already rendering that lane, which is rare but could happen.\r\n\r\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\r\n    // Give up trying to hydrate and fall back to client render.\r\n    return NoLane;\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction addFiberToLanesMap(root, fiber, lanes) {\r\n  if (!isDevToolsPresent) {\r\n    return;\r\n  }\r\n\r\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\r\n\r\n  while (lanes > 0) {\r\n    var index = laneToIndex(lanes);\r\n    var lane = 1 << index;\r\n    var updaters = pendingUpdatersLaneMap[index];\r\n    updaters.add(fiber);\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction movePendingFibersToMemoized(root, lanes) {\r\n  if (!isDevToolsPresent) {\r\n    return;\r\n  }\r\n\r\n  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\r\n  var memoizedUpdaters = root.memoizedUpdaters;\r\n\r\n  while (lanes > 0) {\r\n    var index = laneToIndex(lanes);\r\n    var lane = 1 << index;\r\n    var updaters = pendingUpdatersLaneMap[index];\r\n\r\n    if (updaters.size > 0) {\r\n      updaters.forEach(function(fiber) {\r\n        var alternate = fiber.alternate;\r\n\r\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\r\n          memoizedUpdaters.add(fiber);\r\n        }\r\n      });\r\n      updaters.clear();\r\n    }\r\n\r\n    lanes &= ~lane;\r\n  }\r\n}\r\nfunction getTransitionsForLanes(root, lanes) {\r\n  {\r\n    return null;\r\n  }\r\n}\r\n\r\nvar DiscreteEventPriority = SyncLane;\r\nvar ContinuousEventPriority = InputContinuousLane;\r\nvar DefaultEventPriority = DefaultLane;\r\nvar IdleEventPriority = IdleLane;\r\nvar currentUpdatePriority = NoLane;\r\nfunction getCurrentUpdatePriority() {\r\n  return currentUpdatePriority;\r\n}\r\nfunction setCurrentUpdatePriority(newPriority) {\r\n  currentUpdatePriority = newPriority;\r\n}\r\nfunction higherEventPriority(a, b) {\r\n  return a !== 0 && a < b ? a : b;\r\n}\r\nfunction lowerEventPriority(a, b) {\r\n  return a === 0 || a > b ? a : b;\r\n}\r\nfunction isHigherEventPriority(a, b) {\r\n  return a !== 0 && a < b;\r\n}\r\nfunction lanesToEventPriority(lanes) {\r\n  var lane = getHighestPriorityLane(lanes);\r\n\r\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\r\n    return DiscreteEventPriority;\r\n  }\r\n\r\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\r\n    return ContinuousEventPriority;\r\n  }\r\n\r\n  if (includesNonIdleWork(lane)) {\r\n    return DefaultEventPriority;\r\n  }\r\n\r\n  return IdleEventPriority;\r\n}\r\n\r\n// Renderers that don't support hydration\r\n// can re-export everything from this module.\r\nfunction shim() {\r\n  throw new Error(\r\n    \"The current renderer does not support hydration. \" +\r\n      \"This error is likely caused by a bug in React. \" +\r\n      \"Please file an issue.\"\r\n  );\r\n} // Hydration (when unsupported)\r\nvar isSuspenseInstancePending = shim;\r\nvar isSuspenseInstanceFallback = shim;\r\nvar getSuspenseInstanceFallbackErrorDetails = shim;\r\nvar registerSuspenseInstanceRetry = shim;\r\nvar hydrateTextInstance = shim;\r\nvar clearSuspenseBoundary = shim;\r\nvar clearSuspenseBoundaryFromContainer = shim;\r\nvar errorHydratingContainer = shim;\r\n\r\nvar getViewConfigForType =\r\n  ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get;\r\nvar UPDATE_SIGNAL = {};\r\n\r\n{\r\n  Object.freeze(UPDATE_SIGNAL);\r\n} // Counter for uniquely identifying views.\r\n// % 10 === 1 means it is a rootTag.\r\n// % 2 === 0 means it is a Fabric tag.\r\n\r\nvar nextReactTag = 3;\r\n\r\nfunction allocateTag() {\r\n  var tag = nextReactTag;\r\n\r\n  if (tag % 10 === 1) {\r\n    tag += 2;\r\n  }\r\n\r\n  nextReactTag = tag + 2;\r\n  return tag;\r\n}\r\n\r\nfunction recursivelyUncacheFiberNode(node) {\r\n  if (typeof node === \"number\") {\r\n    // Leaf node (eg text)\r\n    uncacheFiberNode(node);\r\n  } else {\r\n    uncacheFiberNode(node._nativeTag);\r\n\r\n    node._children.forEach(recursivelyUncacheFiberNode);\r\n  }\r\n}\r\nfunction appendInitialChild(parentInstance, child) {\r\n  parentInstance._children.push(child);\r\n}\r\nfunction createInstance(\r\n  type,\r\n  props,\r\n  rootContainerInstance,\r\n  hostContext,\r\n  internalInstanceHandle\r\n) {\r\n  var tag = allocateTag();\r\n  var viewConfig = getViewConfigForType(type);\r\n\r\n  {\r\n    for (var key in viewConfig.validAttributes) {\r\n      if (props.hasOwnProperty(key)) {\r\n        ReactNativePrivateInterface.deepFreezeAndThrowOnMutationInDev(\r\n          props[key]\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var updatePayload = create(props, viewConfig.validAttributes);\r\n  ReactNativePrivateInterface.UIManager.createView(\r\n    tag, // reactTag\r\n    viewConfig.uiViewClassName, // viewName\r\n    rootContainerInstance, // rootTag\r\n    updatePayload // props\r\n  );\r\n  var component = new ReactNativeFiberHostComponent(\r\n    tag,\r\n    viewConfig,\r\n    internalInstanceHandle\r\n  );\r\n  precacheFiberNode(internalInstanceHandle, tag);\r\n  updateFiberProps(tag, props); // Not sure how to avoid this cast. Flow is okay if the component is defined\r\n  // in the same file but if it's external it can't see the types.\r\n\r\n  return component;\r\n}\r\nfunction createTextInstance(\r\n  text,\r\n  rootContainerInstance,\r\n  hostContext,\r\n  internalInstanceHandle\r\n) {\r\n  if (!hostContext.isInAParentText) {\r\n    throw new Error(\"Text strings must be rendered within a <Text> component.\");\r\n  }\r\n\r\n  var tag = allocateTag();\r\n  ReactNativePrivateInterface.UIManager.createView(\r\n    tag, // reactTag\r\n    \"RCTRawText\", // viewName\r\n    rootContainerInstance, // rootTag\r\n    {\r\n      text: text\r\n    } // props\r\n  );\r\n  precacheFiberNode(internalInstanceHandle, tag);\r\n  return tag;\r\n}\r\nfunction finalizeInitialChildren(\r\n  parentInstance,\r\n  type,\r\n  props,\r\n  rootContainerInstance,\r\n  hostContext\r\n) {\r\n  // Don't send a no-op message over the bridge.\r\n  if (parentInstance._children.length === 0) {\r\n    return false;\r\n  } // Map from child objects to native tags.\r\n  // Either way we need to pass a copy of the Array to prevent it from being frozen.\r\n\r\n  var nativeTags = parentInstance._children.map(function(child) {\r\n    return typeof child === \"number\"\r\n      ? child // Leaf node (eg text)\r\n      : child._nativeTag;\r\n  });\r\n\r\n  ReactNativePrivateInterface.UIManager.setChildren(\r\n    parentInstance._nativeTag, // containerTag\r\n    nativeTags // reactTags\r\n  );\r\n  return false;\r\n}\r\nfunction getRootHostContext(rootContainerInstance) {\r\n  return {\r\n    isInAParentText: false\r\n  };\r\n}\r\nfunction getChildHostContext(parentHostContext, type, rootContainerInstance) {\r\n  var prevIsInAParentText = parentHostContext.isInAParentText;\r\n  var isInAParentText =\r\n    type === \"AndroidTextInput\" || // Android\r\n    type === \"RCTMultilineTextInputView\" || // iOS\r\n    type === \"RCTSinglelineTextInputView\" || // iOS\r\n    type === \"RCTText\" ||\r\n    type === \"RCTVirtualText\";\r\n\r\n  if (prevIsInAParentText !== isInAParentText) {\r\n    return {\r\n      isInAParentText: isInAParentText\r\n    };\r\n  } else {\r\n    return parentHostContext;\r\n  }\r\n}\r\nfunction getPublicInstance(instance) {\r\n  return instance;\r\n}\r\nfunction prepareForCommit(containerInfo) {\r\n  // Noop\r\n  return null;\r\n}\r\nfunction prepareUpdate(\r\n  instance,\r\n  type,\r\n  oldProps,\r\n  newProps,\r\n  rootContainerInstance,\r\n  hostContext\r\n) {\r\n  return UPDATE_SIGNAL;\r\n}\r\nfunction resetAfterCommit(containerInfo) {\r\n  // Noop\r\n}\r\nvar scheduleTimeout = setTimeout;\r\nvar cancelTimeout = clearTimeout;\r\nvar noTimeout = -1;\r\nfunction shouldSetTextContent(type, props) {\r\n  // TODO (bvaughn) Revisit this decision.\r\n  // Always returning false simplifies the createInstance() implementation,\r\n  // But creates an additional child Fiber for raw text children.\r\n  // No additional native views are created though.\r\n  // It's not clear to me which is better so I'm deferring for now.\r\n  // More context @ github.com/facebook/react/pull/8560#discussion_r92111303\r\n  return false;\r\n}\r\nfunction getCurrentEventPriority() {\r\n  return DefaultEventPriority;\r\n} // -------------------\r\nfunction appendChild(parentInstance, child) {\r\n  var childTag = typeof child === \"number\" ? child : child._nativeTag;\r\n  var children = parentInstance._children;\r\n  var index = children.indexOf(child);\r\n\r\n  if (index >= 0) {\r\n    children.splice(index, 1);\r\n    children.push(child);\r\n    ReactNativePrivateInterface.UIManager.manageChildren(\r\n      parentInstance._nativeTag, // containerTag\r\n      [index], // moveFromIndices\r\n      [children.length - 1], // moveToIndices\r\n      [], // addChildReactTags\r\n      [], // addAtIndices\r\n      [] // removeAtIndices\r\n    );\r\n  } else {\r\n    children.push(child);\r\n    ReactNativePrivateInterface.UIManager.manageChildren(\r\n      parentInstance._nativeTag, // containerTag\r\n      [], // moveFromIndices\r\n      [], // moveToIndices\r\n      [childTag], // addChildReactTags\r\n      [children.length - 1], // addAtIndices\r\n      [] // removeAtIndices\r\n    );\r\n  }\r\n}\r\nfunction appendChildToContainer(parentInstance, child) {\r\n  var childTag = typeof child === \"number\" ? child : child._nativeTag;\r\n  ReactNativePrivateInterface.UIManager.setChildren(\r\n    parentInstance, // containerTag\r\n    [childTag] // reactTags\r\n  );\r\n}\r\nfunction commitTextUpdate(textInstance, oldText, newText) {\r\n  ReactNativePrivateInterface.UIManager.updateView(\r\n    textInstance, // reactTag\r\n    \"RCTRawText\", // viewName\r\n    {\r\n      text: newText\r\n    } // props\r\n  );\r\n}\r\nfunction commitUpdate(\r\n  instance,\r\n  updatePayloadTODO,\r\n  type,\r\n  oldProps,\r\n  newProps,\r\n  internalInstanceHandle\r\n) {\r\n  var viewConfig = instance.viewConfig;\r\n  updateFiberProps(instance._nativeTag, newProps);\r\n  var updatePayload = diff(oldProps, newProps, viewConfig.validAttributes); // Avoid the overhead of bridge calls if there's no update.\r\n  // This is an expensive no-op for Android, and causes an unnecessary\r\n  // view invalidation for certain components (eg RCTTextInput) on iOS.\r\n\r\n  if (updatePayload != null) {\r\n    ReactNativePrivateInterface.UIManager.updateView(\r\n      instance._nativeTag, // reactTag\r\n      viewConfig.uiViewClassName, // viewName\r\n      updatePayload // props\r\n    );\r\n  }\r\n}\r\nfunction insertBefore(parentInstance, child, beforeChild) {\r\n  var children = parentInstance._children;\r\n  var index = children.indexOf(child); // Move existing child or add new child?\r\n\r\n  if (index >= 0) {\r\n    children.splice(index, 1);\r\n    var beforeChildIndex = children.indexOf(beforeChild);\r\n    children.splice(beforeChildIndex, 0, child);\r\n    ReactNativePrivateInterface.UIManager.manageChildren(\r\n      parentInstance._nativeTag, // containerID\r\n      [index], // moveFromIndices\r\n      [beforeChildIndex], // moveToIndices\r\n      [], // addChildReactTags\r\n      [], // addAtIndices\r\n      [] // removeAtIndices\r\n    );\r\n  } else {\r\n    var _beforeChildIndex = children.indexOf(beforeChild);\r\n\r\n    children.splice(_beforeChildIndex, 0, child);\r\n    var childTag = typeof child === \"number\" ? child : child._nativeTag;\r\n    ReactNativePrivateInterface.UIManager.manageChildren(\r\n      parentInstance._nativeTag, // containerID\r\n      [], // moveFromIndices\r\n      [], // moveToIndices\r\n      [childTag], // addChildReactTags\r\n      [_beforeChildIndex], // addAtIndices\r\n      [] // removeAtIndices\r\n    );\r\n  }\r\n}\r\nfunction insertInContainerBefore(parentInstance, child, beforeChild) {\r\n  // TODO (bvaughn): Remove this check when...\r\n  // We create a wrapper object for the container in ReactNative render()\r\n  // Or we refactor to remove wrapper objects entirely.\r\n  // For more info on pros/cons see PR #8560 description.\r\n  if (typeof parentInstance === \"number\") {\r\n    throw new Error(\"Container does not support insertBefore operation\");\r\n  }\r\n}\r\nfunction removeChild(parentInstance, child) {\r\n  recursivelyUncacheFiberNode(child);\r\n  var children = parentInstance._children;\r\n  var index = children.indexOf(child);\r\n  children.splice(index, 1);\r\n  ReactNativePrivateInterface.UIManager.manageChildren(\r\n    parentInstance._nativeTag, // containerID\r\n    [], // moveFromIndices\r\n    [], // moveToIndices\r\n    [], // addChildReactTags\r\n    [], // addAtIndices\r\n    [index] // removeAtIndices\r\n  );\r\n}\r\nfunction removeChildFromContainer(parentInstance, child) {\r\n  recursivelyUncacheFiberNode(child);\r\n  ReactNativePrivateInterface.UIManager.manageChildren(\r\n    parentInstance, // containerID\r\n    [], // moveFromIndices\r\n    [], // moveToIndices\r\n    [], // addChildReactTags\r\n    [], // addAtIndices\r\n    [0] // removeAtIndices\r\n  );\r\n}\r\nfunction resetTextContent(instance) {\r\n  // Noop\r\n}\r\nfunction hideInstance(instance) {\r\n  var viewConfig = instance.viewConfig;\r\n  var updatePayload = create(\r\n    {\r\n      style: {\r\n        display: \"none\"\r\n      }\r\n    },\r\n    viewConfig.validAttributes\r\n  );\r\n  ReactNativePrivateInterface.UIManager.updateView(\r\n    instance._nativeTag,\r\n    viewConfig.uiViewClassName,\r\n    updatePayload\r\n  );\r\n}\r\nfunction hideTextInstance(textInstance) {\r\n  throw new Error(\"Not yet implemented.\");\r\n}\r\nfunction unhideInstance(instance, props) {\r\n  var viewConfig = instance.viewConfig;\r\n  var updatePayload = diff(\r\n    assign({}, props, {\r\n      style: [\r\n        props.style,\r\n        {\r\n          display: \"none\"\r\n        }\r\n      ]\r\n    }),\r\n    props,\r\n    viewConfig.validAttributes\r\n  );\r\n  ReactNativePrivateInterface.UIManager.updateView(\r\n    instance._nativeTag,\r\n    viewConfig.uiViewClassName,\r\n    updatePayload\r\n  );\r\n}\r\nfunction clearContainer(container) {\r\n  // TODO Implement this for React Native\r\n  // UIManager does not expose a \"remove all\" type method.\r\n}\r\nfunction unhideTextInstance(textInstance, text) {\r\n  throw new Error(\"Not yet implemented.\");\r\n}\r\nfunction preparePortalMount(portalInstance) {\r\n  // noop\r\n}\r\n\r\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\r\n  {\r\n    var ownerName = null;\r\n\r\n    if (ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\nvar componentFrameCache;\r\n\r\n{\r\n  var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\r\n  componentFrameCache = new PossiblyWeakMap();\r\n}\r\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\nfunction describeComponentFrame(name, source, ownerName) {\r\n  var sourceInfo = \"\";\r\n\r\n  if (source) {\r\n    var path = source.fileName;\r\n    var fileName = path.replace(BEFORE_SLASH_RE, \"\"); // In DEV, include code for a common special case:\r\n    // prefer \"folder/index.js\" instead of just \"index.js\".\r\n\r\n    if (/^index\\./.test(fileName)) {\r\n      var match = path.match(BEFORE_SLASH_RE);\r\n\r\n      if (match) {\r\n        var pathBeforeSlash = match[1];\r\n\r\n        if (pathBeforeSlash) {\r\n          var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, \"\");\r\n          fileName = folderName + \"/\" + fileName;\r\n        }\r\n      }\r\n    }\r\n\r\n    sourceInfo = \" (at \" + fileName + \":\" + source.lineNumber + \")\";\r\n  } else if (ownerName) {\r\n    sourceInfo = \" (created by \" + ownerName + \")\";\r\n  }\r\n\r\n  return \"\\n    in \" + (name || \"Unknown\") + sourceInfo;\r\n}\r\n\r\nfunction describeClassComponentFrame(ctor, source, ownerFn) {\r\n  {\r\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\r\n  }\r\n}\r\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\r\n  {\r\n    if (!fn) {\r\n      return \"\";\r\n    }\r\n\r\n    var name = fn.displayName || fn.name || null;\r\n    var ownerName = null;\r\n\r\n    if (ownerFn) {\r\n      ownerName = ownerFn.displayName || ownerFn.name || null;\r\n    }\r\n\r\n    return describeComponentFrame(name, source, ownerName);\r\n  }\r\n}\r\n\r\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\r\n  if (type == null) {\r\n    return \"\";\r\n  }\r\n\r\n  if (typeof type === \"function\") {\r\n    {\r\n      return describeFunctionComponentFrame(type, source, ownerFn);\r\n    }\r\n  }\r\n\r\n  if (typeof type === \"string\") {\r\n    return describeBuiltInComponentFrame(type, source, ownerFn);\r\n  }\r\n\r\n  switch (type) {\r\n    case REACT_SUSPENSE_TYPE:\r\n      return describeBuiltInComponentFrame(\"Suspense\", source, ownerFn);\r\n\r\n    case REACT_SUSPENSE_LIST_TYPE:\r\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, ownerFn);\r\n  }\r\n\r\n  if (typeof type === \"object\") {\r\n    switch (type.$$typeof) {\r\n      case REACT_FORWARD_REF_TYPE:\r\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\r\n\r\n      case REACT_MEMO_TYPE:\r\n        // Memo may contain any component type so we recursively resolve it.\r\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\r\n\r\n      case REACT_LAZY_TYPE: {\r\n        var lazyComponent = type;\r\n        var payload = lazyComponent._payload;\r\n        var init = lazyComponent._init;\r\n\r\n        try {\r\n          // Lazy may contain any component type so we recursively resolve it.\r\n          return describeUnknownElementTypeFrameInDEV(\r\n            init(payload),\r\n            source,\r\n            ownerFn\r\n          );\r\n        } catch (x) {}\r\n      }\r\n    }\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nvar loggedTypeFailures = {};\r\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n\r\nfunction setCurrentlyValidatingElement(element) {\r\n  {\r\n    if (element) {\r\n      var owner = element._owner;\r\n      var stack = describeUnknownElementTypeFrameInDEV(\r\n        element.type,\r\n        element._source,\r\n        owner ? owner.type : null\r\n      );\r\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\r\n    } else {\r\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\r\n  {\r\n    // $FlowFixMe This is okay but Flow doesn't know it.\r\n    var has = Function.call.bind(hasOwnProperty);\r\n\r\n    for (var typeSpecName in typeSpecs) {\r\n      if (has(typeSpecs, typeSpecName)) {\r\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\r\n        // fail the render phase where it didn't fail before. So we log it.\r\n        // After these have been cleaned up, we'll let them throw.\r\n\r\n        try {\r\n          // This is intentionally an invariant that gets caught. It's the same\r\n          // behavior as without this statement except with a better message.\r\n          if (typeof typeSpecs[typeSpecName] !== \"function\") {\r\n            // eslint-disable-next-line react-internal/prod-error-codes\r\n            var err = Error(\r\n              (componentName || \"React class\") +\r\n                \": \" +\r\n                location +\r\n                \" type `\" +\r\n                typeSpecName +\r\n                \"` is invalid; \" +\r\n                \"it must be a function, usually from the `prop-types` package, but received `\" +\r\n                typeof typeSpecs[typeSpecName] +\r\n                \"`.\" +\r\n                \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\"\r\n            );\r\n            err.name = \"Invariant Violation\";\r\n            throw err;\r\n          }\r\n\r\n          error$1 = typeSpecs[typeSpecName](\r\n            values,\r\n            typeSpecName,\r\n            componentName,\r\n            location,\r\n            null,\r\n            \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"\r\n          );\r\n        } catch (ex) {\r\n          error$1 = ex;\r\n        }\r\n\r\n        if (error$1 && !(error$1 instanceof Error)) {\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error(\r\n            \"%s: type specification of %s\" +\r\n              \" `%s` is invalid; the type checker \" +\r\n              \"function must return `null` or an `Error` but returned a %s. \" +\r\n              \"You may have forgotten to pass an argument to the type checker \" +\r\n              \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" +\r\n              \"shape all require an argument).\",\r\n            componentName || \"React class\",\r\n            location,\r\n            typeSpecName,\r\n            typeof error$1\r\n          );\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n\r\n        if (\r\n          error$1 instanceof Error &&\r\n          !(error$1.message in loggedTypeFailures)\r\n        ) {\r\n          // Only monitor this failure once because there tends to be a lot of the\r\n          // same error.\r\n          loggedTypeFailures[error$1.message] = true;\r\n          setCurrentlyValidatingElement(element);\r\n\r\n          error(\"Failed %s type: %s\", location, error$1.message);\r\n\r\n          setCurrentlyValidatingElement(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar valueStack = [];\r\nvar fiberStack;\r\n\r\n{\r\n  fiberStack = [];\r\n}\r\n\r\nvar index = -1;\r\n\r\nfunction createCursor(defaultValue) {\r\n  return {\r\n    current: defaultValue\r\n  };\r\n}\r\n\r\nfunction pop(cursor, fiber) {\r\n  if (index < 0) {\r\n    {\r\n      error(\"Unexpected pop.\");\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  {\r\n    if (fiber !== fiberStack[index]) {\r\n      error(\"Unexpected Fiber popped.\");\r\n    }\r\n  }\r\n\r\n  cursor.current = valueStack[index];\r\n  valueStack[index] = null;\r\n\r\n  {\r\n    fiberStack[index] = null;\r\n  }\r\n\r\n  index--;\r\n}\r\n\r\nfunction push(cursor, value, fiber) {\r\n  index++;\r\n  valueStack[index] = cursor.current;\r\n\r\n  {\r\n    fiberStack[index] = fiber;\r\n  }\r\n\r\n  cursor.current = value;\r\n}\r\n\r\nvar warnedAboutMissingGetChildContext;\r\n\r\n{\r\n  warnedAboutMissingGetChildContext = {};\r\n}\r\n\r\nvar emptyContextObject = {};\r\n\r\n{\r\n  Object.freeze(emptyContextObject);\r\n} // A cursor to the current merged context object on the stack.\r\n\r\nvar contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.\r\n\r\nvar didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.\r\n// We use this to get access to the parent context after we have already\r\n// pushed the next context provider, and now need to merge their contexts.\r\n\r\nvar previousContext = emptyContextObject;\r\n\r\nfunction getUnmaskedContext(\r\n  workInProgress,\r\n  Component,\r\n  didPushOwnContextIfProvider\r\n) {\r\n  {\r\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\r\n      // If the fiber is a context provider itself, when we read its context\r\n      // we may have already pushed its own child context on the stack. A context\r\n      // provider should not \"see\" its own child context. Therefore we read the\r\n      // previous (parent) context instead for a context provider.\r\n      return previousContext;\r\n    }\r\n\r\n    return contextStackCursor.current;\r\n  }\r\n}\r\n\r\nfunction cacheContext(workInProgress, unmaskedContext, maskedContext) {\r\n  {\r\n    var instance = workInProgress.stateNode;\r\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\r\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\r\n  }\r\n}\r\n\r\nfunction getMaskedContext(workInProgress, unmaskedContext) {\r\n  {\r\n    var type = workInProgress.type;\r\n    var contextTypes = type.contextTypes;\r\n\r\n    if (!contextTypes) {\r\n      return emptyContextObject;\r\n    } // Avoid recreating masked context unless unmasked context has changed.\r\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\r\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\r\n\r\n    var instance = workInProgress.stateNode;\r\n\r\n    if (\r\n      instance &&\r\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\r\n    ) {\r\n      return instance.__reactInternalMemoizedMaskedChildContext;\r\n    }\r\n\r\n    var context = {};\r\n\r\n    for (var key in contextTypes) {\r\n      context[key] = unmaskedContext[key];\r\n    }\r\n\r\n    {\r\n      var name = getComponentNameFromFiber(workInProgress) || \"Unknown\";\r\n      checkPropTypes(contextTypes, context, \"context\", name);\r\n    } // Cache unmasked context so we can avoid recreating masked context unless necessary.\r\n    // Context is created before the class component is instantiated so check for instance.\r\n\r\n    if (instance) {\r\n      cacheContext(workInProgress, unmaskedContext, context);\r\n    }\r\n\r\n    return context;\r\n  }\r\n}\r\n\r\nfunction hasContextChanged() {\r\n  {\r\n    return didPerformWorkStackCursor.current;\r\n  }\r\n}\r\n\r\nfunction isContextProvider(type) {\r\n  {\r\n    var childContextTypes = type.childContextTypes;\r\n    return childContextTypes !== null && childContextTypes !== undefined;\r\n  }\r\n}\r\n\r\nfunction popContext(fiber) {\r\n  {\r\n    pop(didPerformWorkStackCursor, fiber);\r\n    pop(contextStackCursor, fiber);\r\n  }\r\n}\r\n\r\nfunction popTopLevelContextObject(fiber) {\r\n  {\r\n    pop(didPerformWorkStackCursor, fiber);\r\n    pop(contextStackCursor, fiber);\r\n  }\r\n}\r\n\r\nfunction pushTopLevelContextObject(fiber, context, didChange) {\r\n  {\r\n    if (contextStackCursor.current !== emptyContextObject) {\r\n      throw new Error(\r\n        \"Unexpected context found on stack. \" +\r\n          \"This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    push(contextStackCursor, context, fiber);\r\n    push(didPerformWorkStackCursor, didChange, fiber);\r\n  }\r\n}\r\n\r\nfunction processChildContext(fiber, type, parentContext) {\r\n  {\r\n    var instance = fiber.stateNode;\r\n    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.\r\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\r\n\r\n    if (typeof instance.getChildContext !== \"function\") {\r\n      {\r\n        var componentName = getComponentNameFromFiber(fiber) || \"Unknown\";\r\n\r\n        if (!warnedAboutMissingGetChildContext[componentName]) {\r\n          warnedAboutMissingGetChildContext[componentName] = true;\r\n\r\n          error(\r\n            \"%s.childContextTypes is specified but there is no getChildContext() method \" +\r\n              \"on the instance. You can either define getChildContext() on %s or remove \" +\r\n              \"childContextTypes from it.\",\r\n            componentName,\r\n            componentName\r\n          );\r\n        }\r\n      }\r\n\r\n      return parentContext;\r\n    }\r\n\r\n    var childContext = instance.getChildContext();\r\n\r\n    for (var contextKey in childContext) {\r\n      if (!(contextKey in childContextTypes)) {\r\n        throw new Error(\r\n          (getComponentNameFromFiber(fiber) || \"Unknown\") +\r\n            '.getChildContext(): key \"' +\r\n            contextKey +\r\n            '\" is not defined in childContextTypes.'\r\n        );\r\n      }\r\n    }\r\n\r\n    {\r\n      var name = getComponentNameFromFiber(fiber) || \"Unknown\";\r\n      checkPropTypes(childContextTypes, childContext, \"child context\", name);\r\n    }\r\n\r\n    return assign({}, parentContext, childContext);\r\n  }\r\n}\r\n\r\nfunction pushContextProvider(workInProgress) {\r\n  {\r\n    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.\r\n    // If the instance does not exist yet, we will push null at first,\r\n    // and replace it on the stack later when invalidating the context.\r\n\r\n    var memoizedMergedChildContext =\r\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\r\n      emptyContextObject; // Remember the parent context so we can merge with it later.\r\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\r\n\r\n    previousContext = contextStackCursor.current;\r\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\r\n    push(\r\n      didPerformWorkStackCursor,\r\n      didPerformWorkStackCursor.current,\r\n      workInProgress\r\n    );\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction invalidateContextProvider(workInProgress, type, didChange) {\r\n  {\r\n    var instance = workInProgress.stateNode;\r\n\r\n    if (!instance) {\r\n      throw new Error(\r\n        \"Expected to have an instance by this point. \" +\r\n          \"This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    if (didChange) {\r\n      // Merge parent and own context.\r\n      // Skip this if we're not updating due to sCU.\r\n      // This avoids unnecessarily recomputing memoized values.\r\n      var mergedContext = processChildContext(\r\n        workInProgress,\r\n        type,\r\n        previousContext\r\n      );\r\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.\r\n      // It is important to unwind the context in the reverse order.\r\n\r\n      pop(didPerformWorkStackCursor, workInProgress);\r\n      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.\r\n\r\n      push(contextStackCursor, mergedContext, workInProgress);\r\n      push(didPerformWorkStackCursor, didChange, workInProgress);\r\n    } else {\r\n      pop(didPerformWorkStackCursor, workInProgress);\r\n      push(didPerformWorkStackCursor, didChange, workInProgress);\r\n    }\r\n  }\r\n}\r\n\r\nfunction findCurrentUnmaskedContext(fiber) {\r\n  {\r\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\r\n    // makes sense elsewhere\r\n    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {\r\n      throw new Error(\r\n        \"Expected subtree parent to be a mounted class component. \" +\r\n          \"This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    var node = fiber;\r\n\r\n    do {\r\n      switch (node.tag) {\r\n        case HostRoot:\r\n          return node.stateNode.context;\r\n\r\n        case ClassComponent: {\r\n          var Component = node.type;\r\n\r\n          if (isContextProvider(Component)) {\r\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n\r\n      node = node.return;\r\n    } while (node !== null);\r\n\r\n    throw new Error(\r\n      \"Found unexpected detached subtree parent. \" +\r\n        \"This error is likely caused by a bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n}\r\n\r\nvar LegacyRoot = 0;\r\nvar ConcurrentRoot = 1;\r\n\r\n/**\r\n * inlined Object.is polyfill to avoid requiring consumers ship their own\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n */\r\nfunction is(x, y) {\r\n  return (\r\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\r\n  );\r\n}\r\n\r\nvar objectIs = typeof Object.is === \"function\" ? Object.is : is;\r\n\r\nvar syncQueue = null;\r\nvar includesLegacySyncCallbacks = false;\r\nvar isFlushingSyncQueue = false;\r\nfunction scheduleSyncCallback(callback) {\r\n  // Push this callback into an internal queue. We'll flush these either in\r\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\r\n  if (syncQueue === null) {\r\n    syncQueue = [callback];\r\n  } else {\r\n    // Push onto existing queue. Don't need to schedule a callback because\r\n    // we already scheduled one when we created the queue.\r\n    syncQueue.push(callback);\r\n  }\r\n}\r\nfunction scheduleLegacySyncCallback(callback) {\r\n  includesLegacySyncCallbacks = true;\r\n  scheduleSyncCallback(callback);\r\n}\r\nfunction flushSyncCallbacksOnlyInLegacyMode() {\r\n  // Only flushes the queue if there's a legacy sync callback scheduled.\r\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\r\n  // it might make more sense for the queue to be a list of roots instead of a\r\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\r\n  // for concurrent roots. And this method would only flush the legacy ones.\r\n  if (includesLegacySyncCallbacks) {\r\n    flushSyncCallbacks();\r\n  }\r\n}\r\nfunction flushSyncCallbacks() {\r\n  if (!isFlushingSyncQueue && syncQueue !== null) {\r\n    // Prevent re-entrance.\r\n    isFlushingSyncQueue = true;\r\n    var i = 0;\r\n    var previousUpdatePriority = getCurrentUpdatePriority();\r\n\r\n    try {\r\n      var isSync = true;\r\n      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this\r\n      // queue is in the render or commit phases.\r\n\r\n      setCurrentUpdatePriority(DiscreteEventPriority);\r\n\r\n      for (; i < queue.length; i++) {\r\n        var callback = queue[i];\r\n\r\n        do {\r\n          callback = callback(isSync);\r\n        } while (callback !== null);\r\n      }\r\n\r\n      syncQueue = null;\r\n      includesLegacySyncCallbacks = false;\r\n    } catch (error) {\r\n      // If something throws, leave the remaining callbacks on the queue.\r\n      if (syncQueue !== null) {\r\n        syncQueue = syncQueue.slice(i + 1);\r\n      } // Resume flushing in the next tick\r\n\r\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\r\n      throw error;\r\n    } finally {\r\n      setCurrentUpdatePriority(previousUpdatePriority);\r\n      isFlushingSyncQueue = false;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// This is imported by the event replaying implementation in React DOM. It's\r\n// in a separate file to break a circular dependency between the renderer and\r\n// the reconciler.\r\nfunction isRootDehydrated(root) {\r\n  var currentState = root.current.memoizedState;\r\n  return currentState.isDehydrated;\r\n}\r\n\r\n// TODO: Use the unified fiber stack module instead of this local one?\r\n// Intentionally not using it yet to derisk the initial implementation, because\r\n// the way we push/pop these values is a bit unusual. If there's a mistake, I'd\r\n// rather the ids be wrong than crash the whole reconciler.\r\nvar forkStack = [];\r\nvar forkStackIndex = 0;\r\nvar treeForkProvider = null;\r\nvar treeForkCount = 0;\r\nvar idStack = [];\r\nvar idStackIndex = 0;\r\nvar treeContextProvider = null;\r\nvar treeContextId = 1;\r\nvar treeContextOverflow = \"\";\r\n\r\nfunction popTreeContext(workInProgress) {\r\n  // Restore the previous values.\r\n  // This is a bit more complicated than other context-like modules in Fiber\r\n  // because the same Fiber may appear on the stack multiple times and for\r\n  // different reasons. We have to keep popping until the work-in-progress is\r\n  // no longer at the top of the stack.\r\n  while (workInProgress === treeForkProvider) {\r\n    treeForkProvider = forkStack[--forkStackIndex];\r\n    forkStack[forkStackIndex] = null;\r\n    treeForkCount = forkStack[--forkStackIndex];\r\n    forkStack[forkStackIndex] = null;\r\n  }\r\n\r\n  while (workInProgress === treeContextProvider) {\r\n    treeContextProvider = idStack[--idStackIndex];\r\n    idStack[idStackIndex] = null;\r\n    treeContextOverflow = idStack[--idStackIndex];\r\n    idStack[idStackIndex] = null;\r\n    treeContextId = idStack[--idStackIndex];\r\n    idStack[idStackIndex] = null;\r\n  }\r\n}\r\n\r\nvar isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches\r\n// due to earlier mismatches or a suspended fiber.\r\n\r\nvar didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary\r\n\r\nvar hydrationErrors = null;\r\nfunction didSuspendOrErrorWhileHydratingDEV() {\r\n  {\r\n    return didSuspendOrErrorDEV;\r\n  }\r\n}\r\n\r\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\r\n  fiber,\r\n  suspenseInstance,\r\n  treeContext\r\n) {\r\n  {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction prepareToHydrateHostInstance(\r\n  fiber,\r\n  rootContainerInstance,\r\n  hostContext\r\n) {\r\n  {\r\n    throw new Error(\r\n      \"Expected prepareToHydrateHostInstance() to never be called. \" +\r\n        \"This error is likely caused by a bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction prepareToHydrateHostTextInstance(fiber) {\r\n  {\r\n    throw new Error(\r\n      \"Expected prepareToHydrateHostTextInstance() to never be called. \" +\r\n        \"This error is likely caused by a bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n  var shouldUpdate = hydrateTextInstance();\r\n}\r\n\r\nfunction prepareToHydrateHostSuspenseInstance(fiber) {\r\n  {\r\n    throw new Error(\r\n      \"Expected prepareToHydrateHostSuspenseInstance() to never be called. \" +\r\n        \"This error is likely caused by a bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction popHydrationState(fiber) {\r\n  {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction upgradeHydrationErrorsToRecoverable() {\r\n  if (hydrationErrors !== null) {\r\n    // Successfully completed a forced client render. The errors that occurred\r\n    // during the hydration attempt are now recovered. We will log them in\r\n    // commit phase, once the entire tree has finished.\r\n    queueRecoverableErrors(hydrationErrors);\r\n    hydrationErrors = null;\r\n  }\r\n}\r\n\r\nfunction getIsHydrating() {\r\n  return isHydrating;\r\n}\r\n\r\nfunction queueHydrationError(error) {\r\n  if (hydrationErrors === null) {\r\n    hydrationErrors = [error];\r\n  } else {\r\n    hydrationErrors.push(error);\r\n  }\r\n}\r\n\r\nvar ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;\r\nvar NoTransition = null;\r\nfunction requestCurrentTransition() {\r\n  return ReactCurrentBatchConfig.transition;\r\n}\r\n\r\n/**\r\n * Performs equality by iterating through keys on an object and returning false\r\n * when any key has values which are not strictly equal between the arguments.\r\n * Returns true when the values of all keys are strictly equal.\r\n */\r\n\r\nfunction shallowEqual(objA, objB) {\r\n  if (objectIs(objA, objB)) {\r\n    return true;\r\n  }\r\n\r\n  if (\r\n    typeof objA !== \"object\" ||\r\n    objA === null ||\r\n    typeof objB !== \"object\" ||\r\n    objB === null\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  var keysA = Object.keys(objA);\r\n  var keysB = Object.keys(objB);\r\n\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  } // Test for A's keys different from B.\r\n\r\n  for (var i = 0; i < keysA.length; i++) {\r\n    var currentKey = keysA[i];\r\n\r\n    if (\r\n      !hasOwnProperty.call(objB, currentKey) ||\r\n      !objectIs(objA[currentKey], objB[currentKey])\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction describeFiber(fiber) {\r\n  var owner = fiber._debugOwner ? fiber._debugOwner.type : null;\r\n  var source = fiber._debugSource;\r\n\r\n  switch (fiber.tag) {\r\n    case HostComponent:\r\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\r\n\r\n    case LazyComponent:\r\n      return describeBuiltInComponentFrame(\"Lazy\", source, owner);\r\n\r\n    case SuspenseComponent:\r\n      return describeBuiltInComponentFrame(\"Suspense\", source, owner);\r\n\r\n    case SuspenseListComponent:\r\n      return describeBuiltInComponentFrame(\"SuspenseList\", source, owner);\r\n\r\n    case FunctionComponent:\r\n    case IndeterminateComponent:\r\n    case SimpleMemoComponent:\r\n      return describeFunctionComponentFrame(fiber.type, source, owner);\r\n\r\n    case ForwardRef:\r\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\r\n\r\n    case ClassComponent:\r\n      return describeClassComponentFrame(fiber.type, source, owner);\r\n\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nfunction getStackByFiberInDevAndProd(workInProgress) {\r\n  try {\r\n    var info = \"\";\r\n    var node = workInProgress;\r\n\r\n    do {\r\n      info += describeFiber(node);\r\n      node = node.return;\r\n    } while (node);\r\n\r\n    return info;\r\n  } catch (x) {\r\n    return \"\\nError generating stack: \" + x.message + \"\\n\" + x.stack;\r\n  }\r\n}\r\n\r\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\r\nvar current = null;\r\nvar isRendering = false;\r\nfunction getCurrentFiberOwnerNameInDevOrNull() {\r\n  {\r\n    if (current === null) {\r\n      return null;\r\n    }\r\n\r\n    var owner = current._debugOwner;\r\n\r\n    if (owner !== null && typeof owner !== \"undefined\") {\r\n      return getComponentNameFromFiber(owner);\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction getCurrentFiberStackInDev() {\r\n  {\r\n    if (current === null) {\r\n      return \"\";\r\n    } // Safe because if current fiber exists, we are reconciling,\r\n    // and it is guaranteed to be the work-in-progress version.\r\n\r\n    return getStackByFiberInDevAndProd(current);\r\n  }\r\n}\r\n\r\nfunction resetCurrentFiber() {\r\n  {\r\n    ReactDebugCurrentFrame$1.getCurrentStack = null;\r\n    current = null;\r\n    isRendering = false;\r\n  }\r\n}\r\nfunction setCurrentFiber(fiber) {\r\n  {\r\n    ReactDebugCurrentFrame$1.getCurrentStack =\r\n      fiber === null ? null : getCurrentFiberStackInDev;\r\n    current = fiber;\r\n    isRendering = false;\r\n  }\r\n}\r\nfunction getCurrentFiber() {\r\n  {\r\n    return current;\r\n  }\r\n}\r\nfunction setIsRendering(rendering) {\r\n  {\r\n    isRendering = rendering;\r\n  }\r\n}\r\n\r\nvar ReactStrictModeWarnings = {\r\n  recordUnsafeLifecycleWarnings: function(fiber, instance) {},\r\n  flushPendingUnsafeLifecycleWarnings: function() {},\r\n  recordLegacyContextWarning: function(fiber, instance) {},\r\n  flushLegacyContextWarning: function() {},\r\n  discardPendingWarnings: function() {}\r\n};\r\n\r\n{\r\n  var findStrictRoot = function(fiber) {\r\n    var maybeStrictRoot = null;\r\n    var node = fiber;\r\n\r\n    while (node !== null) {\r\n      if (node.mode & StrictLegacyMode) {\r\n        maybeStrictRoot = node;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    return maybeStrictRoot;\r\n  };\r\n\r\n  var setToSortedString = function(set) {\r\n    var array = [];\r\n    set.forEach(function(value) {\r\n      array.push(value);\r\n    });\r\n    return array.sort().join(\", \");\r\n  };\r\n\r\n  var pendingComponentWillMountWarnings = [];\r\n  var pendingUNSAFE_ComponentWillMountWarnings = [];\r\n  var pendingComponentWillReceivePropsWarnings = [];\r\n  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n  var pendingComponentWillUpdateWarnings = [];\r\n  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.\r\n\r\n  var didWarnAboutUnsafeLifecycles = new Set();\r\n\r\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(\r\n    fiber,\r\n    instance\r\n  ) {\r\n    // Dedupe strategy: Warn once per component.\r\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      typeof instance.componentWillMount === \"function\" && // Don't warn about react-lifecycles-compat polyfilled components.\r\n      instance.componentWillMount.__suppressDeprecationWarning !== true\r\n    ) {\r\n      pendingComponentWillMountWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      fiber.mode & StrictLegacyMode &&\r\n      typeof instance.UNSAFE_componentWillMount === \"function\"\r\n    ) {\r\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      typeof instance.componentWillReceiveProps === \"function\" &&\r\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\r\n    ) {\r\n      pendingComponentWillReceivePropsWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      fiber.mode & StrictLegacyMode &&\r\n      typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\r\n    ) {\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      typeof instance.componentWillUpdate === \"function\" &&\r\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\r\n    ) {\r\n      pendingComponentWillUpdateWarnings.push(fiber);\r\n    }\r\n\r\n    if (\r\n      fiber.mode & StrictLegacyMode &&\r\n      typeof instance.UNSAFE_componentWillUpdate === \"function\"\r\n    ) {\r\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {\r\n    // We do an initial pass to gather component names\r\n    var componentWillMountUniqueNames = new Set();\r\n\r\n    if (pendingComponentWillMountWarnings.length > 0) {\r\n      pendingComponentWillMountWarnings.forEach(function(fiber) {\r\n        componentWillMountUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || \"Component\"\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingComponentWillMountWarnings = [];\r\n    }\r\n\r\n    var UNSAFE_componentWillMountUniqueNames = new Set();\r\n\r\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {\r\n        UNSAFE_componentWillMountUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || \"Component\"\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingUNSAFE_ComponentWillMountWarnings = [];\r\n    }\r\n\r\n    var componentWillReceivePropsUniqueNames = new Set();\r\n\r\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\r\n      pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {\r\n        componentWillReceivePropsUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || \"Component\"\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingComponentWillReceivePropsWarnings = [];\r\n    }\r\n\r\n    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();\r\n\r\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {\r\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || \"Component\"\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n    }\r\n\r\n    var componentWillUpdateUniqueNames = new Set();\r\n\r\n    if (pendingComponentWillUpdateWarnings.length > 0) {\r\n      pendingComponentWillUpdateWarnings.forEach(function(fiber) {\r\n        componentWillUpdateUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || \"Component\"\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingComponentWillUpdateWarnings = [];\r\n    }\r\n\r\n    var UNSAFE_componentWillUpdateUniqueNames = new Set();\r\n\r\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\r\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {\r\n        UNSAFE_componentWillUpdateUniqueNames.add(\r\n          getComponentNameFromFiber(fiber) || \"Component\"\r\n        );\r\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\r\n      });\r\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\r\n    } // Finally, we flush all the warnings\r\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\r\n\r\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\r\n      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);\r\n\r\n      error(\r\n        \"Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. \" +\r\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\r\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\r\n          \"\\nPlease update the following components: %s\",\r\n        sortedNames\r\n      );\r\n    }\r\n\r\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\r\n      var _sortedNames = setToSortedString(\r\n        UNSAFE_componentWillReceivePropsUniqueNames\r\n      );\r\n\r\n      error(\r\n        \"Using UNSAFE_componentWillReceiveProps in strict mode is not recommended \" +\r\n          \"and may indicate bugs in your code. \" +\r\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\r\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\r\n          \"* If you're updating state whenever props change, \" +\r\n          \"refactor your code to use memoization techniques or move it to \" +\r\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\r\n          \"\\nPlease update the following components: %s\",\r\n        _sortedNames\r\n      );\r\n    }\r\n\r\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\r\n      var _sortedNames2 = setToSortedString(\r\n        UNSAFE_componentWillUpdateUniqueNames\r\n      );\r\n\r\n      error(\r\n        \"Using UNSAFE_componentWillUpdate in strict mode is not recommended \" +\r\n          \"and may indicate bugs in your code. \" +\r\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\r\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\r\n          \"\\nPlease update the following components: %s\",\r\n        _sortedNames2\r\n      );\r\n    }\r\n\r\n    if (componentWillMountUniqueNames.size > 0) {\r\n      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);\r\n\r\n      warn(\r\n        \"componentWillMount has been renamed, and is not recommended for use. \" +\r\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\r\n          \"* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n\" +\r\n          \"* Rename componentWillMount to UNSAFE_componentWillMount to suppress \" +\r\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\r\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\r\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\r\n          \"\\nPlease update the following components: %s\",\r\n        _sortedNames3\r\n      );\r\n    }\r\n\r\n    if (componentWillReceivePropsUniqueNames.size > 0) {\r\n      var _sortedNames4 = setToSortedString(\r\n        componentWillReceivePropsUniqueNames\r\n      );\r\n\r\n      warn(\r\n        \"componentWillReceiveProps has been renamed, and is not recommended for use. \" +\r\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\r\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\r\n          \"* If you're updating state whenever props change, refactor your \" +\r\n          \"code to use memoization techniques or move it to \" +\r\n          \"static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n\" +\r\n          \"* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress \" +\r\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\r\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\r\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\r\n          \"\\nPlease update the following components: %s\",\r\n        _sortedNames4\r\n      );\r\n    }\r\n\r\n    if (componentWillUpdateUniqueNames.size > 0) {\r\n      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);\r\n\r\n      warn(\r\n        \"componentWillUpdate has been renamed, and is not recommended for use. \" +\r\n          \"See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n\" +\r\n          \"* Move data fetching code or side effects to componentDidUpdate.\\n\" +\r\n          \"* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress \" +\r\n          \"this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. \" +\r\n          \"To rename all deprecated lifecycles to their new names, you can run \" +\r\n          \"`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n\" +\r\n          \"\\nPlease update the following components: %s\",\r\n        _sortedNames5\r\n      );\r\n    }\r\n  };\r\n\r\n  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.\r\n\r\n  var didWarnAboutLegacyContext = new Set();\r\n\r\n  ReactStrictModeWarnings.recordLegacyContextWarning = function(\r\n    fiber,\r\n    instance\r\n  ) {\r\n    var strictRoot = findStrictRoot(fiber);\r\n\r\n    if (strictRoot === null) {\r\n      error(\r\n        \"Expected to find a StrictMode component in a strict mode tree. \" +\r\n          \"This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n\r\n      return;\r\n    } // Dedup strategy: Warn once per component.\r\n\r\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\r\n      return;\r\n    }\r\n\r\n    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\r\n\r\n    if (\r\n      fiber.type.contextTypes != null ||\r\n      fiber.type.childContextTypes != null ||\r\n      (instance !== null && typeof instance.getChildContext === \"function\")\r\n    ) {\r\n      if (warningsForRoot === undefined) {\r\n        warningsForRoot = [];\r\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\r\n      }\r\n\r\n      warningsForRoot.push(fiber);\r\n    }\r\n  };\r\n\r\n  ReactStrictModeWarnings.flushLegacyContextWarning = function() {\r\n    pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {\r\n      if (fiberArray.length === 0) {\r\n        return;\r\n      }\r\n\r\n      var firstFiber = fiberArray[0];\r\n      var uniqueNames = new Set();\r\n      fiberArray.forEach(function(fiber) {\r\n        uniqueNames.add(getComponentNameFromFiber(fiber) || \"Component\");\r\n        didWarnAboutLegacyContext.add(fiber.type);\r\n      });\r\n      var sortedNames = setToSortedString(uniqueNames);\r\n\r\n      try {\r\n        setCurrentFiber(firstFiber);\r\n\r\n        error(\r\n          \"Legacy context API has been detected within a strict-mode tree.\" +\r\n            \"\\n\\nThe old API will be supported in all 16.x releases, but applications \" +\r\n            \"using it should migrate to the new version.\" +\r\n            \"\\n\\nPlease update the following components: %s\" +\r\n            \"\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context\",\r\n          sortedNames\r\n        );\r\n      } finally {\r\n        resetCurrentFiber();\r\n      }\r\n    });\r\n  };\r\n\r\n  ReactStrictModeWarnings.discardPendingWarnings = function() {\r\n    pendingComponentWillMountWarnings = [];\r\n    pendingUNSAFE_ComponentWillMountWarnings = [];\r\n    pendingComponentWillReceivePropsWarnings = [];\r\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\r\n    pendingComponentWillUpdateWarnings = [];\r\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\r\n    pendingLegacyContextWarning = new Map();\r\n  };\r\n}\r\n\r\n/*\r\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\r\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\r\n *\r\n * The functions in this module will throw an easier-to-understand,\r\n * easier-to-debug exception with a clear errors message message explaining the\r\n * problem. (Instead of a confusing exception thrown inside the implementation\r\n * of the `value` object).\r\n */\r\n// $FlowFixMe only called in DEV, so void return is not possible.\r\nfunction typeName(value) {\r\n  {\r\n    // toStringTag is needed for namespaced types like Temporal.Instant\r\n    var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\r\n    var type =\r\n      (hasToStringTag && value[Symbol.toStringTag]) ||\r\n      value.constructor.name ||\r\n      \"Object\";\r\n    return type;\r\n  }\r\n} // $FlowFixMe only called in DEV, so void return is not possible.\r\n\r\nfunction willCoercionThrow(value) {\r\n  {\r\n    try {\r\n      testStringCoercion(value);\r\n      return false;\r\n    } catch (e) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction testStringCoercion(value) {\r\n  // If you ended up here by following an exception call stack, here's what's\r\n  // happened: you supplied an object or symbol value to React (as a prop, key,\r\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\r\n  // coerce it to a string using `'' + value`, an exception was thrown.\r\n  //\r\n  // The most common types that will cause this exception are `Symbol` instances\r\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\r\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\r\n  // exception. (Library authors do this to prevent users from using built-in\r\n  // numeric operators like `+` or comparison operators like `>=` because custom\r\n  // methods are needed to perform accurate arithmetic or comparison.)\r\n  //\r\n  // To fix the problem, coerce this object or symbol value to a string before\r\n  // passing it to React. The most reliable way is usually `String(value)`.\r\n  //\r\n  // To find which value is throwing, check the browser or debugger console.\r\n  // Before this exception was thrown, there should be `console.error` output\r\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\r\n  // problem and how that type was used: key, atrribute, input value prop, etc.\r\n  // In most cases, this console output also shows the component and its\r\n  // ancestor components where the exception happened.\r\n  //\r\n  // eslint-disable-next-line react-internal/safe-string-coercion\r\n  return \"\" + value;\r\n}\r\nfunction checkKeyStringCoercion(value) {\r\n  {\r\n    if (willCoercionThrow(value)) {\r\n      error(\r\n        \"The provided key is an unsupported type %s.\" +\r\n          \" This value must be coerced to a string before before using it here.\",\r\n        typeName(value)\r\n      );\r\n\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\nfunction checkPropStringCoercion(value, propName) {\r\n  {\r\n    if (willCoercionThrow(value)) {\r\n      error(\r\n        \"The provided `%s` prop is an unsupported type %s.\" +\r\n          \" This value must be coerced to a string before before using it here.\",\r\n        propName,\r\n        typeName(value)\r\n      );\r\n\r\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\r\n    }\r\n  }\r\n}\r\n\r\nfunction resolveDefaultProps(Component, baseProps) {\r\n  if (Component && Component.defaultProps) {\r\n    // Resolve default props. Taken from ReactElement\r\n    var props = assign({}, baseProps);\r\n    var defaultProps = Component.defaultProps;\r\n\r\n    for (var propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n\r\n    return props;\r\n  }\r\n\r\n  return baseProps;\r\n}\r\n\r\nvar valueCursor = createCursor(null);\r\nvar rendererSigil;\r\n\r\n{\r\n  // Use this to detect multiple renderers using the same context\r\n  rendererSigil = {};\r\n}\r\n\r\nvar currentlyRenderingFiber = null;\r\nvar lastContextDependency = null;\r\nvar lastFullyObservedContext = null;\r\nvar isDisallowedContextReadInDEV = false;\r\nfunction resetContextDependencies() {\r\n  // This is called right before React yields execution, to ensure `readContext`\r\n  // cannot be called outside the render phase.\r\n  currentlyRenderingFiber = null;\r\n  lastContextDependency = null;\r\n  lastFullyObservedContext = null;\r\n\r\n  {\r\n    isDisallowedContextReadInDEV = false;\r\n  }\r\n}\r\nfunction enterDisallowedContextReadInDEV() {\r\n  {\r\n    isDisallowedContextReadInDEV = true;\r\n  }\r\n}\r\nfunction exitDisallowedContextReadInDEV() {\r\n  {\r\n    isDisallowedContextReadInDEV = false;\r\n  }\r\n}\r\nfunction pushProvider(providerFiber, context, nextValue) {\r\n  {\r\n    push(valueCursor, context._currentValue, providerFiber);\r\n    context._currentValue = nextValue;\r\n\r\n    {\r\n      if (\r\n        context._currentRenderer !== undefined &&\r\n        context._currentRenderer !== null &&\r\n        context._currentRenderer !== rendererSigil\r\n      ) {\r\n        error(\r\n          \"Detected multiple renderers concurrently rendering the \" +\r\n            \"same context provider. This is currently unsupported.\"\r\n        );\r\n      }\r\n\r\n      context._currentRenderer = rendererSigil;\r\n    }\r\n  }\r\n}\r\nfunction popProvider(context, providerFiber) {\r\n  var currentValue = valueCursor.current;\r\n  pop(valueCursor, providerFiber);\r\n\r\n  {\r\n    {\r\n      context._currentValue = currentValue;\r\n    }\r\n  }\r\n}\r\nfunction scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {\r\n  // Update the child lanes of all the ancestors, including the alternates.\r\n  var node = parent;\r\n\r\n  while (node !== null) {\r\n    var alternate = node.alternate;\r\n\r\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\r\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\r\n\r\n      if (alternate !== null) {\r\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\r\n      }\r\n    } else if (\r\n      alternate !== null &&\r\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\r\n    ) {\r\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\r\n    }\r\n\r\n    if (node === propagationRoot) {\r\n      break;\r\n    }\r\n\r\n    node = node.return;\r\n  }\r\n\r\n  {\r\n    if (node !== propagationRoot) {\r\n      error(\r\n        \"Expected to find the propagation root when scheduling context work. \" +\r\n          \"This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n  }\r\n}\r\nfunction propagateContextChange(workInProgress, context, renderLanes) {\r\n  {\r\n    propagateContextChange_eager(workInProgress, context, renderLanes);\r\n  }\r\n}\r\n\r\nfunction propagateContextChange_eager(workInProgress, context, renderLanes) {\r\n  var fiber = workInProgress.child;\r\n\r\n  if (fiber !== null) {\r\n    // Set the return pointer of the child to the work-in-progress fiber.\r\n    fiber.return = workInProgress;\r\n  }\r\n\r\n  while (fiber !== null) {\r\n    var nextFiber = void 0; // Visit this fiber.\r\n\r\n    var list = fiber.dependencies;\r\n\r\n    if (list !== null) {\r\n      nextFiber = fiber.child;\r\n      var dependency = list.firstContext;\r\n\r\n      while (dependency !== null) {\r\n        // Check if the context matches.\r\n        if (dependency.context === context) {\r\n          // Match! Schedule an update on this fiber.\r\n          if (fiber.tag === ClassComponent) {\r\n            // Schedule a force update on the work-in-progress.\r\n            var lane = pickArbitraryLane(renderLanes);\r\n            var update = createUpdate(NoTimestamp, lane);\r\n            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the\r\n            // update to the current fiber, too, which means it will persist even if\r\n            // this render is thrown away. Since it's a race condition, not sure it's\r\n            // worth fixing.\r\n            // Inlined `enqueueUpdate` to remove interleaved update check\r\n\r\n            var updateQueue = fiber.updateQueue;\r\n\r\n            if (updateQueue === null);\r\n            else {\r\n              var sharedQueue = updateQueue.shared;\r\n              var pending = sharedQueue.pending;\r\n\r\n              if (pending === null) {\r\n                // This is the first update. Create a circular list.\r\n                update.next = update;\r\n              } else {\r\n                update.next = pending.next;\r\n                pending.next = update;\r\n              }\r\n\r\n              sharedQueue.pending = update;\r\n            }\r\n          }\r\n\r\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\r\n          var alternate = fiber.alternate;\r\n\r\n          if (alternate !== null) {\r\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\r\n          }\r\n\r\n          scheduleContextWorkOnParentPath(\r\n            fiber.return,\r\n            renderLanes,\r\n            workInProgress\r\n          ); // Mark the updated lanes on the list, too.\r\n\r\n          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the\r\n          // dependency list.\r\n\r\n          break;\r\n        }\r\n\r\n        dependency = dependency.next;\r\n      }\r\n    } else if (fiber.tag === ContextProvider) {\r\n      // Don't scan deeper if this is a matching provider\r\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\r\n    } else if (fiber.tag === DehydratedFragment) {\r\n      // If a dehydrated suspense boundary is in this subtree, we don't know\r\n      // if it will have any context consumers in it. The best we can do is\r\n      // mark it as having updates.\r\n      var parentSuspense = fiber.return;\r\n\r\n      if (parentSuspense === null) {\r\n        throw new Error(\r\n          \"We just came from a parent so we must have had a parent. This is a bug in React.\"\r\n        );\r\n      }\r\n\r\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\r\n      var _alternate = parentSuspense.alternate;\r\n\r\n      if (_alternate !== null) {\r\n        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);\r\n      } // This is intentionally passing this fiber as the parent\r\n      // because we want to schedule this fiber as having work\r\n      // on its children. We'll use the childLanes on\r\n      // this fiber to indicate that a context has changed.\r\n\r\n      scheduleContextWorkOnParentPath(\r\n        parentSuspense,\r\n        renderLanes,\r\n        workInProgress\r\n      );\r\n      nextFiber = fiber.sibling;\r\n    } else {\r\n      // Traverse down.\r\n      nextFiber = fiber.child;\r\n    }\r\n\r\n    if (nextFiber !== null) {\r\n      // Set the return pointer of the child to the work-in-progress fiber.\r\n      nextFiber.return = fiber;\r\n    } else {\r\n      // No child. Traverse to next sibling.\r\n      nextFiber = fiber;\r\n\r\n      while (nextFiber !== null) {\r\n        if (nextFiber === workInProgress) {\r\n          // We're back to the root of this subtree. Exit.\r\n          nextFiber = null;\r\n          break;\r\n        }\r\n\r\n        var sibling = nextFiber.sibling;\r\n\r\n        if (sibling !== null) {\r\n          // Set the return pointer of the sibling to the work-in-progress fiber.\r\n          sibling.return = nextFiber.return;\r\n          nextFiber = sibling;\r\n          break;\r\n        } // No more siblings. Traverse up.\r\n\r\n        nextFiber = nextFiber.return;\r\n      }\r\n    }\r\n\r\n    fiber = nextFiber;\r\n  }\r\n}\r\nfunction prepareToReadContext(workInProgress, renderLanes) {\r\n  currentlyRenderingFiber = workInProgress;\r\n  lastContextDependency = null;\r\n  lastFullyObservedContext = null;\r\n  var dependencies = workInProgress.dependencies;\r\n\r\n  if (dependencies !== null) {\r\n    {\r\n      var firstContext = dependencies.firstContext;\r\n\r\n      if (firstContext !== null) {\r\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\r\n          // Context list has a pending update. Mark that this fiber performed work.\r\n          markWorkInProgressReceivedUpdate();\r\n        } // Reset the work-in-progress list\r\n\r\n        dependencies.firstContext = null;\r\n      }\r\n    }\r\n  }\r\n}\r\nfunction readContext(context) {\r\n  {\r\n    // This warning would fire if you read context inside a Hook like useMemo.\r\n    // Unlike the class check below, it's not enforced in production for perf.\r\n    if (isDisallowedContextReadInDEV) {\r\n      error(\r\n        \"Context can only be read while React is rendering. \" +\r\n          \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\r\n          \"In function components, you can read it directly in the function body, but not \" +\r\n          \"inside Hooks like useReducer() or useMemo().\"\r\n      );\r\n    }\r\n  }\r\n\r\n  var value = context._currentValue;\r\n\r\n  if (lastFullyObservedContext === context);\r\n  else {\r\n    var contextItem = {\r\n      context: context,\r\n      memoizedValue: value,\r\n      next: null\r\n    };\r\n\r\n    if (lastContextDependency === null) {\r\n      if (currentlyRenderingFiber === null) {\r\n        throw new Error(\r\n          \"Context can only be read while React is rendering. \" +\r\n            \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\r\n            \"In function components, you can read it directly in the function body, but not \" +\r\n            \"inside Hooks like useReducer() or useMemo().\"\r\n        );\r\n      } // This is the first dependency for this component. Create a new list.\r\n\r\n      lastContextDependency = contextItem;\r\n      currentlyRenderingFiber.dependencies = {\r\n        lanes: NoLanes,\r\n        firstContext: contextItem\r\n      };\r\n    } else {\r\n      // Append a new context item.\r\n      lastContextDependency = lastContextDependency.next = contextItem;\r\n    }\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n// render. When this render exits, either because it finishes or because it is\r\n// interrupted, the interleaved updates will be transferred onto the main part\r\n// of the queue.\r\n\r\nvar concurrentQueues = null;\r\nfunction pushConcurrentUpdateQueue(queue) {\r\n  if (concurrentQueues === null) {\r\n    concurrentQueues = [queue];\r\n  } else {\r\n    concurrentQueues.push(queue);\r\n  }\r\n}\r\nfunction finishQueueingConcurrentUpdates() {\r\n  // Transfer the interleaved updates onto the main queue. Each queue has a\r\n  // `pending` field and an `interleaved` field. When they are not null, they\r\n  // point to the last node in a circular linked list. We need to append the\r\n  // interleaved list to the end of the pending list by joining them into a\r\n  // single, circular list.\r\n  if (concurrentQueues !== null) {\r\n    for (var i = 0; i < concurrentQueues.length; i++) {\r\n      var queue = concurrentQueues[i];\r\n      var lastInterleavedUpdate = queue.interleaved;\r\n\r\n      if (lastInterleavedUpdate !== null) {\r\n        queue.interleaved = null;\r\n        var firstInterleavedUpdate = lastInterleavedUpdate.next;\r\n        var lastPendingUpdate = queue.pending;\r\n\r\n        if (lastPendingUpdate !== null) {\r\n          var firstPendingUpdate = lastPendingUpdate.next;\r\n          lastPendingUpdate.next = firstInterleavedUpdate;\r\n          lastInterleavedUpdate.next = firstPendingUpdate;\r\n        }\r\n\r\n        queue.pending = lastInterleavedUpdate;\r\n      }\r\n    }\r\n\r\n    concurrentQueues = null;\r\n  }\r\n}\r\nfunction enqueueConcurrentHookUpdate(fiber, queue, update, lane) {\r\n  var interleaved = queue.interleaved;\r\n\r\n  if (interleaved === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\r\n    // be transferred to the pending queue.\r\n\r\n    pushConcurrentUpdateQueue(queue);\r\n  } else {\r\n    update.next = interleaved.next;\r\n    interleaved.next = update;\r\n  }\r\n\r\n  queue.interleaved = update;\r\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\r\n}\r\nfunction enqueueConcurrentHookUpdateAndEagerlyBailout(\r\n  fiber,\r\n  queue,\r\n  update,\r\n  lane\r\n) {\r\n  var interleaved = queue.interleaved;\r\n\r\n  if (interleaved === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\r\n    // be transferred to the pending queue.\r\n\r\n    pushConcurrentUpdateQueue(queue);\r\n  } else {\r\n    update.next = interleaved.next;\r\n    interleaved.next = update;\r\n  }\r\n\r\n  queue.interleaved = update;\r\n}\r\nfunction enqueueConcurrentClassUpdate(fiber, queue, update, lane) {\r\n  var interleaved = queue.interleaved;\r\n\r\n  if (interleaved === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update; // At the end of the current render, this queue's interleaved updates will\r\n    // be transferred to the pending queue.\r\n\r\n    pushConcurrentUpdateQueue(queue);\r\n  } else {\r\n    update.next = interleaved.next;\r\n    interleaved.next = update;\r\n  }\r\n\r\n  queue.interleaved = update;\r\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\r\n}\r\nfunction enqueueConcurrentRenderForLane(fiber, lane) {\r\n  return markUpdateLaneFromFiberToRoot(fiber, lane);\r\n} // Calling this function outside this module should only be done for backwards\r\n// compatibility and should always be accompanied by a warning.\r\n\r\nvar unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;\r\n\r\nfunction markUpdateLaneFromFiberToRoot(sourceFiber, lane) {\r\n  // Update the source fiber's lanes\r\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\r\n  var alternate = sourceFiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\r\n  }\r\n\r\n  {\r\n    if (\r\n      alternate === null &&\r\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\r\n    ) {\r\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\r\n    }\r\n  } // Walk the parent path to the root and update the child lanes.\r\n\r\n  var node = sourceFiber;\r\n  var parent = sourceFiber.return;\r\n\r\n  while (parent !== null) {\r\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\r\n    alternate = parent.alternate;\r\n\r\n    if (alternate !== null) {\r\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\r\n    } else {\r\n      {\r\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\r\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\r\n        }\r\n      }\r\n    }\r\n\r\n    node = parent;\r\n    parent = parent.return;\r\n  }\r\n\r\n  if (node.tag === HostRoot) {\r\n    var root = node.stateNode;\r\n    return root;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nvar UpdateState = 0;\r\nvar ReplaceState = 1;\r\nvar ForceUpdate = 2;\r\nvar CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.\r\n// It should only be read right after calling `processUpdateQueue`, via\r\n// `checkHasForceUpdateAfterProcessing`.\r\n\r\nvar hasForceUpdate = false;\r\nvar didWarnUpdateInsideUpdate;\r\nvar currentlyProcessingQueue;\r\n\r\n{\r\n  didWarnUpdateInsideUpdate = false;\r\n  currentlyProcessingQueue = null;\r\n}\r\n\r\nfunction initializeUpdateQueue(fiber) {\r\n  var queue = {\r\n    baseState: fiber.memoizedState,\r\n    firstBaseUpdate: null,\r\n    lastBaseUpdate: null,\r\n    shared: {\r\n      pending: null,\r\n      interleaved: null,\r\n      lanes: NoLanes\r\n    },\r\n    effects: null\r\n  };\r\n  fiber.updateQueue = queue;\r\n}\r\nfunction cloneUpdateQueue(current, workInProgress) {\r\n  // Clone the update queue from current. Unless it's already a clone.\r\n  var queue = workInProgress.updateQueue;\r\n  var currentQueue = current.updateQueue;\r\n\r\n  if (queue === currentQueue) {\r\n    var clone = {\r\n      baseState: currentQueue.baseState,\r\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\r\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\r\n      shared: currentQueue.shared,\r\n      effects: currentQueue.effects\r\n    };\r\n    workInProgress.updateQueue = clone;\r\n  }\r\n}\r\nfunction createUpdate(eventTime, lane) {\r\n  var update = {\r\n    eventTime: eventTime,\r\n    lane: lane,\r\n    tag: UpdateState,\r\n    payload: null,\r\n    callback: null,\r\n    next: null\r\n  };\r\n  return update;\r\n}\r\nfunction enqueueUpdate(fiber, update, lane) {\r\n  var updateQueue = fiber.updateQueue;\r\n\r\n  if (updateQueue === null) {\r\n    // Only occurs if the fiber has been unmounted.\r\n    return null;\r\n  }\r\n\r\n  var sharedQueue = updateQueue.shared;\r\n\r\n  {\r\n    if (\r\n      currentlyProcessingQueue === sharedQueue &&\r\n      !didWarnUpdateInsideUpdate\r\n    ) {\r\n      error(\r\n        \"An update (setState, replaceState, or forceUpdate) was scheduled \" +\r\n          \"from inside an update function. Update functions should be pure, \" +\r\n          \"with zero side-effects. Consider using componentDidUpdate or a \" +\r\n          \"callback.\"\r\n      );\r\n\r\n      didWarnUpdateInsideUpdate = true;\r\n    }\r\n  }\r\n\r\n  if (isUnsafeClassRenderPhaseUpdate()) {\r\n    // This is an unsafe render phase update. Add directly to the update\r\n    // queue so we can process it immediately during the current render.\r\n    var pending = sharedQueue.pending;\r\n\r\n    if (pending === null) {\r\n      // This is the first update. Create a circular list.\r\n      update.next = update;\r\n    } else {\r\n      update.next = pending.next;\r\n      pending.next = update;\r\n    }\r\n\r\n    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering\r\n    // this fiber. This is for backwards compatibility in the case where you\r\n    // update a different component during render phase than the one that is\r\n    // currently renderings (a pattern that is accompanied by a warning).\r\n\r\n    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);\r\n  } else {\r\n    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);\r\n  }\r\n}\r\nfunction entangleTransitions(root, fiber, lane) {\r\n  var updateQueue = fiber.updateQueue;\r\n\r\n  if (updateQueue === null) {\r\n    // Only occurs if the fiber has been unmounted.\r\n    return;\r\n  }\r\n\r\n  var sharedQueue = updateQueue.shared;\r\n\r\n  if (isTransitionLane(lane)) {\r\n    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must\r\n    // have finished. We can remove them from the shared queue, which represents\r\n    // a superset of the actually pending lanes. In some cases we may entangle\r\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\r\n    // entangle when we should.\r\n\r\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\r\n\r\n    var newQueueLanes = mergeLanes(queueLanes, lane);\r\n    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\r\n    // the lane finished since the last time we entangled it. So we need to\r\n    // entangle it again, just to be sure.\r\n\r\n    markRootEntangled(root, newQueueLanes);\r\n  }\r\n}\r\nfunction enqueueCapturedUpdate(workInProgress, capturedUpdate) {\r\n  // Captured updates are updates that are thrown by a child during the render\r\n  // phase. They should be discarded if the render is aborted. Therefore,\r\n  // we should only put them on the work-in-progress queue, not the current one.\r\n  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.\r\n\r\n  var current = workInProgress.alternate;\r\n\r\n  if (current !== null) {\r\n    var currentQueue = current.updateQueue;\r\n\r\n    if (queue === currentQueue) {\r\n      // The work-in-progress queue is the same as current. This happens when\r\n      // we bail out on a parent fiber that then captures an error thrown by\r\n      // a child. Since we want to append the update only to the work-in\r\n      // -progress queue, we need to clone the updates. We usually clone during\r\n      // processUpdateQueue, but that didn't happen in this case because we\r\n      // skipped over the parent when we bailed out.\r\n      var newFirst = null;\r\n      var newLast = null;\r\n      var firstBaseUpdate = queue.firstBaseUpdate;\r\n\r\n      if (firstBaseUpdate !== null) {\r\n        // Loop through the updates and clone them.\r\n        var update = firstBaseUpdate;\r\n\r\n        do {\r\n          var clone = {\r\n            eventTime: update.eventTime,\r\n            lane: update.lane,\r\n            tag: update.tag,\r\n            payload: update.payload,\r\n            callback: update.callback,\r\n            next: null\r\n          };\r\n\r\n          if (newLast === null) {\r\n            newFirst = newLast = clone;\r\n          } else {\r\n            newLast.next = clone;\r\n            newLast = clone;\r\n          }\r\n\r\n          update = update.next;\r\n        } while (update !== null); // Append the captured update the end of the cloned list.\r\n\r\n        if (newLast === null) {\r\n          newFirst = newLast = capturedUpdate;\r\n        } else {\r\n          newLast.next = capturedUpdate;\r\n          newLast = capturedUpdate;\r\n        }\r\n      } else {\r\n        // There are no base updates.\r\n        newFirst = newLast = capturedUpdate;\r\n      }\r\n\r\n      queue = {\r\n        baseState: currentQueue.baseState,\r\n        firstBaseUpdate: newFirst,\r\n        lastBaseUpdate: newLast,\r\n        shared: currentQueue.shared,\r\n        effects: currentQueue.effects\r\n      };\r\n      workInProgress.updateQueue = queue;\r\n      return;\r\n    }\r\n  } // Append the update to the end of the list.\r\n\r\n  var lastBaseUpdate = queue.lastBaseUpdate;\r\n\r\n  if (lastBaseUpdate === null) {\r\n    queue.firstBaseUpdate = capturedUpdate;\r\n  } else {\r\n    lastBaseUpdate.next = capturedUpdate;\r\n  }\r\n\r\n  queue.lastBaseUpdate = capturedUpdate;\r\n}\r\n\r\nfunction getStateFromUpdate(\r\n  workInProgress,\r\n  queue,\r\n  update,\r\n  prevState,\r\n  nextProps,\r\n  instance\r\n) {\r\n  switch (update.tag) {\r\n    case ReplaceState: {\r\n      var payload = update.payload;\r\n\r\n      if (typeof payload === \"function\") {\r\n        // Updater function\r\n        {\r\n          enterDisallowedContextReadInDEV();\r\n        }\r\n\r\n        var nextState = payload.call(instance, prevState, nextProps);\r\n\r\n        {\r\n          exitDisallowedContextReadInDEV();\r\n        }\r\n\r\n        return nextState;\r\n      } // State object\r\n\r\n      return payload;\r\n    }\r\n\r\n    case CaptureUpdate: {\r\n      workInProgress.flags =\r\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\r\n    }\r\n    // Intentional fallthrough\r\n\r\n    case UpdateState: {\r\n      var _payload = update.payload;\r\n      var partialState;\r\n\r\n      if (typeof _payload === \"function\") {\r\n        // Updater function\r\n        {\r\n          enterDisallowedContextReadInDEV();\r\n        }\r\n\r\n        partialState = _payload.call(instance, prevState, nextProps);\r\n\r\n        {\r\n          exitDisallowedContextReadInDEV();\r\n        }\r\n      } else {\r\n        // Partial state object\r\n        partialState = _payload;\r\n      }\r\n\r\n      if (partialState === null || partialState === undefined) {\r\n        // Null and undefined are treated as no-ops.\r\n        return prevState;\r\n      } // Merge the partial state and the previous state.\r\n\r\n      return assign({}, prevState, partialState);\r\n    }\r\n\r\n    case ForceUpdate: {\r\n      hasForceUpdate = true;\r\n      return prevState;\r\n    }\r\n  }\r\n\r\n  return prevState;\r\n}\r\n\r\nfunction processUpdateQueue(workInProgress, props, instance, renderLanes) {\r\n  // This is always non-null on a ClassComponent or HostRoot\r\n  var queue = workInProgress.updateQueue;\r\n  hasForceUpdate = false;\r\n\r\n  {\r\n    currentlyProcessingQueue = queue.shared;\r\n  }\r\n\r\n  var firstBaseUpdate = queue.firstBaseUpdate;\r\n  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.\r\n\r\n  var pendingQueue = queue.shared.pending;\r\n\r\n  if (pendingQueue !== null) {\r\n    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first\r\n    // and last so that it's non-circular.\r\n\r\n    var lastPendingUpdate = pendingQueue;\r\n    var firstPendingUpdate = lastPendingUpdate.next;\r\n    lastPendingUpdate.next = null; // Append pending updates to base queue\r\n\r\n    if (lastBaseUpdate === null) {\r\n      firstBaseUpdate = firstPendingUpdate;\r\n    } else {\r\n      lastBaseUpdate.next = firstPendingUpdate;\r\n    }\r\n\r\n    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then\r\n    // we need to transfer the updates to that queue, too. Because the base\r\n    // queue is a singly-linked list with no cycles, we can append to both\r\n    // lists and take advantage of structural sharing.\r\n    // TODO: Pass `current` as argument\r\n\r\n    var current = workInProgress.alternate;\r\n\r\n    if (current !== null) {\r\n      // This is always non-null on a ClassComponent or HostRoot\r\n      var currentQueue = current.updateQueue;\r\n      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;\r\n\r\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\r\n        if (currentLastBaseUpdate === null) {\r\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\r\n        } else {\r\n          currentLastBaseUpdate.next = firstPendingUpdate;\r\n        }\r\n\r\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\r\n      }\r\n    }\r\n  } // These values may change as we process the queue.\r\n\r\n  if (firstBaseUpdate !== null) {\r\n    // Iterate through the list of updates to compute the result.\r\n    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\r\n    // from the original lanes.\r\n\r\n    var newLanes = NoLanes;\r\n    var newBaseState = null;\r\n    var newFirstBaseUpdate = null;\r\n    var newLastBaseUpdate = null;\r\n    var update = firstBaseUpdate;\r\n\r\n    do {\r\n      var updateLane = update.lane;\r\n      var updateEventTime = update.eventTime;\r\n\r\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\r\n        // Priority is insufficient. Skip this update. If this is the first\r\n        // skipped update, the previous update/state is the new base\r\n        // update/state.\r\n        var clone = {\r\n          eventTime: updateEventTime,\r\n          lane: updateLane,\r\n          tag: update.tag,\r\n          payload: update.payload,\r\n          callback: update.callback,\r\n          next: null\r\n        };\r\n\r\n        if (newLastBaseUpdate === null) {\r\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\r\n          newBaseState = newState;\r\n        } else {\r\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\r\n        } // Update the remaining priority in the queue.\r\n\r\n        newLanes = mergeLanes(newLanes, updateLane);\r\n      } else {\r\n        // This update does have sufficient priority.\r\n        if (newLastBaseUpdate !== null) {\r\n          var _clone = {\r\n            eventTime: updateEventTime,\r\n            // This update is going to be committed so we never want uncommit\r\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\r\n            // this will never be skipped by the check above.\r\n            lane: NoLane,\r\n            tag: update.tag,\r\n            payload: update.payload,\r\n            callback: update.callback,\r\n            next: null\r\n          };\r\n          newLastBaseUpdate = newLastBaseUpdate.next = _clone;\r\n        } // Process this update.\r\n\r\n        newState = getStateFromUpdate(\r\n          workInProgress,\r\n          queue,\r\n          update,\r\n          newState,\r\n          props,\r\n          instance\r\n        );\r\n        var callback = update.callback;\r\n\r\n        if (\r\n          callback !== null && // If the update was already committed, we should not queue its\r\n          // callback again.\r\n          update.lane !== NoLane\r\n        ) {\r\n          workInProgress.flags |= Callback;\r\n          var effects = queue.effects;\r\n\r\n          if (effects === null) {\r\n            queue.effects = [update];\r\n          } else {\r\n            effects.push(update);\r\n          }\r\n        }\r\n      }\r\n\r\n      update = update.next;\r\n\r\n      if (update === null) {\r\n        pendingQueue = queue.shared.pending;\r\n\r\n        if (pendingQueue === null) {\r\n          break;\r\n        } else {\r\n          // An update was scheduled from inside a reducer. Add the new\r\n          // pending updates to the end of the list and keep processing.\r\n          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we\r\n          // unravel them when transferring them to the base queue.\r\n\r\n          var _firstPendingUpdate = _lastPendingUpdate.next;\r\n          _lastPendingUpdate.next = null;\r\n          update = _firstPendingUpdate;\r\n          queue.lastBaseUpdate = _lastPendingUpdate;\r\n          queue.shared.pending = null;\r\n        }\r\n      }\r\n    } while (true);\r\n\r\n    if (newLastBaseUpdate === null) {\r\n      newBaseState = newState;\r\n    }\r\n\r\n    queue.baseState = newBaseState;\r\n    queue.firstBaseUpdate = newFirstBaseUpdate;\r\n    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to\r\n    // process them during this render, but we do need to track which lanes\r\n    // are remaining.\r\n\r\n    var lastInterleaved = queue.shared.interleaved;\r\n\r\n    if (lastInterleaved !== null) {\r\n      var interleaved = lastInterleaved;\r\n\r\n      do {\r\n        newLanes = mergeLanes(newLanes, interleaved.lane);\r\n        interleaved = interleaved.next;\r\n      } while (interleaved !== lastInterleaved);\r\n    } else if (firstBaseUpdate === null) {\r\n      // `queue.lanes` is used for entangling transitions. We can set it back to\r\n      // zero once the queue is empty.\r\n      queue.shared.lanes = NoLanes;\r\n    } // Set the remaining expiration time to be whatever is remaining in the queue.\r\n    // This should be fine because the only two other things that contribute to\r\n    // expiration time are props and context. We're already in the middle of the\r\n    // begin phase by the time we start processing the queue, so we've already\r\n    // dealt with the props. Context in components that specify\r\n    // shouldComponentUpdate is tricky; but we'll have to account for\r\n    // that regardless.\r\n\r\n    markSkippedUpdateLanes(newLanes);\r\n    workInProgress.lanes = newLanes;\r\n    workInProgress.memoizedState = newState;\r\n  }\r\n\r\n  {\r\n    currentlyProcessingQueue = null;\r\n  }\r\n}\r\n\r\nfunction callCallback(callback, context) {\r\n  if (typeof callback !== \"function\") {\r\n    throw new Error(\r\n      \"Invalid argument passed as callback. Expected a function. Instead \" +\r\n        (\"received: \" + callback)\r\n    );\r\n  }\r\n\r\n  callback.call(context);\r\n}\r\n\r\nfunction resetHasForceUpdateBeforeProcessing() {\r\n  hasForceUpdate = false;\r\n}\r\nfunction checkHasForceUpdateAfterProcessing() {\r\n  return hasForceUpdate;\r\n}\r\nfunction commitUpdateQueue(finishedWork, finishedQueue, instance) {\r\n  // Commit the effects\r\n  var effects = finishedQueue.effects;\r\n  finishedQueue.effects = null;\r\n\r\n  if (effects !== null) {\r\n    for (var i = 0; i < effects.length; i++) {\r\n      var effect = effects[i];\r\n      var callback = effect.callback;\r\n\r\n      if (callback !== null) {\r\n        effect.callback = null;\r\n        callCallback(callback, instance);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.\r\n// We'll use it to determine whether we need to initialize legacy refs.\r\n\r\nvar emptyRefsObject = new React.Component().refs;\r\nvar didWarnAboutStateAssignmentForComponent;\r\nvar didWarnAboutUninitializedState;\r\nvar didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\r\nvar didWarnAboutLegacyLifecyclesAndDerivedState;\r\nvar didWarnAboutUndefinedDerivedState;\r\nvar warnOnUndefinedDerivedState;\r\nvar warnOnInvalidCallback;\r\nvar didWarnAboutDirectlyAssigningPropsToState;\r\nvar didWarnAboutContextTypeAndContextTypes;\r\nvar didWarnAboutInvalidateContextType;\r\n\r\n{\r\n  didWarnAboutStateAssignmentForComponent = new Set();\r\n  didWarnAboutUninitializedState = new Set();\r\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\r\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\r\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\r\n  didWarnAboutUndefinedDerivedState = new Set();\r\n  didWarnAboutContextTypeAndContextTypes = new Set();\r\n  didWarnAboutInvalidateContextType = new Set();\r\n  var didWarnOnInvalidCallback = new Set();\r\n\r\n  warnOnInvalidCallback = function(callback, callerName) {\r\n    if (callback === null || typeof callback === \"function\") {\r\n      return;\r\n    }\r\n\r\n    var key = callerName + \"_\" + callback;\r\n\r\n    if (!didWarnOnInvalidCallback.has(key)) {\r\n      didWarnOnInvalidCallback.add(key);\r\n\r\n      error(\r\n        \"%s(...): Expected the last optional `callback` argument to be a \" +\r\n          \"function. Instead received: %s.\",\r\n        callerName,\r\n        callback\r\n      );\r\n    }\r\n  };\r\n\r\n  warnOnUndefinedDerivedState = function(type, partialState) {\r\n    if (partialState === undefined) {\r\n      var componentName = getComponentNameFromType(type) || \"Component\";\r\n\r\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\r\n        didWarnAboutUndefinedDerivedState.add(componentName);\r\n\r\n        error(\r\n          \"%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. \" +\r\n            \"You have returned undefined.\",\r\n          componentName\r\n        );\r\n      }\r\n    }\r\n  }; // This is so gross but it's at least non-critical and can be removed if\r\n  // it causes problems. This is meant to give a nicer error message for\r\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\r\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\r\n  // exception.\r\n\r\n  Object.defineProperty(fakeInternalInstance, \"_processChildContext\", {\r\n    enumerable: false,\r\n    value: function() {\r\n      throw new Error(\r\n        \"_processChildContext is not available in React 16+. This likely \" +\r\n          \"means you have multiple copies of React and are attempting to nest \" +\r\n          \"a React 15 tree inside a React 16 tree using \" +\r\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\r\n          \"to make sure you have only one copy of React (and ideally, switch \" +\r\n          \"to ReactDOM.createPortal).\"\r\n      );\r\n    }\r\n  });\r\n  Object.freeze(fakeInternalInstance);\r\n}\r\n\r\nfunction applyDerivedStateFromProps(\r\n  workInProgress,\r\n  ctor,\r\n  getDerivedStateFromProps,\r\n  nextProps\r\n) {\r\n  var prevState = workInProgress.memoizedState;\r\n  var partialState = getDerivedStateFromProps(nextProps, prevState);\r\n\r\n  {\r\n    warnOnUndefinedDerivedState(ctor, partialState);\r\n  } // Merge the partial state and the previous state.\r\n\r\n  var memoizedState =\r\n    partialState === null || partialState === undefined\r\n      ? prevState\r\n      : assign({}, prevState, partialState);\r\n  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\r\n  // base state.\r\n\r\n  if (workInProgress.lanes === NoLanes) {\r\n    // Queue is always non-null for classes\r\n    var updateQueue = workInProgress.updateQueue;\r\n    updateQueue.baseState = memoizedState;\r\n  }\r\n}\r\n\r\nvar classComponentUpdater = {\r\n  isMounted: isMounted,\r\n  enqueueSetState: function(inst, payload, callback) {\r\n    var fiber = get(inst);\r\n    var eventTime = requestEventTime();\r\n    var lane = requestUpdateLane(fiber);\r\n    var update = createUpdate(eventTime, lane);\r\n    update.payload = payload;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback(callback, \"setState\");\r\n      }\r\n\r\n      update.callback = callback;\r\n    }\r\n\r\n    var root = enqueueUpdate(fiber, update, lane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitions(root, fiber, lane);\r\n    }\r\n  },\r\n  enqueueReplaceState: function(inst, payload, callback) {\r\n    var fiber = get(inst);\r\n    var eventTime = requestEventTime();\r\n    var lane = requestUpdateLane(fiber);\r\n    var update = createUpdate(eventTime, lane);\r\n    update.tag = ReplaceState;\r\n    update.payload = payload;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback(callback, \"replaceState\");\r\n      }\r\n\r\n      update.callback = callback;\r\n    }\r\n\r\n    var root = enqueueUpdate(fiber, update, lane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitions(root, fiber, lane);\r\n    }\r\n  },\r\n  enqueueForceUpdate: function(inst, callback) {\r\n    var fiber = get(inst);\r\n    var eventTime = requestEventTime();\r\n    var lane = requestUpdateLane(fiber);\r\n    var update = createUpdate(eventTime, lane);\r\n    update.tag = ForceUpdate;\r\n\r\n    if (callback !== undefined && callback !== null) {\r\n      {\r\n        warnOnInvalidCallback(callback, \"forceUpdate\");\r\n      }\r\n\r\n      update.callback = callback;\r\n    }\r\n\r\n    var root = enqueueUpdate(fiber, update, lane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitions(root, fiber, lane);\r\n    }\r\n  }\r\n};\r\n\r\nfunction checkShouldComponentUpdate(\r\n  workInProgress,\r\n  ctor,\r\n  oldProps,\r\n  newProps,\r\n  oldState,\r\n  newState,\r\n  nextContext\r\n) {\r\n  var instance = workInProgress.stateNode;\r\n\r\n  if (typeof instance.shouldComponentUpdate === \"function\") {\r\n    var shouldUpdate = instance.shouldComponentUpdate(\r\n      newProps,\r\n      newState,\r\n      nextContext\r\n    );\r\n\r\n    {\r\n      if (shouldUpdate === undefined) {\r\n        error(\r\n          \"%s.shouldComponentUpdate(): Returned undefined instead of a \" +\r\n            \"boolean value. Make sure to return true or false.\",\r\n          getComponentNameFromType(ctor) || \"Component\"\r\n        );\r\n      }\r\n    }\r\n\r\n    return shouldUpdate;\r\n  }\r\n\r\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\r\n    return (\r\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\r\n    );\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction checkClassInstance(workInProgress, ctor, newProps) {\r\n  var instance = workInProgress.stateNode;\r\n\r\n  {\r\n    var name = getComponentNameFromType(ctor) || \"Component\";\r\n    var renderPresent = instance.render;\r\n\r\n    if (!renderPresent) {\r\n      if (ctor.prototype && typeof ctor.prototype.render === \"function\") {\r\n        error(\r\n          \"%s(...): No `render` method found on the returned component \" +\r\n            \"instance: did you accidentally return an object from the constructor?\",\r\n          name\r\n        );\r\n      } else {\r\n        error(\r\n          \"%s(...): No `render` method found on the returned component \" +\r\n            \"instance: you may have forgotten to define `render`.\",\r\n          name\r\n        );\r\n      }\r\n    }\r\n\r\n    if (\r\n      instance.getInitialState &&\r\n      !instance.getInitialState.isReactClassApproved &&\r\n      !instance.state\r\n    ) {\r\n      error(\r\n        \"getInitialState was defined on %s, a plain JavaScript class. \" +\r\n          \"This is only supported for classes created using React.createClass. \" +\r\n          \"Did you mean to define a state property instead?\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (\r\n      instance.getDefaultProps &&\r\n      !instance.getDefaultProps.isReactClassApproved\r\n    ) {\r\n      error(\r\n        \"getDefaultProps was defined on %s, a plain JavaScript class. \" +\r\n          \"This is only supported for classes created using React.createClass. \" +\r\n          \"Use a static property to define defaultProps instead.\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (instance.propTypes) {\r\n      error(\r\n        \"propTypes was defined as an instance property on %s. Use a static \" +\r\n          \"property to define propTypes instead.\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (instance.contextType) {\r\n      error(\r\n        \"contextType was defined as an instance property on %s. Use a static \" +\r\n          \"property to define contextType instead.\",\r\n        name\r\n      );\r\n    }\r\n\r\n    {\r\n      if (instance.contextTypes) {\r\n        error(\r\n          \"contextTypes was defined as an instance property on %s. Use a static \" +\r\n            \"property to define contextTypes instead.\",\r\n          name\r\n        );\r\n      }\r\n\r\n      if (\r\n        ctor.contextType &&\r\n        ctor.contextTypes &&\r\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\r\n      ) {\r\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\r\n\r\n        error(\r\n          \"%s declares both contextTypes and contextType static properties. \" +\r\n            \"The legacy contextTypes property will be ignored.\",\r\n          name\r\n        );\r\n      }\r\n    }\r\n\r\n    if (typeof instance.componentShouldUpdate === \"function\") {\r\n      error(\r\n        \"%s has a method called \" +\r\n          \"componentShouldUpdate(). Did you mean shouldComponentUpdate()? \" +\r\n          \"The name is phrased as a question because the function is \" +\r\n          \"expected to return a value.\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (\r\n      ctor.prototype &&\r\n      ctor.prototype.isPureReactComponent &&\r\n      typeof instance.shouldComponentUpdate !== \"undefined\"\r\n    ) {\r\n      error(\r\n        \"%s has a method called shouldComponentUpdate(). \" +\r\n          \"shouldComponentUpdate should not be used when extending React.PureComponent. \" +\r\n          \"Please extend React.Component if shouldComponentUpdate is used.\",\r\n        getComponentNameFromType(ctor) || \"A pure component\"\r\n      );\r\n    }\r\n\r\n    if (typeof instance.componentDidUnmount === \"function\") {\r\n      error(\r\n        \"%s has a method called \" +\r\n          \"componentDidUnmount(). But there is no such lifecycle method. \" +\r\n          \"Did you mean componentWillUnmount()?\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (typeof instance.componentDidReceiveProps === \"function\") {\r\n      error(\r\n        \"%s has a method called \" +\r\n          \"componentDidReceiveProps(). But there is no such lifecycle method. \" +\r\n          \"If you meant to update the state in response to changing props, \" +\r\n          \"use componentWillReceiveProps(). If you meant to fetch data or \" +\r\n          \"run side-effects or mutations after React has updated the UI, use componentDidUpdate().\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (typeof instance.componentWillRecieveProps === \"function\") {\r\n      error(\r\n        \"%s has a method called \" +\r\n          \"componentWillRecieveProps(). Did you mean componentWillReceiveProps()?\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (typeof instance.UNSAFE_componentWillRecieveProps === \"function\") {\r\n      error(\r\n        \"%s has a method called \" +\r\n          \"UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?\",\r\n        name\r\n      );\r\n    }\r\n\r\n    var hasMutatedProps = instance.props !== newProps;\r\n\r\n    if (instance.props !== undefined && hasMutatedProps) {\r\n      error(\r\n        \"%s(...): When calling super() in `%s`, make sure to pass \" +\r\n          \"up the same props that your component's constructor was passed.\",\r\n        name,\r\n        name\r\n      );\r\n    }\r\n\r\n    if (instance.defaultProps) {\r\n      error(\r\n        \"Setting defaultProps as an instance property on %s is not supported and will be ignored.\" +\r\n          \" Instead, define defaultProps as a static property on %s.\",\r\n        name,\r\n        name\r\n      );\r\n    }\r\n\r\n    if (\r\n      typeof instance.getSnapshotBeforeUpdate === \"function\" &&\r\n      typeof instance.componentDidUpdate !== \"function\" &&\r\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\r\n    ) {\r\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\r\n\r\n      error(\r\n        \"%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). \" +\r\n          \"This component defines getSnapshotBeforeUpdate() only.\",\r\n        getComponentNameFromType(ctor)\r\n      );\r\n    }\r\n\r\n    if (typeof instance.getDerivedStateFromProps === \"function\") {\r\n      error(\r\n        \"%s: getDerivedStateFromProps() is defined as an instance method \" +\r\n          \"and will be ignored. Instead, declare it as a static method.\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (typeof instance.getDerivedStateFromError === \"function\") {\r\n      error(\r\n        \"%s: getDerivedStateFromError() is defined as an instance method \" +\r\n          \"and will be ignored. Instead, declare it as a static method.\",\r\n        name\r\n      );\r\n    }\r\n\r\n    if (typeof ctor.getSnapshotBeforeUpdate === \"function\") {\r\n      error(\r\n        \"%s: getSnapshotBeforeUpdate() is defined as a static method \" +\r\n          \"and will be ignored. Instead, declare it as an instance method.\",\r\n        name\r\n      );\r\n    }\r\n\r\n    var _state = instance.state;\r\n\r\n    if (_state && (typeof _state !== \"object\" || isArray(_state))) {\r\n      error(\"%s.state: must be set to an object or null\", name);\r\n    }\r\n\r\n    if (\r\n      typeof instance.getChildContext === \"function\" &&\r\n      typeof ctor.childContextTypes !== \"object\"\r\n    ) {\r\n      error(\r\n        \"%s.getChildContext(): childContextTypes must be defined in order to \" +\r\n          \"use getChildContext().\",\r\n        name\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction adoptClassInstance(workInProgress, instance) {\r\n  instance.updater = classComponentUpdater;\r\n  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates\r\n\r\n  set(instance, workInProgress);\r\n\r\n  {\r\n    instance._reactInternalInstance = fakeInternalInstance;\r\n  }\r\n}\r\n\r\nfunction constructClassInstance(workInProgress, ctor, props) {\r\n  var isLegacyContextConsumer = false;\r\n  var unmaskedContext = emptyContextObject;\r\n  var context = emptyContextObject;\r\n  var contextType = ctor.contextType;\r\n\r\n  {\r\n    if (\"contextType\" in ctor) {\r\n      var isValid = // Allow null for conditional declaration\r\n        contextType === null ||\r\n        (contextType !== undefined &&\r\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\r\n          contextType._context === undefined); // Not a <Context.Consumer>\r\n\r\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\r\n        didWarnAboutInvalidateContextType.add(ctor);\r\n        var addendum = \"\";\r\n\r\n        if (contextType === undefined) {\r\n          addendum =\r\n            \" However, it is set to undefined. \" +\r\n            \"This can be caused by a typo or by mixing up named and default imports. \" +\r\n            \"This can also happen due to a circular dependency, so \" +\r\n            \"try moving the createContext() call to a separate file.\";\r\n        } else if (typeof contextType !== \"object\") {\r\n          addendum = \" However, it is set to a \" + typeof contextType + \".\";\r\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\r\n          addendum = \" Did you accidentally pass the Context.Provider instead?\";\r\n        } else if (contextType._context !== undefined) {\r\n          // <Context.Consumer>\r\n          addendum = \" Did you accidentally pass the Context.Consumer instead?\";\r\n        } else {\r\n          addendum =\r\n            \" However, it is set to an object with keys {\" +\r\n            Object.keys(contextType).join(\", \") +\r\n            \"}.\";\r\n        }\r\n\r\n        error(\r\n          \"%s defines an invalid contextType. \" +\r\n            \"contextType should point to the Context object returned by React.createContext().%s\",\r\n          getComponentNameFromType(ctor) || \"Component\",\r\n          addendum\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (typeof contextType === \"object\" && contextType !== null) {\r\n    context = readContext(contextType);\r\n  } else {\r\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    var contextTypes = ctor.contextTypes;\r\n    isLegacyContextConsumer =\r\n      contextTypes !== null && contextTypes !== undefined;\r\n    context = isLegacyContextConsumer\r\n      ? getMaskedContext(workInProgress, unmaskedContext)\r\n      : emptyContextObject;\r\n  }\r\n\r\n  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.\r\n\r\n  var state = (workInProgress.memoizedState =\r\n    instance.state !== null && instance.state !== undefined\r\n      ? instance.state\r\n      : null);\r\n  adoptClassInstance(workInProgress, instance);\r\n\r\n  {\r\n    if (typeof ctor.getDerivedStateFromProps === \"function\" && state === null) {\r\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\r\n\r\n      if (!didWarnAboutUninitializedState.has(componentName)) {\r\n        didWarnAboutUninitializedState.add(componentName);\r\n\r\n        error(\r\n          \"`%s` uses `getDerivedStateFromProps` but its initial state is \" +\r\n            \"%s. This is not recommended. Instead, define the initial state by \" +\r\n            \"assigning an object to `this.state` in the constructor of `%s`. \" +\r\n            \"This ensures that `getDerivedStateFromProps` arguments have a consistent shape.\",\r\n          componentName,\r\n          instance.state === null ? \"null\" : \"undefined\",\r\n          componentName\r\n        );\r\n      }\r\n    } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\r\n    // Warn about these lifecycles if they are present.\r\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\r\n\r\n    if (\r\n      typeof ctor.getDerivedStateFromProps === \"function\" ||\r\n      typeof instance.getSnapshotBeforeUpdate === \"function\"\r\n    ) {\r\n      var foundWillMountName = null;\r\n      var foundWillReceivePropsName = null;\r\n      var foundWillUpdateName = null;\r\n\r\n      if (\r\n        typeof instance.componentWillMount === \"function\" &&\r\n        instance.componentWillMount.__suppressDeprecationWarning !== true\r\n      ) {\r\n        foundWillMountName = \"componentWillMount\";\r\n      } else if (typeof instance.UNSAFE_componentWillMount === \"function\") {\r\n        foundWillMountName = \"UNSAFE_componentWillMount\";\r\n      }\r\n\r\n      if (\r\n        typeof instance.componentWillReceiveProps === \"function\" &&\r\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\r\n      ) {\r\n        foundWillReceivePropsName = \"componentWillReceiveProps\";\r\n      } else if (\r\n        typeof instance.UNSAFE_componentWillReceiveProps === \"function\"\r\n      ) {\r\n        foundWillReceivePropsName = \"UNSAFE_componentWillReceiveProps\";\r\n      }\r\n\r\n      if (\r\n        typeof instance.componentWillUpdate === \"function\" &&\r\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\r\n      ) {\r\n        foundWillUpdateName = \"componentWillUpdate\";\r\n      } else if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\r\n        foundWillUpdateName = \"UNSAFE_componentWillUpdate\";\r\n      }\r\n\r\n      if (\r\n        foundWillMountName !== null ||\r\n        foundWillReceivePropsName !== null ||\r\n        foundWillUpdateName !== null\r\n      ) {\r\n        var _componentName = getComponentNameFromType(ctor) || \"Component\";\r\n\r\n        var newApiName =\r\n          typeof ctor.getDerivedStateFromProps === \"function\"\r\n            ? \"getDerivedStateFromProps()\"\r\n            : \"getSnapshotBeforeUpdate()\";\r\n\r\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {\r\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);\r\n\r\n          error(\r\n            \"Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n\" +\r\n              \"%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n\" +\r\n              \"The above lifecycles should be removed. Learn more about this warning here:\\n\" +\r\n              \"https://reactjs.org/link/unsafe-component-lifecycles\",\r\n            _componentName,\r\n            newApiName,\r\n            foundWillMountName !== null ? \"\\n  \" + foundWillMountName : \"\",\r\n            foundWillReceivePropsName !== null\r\n              ? \"\\n  \" + foundWillReceivePropsName\r\n              : \"\",\r\n            foundWillUpdateName !== null ? \"\\n  \" + foundWillUpdateName : \"\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n  } // Cache unmasked context so we can avoid recreating masked context unless necessary.\r\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\r\n\r\n  if (isLegacyContextConsumer) {\r\n    cacheContext(workInProgress, unmaskedContext, context);\r\n  }\r\n\r\n  return instance;\r\n}\r\n\r\nfunction callComponentWillMount(workInProgress, instance) {\r\n  var oldState = instance.state;\r\n\r\n  if (typeof instance.componentWillMount === \"function\") {\r\n    instance.componentWillMount();\r\n  }\r\n\r\n  if (typeof instance.UNSAFE_componentWillMount === \"function\") {\r\n    instance.UNSAFE_componentWillMount();\r\n  }\r\n\r\n  if (oldState !== instance.state) {\r\n    {\r\n      error(\r\n        \"%s.componentWillMount(): Assigning directly to this.state is \" +\r\n          \"deprecated (except inside a component's \" +\r\n          \"constructor). Use setState instead.\",\r\n        getComponentNameFromFiber(workInProgress) || \"Component\"\r\n      );\r\n    }\r\n\r\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\r\n  }\r\n}\r\n\r\nfunction callComponentWillReceiveProps(\r\n  workInProgress,\r\n  instance,\r\n  newProps,\r\n  nextContext\r\n) {\r\n  var oldState = instance.state;\r\n\r\n  if (typeof instance.componentWillReceiveProps === \"function\") {\r\n    instance.componentWillReceiveProps(newProps, nextContext);\r\n  }\r\n\r\n  if (typeof instance.UNSAFE_componentWillReceiveProps === \"function\") {\r\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\r\n  }\r\n\r\n  if (instance.state !== oldState) {\r\n    {\r\n      var componentName =\r\n        getComponentNameFromFiber(workInProgress) || \"Component\";\r\n\r\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\r\n        didWarnAboutStateAssignmentForComponent.add(componentName);\r\n\r\n        error(\r\n          \"%s.componentWillReceiveProps(): Assigning directly to \" +\r\n            \"this.state is deprecated (except inside a component's \" +\r\n            \"constructor). Use setState instead.\",\r\n          componentName\r\n        );\r\n      }\r\n    }\r\n\r\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\r\n  }\r\n} // Invokes the mount life-cycles on a previously never rendered instance.\r\n\r\nfunction mountClassInstance(workInProgress, ctor, newProps, renderLanes) {\r\n  {\r\n    checkClassInstance(workInProgress, ctor, newProps);\r\n  }\r\n\r\n  var instance = workInProgress.stateNode;\r\n  instance.props = newProps;\r\n  instance.state = workInProgress.memoizedState;\r\n  instance.refs = emptyRefsObject;\r\n  initializeUpdateQueue(workInProgress);\r\n  var contextType = ctor.contextType;\r\n\r\n  if (typeof contextType === \"object\" && contextType !== null) {\r\n    instance.context = readContext(contextType);\r\n  } else {\r\n    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\r\n  }\r\n\r\n  {\r\n    if (instance.state === newProps) {\r\n      var componentName = getComponentNameFromType(ctor) || \"Component\";\r\n\r\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\r\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\r\n\r\n        error(\r\n          \"%s: It is not recommended to assign props directly to state \" +\r\n            \"because updates to props won't be reflected in state. \" +\r\n            \"In most cases, it is better to use props directly.\",\r\n          componentName\r\n        );\r\n      }\r\n    }\r\n\r\n    if (workInProgress.mode & StrictLegacyMode) {\r\n      ReactStrictModeWarnings.recordLegacyContextWarning(\r\n        workInProgress,\r\n        instance\r\n      );\r\n    }\r\n\r\n    {\r\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\r\n        workInProgress,\r\n        instance\r\n      );\r\n    }\r\n  }\r\n\r\n  instance.state = workInProgress.memoizedState;\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n\r\n  if (typeof getDerivedStateFromProps === \"function\") {\r\n    applyDerivedStateFromProps(\r\n      workInProgress,\r\n      ctor,\r\n      getDerivedStateFromProps,\r\n      newProps\r\n    );\r\n    instance.state = workInProgress.memoizedState;\r\n  } // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n\r\n  if (\r\n    typeof ctor.getDerivedStateFromProps !== \"function\" &&\r\n    typeof instance.getSnapshotBeforeUpdate !== \"function\" &&\r\n    (typeof instance.UNSAFE_componentWillMount === \"function\" ||\r\n      typeof instance.componentWillMount === \"function\")\r\n  ) {\r\n    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's\r\n    // process them now.\r\n\r\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\r\n    instance.state = workInProgress.memoizedState;\r\n  }\r\n\r\n  if (typeof instance.componentDidMount === \"function\") {\r\n    var fiberFlags = Update;\r\n\r\n    workInProgress.flags |= fiberFlags;\r\n  }\r\n}\r\n\r\nfunction resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {\r\n  var instance = workInProgress.stateNode;\r\n  var oldProps = workInProgress.memoizedProps;\r\n  instance.props = oldProps;\r\n  var oldContext = instance.context;\r\n  var contextType = ctor.contextType;\r\n  var nextContext = emptyContextObject;\r\n\r\n  if (typeof contextType === \"object\" && contextType !== null) {\r\n    nextContext = readContext(contextType);\r\n  } else {\r\n    var nextLegacyUnmaskedContext = getUnmaskedContext(\r\n      workInProgress,\r\n      ctor,\r\n      true\r\n    );\r\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\r\n  }\r\n\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n  var hasNewLifecycles =\r\n    typeof getDerivedStateFromProps === \"function\" ||\r\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\r\n  // ever the previously attempted to render - not the \"current\". However,\r\n  // during componentDidUpdate we pass the \"current\" props.\r\n  // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n\r\n  if (\r\n    !hasNewLifecycles &&\r\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\r\n      typeof instance.componentWillReceiveProps === \"function\")\r\n  ) {\r\n    if (oldProps !== newProps || oldContext !== nextContext) {\r\n      callComponentWillReceiveProps(\r\n        workInProgress,\r\n        instance,\r\n        newProps,\r\n        nextContext\r\n      );\r\n    }\r\n  }\r\n\r\n  resetHasForceUpdateBeforeProcessing();\r\n  var oldState = workInProgress.memoizedState;\r\n  var newState = (instance.state = oldState);\r\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\r\n  newState = workInProgress.memoizedState;\r\n\r\n  if (\r\n    oldProps === newProps &&\r\n    oldState === newState &&\r\n    !hasContextChanged() &&\r\n    !checkHasForceUpdateAfterProcessing()\r\n  ) {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidMount === \"function\") {\r\n      var fiberFlags = Update;\r\n\r\n      workInProgress.flags |= fiberFlags;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  if (typeof getDerivedStateFromProps === \"function\") {\r\n    applyDerivedStateFromProps(\r\n      workInProgress,\r\n      ctor,\r\n      getDerivedStateFromProps,\r\n      newProps\r\n    );\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n\r\n  var shouldUpdate =\r\n    checkHasForceUpdateAfterProcessing() ||\r\n    checkShouldComponentUpdate(\r\n      workInProgress,\r\n      ctor,\r\n      oldProps,\r\n      newProps,\r\n      oldState,\r\n      newState,\r\n      nextContext\r\n    );\r\n\r\n  if (shouldUpdate) {\r\n    // In order to support react-lifecycles-compat polyfilled components,\r\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n    if (\r\n      !hasNewLifecycles &&\r\n      (typeof instance.UNSAFE_componentWillMount === \"function\" ||\r\n        typeof instance.componentWillMount === \"function\")\r\n    ) {\r\n      if (typeof instance.componentWillMount === \"function\") {\r\n        instance.componentWillMount();\r\n      }\r\n\r\n      if (typeof instance.UNSAFE_componentWillMount === \"function\") {\r\n        instance.UNSAFE_componentWillMount();\r\n      }\r\n    }\r\n\r\n    if (typeof instance.componentDidMount === \"function\") {\r\n      var _fiberFlags = Update;\r\n\r\n      workInProgress.flags |= _fiberFlags;\r\n    }\r\n  } else {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidMount === \"function\") {\r\n      var _fiberFlags2 = Update;\r\n\r\n      workInProgress.flags |= _fiberFlags2;\r\n    } // If shouldComponentUpdate returned false, we should still update the\r\n    // memoized state to indicate that this work can be reused.\r\n\r\n    workInProgress.memoizedProps = newProps;\r\n    workInProgress.memoizedState = newState;\r\n  } // Update the existing instance's state, props, and context pointers even\r\n  // if shouldComponentUpdate returns false.\r\n\r\n  instance.props = newProps;\r\n  instance.state = newState;\r\n  instance.context = nextContext;\r\n  return shouldUpdate;\r\n} // Invokes the update life-cycles and returns false if it shouldn't rerender.\r\n\r\nfunction updateClassInstance(\r\n  current,\r\n  workInProgress,\r\n  ctor,\r\n  newProps,\r\n  renderLanes\r\n) {\r\n  var instance = workInProgress.stateNode;\r\n  cloneUpdateQueue(current, workInProgress);\r\n  var unresolvedOldProps = workInProgress.memoizedProps;\r\n  var oldProps =\r\n    workInProgress.type === workInProgress.elementType\r\n      ? unresolvedOldProps\r\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\r\n  instance.props = oldProps;\r\n  var unresolvedNewProps = workInProgress.pendingProps;\r\n  var oldContext = instance.context;\r\n  var contextType = ctor.contextType;\r\n  var nextContext = emptyContextObject;\r\n\r\n  if (typeof contextType === \"object\" && contextType !== null) {\r\n    nextContext = readContext(contextType);\r\n  } else {\r\n    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\r\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\r\n  }\r\n\r\n  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;\r\n  var hasNewLifecycles =\r\n    typeof getDerivedStateFromProps === \"function\" ||\r\n    typeof instance.getSnapshotBeforeUpdate === \"function\"; // Note: During these life-cycles, instance.props/instance.state are what\r\n  // ever the previously attempted to render - not the \"current\". However,\r\n  // during componentDidUpdate we pass the \"current\" props.\r\n  // In order to support react-lifecycles-compat polyfilled components,\r\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n\r\n  if (\r\n    !hasNewLifecycles &&\r\n    (typeof instance.UNSAFE_componentWillReceiveProps === \"function\" ||\r\n      typeof instance.componentWillReceiveProps === \"function\")\r\n  ) {\r\n    if (\r\n      unresolvedOldProps !== unresolvedNewProps ||\r\n      oldContext !== nextContext\r\n    ) {\r\n      callComponentWillReceiveProps(\r\n        workInProgress,\r\n        instance,\r\n        newProps,\r\n        nextContext\r\n      );\r\n    }\r\n  }\r\n\r\n  resetHasForceUpdateBeforeProcessing();\r\n  var oldState = workInProgress.memoizedState;\r\n  var newState = (instance.state = oldState);\r\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\r\n  newState = workInProgress.memoizedState;\r\n\r\n  if (\r\n    unresolvedOldProps === unresolvedNewProps &&\r\n    oldState === newState &&\r\n    !hasContextChanged() &&\r\n    !checkHasForceUpdateAfterProcessing() &&\r\n    !enableLazyContextPropagation\r\n  ) {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidUpdate === \"function\") {\r\n      if (\r\n        unresolvedOldProps !== current.memoizedProps ||\r\n        oldState !== current.memoizedState\r\n      ) {\r\n        workInProgress.flags |= Update;\r\n      }\r\n    }\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\r\n      if (\r\n        unresolvedOldProps !== current.memoizedProps ||\r\n        oldState !== current.memoizedState\r\n      ) {\r\n        workInProgress.flags |= Snapshot;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  if (typeof getDerivedStateFromProps === \"function\") {\r\n    applyDerivedStateFromProps(\r\n      workInProgress,\r\n      ctor,\r\n      getDerivedStateFromProps,\r\n      newProps\r\n    );\r\n    newState = workInProgress.memoizedState;\r\n  }\r\n\r\n  var shouldUpdate =\r\n    checkHasForceUpdateAfterProcessing() ||\r\n    checkShouldComponentUpdate(\r\n      workInProgress,\r\n      ctor,\r\n      oldProps,\r\n      newProps,\r\n      oldState,\r\n      newState,\r\n      nextContext\r\n    ) || // TODO: In some cases, we'll end up checking if context has changed twice,\r\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\r\n    // but I'm loath to refactor this function. This only happens for memoized\r\n    // components so it's not that common.\r\n    enableLazyContextPropagation;\r\n\r\n  if (shouldUpdate) {\r\n    // In order to support react-lifecycles-compat polyfilled components,\r\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\r\n    if (\r\n      !hasNewLifecycles &&\r\n      (typeof instance.UNSAFE_componentWillUpdate === \"function\" ||\r\n        typeof instance.componentWillUpdate === \"function\")\r\n    ) {\r\n      if (typeof instance.componentWillUpdate === \"function\") {\r\n        instance.componentWillUpdate(newProps, newState, nextContext);\r\n      }\r\n\r\n      if (typeof instance.UNSAFE_componentWillUpdate === \"function\") {\r\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\r\n      }\r\n    }\r\n\r\n    if (typeof instance.componentDidUpdate === \"function\") {\r\n      workInProgress.flags |= Update;\r\n    }\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\r\n      workInProgress.flags |= Snapshot;\r\n    }\r\n  } else {\r\n    // If an update was already in progress, we should schedule an Update\r\n    // effect even though we're bailing out, so that cWU/cDU are called.\r\n    if (typeof instance.componentDidUpdate === \"function\") {\r\n      if (\r\n        unresolvedOldProps !== current.memoizedProps ||\r\n        oldState !== current.memoizedState\r\n      ) {\r\n        workInProgress.flags |= Update;\r\n      }\r\n    }\r\n\r\n    if (typeof instance.getSnapshotBeforeUpdate === \"function\") {\r\n      if (\r\n        unresolvedOldProps !== current.memoizedProps ||\r\n        oldState !== current.memoizedState\r\n      ) {\r\n        workInProgress.flags |= Snapshot;\r\n      }\r\n    } // If shouldComponentUpdate returned false, we should still update the\r\n    // memoized props/state to indicate that this work can be reused.\r\n\r\n    workInProgress.memoizedProps = newProps;\r\n    workInProgress.memoizedState = newState;\r\n  } // Update the existing instance's state, props, and context pointers even\r\n  // if shouldComponentUpdate returns false.\r\n\r\n  instance.props = newProps;\r\n  instance.state = newState;\r\n  instance.context = nextContext;\r\n  return shouldUpdate;\r\n}\r\n\r\nvar didWarnAboutMaps;\r\nvar didWarnAboutGenerators;\r\nvar didWarnAboutStringRefs;\r\nvar ownerHasKeyUseWarning;\r\nvar ownerHasFunctionTypeWarning;\r\n\r\nvar warnForMissingKey = function(child, returnFiber) {};\r\n\r\n{\r\n  didWarnAboutMaps = false;\r\n  didWarnAboutGenerators = false;\r\n  didWarnAboutStringRefs = {};\r\n  /**\r\n   * Warn if there's no key explicitly set on dynamic arrays of children or\r\n   * object keys are not valid. This allows us to keep track of children between\r\n   * updates.\r\n   */\r\n\r\n  ownerHasKeyUseWarning = {};\r\n  ownerHasFunctionTypeWarning = {};\r\n\r\n  warnForMissingKey = function(child, returnFiber) {\r\n    if (child === null || typeof child !== \"object\") {\r\n      return;\r\n    }\r\n\r\n    if (!child._store || child._store.validated || child.key != null) {\r\n      return;\r\n    }\r\n\r\n    if (typeof child._store !== \"object\") {\r\n      throw new Error(\r\n        \"React Component in warnForMissingKey should have a _store. \" +\r\n          \"This error is likely caused by a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    child._store.validated = true;\r\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\r\n\r\n    if (ownerHasKeyUseWarning[componentName]) {\r\n      return;\r\n    }\r\n\r\n    ownerHasKeyUseWarning[componentName] = true;\r\n\r\n    error(\r\n      \"Each child in a list should have a unique \" +\r\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\r\n        \"more information.\"\r\n    );\r\n  };\r\n}\r\n\r\nfunction coerceRef(returnFiber, current, element) {\r\n  var mixedRef = element.ref;\r\n\r\n  if (\r\n    mixedRef !== null &&\r\n    typeof mixedRef !== \"function\" &&\r\n    typeof mixedRef !== \"object\"\r\n  ) {\r\n    {\r\n      // TODO: Clean this up once we turn on the string ref warning for\r\n      // everyone, because the strict mode case will no longer be relevant\r\n      if (\r\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs\r\n        // because these cannot be automatically converted to an arrow function\r\n        // using a codemod. Therefore, we don't have to warn about string refs again.\r\n        !(\r\n          element._owner &&\r\n          element._self &&\r\n          element._owner.stateNode !== element._self\r\n        )\r\n      ) {\r\n        var componentName =\r\n          getComponentNameFromFiber(returnFiber) || \"Component\";\r\n\r\n        if (!didWarnAboutStringRefs[componentName]) {\r\n          {\r\n            error(\r\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\r\n                \"String refs are a source of potential bugs and should be avoided. \" +\r\n                \"We recommend using useRef() or createRef() instead. \" +\r\n                \"Learn more about using refs safely here: \" +\r\n                \"https://reactjs.org/link/strict-mode-string-ref\",\r\n              mixedRef\r\n            );\r\n          }\r\n\r\n          didWarnAboutStringRefs[componentName] = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (element._owner) {\r\n      var owner = element._owner;\r\n      var inst;\r\n\r\n      if (owner) {\r\n        var ownerFiber = owner;\r\n\r\n        if (ownerFiber.tag !== ClassComponent) {\r\n          throw new Error(\r\n            \"Function components cannot have string refs. \" +\r\n              \"We recommend using useRef() instead. \" +\r\n              \"Learn more about using refs safely here: \" +\r\n              \"https://reactjs.org/link/strict-mode-string-ref\"\r\n          );\r\n        }\r\n\r\n        inst = ownerFiber.stateNode;\r\n      }\r\n\r\n      if (!inst) {\r\n        throw new Error(\r\n          \"Missing owner for string ref \" +\r\n            mixedRef +\r\n            \". This error is likely caused by a \" +\r\n            \"bug in React. Please file an issue.\"\r\n        );\r\n      } // Assigning this to a const so Flow knows it won't change in the closure\r\n\r\n      var resolvedInst = inst;\r\n\r\n      {\r\n        checkPropStringCoercion(mixedRef, \"ref\");\r\n      }\r\n\r\n      var stringRef = \"\" + mixedRef; // Check if previous string ref matches new string ref\r\n\r\n      if (\r\n        current !== null &&\r\n        current.ref !== null &&\r\n        typeof current.ref === \"function\" &&\r\n        current.ref._stringRef === stringRef\r\n      ) {\r\n        return current.ref;\r\n      }\r\n\r\n      var ref = function(value) {\r\n        var refs = resolvedInst.refs;\r\n\r\n        if (refs === emptyRefsObject) {\r\n          // This is a lazy pooled frozen object, so we need to initialize.\r\n          refs = resolvedInst.refs = {};\r\n        }\r\n\r\n        if (value === null) {\r\n          delete refs[stringRef];\r\n        } else {\r\n          refs[stringRef] = value;\r\n        }\r\n      };\r\n\r\n      ref._stringRef = stringRef;\r\n      return ref;\r\n    } else {\r\n      if (typeof mixedRef !== \"string\") {\r\n        throw new Error(\r\n          \"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\"\r\n        );\r\n      }\r\n\r\n      if (!element._owner) {\r\n        throw new Error(\r\n          \"Element ref was specified as a string (\" +\r\n            mixedRef +\r\n            \") but no owner was set. This could happen for one of\" +\r\n            \" the following reasons:\\n\" +\r\n            \"1. You may be adding a ref to a function component\\n\" +\r\n            \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\r\n            \"3. You have multiple copies of React loaded\\n\" +\r\n            \"See https://reactjs.org/link/refs-must-have-owner for more information.\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return mixedRef;\r\n}\r\n\r\nfunction throwOnInvalidObjectType(returnFiber, newChild) {\r\n  var childString = Object.prototype.toString.call(newChild);\r\n  throw new Error(\r\n    \"Objects are not valid as a React child (found: \" +\r\n      (childString === \"[object Object]\"\r\n        ? \"object with keys {\" + Object.keys(newChild).join(\", \") + \"}\"\r\n        : childString) +\r\n      \"). \" +\r\n      \"If you meant to render a collection of children, use an array \" +\r\n      \"instead.\"\r\n  );\r\n}\r\n\r\nfunction warnOnFunctionType(returnFiber) {\r\n  {\r\n    var componentName = getComponentNameFromFiber(returnFiber) || \"Component\";\r\n\r\n    if (ownerHasFunctionTypeWarning[componentName]) {\r\n      return;\r\n    }\r\n\r\n    ownerHasFunctionTypeWarning[componentName] = true;\r\n\r\n    error(\r\n      \"Functions are not valid as a React child. This may happen if \" +\r\n        \"you return a Component instead of <Component /> from render. \" +\r\n        \"Or maybe you meant to call this function rather than return it.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction resolveLazy(lazyType) {\r\n  var payload = lazyType._payload;\r\n  var init = lazyType._init;\r\n  return init(payload);\r\n} // This wrapper function exists because I expect to clone the code in each path\r\n// to be able to optimize each path individually by branching early. This needs\r\n// a compiler or we can do it manually. Helpers that don't need this branching\r\n// live outside of this function.\r\n\r\nfunction ChildReconciler(shouldTrackSideEffects) {\r\n  function deleteChild(returnFiber, childToDelete) {\r\n    if (!shouldTrackSideEffects) {\r\n      // Noop.\r\n      return;\r\n    }\r\n\r\n    var deletions = returnFiber.deletions;\r\n\r\n    if (deletions === null) {\r\n      returnFiber.deletions = [childToDelete];\r\n      returnFiber.flags |= ChildDeletion;\r\n    } else {\r\n      deletions.push(childToDelete);\r\n    }\r\n  }\r\n\r\n  function deleteRemainingChildren(returnFiber, currentFirstChild) {\r\n    if (!shouldTrackSideEffects) {\r\n      // Noop.\r\n      return null;\r\n    } // TODO: For the shouldClone case, this could be micro-optimized a bit by\r\n    // assuming that after the first child we've already added everything.\r\n\r\n    var childToDelete = currentFirstChild;\r\n\r\n    while (childToDelete !== null) {\r\n      deleteChild(returnFiber, childToDelete);\r\n      childToDelete = childToDelete.sibling;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function mapRemainingChildren(returnFiber, currentFirstChild) {\r\n    // Add the remaining children to a temporary map so that we can find them by\r\n    // keys quickly. Implicit (null) keys get added to this set with their index\r\n    // instead.\r\n    var existingChildren = new Map();\r\n    var existingChild = currentFirstChild;\r\n\r\n    while (existingChild !== null) {\r\n      if (existingChild.key !== null) {\r\n        existingChildren.set(existingChild.key, existingChild);\r\n      } else {\r\n        existingChildren.set(existingChild.index, existingChild);\r\n      }\r\n\r\n      existingChild = existingChild.sibling;\r\n    }\r\n\r\n    return existingChildren;\r\n  }\r\n\r\n  function useFiber(fiber, pendingProps) {\r\n    // We currently set sibling to null and index to 0 here because it is easy\r\n    // to forget to do before returning it. E.g. for the single child case.\r\n    var clone = createWorkInProgress(fiber, pendingProps);\r\n    clone.index = 0;\r\n    clone.sibling = null;\r\n    return clone;\r\n  }\r\n\r\n  function placeChild(newFiber, lastPlacedIndex, newIndex) {\r\n    newFiber.index = newIndex;\r\n\r\n    if (!shouldTrackSideEffects) {\r\n      // During hydration, the useId algorithm needs to know which fibers are\r\n      // part of a list of children (arrays, iterators).\r\n      newFiber.flags |= Forked;\r\n      return lastPlacedIndex;\r\n    }\r\n\r\n    var current = newFiber.alternate;\r\n\r\n    if (current !== null) {\r\n      var oldIndex = current.index;\r\n\r\n      if (oldIndex < lastPlacedIndex) {\r\n        // This is a move.\r\n        newFiber.flags |= Placement;\r\n        return lastPlacedIndex;\r\n      } else {\r\n        // This item can stay in place.\r\n        return oldIndex;\r\n      }\r\n    } else {\r\n      // This is an insertion.\r\n      newFiber.flags |= Placement;\r\n      return lastPlacedIndex;\r\n    }\r\n  }\r\n\r\n  function placeSingleChild(newFiber) {\r\n    // This is simpler for the single child case. We only need to do a\r\n    // placement for inserting new children.\r\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\r\n      newFiber.flags |= Placement;\r\n    }\r\n\r\n    return newFiber;\r\n  }\r\n\r\n  function updateTextNode(returnFiber, current, textContent, lanes) {\r\n    if (current === null || current.tag !== HostText) {\r\n      // Insert\r\n      var created = createFiberFromText(textContent, returnFiber.mode, lanes);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current, textContent);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function updateElement(returnFiber, current, element, lanes) {\r\n    var elementType = element.type;\r\n\r\n    if (elementType === REACT_FRAGMENT_TYPE) {\r\n      return updateFragment(\r\n        returnFiber,\r\n        current,\r\n        element.props.children,\r\n        lanes,\r\n        element.key\r\n      );\r\n    }\r\n\r\n    if (current !== null) {\r\n      if (\r\n        current.elementType === elementType || // Keep this check inline so it only runs on the false path:\r\n        isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.\r\n        // We need to do this after the Hot Reloading check above,\r\n        // because hot reloading has different semantics than prod because\r\n        // it doesn't resuspend. So we can't let the call below suspend.\r\n        (typeof elementType === \"object\" &&\r\n          elementType !== null &&\r\n          elementType.$$typeof === REACT_LAZY_TYPE &&\r\n          resolveLazy(elementType) === current.type)\r\n      ) {\r\n        // Move based on index\r\n        var existing = useFiber(current, element.props);\r\n        existing.ref = coerceRef(returnFiber, current, element);\r\n        existing.return = returnFiber;\r\n\r\n        {\r\n          existing._debugSource = element._source;\r\n          existing._debugOwner = element._owner;\r\n        }\r\n\r\n        return existing;\r\n      }\r\n    } // Insert\r\n\r\n    var created = createFiberFromElement(element, returnFiber.mode, lanes);\r\n    created.ref = coerceRef(returnFiber, current, element);\r\n    created.return = returnFiber;\r\n    return created;\r\n  }\r\n\r\n  function updatePortal(returnFiber, current, portal, lanes) {\r\n    if (\r\n      current === null ||\r\n      current.tag !== HostPortal ||\r\n      current.stateNode.containerInfo !== portal.containerInfo ||\r\n      current.stateNode.implementation !== portal.implementation\r\n    ) {\r\n      // Insert\r\n      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current, portal.children || []);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function updateFragment(returnFiber, current, fragment, lanes, key) {\r\n    if (current === null || current.tag !== Fragment) {\r\n      // Insert\r\n      var created = createFiberFromFragment(\r\n        fragment,\r\n        returnFiber.mode,\r\n        lanes,\r\n        key\r\n      );\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      // Update\r\n      var existing = useFiber(current, fragment);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    }\r\n  }\r\n\r\n  function createChild(returnFiber, newChild, lanes) {\r\n    if (\r\n      (typeof newChild === \"string\" && newChild !== \"\") ||\r\n      typeof newChild === \"number\"\r\n    ) {\r\n      // Text nodes don't have keys. If the previous node is implicitly keyed\r\n      // we can continue to replace it without aborting even if it is not a text\r\n      // node.\r\n      var created = createFiberFromText(\"\" + newChild, returnFiber.mode, lanes);\r\n      created.return = returnFiber;\r\n      return created;\r\n    }\r\n\r\n    if (typeof newChild === \"object\" && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE: {\r\n          var _created = createFiberFromElement(\r\n            newChild,\r\n            returnFiber.mode,\r\n            lanes\r\n          );\r\n\r\n          _created.ref = coerceRef(returnFiber, null, newChild);\r\n          _created.return = returnFiber;\r\n          return _created;\r\n        }\r\n\r\n        case REACT_PORTAL_TYPE: {\r\n          var _created2 = createFiberFromPortal(\r\n            newChild,\r\n            returnFiber.mode,\r\n            lanes\r\n          );\r\n\r\n          _created2.return = returnFiber;\r\n          return _created2;\r\n        }\r\n\r\n        case REACT_LAZY_TYPE: {\r\n          var payload = newChild._payload;\r\n          var init = newChild._init;\r\n          return createChild(returnFiber, init(payload), lanes);\r\n        }\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        var _created3 = createFiberFromFragment(\r\n          newChild,\r\n          returnFiber.mode,\r\n          lanes,\r\n          null\r\n        );\r\n\r\n        _created3.return = returnFiber;\r\n        return _created3;\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === \"function\") {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function updateSlot(returnFiber, oldFiber, newChild, lanes) {\r\n    // Update the fiber if the keys match, otherwise return null.\r\n    var key = oldFiber !== null ? oldFiber.key : null;\r\n\r\n    if (\r\n      (typeof newChild === \"string\" && newChild !== \"\") ||\r\n      typeof newChild === \"number\"\r\n    ) {\r\n      // Text nodes don't have keys. If the previous node is implicitly keyed\r\n      // we can continue to replace it without aborting even if it is not a text\r\n      // node.\r\n      if (key !== null) {\r\n        return null;\r\n      }\r\n\r\n      return updateTextNode(returnFiber, oldFiber, \"\" + newChild, lanes);\r\n    }\r\n\r\n    if (typeof newChild === \"object\" && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE: {\r\n          if (newChild.key === key) {\r\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n\r\n        case REACT_PORTAL_TYPE: {\r\n          if (newChild.key === key) {\r\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n\r\n        case REACT_LAZY_TYPE: {\r\n          var payload = newChild._payload;\r\n          var init = newChild._init;\r\n          return updateSlot(returnFiber, oldFiber, init(payload), lanes);\r\n        }\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        if (key !== null) {\r\n          return null;\r\n        }\r\n\r\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === \"function\") {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function updateFromMap(\r\n    existingChildren,\r\n    returnFiber,\r\n    newIdx,\r\n    newChild,\r\n    lanes\r\n  ) {\r\n    if (\r\n      (typeof newChild === \"string\" && newChild !== \"\") ||\r\n      typeof newChild === \"number\"\r\n    ) {\r\n      // Text nodes don't have keys, so we neither have to check the old nor\r\n      // new node for the key. If both are text nodes, they match.\r\n      var matchedFiber = existingChildren.get(newIdx) || null;\r\n      return updateTextNode(returnFiber, matchedFiber, \"\" + newChild, lanes);\r\n    }\r\n\r\n    if (typeof newChild === \"object\" && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE: {\r\n          var _matchedFiber =\r\n            existingChildren.get(\r\n              newChild.key === null ? newIdx : newChild.key\r\n            ) || null;\r\n\r\n          return updateElement(returnFiber, _matchedFiber, newChild, lanes);\r\n        }\r\n\r\n        case REACT_PORTAL_TYPE: {\r\n          var _matchedFiber2 =\r\n            existingChildren.get(\r\n              newChild.key === null ? newIdx : newChild.key\r\n            ) || null;\r\n\r\n          return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);\r\n        }\r\n\r\n        case REACT_LAZY_TYPE:\r\n          var payload = newChild._payload;\r\n          var init = newChild._init;\r\n          return updateFromMap(\r\n            existingChildren,\r\n            returnFiber,\r\n            newIdx,\r\n            init(payload),\r\n            lanes\r\n          );\r\n      }\r\n\r\n      if (isArray(newChild) || getIteratorFn(newChild)) {\r\n        var _matchedFiber3 = existingChildren.get(newIdx) || null;\r\n\r\n        return updateFragment(\r\n          returnFiber,\r\n          _matchedFiber3,\r\n          newChild,\r\n          lanes,\r\n          null\r\n        );\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === \"function\") {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  /**\r\n   * Warns if there is a duplicate or missing key\r\n   */\r\n\r\n  function warnOnInvalidKey(child, knownKeys, returnFiber) {\r\n    {\r\n      if (typeof child !== \"object\" || child === null) {\r\n        return knownKeys;\r\n      }\r\n\r\n      switch (child.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n        case REACT_PORTAL_TYPE:\r\n          warnForMissingKey(child, returnFiber);\r\n          var key = child.key;\r\n\r\n          if (typeof key !== \"string\") {\r\n            break;\r\n          }\r\n\r\n          if (knownKeys === null) {\r\n            knownKeys = new Set();\r\n            knownKeys.add(key);\r\n            break;\r\n          }\r\n\r\n          if (!knownKeys.has(key)) {\r\n            knownKeys.add(key);\r\n            break;\r\n          }\r\n\r\n          error(\r\n            \"Encountered two children with the same key, `%s`. \" +\r\n              \"Keys should be unique so that components maintain their identity \" +\r\n              \"across updates. Non-unique keys may cause children to be \" +\r\n              \"duplicated and/or omitted — the behavior is unsupported and \" +\r\n              \"could change in a future version.\",\r\n            key\r\n          );\r\n\r\n          break;\r\n\r\n        case REACT_LAZY_TYPE:\r\n          var payload = child._payload;\r\n          var init = child._init;\r\n          warnOnInvalidKey(init(payload), knownKeys, returnFiber);\r\n          break;\r\n      }\r\n    }\r\n\r\n    return knownKeys;\r\n  }\r\n\r\n  function reconcileChildrenArray(\r\n    returnFiber,\r\n    currentFirstChild,\r\n    newChildren,\r\n    lanes\r\n  ) {\r\n    // This algorithm can't optimize by searching from both ends since we\r\n    // don't have backpointers on fibers. I'm trying to see how far we can get\r\n    // with that model. If it ends up not being worth the tradeoffs, we can\r\n    // add it later.\r\n    // Even with a two ended optimization, we'd want to optimize for the case\r\n    // where there are few changes and brute force the comparison instead of\r\n    // going for the Map. It'd like to explore hitting that path first in\r\n    // forward-only mode and only go for the Map once we notice that we need\r\n    // lots of look ahead. This doesn't handle reversal as well as two ended\r\n    // search but that's unusual. Besides, for the two ended optimization to\r\n    // work on Iterables, we'd need to copy the whole set.\r\n    // In this first iteration, we'll just live with hitting the bad case\r\n    // (adding everything to a Map) in for every insert/move.\r\n    // If you change this code, also update reconcileChildrenIterator() which\r\n    // uses the same algorithm.\r\n    {\r\n      // First, validate keys.\r\n      var knownKeys = null;\r\n\r\n      for (var i = 0; i < newChildren.length; i++) {\r\n        var child = newChildren[i];\r\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\r\n      }\r\n    }\r\n\r\n    var resultingFirstChild = null;\r\n    var previousNewFiber = null;\r\n    var oldFiber = currentFirstChild;\r\n    var lastPlacedIndex = 0;\r\n    var newIdx = 0;\r\n    var nextOldFiber = null;\r\n\r\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\r\n      if (oldFiber.index > newIdx) {\r\n        nextOldFiber = oldFiber;\r\n        oldFiber = null;\r\n      } else {\r\n        nextOldFiber = oldFiber.sibling;\r\n      }\r\n\r\n      var newFiber = updateSlot(\r\n        returnFiber,\r\n        oldFiber,\r\n        newChildren[newIdx],\r\n        lanes\r\n      );\r\n\r\n      if (newFiber === null) {\r\n        // TODO: This breaks on empty slots like null children. That's\r\n        // unfortunate because it triggers the slow path all the time. We need\r\n        // a better way to communicate whether this was a miss or null,\r\n        // boolean, undefined, etc.\r\n        if (oldFiber === null) {\r\n          oldFiber = nextOldFiber;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      if (shouldTrackSideEffects) {\r\n        if (oldFiber && newFiber.alternate === null) {\r\n          // We matched the slot, but we didn't reuse the existing fiber, so we\r\n          // need to delete the existing child.\r\n          deleteChild(returnFiber, oldFiber);\r\n        }\r\n      }\r\n\r\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\r\n\r\n      if (previousNewFiber === null) {\r\n        // TODO: Move out of the loop. This only happens for the first run.\r\n        resultingFirstChild = newFiber;\r\n      } else {\r\n        // TODO: Defer siblings if we're not at the right index for this slot.\r\n        // I.e. if we had null values before, then we want to defer this\r\n        // for each null value. However, we also don't want to call updateSlot\r\n        // with the previous one.\r\n        previousNewFiber.sibling = newFiber;\r\n      }\r\n\r\n      previousNewFiber = newFiber;\r\n      oldFiber = nextOldFiber;\r\n    }\r\n\r\n    if (newIdx === newChildren.length) {\r\n      // We've reached the end of the new children. We can delete the rest.\r\n      deleteRemainingChildren(returnFiber, oldFiber);\r\n\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    if (oldFiber === null) {\r\n      // If we don't have any more existing children we can choose a fast path\r\n      // since the rest will all be insertions.\r\n      for (; newIdx < newChildren.length; newIdx++) {\r\n        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\r\n\r\n        if (_newFiber === null) {\r\n          continue;\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          // TODO: Move out of the loop. This only happens for the first run.\r\n          resultingFirstChild = _newFiber;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber;\r\n        }\r\n\r\n        previousNewFiber = _newFiber;\r\n      }\r\n\r\n      return resultingFirstChild;\r\n    } // Add all children to a key map for quick lookups.\r\n\r\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\r\n\r\n    for (; newIdx < newChildren.length; newIdx++) {\r\n      var _newFiber2 = updateFromMap(\r\n        existingChildren,\r\n        returnFiber,\r\n        newIdx,\r\n        newChildren[newIdx],\r\n        lanes\r\n      );\r\n\r\n      if (_newFiber2 !== null) {\r\n        if (shouldTrackSideEffects) {\r\n          if (_newFiber2.alternate !== null) {\r\n            // The new fiber is a work in progress, but if there exists a\r\n            // current, that means that we reused the fiber. We need to delete\r\n            // it from the child list so that we don't add it to the deletion\r\n            // list.\r\n            existingChildren.delete(\r\n              _newFiber2.key === null ? newIdx : _newFiber2.key\r\n            );\r\n          }\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          resultingFirstChild = _newFiber2;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber2;\r\n        }\r\n\r\n        previousNewFiber = _newFiber2;\r\n      }\r\n    }\r\n\r\n    if (shouldTrackSideEffects) {\r\n      // Any existing children that weren't consumed above were deleted. We need\r\n      // to add them to the deletion list.\r\n      existingChildren.forEach(function(child) {\r\n        return deleteChild(returnFiber, child);\r\n      });\r\n    }\r\n\r\n    return resultingFirstChild;\r\n  }\r\n\r\n  function reconcileChildrenIterator(\r\n    returnFiber,\r\n    currentFirstChild,\r\n    newChildrenIterable,\r\n    lanes\r\n  ) {\r\n    // This is the same implementation as reconcileChildrenArray(),\r\n    // but using the iterator instead.\r\n    var iteratorFn = getIteratorFn(newChildrenIterable);\r\n\r\n    if (typeof iteratorFn !== \"function\") {\r\n      throw new Error(\r\n        \"An object is not an iterable. This error is likely caused by a bug in \" +\r\n          \"React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    {\r\n      // We don't support rendering Generators because it's a mutation.\r\n      // See https://github.com/facebook/react/issues/12995\r\n      if (\r\n        typeof Symbol === \"function\" && // $FlowFixMe Flow doesn't know about toStringTag\r\n        newChildrenIterable[Symbol.toStringTag] === \"Generator\"\r\n      ) {\r\n        if (!didWarnAboutGenerators) {\r\n          error(\r\n            \"Using Generators as children is unsupported and will likely yield \" +\r\n              \"unexpected results because enumerating a generator mutates it. \" +\r\n              \"You may convert it to an array with `Array.from()` or the \" +\r\n              \"`[...spread]` operator before rendering. Keep in mind \" +\r\n              \"you might need to polyfill these features for older browsers.\"\r\n          );\r\n        }\r\n\r\n        didWarnAboutGenerators = true;\r\n      } // Warn about using Maps as children\r\n\r\n      if (newChildrenIterable.entries === iteratorFn) {\r\n        if (!didWarnAboutMaps) {\r\n          error(\r\n            \"Using Maps as children is not supported. \" +\r\n              \"Use an array of keyed ReactElements instead.\"\r\n          );\r\n        }\r\n\r\n        didWarnAboutMaps = true;\r\n      } // First, validate keys.\r\n      // We'll get a different iterator later for the main pass.\r\n\r\n      var _newChildren = iteratorFn.call(newChildrenIterable);\r\n\r\n      if (_newChildren) {\r\n        var knownKeys = null;\r\n\r\n        var _step = _newChildren.next();\r\n\r\n        for (; !_step.done; _step = _newChildren.next()) {\r\n          var child = _step.value;\r\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\r\n        }\r\n      }\r\n    }\r\n\r\n    var newChildren = iteratorFn.call(newChildrenIterable);\r\n\r\n    if (newChildren == null) {\r\n      throw new Error(\"An iterable object provided no iterator.\");\r\n    }\r\n\r\n    var resultingFirstChild = null;\r\n    var previousNewFiber = null;\r\n    var oldFiber = currentFirstChild;\r\n    var lastPlacedIndex = 0;\r\n    var newIdx = 0;\r\n    var nextOldFiber = null;\r\n    var step = newChildren.next();\r\n\r\n    for (\r\n      ;\r\n      oldFiber !== null && !step.done;\r\n      newIdx++, step = newChildren.next()\r\n    ) {\r\n      if (oldFiber.index > newIdx) {\r\n        nextOldFiber = oldFiber;\r\n        oldFiber = null;\r\n      } else {\r\n        nextOldFiber = oldFiber.sibling;\r\n      }\r\n\r\n      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\r\n\r\n      if (newFiber === null) {\r\n        // TODO: This breaks on empty slots like null children. That's\r\n        // unfortunate because it triggers the slow path all the time. We need\r\n        // a better way to communicate whether this was a miss or null,\r\n        // boolean, undefined, etc.\r\n        if (oldFiber === null) {\r\n          oldFiber = nextOldFiber;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      if (shouldTrackSideEffects) {\r\n        if (oldFiber && newFiber.alternate === null) {\r\n          // We matched the slot, but we didn't reuse the existing fiber, so we\r\n          // need to delete the existing child.\r\n          deleteChild(returnFiber, oldFiber);\r\n        }\r\n      }\r\n\r\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\r\n\r\n      if (previousNewFiber === null) {\r\n        // TODO: Move out of the loop. This only happens for the first run.\r\n        resultingFirstChild = newFiber;\r\n      } else {\r\n        // TODO: Defer siblings if we're not at the right index for this slot.\r\n        // I.e. if we had null values before, then we want to defer this\r\n        // for each null value. However, we also don't want to call updateSlot\r\n        // with the previous one.\r\n        previousNewFiber.sibling = newFiber;\r\n      }\r\n\r\n      previousNewFiber = newFiber;\r\n      oldFiber = nextOldFiber;\r\n    }\r\n\r\n    if (step.done) {\r\n      // We've reached the end of the new children. We can delete the rest.\r\n      deleteRemainingChildren(returnFiber, oldFiber);\r\n\r\n      return resultingFirstChild;\r\n    }\r\n\r\n    if (oldFiber === null) {\r\n      // If we don't have any more existing children we can choose a fast path\r\n      // since the rest will all be insertions.\r\n      for (; !step.done; newIdx++, step = newChildren.next()) {\r\n        var _newFiber3 = createChild(returnFiber, step.value, lanes);\r\n\r\n        if (_newFiber3 === null) {\r\n          continue;\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          // TODO: Move out of the loop. This only happens for the first run.\r\n          resultingFirstChild = _newFiber3;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber3;\r\n        }\r\n\r\n        previousNewFiber = _newFiber3;\r\n      }\r\n\r\n      return resultingFirstChild;\r\n    } // Add all children to a key map for quick lookups.\r\n\r\n    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.\r\n\r\n    for (; !step.done; newIdx++, step = newChildren.next()) {\r\n      var _newFiber4 = updateFromMap(\r\n        existingChildren,\r\n        returnFiber,\r\n        newIdx,\r\n        step.value,\r\n        lanes\r\n      );\r\n\r\n      if (_newFiber4 !== null) {\r\n        if (shouldTrackSideEffects) {\r\n          if (_newFiber4.alternate !== null) {\r\n            // The new fiber is a work in progress, but if there exists a\r\n            // current, that means that we reused the fiber. We need to delete\r\n            // it from the child list so that we don't add it to the deletion\r\n            // list.\r\n            existingChildren.delete(\r\n              _newFiber4.key === null ? newIdx : _newFiber4.key\r\n            );\r\n          }\r\n        }\r\n\r\n        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);\r\n\r\n        if (previousNewFiber === null) {\r\n          resultingFirstChild = _newFiber4;\r\n        } else {\r\n          previousNewFiber.sibling = _newFiber4;\r\n        }\r\n\r\n        previousNewFiber = _newFiber4;\r\n      }\r\n    }\r\n\r\n    if (shouldTrackSideEffects) {\r\n      // Any existing children that weren't consumed above were deleted. We need\r\n      // to add them to the deletion list.\r\n      existingChildren.forEach(function(child) {\r\n        return deleteChild(returnFiber, child);\r\n      });\r\n    }\r\n\r\n    return resultingFirstChild;\r\n  }\r\n\r\n  function reconcileSingleTextNode(\r\n    returnFiber,\r\n    currentFirstChild,\r\n    textContent,\r\n    lanes\r\n  ) {\r\n    // There's no need to check for keys on text nodes since we don't have a\r\n    // way to define them.\r\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\r\n      // We already have an existing node so let's just update it and delete\r\n      // the rest.\r\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\r\n      var existing = useFiber(currentFirstChild, textContent);\r\n      existing.return = returnFiber;\r\n      return existing;\r\n    } // The existing first child is not a text node so we need to create one\r\n    // and delete the existing ones.\r\n\r\n    deleteRemainingChildren(returnFiber, currentFirstChild);\r\n    var created = createFiberFromText(textContent, returnFiber.mode, lanes);\r\n    created.return = returnFiber;\r\n    return created;\r\n  }\r\n\r\n  function reconcileSingleElement(\r\n    returnFiber,\r\n    currentFirstChild,\r\n    element,\r\n    lanes\r\n  ) {\r\n    var key = element.key;\r\n    var child = currentFirstChild;\r\n\r\n    while (child !== null) {\r\n      // TODO: If key === null and child.key === null, then this only applies to\r\n      // the first item in the list.\r\n      if (child.key === key) {\r\n        var elementType = element.type;\r\n\r\n        if (elementType === REACT_FRAGMENT_TYPE) {\r\n          if (child.tag === Fragment) {\r\n            deleteRemainingChildren(returnFiber, child.sibling);\r\n            var existing = useFiber(child, element.props.children);\r\n            existing.return = returnFiber;\r\n\r\n            {\r\n              existing._debugSource = element._source;\r\n              existing._debugOwner = element._owner;\r\n            }\r\n\r\n            return existing;\r\n          }\r\n        } else {\r\n          if (\r\n            child.elementType === elementType || // Keep this check inline so it only runs on the false path:\r\n            isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.\r\n            // We need to do this after the Hot Reloading check above,\r\n            // because hot reloading has different semantics than prod because\r\n            // it doesn't resuspend. So we can't let the call below suspend.\r\n            (typeof elementType === \"object\" &&\r\n              elementType !== null &&\r\n              elementType.$$typeof === REACT_LAZY_TYPE &&\r\n              resolveLazy(elementType) === child.type)\r\n          ) {\r\n            deleteRemainingChildren(returnFiber, child.sibling);\r\n\r\n            var _existing = useFiber(child, element.props);\r\n\r\n            _existing.ref = coerceRef(returnFiber, child, element);\r\n            _existing.return = returnFiber;\r\n\r\n            {\r\n              _existing._debugSource = element._source;\r\n              _existing._debugOwner = element._owner;\r\n            }\r\n\r\n            return _existing;\r\n          }\r\n        } // Didn't match.\r\n\r\n        deleteRemainingChildren(returnFiber, child);\r\n        break;\r\n      } else {\r\n        deleteChild(returnFiber, child);\r\n      }\r\n\r\n      child = child.sibling;\r\n    }\r\n\r\n    if (element.type === REACT_FRAGMENT_TYPE) {\r\n      var created = createFiberFromFragment(\r\n        element.props.children,\r\n        returnFiber.mode,\r\n        lanes,\r\n        element.key\r\n      );\r\n      created.return = returnFiber;\r\n      return created;\r\n    } else {\r\n      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);\r\n\r\n      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);\r\n      _created4.return = returnFiber;\r\n      return _created4;\r\n    }\r\n  }\r\n\r\n  function reconcileSinglePortal(\r\n    returnFiber,\r\n    currentFirstChild,\r\n    portal,\r\n    lanes\r\n  ) {\r\n    var key = portal.key;\r\n    var child = currentFirstChild;\r\n\r\n    while (child !== null) {\r\n      // TODO: If key === null and child.key === null, then this only applies to\r\n      // the first item in the list.\r\n      if (child.key === key) {\r\n        if (\r\n          child.tag === HostPortal &&\r\n          child.stateNode.containerInfo === portal.containerInfo &&\r\n          child.stateNode.implementation === portal.implementation\r\n        ) {\r\n          deleteRemainingChildren(returnFiber, child.sibling);\r\n          var existing = useFiber(child, portal.children || []);\r\n          existing.return = returnFiber;\r\n          return existing;\r\n        } else {\r\n          deleteRemainingChildren(returnFiber, child);\r\n          break;\r\n        }\r\n      } else {\r\n        deleteChild(returnFiber, child);\r\n      }\r\n\r\n      child = child.sibling;\r\n    }\r\n\r\n    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);\r\n    created.return = returnFiber;\r\n    return created;\r\n  } // This API will tag the children with the side-effect of the reconciliation\r\n  // itself. They will be added to the side-effect list as we pass through the\r\n  // children and the parent.\r\n\r\n  function reconcileChildFibers(\r\n    returnFiber,\r\n    currentFirstChild,\r\n    newChild,\r\n    lanes\r\n  ) {\r\n    // This function is not recursive.\r\n    // If the top level item is an array, we treat it as a set of children,\r\n    // not as a fragment. Nested arrays on the other hand will be treated as\r\n    // fragment nodes. Recursion happens at the normal flow.\r\n    // Handle top level unkeyed fragments as if they were arrays.\r\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\r\n    // We treat the ambiguous cases above the same.\r\n    var isUnkeyedTopLevelFragment =\r\n      typeof newChild === \"object\" &&\r\n      newChild !== null &&\r\n      newChild.type === REACT_FRAGMENT_TYPE &&\r\n      newChild.key === null;\r\n\r\n    if (isUnkeyedTopLevelFragment) {\r\n      newChild = newChild.props.children;\r\n    } // Handle object types\r\n\r\n    if (typeof newChild === \"object\" && newChild !== null) {\r\n      switch (newChild.$$typeof) {\r\n        case REACT_ELEMENT_TYPE:\r\n          return placeSingleChild(\r\n            reconcileSingleElement(\r\n              returnFiber,\r\n              currentFirstChild,\r\n              newChild,\r\n              lanes\r\n            )\r\n          );\r\n\r\n        case REACT_PORTAL_TYPE:\r\n          return placeSingleChild(\r\n            reconcileSinglePortal(\r\n              returnFiber,\r\n              currentFirstChild,\r\n              newChild,\r\n              lanes\r\n            )\r\n          );\r\n\r\n        case REACT_LAZY_TYPE:\r\n          var payload = newChild._payload;\r\n          var init = newChild._init; // TODO: This function is supposed to be non-recursive.\r\n\r\n          return reconcileChildFibers(\r\n            returnFiber,\r\n            currentFirstChild,\r\n            init(payload),\r\n            lanes\r\n          );\r\n      }\r\n\r\n      if (isArray(newChild)) {\r\n        return reconcileChildrenArray(\r\n          returnFiber,\r\n          currentFirstChild,\r\n          newChild,\r\n          lanes\r\n        );\r\n      }\r\n\r\n      if (getIteratorFn(newChild)) {\r\n        return reconcileChildrenIterator(\r\n          returnFiber,\r\n          currentFirstChild,\r\n          newChild,\r\n          lanes\r\n        );\r\n      }\r\n\r\n      throwOnInvalidObjectType(returnFiber, newChild);\r\n    }\r\n\r\n    if (\r\n      (typeof newChild === \"string\" && newChild !== \"\") ||\r\n      typeof newChild === \"number\"\r\n    ) {\r\n      return placeSingleChild(\r\n        reconcileSingleTextNode(\r\n          returnFiber,\r\n          currentFirstChild,\r\n          \"\" + newChild,\r\n          lanes\r\n        )\r\n      );\r\n    }\r\n\r\n    {\r\n      if (typeof newChild === \"function\") {\r\n        warnOnFunctionType(returnFiber);\r\n      }\r\n    } // Remaining cases are all treated as empty.\r\n\r\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\r\n  }\r\n\r\n  return reconcileChildFibers;\r\n}\r\n\r\nvar reconcileChildFibers = ChildReconciler(true);\r\nvar mountChildFibers = ChildReconciler(false);\r\nfunction cloneChildFibers(current, workInProgress) {\r\n  if (current !== null && workInProgress.child !== current.child) {\r\n    throw new Error(\"Resuming work not yet implemented.\");\r\n  }\r\n\r\n  if (workInProgress.child === null) {\r\n    return;\r\n  }\r\n\r\n  var currentChild = workInProgress.child;\r\n  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\r\n  workInProgress.child = newChild;\r\n  newChild.return = workInProgress;\r\n\r\n  while (currentChild.sibling !== null) {\r\n    currentChild = currentChild.sibling;\r\n    newChild = newChild.sibling = createWorkInProgress(\r\n      currentChild,\r\n      currentChild.pendingProps\r\n    );\r\n    newChild.return = workInProgress;\r\n  }\r\n\r\n  newChild.sibling = null;\r\n} // Reset a workInProgress child set to prepare it for a second pass.\r\n\r\nfunction resetChildFibers(workInProgress, lanes) {\r\n  var child = workInProgress.child;\r\n\r\n  while (child !== null) {\r\n    resetWorkInProgress(child, lanes);\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nvar NO_CONTEXT = {};\r\nvar contextStackCursor$1 = createCursor(NO_CONTEXT);\r\nvar contextFiberStackCursor = createCursor(NO_CONTEXT);\r\nvar rootInstanceStackCursor = createCursor(NO_CONTEXT);\r\n\r\nfunction requiredContext(c) {\r\n  if (c === NO_CONTEXT) {\r\n    throw new Error(\r\n      \"Expected host context to exist. This error is likely caused by a bug \" +\r\n        \"in React. Please file an issue.\"\r\n    );\r\n  }\r\n\r\n  return c;\r\n}\r\n\r\nfunction getRootHostContainer() {\r\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\r\n  return rootInstance;\r\n}\r\n\r\nfunction pushHostContainer(fiber, nextRootInstance) {\r\n  // Push current root instance onto the stack;\r\n  // This allows us to reset root when portals are popped.\r\n  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.\r\n  // This enables us to pop only Fibers that provide unique contexts.\r\n\r\n  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.\r\n  // However, we can't just call getRootHostContext() and push it because\r\n  // we'd have a different number of entries on the stack depending on\r\n  // whether getRootHostContext() throws somewhere in renderer code or not.\r\n  // So we push an empty value first. This lets us safely unwind on errors.\r\n\r\n  push(contextStackCursor$1, NO_CONTEXT, fiber);\r\n  var nextRootContext = getRootHostContext(); // Now that we know this function doesn't throw, replace it.\r\n\r\n  pop(contextStackCursor$1, fiber);\r\n  push(contextStackCursor$1, nextRootContext, fiber);\r\n}\r\n\r\nfunction popHostContainer(fiber) {\r\n  pop(contextStackCursor$1, fiber);\r\n  pop(contextFiberStackCursor, fiber);\r\n  pop(rootInstanceStackCursor, fiber);\r\n}\r\n\r\nfunction getHostContext() {\r\n  var context = requiredContext(contextStackCursor$1.current);\r\n  return context;\r\n}\r\n\r\nfunction pushHostContext(fiber) {\r\n  var rootInstance = requiredContext(rootInstanceStackCursor.current);\r\n  var context = requiredContext(contextStackCursor$1.current);\r\n  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.\r\n\r\n  if (context === nextContext) {\r\n    return;\r\n  } // Track the context and the Fiber that provided it.\r\n  // This enables us to pop only Fibers that provide unique contexts.\r\n\r\n  push(contextFiberStackCursor, fiber, fiber);\r\n  push(contextStackCursor$1, nextContext, fiber);\r\n}\r\n\r\nfunction popHostContext(fiber) {\r\n  // Do not pop unless this Fiber provided the current context.\r\n  // pushHostContext() only pushes Fibers that provide unique contexts.\r\n  if (contextFiberStackCursor.current !== fiber) {\r\n    return;\r\n  }\r\n\r\n  pop(contextStackCursor$1, fiber);\r\n  pop(contextFiberStackCursor, fiber);\r\n}\r\n\r\nvar DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is\r\n// inherited deeply down the subtree. The upper bits only affect\r\n// this immediate suspense boundary and gets reset each new\r\n// boundary or suspense list.\r\n\r\nvar SubtreeSuspenseContextMask = 1; // Subtree Flags:\r\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\r\n// boundaries is not currently showing visible main content.\r\n// Either because it is already showing a fallback or is not mounted at all.\r\n// We can use this to determine if it is desirable to trigger a fallback at\r\n// the parent. If not, then we might need to trigger undesirable boundaries\r\n// and/or suspend the commit to avoid hiding the parent content.\r\n\r\nvar InvisibleParentSuspenseContext = 1; // Shallow Flags:\r\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\r\n// items into their fallback state during one of the render passes.\r\n\r\nvar ForceSuspenseFallback = 2;\r\nvar suspenseStackCursor = createCursor(DefaultSuspenseContext);\r\nfunction hasSuspenseContext(parentContext, flag) {\r\n  return (parentContext & flag) !== 0;\r\n}\r\nfunction setDefaultShallowSuspenseContext(parentContext) {\r\n  return parentContext & SubtreeSuspenseContextMask;\r\n}\r\nfunction setShallowSuspenseContext(parentContext, shallowContext) {\r\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\r\n}\r\nfunction addSubtreeSuspenseContext(parentContext, subtreeContext) {\r\n  return parentContext | subtreeContext;\r\n}\r\nfunction pushSuspenseContext(fiber, newContext) {\r\n  push(suspenseStackCursor, newContext, fiber);\r\n}\r\nfunction popSuspenseContext(fiber) {\r\n  pop(suspenseStackCursor, fiber);\r\n}\r\n\r\nfunction shouldCaptureSuspense(workInProgress, hasInvisibleParent) {\r\n  // If it was the primary children that just suspended, capture and render the\r\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\r\n  var nextState = workInProgress.memoizedState;\r\n\r\n  if (nextState !== null) {\r\n    if (nextState.dehydrated !== null) {\r\n      // A dehydrated boundary always captures.\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  var props = workInProgress.memoizedProps; // Regular boundaries always capture.\r\n\r\n  {\r\n    return true;\r\n  } // If it's a boundary we should avoid, then we prefer to bubble up to the\r\n}\r\nfunction findFirstSuspended(row) {\r\n  var node = row;\r\n\r\n  while (node !== null) {\r\n    if (node.tag === SuspenseComponent) {\r\n      var state = node.memoizedState;\r\n\r\n      if (state !== null) {\r\n        var dehydrated = state.dehydrated;\r\n\r\n        if (\r\n          dehydrated === null ||\r\n          isSuspenseInstancePending() ||\r\n          isSuspenseInstanceFallback()\r\n        ) {\r\n          return node;\r\n        }\r\n      }\r\n    } else if (\r\n      node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't\r\n      // keep track of whether it suspended or not.\r\n      node.memoizedProps.revealOrder !== undefined\r\n    ) {\r\n      var didSuspend = (node.flags & DidCapture) !== NoFlags;\r\n\r\n      if (didSuspend) {\r\n        return node;\r\n      }\r\n    } else if (node.child !== null) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n\r\n    if (node === row) {\r\n      return null;\r\n    }\r\n\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === row) {\r\n        return null;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar NoFlags$1 =\r\n  /*   */\r\n  0; // Represents whether effect should fire.\r\n\r\nvar HasEffect =\r\n  /* */\r\n  1; // Represents the phase in which the effect (not the clean-up) fires.\r\n\r\nvar Insertion =\r\n  /*  */\r\n  2;\r\nvar Layout =\r\n  /*    */\r\n  4;\r\nvar Passive$1 =\r\n  /*   */\r\n  8;\r\n\r\n// and should be reset before starting a new render.\r\n// This tracks which mutable sources need to be reset after a render.\r\n\r\nvar workInProgressSources = [];\r\nfunction resetWorkInProgressVersions() {\r\n  for (var i = 0; i < workInProgressSources.length; i++) {\r\n    var mutableSource = workInProgressSources[i];\r\n\r\n    {\r\n      mutableSource._workInProgressVersionPrimary = null;\r\n    }\r\n  }\r\n\r\n  workInProgressSources.length = 0;\r\n}\r\n\r\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;\r\nvar didWarnAboutMismatchedHooksForComponent;\r\nvar didWarnUncachedGetSnapshot;\r\n\r\n{\r\n  didWarnAboutMismatchedHooksForComponent = new Set();\r\n}\r\n\r\n// These are set right before calling the component.\r\nvar renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from\r\n// the work-in-progress hook.\r\n\r\nvar currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The\r\n// current hook list is the list that belongs to the current fiber. The\r\n// work-in-progress hook list is a new list that will be added to the\r\n// work-in-progress fiber.\r\n\r\nvar currentHook = null;\r\nvar workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This\r\n// does not get reset if we do another render pass; only when we're completely\r\n// finished evaluating this component. This is an optimization so we know\r\n// whether we need to clear render phase updates after a throw.\r\n\r\nvar didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This\r\n// gets reset after each attempt.\r\n// TODO: Maybe there's some way to consolidate this with\r\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\r\n\r\nvar didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.\r\n// hydration). This counter is global, so client ids are not stable across\r\n// render attempts.\r\n\r\nvar globalClientIdCounter = 0;\r\nvar RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook\r\n\r\nvar currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.\r\n// The list stores the order of hooks used during the initial render (mount).\r\n// Subsequent renders (updates) reference this list.\r\n\r\nvar hookTypesDev = null;\r\nvar hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore\r\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\r\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\r\n\r\nvar ignorePreviousDependencies = false;\r\n\r\nfunction mountHookTypesDev() {\r\n  {\r\n    var hookName = currentHookNameInDev;\r\n\r\n    if (hookTypesDev === null) {\r\n      hookTypesDev = [hookName];\r\n    } else {\r\n      hookTypesDev.push(hookName);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateHookTypesDev() {\r\n  {\r\n    var hookName = currentHookNameInDev;\r\n\r\n    if (hookTypesDev !== null) {\r\n      hookTypesUpdateIndexDev++;\r\n\r\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\r\n        warnOnHookMismatchInDev(hookName);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkDepsAreArrayDev(deps) {\r\n  {\r\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\r\n      // Verify deps, but only on mount to avoid extra checks.\r\n      // It's unlikely their type would change as usually you define them inline.\r\n      error(\r\n        \"%s received a final argument that is not an array (instead, received `%s`). When \" +\r\n          \"specified, the final argument must be an array.\",\r\n        currentHookNameInDev,\r\n        typeof deps\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction warnOnHookMismatchInDev(currentHookName) {\r\n  {\r\n    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);\r\n\r\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\r\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\r\n\r\n      if (hookTypesDev !== null) {\r\n        var table = \"\";\r\n        var secondColumnStart = 30;\r\n\r\n        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {\r\n          var oldHookName = hookTypesDev[i];\r\n          var newHookName =\r\n            i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;\r\n          var row = i + 1 + \". \" + oldHookName; // Extra space so second column lines up\r\n          // lol @ IE not supporting String#repeat\r\n\r\n          while (row.length < secondColumnStart) {\r\n            row += \" \";\r\n          }\r\n\r\n          row += newHookName + \"\\n\";\r\n          table += row;\r\n        }\r\n\r\n        error(\r\n          \"React has detected a change in the order of Hooks called by %s. \" +\r\n            \"This will lead to bugs and errors if not fixed. \" +\r\n            \"For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n\" +\r\n            \"   Previous render            Next render\\n\" +\r\n            \"   ------------------------------------------------------\\n\" +\r\n            \"%s\" +\r\n            \"   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\",\r\n          componentName,\r\n          table\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction throwInvalidHookError() {\r\n  throw new Error(\r\n    \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" +\r\n      \" one of the following reasons:\\n\" +\r\n      \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" +\r\n      \"2. You might be breaking the Rules of Hooks\\n\" +\r\n      \"3. You might have more than one copy of React in the same app\\n\" +\r\n      \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\"\r\n  );\r\n}\r\n\r\nfunction areHookInputsEqual(nextDeps, prevDeps) {\r\n  {\r\n    if (ignorePreviousDependencies) {\r\n      // Only true when this component is being hot reloaded.\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (prevDeps === null) {\r\n    {\r\n      error(\r\n        \"%s received a final argument during this render, but not during \" +\r\n          \"the previous render. Even though the final argument is optional, \" +\r\n          \"its type cannot change between renders.\",\r\n        currentHookNameInDev\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  {\r\n    // Don't bother comparing lengths in prod because these arrays should be\r\n    // passed inline.\r\n    if (nextDeps.length !== prevDeps.length) {\r\n      error(\r\n        \"The final argument passed to %s changed size between renders. The \" +\r\n          \"order and size of this array must remain constant.\\n\\n\" +\r\n          \"Previous: %s\\n\" +\r\n          \"Incoming: %s\",\r\n        currentHookNameInDev,\r\n        \"[\" + prevDeps.join(\", \") + \"]\",\r\n        \"[\" + nextDeps.join(\", \") + \"]\"\r\n      );\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\r\n    if (objectIs(nextDeps[i], prevDeps[i])) {\r\n      continue;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction renderWithHooks(\r\n  current,\r\n  workInProgress,\r\n  Component,\r\n  props,\r\n  secondArg,\r\n  nextRenderLanes\r\n) {\r\n  renderLanes = nextRenderLanes;\r\n  currentlyRenderingFiber$1 = workInProgress;\r\n\r\n  {\r\n    hookTypesDev = current !== null ? current._debugHookTypes : null;\r\n    hookTypesUpdateIndexDev = -1; // Used for hot reloading:\r\n\r\n    ignorePreviousDependencies =\r\n      current !== null && current.type !== workInProgress.type;\r\n  }\r\n\r\n  workInProgress.memoizedState = null;\r\n  workInProgress.updateQueue = null;\r\n  workInProgress.lanes = NoLanes; // The following should have already been reset\r\n  // currentHook = null;\r\n  // workInProgressHook = null;\r\n  // didScheduleRenderPhaseUpdate = false;\r\n  // localIdCounter = 0;\r\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\r\n  // Currently we will identify the update render as a mount because memoizedState === null.\r\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\r\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\r\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\r\n  // so memoizedState would be null during updates and mounts.\r\n\r\n  {\r\n    if (current !== null && current.memoizedState !== null) {\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;\r\n    } else if (hookTypesDev !== null) {\r\n      // This dispatcher handles an edge case where a component is updating,\r\n      // but no stateful hooks have been used.\r\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\r\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\r\n      // This dispatcher does that.\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;\r\n    } else {\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;\r\n    }\r\n  }\r\n\r\n  var children = Component(props, secondArg); // Check if there was a render phase update\r\n\r\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\r\n    // Keep rendering in a loop for as long as render phase updates continue to\r\n    // be scheduled. Use a counter to prevent infinite loops.\r\n    var numberOfReRenders = 0;\r\n\r\n    do {\r\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\r\n\r\n      if (numberOfReRenders >= RE_RENDER_LIMIT) {\r\n        throw new Error(\r\n          \"Too many re-renders. React limits the number of renders to prevent \" +\r\n            \"an infinite loop.\"\r\n        );\r\n      }\r\n\r\n      numberOfReRenders += 1;\r\n\r\n      {\r\n        // Even when hot reloading, allow dependencies to stabilize\r\n        // after first render to prevent infinite render phase updates.\r\n        ignorePreviousDependencies = false;\r\n      } // Start over from the beginning of the list\r\n\r\n      currentHook = null;\r\n      workInProgressHook = null;\r\n      workInProgress.updateQueue = null;\r\n\r\n      {\r\n        // Also validate hook order for cascading updates.\r\n        hookTypesUpdateIndexDev = -1;\r\n      }\r\n\r\n      ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;\r\n      children = Component(props, secondArg);\r\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\r\n  } // We can assume the previous dispatcher is always this one, since we set it\r\n  // at the beginning of the render phase and there's no re-entrance.\r\n\r\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\r\n\r\n  {\r\n    workInProgress._debugHookTypes = hookTypesDev;\r\n  } // This check uses currentHook so that it works the same in DEV and prod bundles.\r\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\r\n\r\n  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;\r\n  renderLanes = NoLanes;\r\n  currentlyRenderingFiber$1 = null;\r\n  currentHook = null;\r\n  workInProgressHook = null;\r\n\r\n  {\r\n    currentHookNameInDev = null;\r\n    hookTypesDev = null;\r\n    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last\r\n    // render. If this fires, it suggests that we incorrectly reset the static\r\n    // flags in some other part of the codebase. This has happened before, for\r\n    // example, in the SuspenseList implementation.\r\n\r\n    if (\r\n      current !== null &&\r\n      (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird\r\n      // and creates false positives. To make this work in legacy mode, we'd\r\n      // need to mark fibers that commit in an incomplete state, somehow. For\r\n      // now I'll disable the warning that most of the bugs that would trigger\r\n      // it are either exclusive to concurrent mode or exist in both.\r\n      (current.mode & ConcurrentMode) !== NoMode\r\n    ) {\r\n      error(\r\n        \"Internal React error: Expected static flag was missing. Please \" +\r\n          \"notify the React team.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook\r\n  // localIdCounter = 0;\r\n\r\n  if (didRenderTooFewHooks) {\r\n    throw new Error(\r\n      \"Rendered fewer hooks than expected. This may be caused by an accidental \" +\r\n        \"early return statement.\"\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\nfunction bailoutHooks(current, workInProgress, lanes) {\r\n  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the\r\n  // complete phase (bubbleProperties).\r\n\r\n  {\r\n    workInProgress.flags &= ~(Passive | Update);\r\n  }\r\n\r\n  current.lanes = removeLanes(current.lanes, lanes);\r\n}\r\nfunction resetHooksAfterThrow() {\r\n  // We can assume the previous dispatcher is always this one, since we set it\r\n  // at the beginning of the render phase and there's no re-entrance.\r\n  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;\r\n\r\n  if (didScheduleRenderPhaseUpdate) {\r\n    // There were render phase updates. These are only valid for this render\r\n    // phase, which we are now aborting. Remove the updates from the queues so\r\n    // they do not persist to the next render. Do not remove updates from hooks\r\n    // that weren't processed.\r\n    //\r\n    // Only reset the updates from the queue if it has a clone. If it does\r\n    // not have a clone, that means it wasn't processed, and the updates were\r\n    // scheduled before we entered the render phase.\r\n    var hook = currentlyRenderingFiber$1.memoizedState;\r\n\r\n    while (hook !== null) {\r\n      var queue = hook.queue;\r\n\r\n      if (queue !== null) {\r\n        queue.pending = null;\r\n      }\r\n\r\n      hook = hook.next;\r\n    }\r\n\r\n    didScheduleRenderPhaseUpdate = false;\r\n  }\r\n\r\n  renderLanes = NoLanes;\r\n  currentlyRenderingFiber$1 = null;\r\n  currentHook = null;\r\n  workInProgressHook = null;\r\n\r\n  {\r\n    hookTypesDev = null;\r\n    hookTypesUpdateIndexDev = -1;\r\n    currentHookNameInDev = null;\r\n    isUpdatingOpaqueValueInRenderPhase = false;\r\n  }\r\n\r\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\r\n}\r\n\r\nfunction mountWorkInProgressHook() {\r\n  var hook = {\r\n    memoizedState: null,\r\n    baseState: null,\r\n    baseQueue: null,\r\n    queue: null,\r\n    next: null\r\n  };\r\n\r\n  if (workInProgressHook === null) {\r\n    // This is the first hook in the list\r\n    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;\r\n  } else {\r\n    // Append to the end of the list\r\n    workInProgressHook = workInProgressHook.next = hook;\r\n  }\r\n\r\n  return workInProgressHook;\r\n}\r\n\r\nfunction updateWorkInProgressHook() {\r\n  // This function is used both for updates and for re-renders triggered by a\r\n  // render phase update. It assumes there is either a current hook we can\r\n  // clone, or a work-in-progress hook from a previous render pass that we can\r\n  // use as a base. When we reach the end of the base list, we must switch to\r\n  // the dispatcher used for mounts.\r\n  var nextCurrentHook;\r\n\r\n  if (currentHook === null) {\r\n    var current = currentlyRenderingFiber$1.alternate;\r\n\r\n    if (current !== null) {\r\n      nextCurrentHook = current.memoizedState;\r\n    } else {\r\n      nextCurrentHook = null;\r\n    }\r\n  } else {\r\n    nextCurrentHook = currentHook.next;\r\n  }\r\n\r\n  var nextWorkInProgressHook;\r\n\r\n  if (workInProgressHook === null) {\r\n    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;\r\n  } else {\r\n    nextWorkInProgressHook = workInProgressHook.next;\r\n  }\r\n\r\n  if (nextWorkInProgressHook !== null) {\r\n    // There's already a work-in-progress. Reuse it.\r\n    workInProgressHook = nextWorkInProgressHook;\r\n    nextWorkInProgressHook = workInProgressHook.next;\r\n    currentHook = nextCurrentHook;\r\n  } else {\r\n    // Clone from the current hook.\r\n    if (nextCurrentHook === null) {\r\n      throw new Error(\"Rendered more hooks than during the previous render.\");\r\n    }\r\n\r\n    currentHook = nextCurrentHook;\r\n    var newHook = {\r\n      memoizedState: currentHook.memoizedState,\r\n      baseState: currentHook.baseState,\r\n      baseQueue: currentHook.baseQueue,\r\n      queue: currentHook.queue,\r\n      next: null\r\n    };\r\n\r\n    if (workInProgressHook === null) {\r\n      // This is the first hook in the list.\r\n      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;\r\n    } else {\r\n      // Append to the end of the list.\r\n      workInProgressHook = workInProgressHook.next = newHook;\r\n    }\r\n  }\r\n\r\n  return workInProgressHook;\r\n}\r\n\r\nfunction createFunctionComponentUpdateQueue() {\r\n  return {\r\n    lastEffect: null,\r\n    stores: null\r\n  };\r\n}\r\n\r\nfunction basicStateReducer(state, action) {\r\n  // $FlowFixMe: Flow doesn't like mixed types\r\n  return typeof action === \"function\" ? action(state) : action;\r\n}\r\n\r\nfunction mountReducer(reducer, initialArg, init) {\r\n  var hook = mountWorkInProgressHook();\r\n  var initialState;\r\n\r\n  if (init !== undefined) {\r\n    initialState = init(initialArg);\r\n  } else {\r\n    initialState = initialArg;\r\n  }\r\n\r\n  hook.memoizedState = hook.baseState = initialState;\r\n  var queue = {\r\n    pending: null,\r\n    interleaved: null,\r\n    lanes: NoLanes,\r\n    dispatch: null,\r\n    lastRenderedReducer: reducer,\r\n    lastRenderedState: initialState\r\n  };\r\n  hook.queue = queue;\r\n  var dispatch = (queue.dispatch = dispatchReducerAction.bind(\r\n    null,\r\n    currentlyRenderingFiber$1,\r\n    queue\r\n  ));\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction updateReducer(reducer, initialArg, init) {\r\n  var hook = updateWorkInProgressHook();\r\n  var queue = hook.queue;\r\n\r\n  if (queue === null) {\r\n    throw new Error(\r\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n\r\n  queue.lastRenderedReducer = reducer;\r\n  var current = currentHook; // The last rebase update that is NOT part of the base state.\r\n\r\n  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.\r\n\r\n  var pendingQueue = queue.pending;\r\n\r\n  if (pendingQueue !== null) {\r\n    // We have new updates that haven't been processed yet.\r\n    // We'll add them to the base queue.\r\n    if (baseQueue !== null) {\r\n      // Merge the pending queue and the base queue.\r\n      var baseFirst = baseQueue.next;\r\n      var pendingFirst = pendingQueue.next;\r\n      baseQueue.next = pendingFirst;\r\n      pendingQueue.next = baseFirst;\r\n    }\r\n\r\n    {\r\n      if (current.baseQueue !== baseQueue) {\r\n        // Internal invariant that should never happen, but feasibly could in\r\n        // the future if we implement resuming, or some form of that.\r\n        error(\r\n          \"Internal error: Expected work-in-progress queue to be a clone. \" +\r\n            \"This is a bug in React.\"\r\n        );\r\n      }\r\n    }\r\n\r\n    current.baseQueue = baseQueue = pendingQueue;\r\n    queue.pending = null;\r\n  }\r\n\r\n  if (baseQueue !== null) {\r\n    // We have a queue to process.\r\n    var first = baseQueue.next;\r\n    var newState = current.baseState;\r\n    var newBaseState = null;\r\n    var newBaseQueueFirst = null;\r\n    var newBaseQueueLast = null;\r\n    var update = first;\r\n\r\n    do {\r\n      var updateLane = update.lane;\r\n\r\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\r\n        // Priority is insufficient. Skip this update. If this is the first\r\n        // skipped update, the previous update/state is the new base\r\n        // update/state.\r\n        var clone = {\r\n          lane: updateLane,\r\n          action: update.action,\r\n          hasEagerState: update.hasEagerState,\r\n          eagerState: update.eagerState,\r\n          next: null\r\n        };\r\n\r\n        if (newBaseQueueLast === null) {\r\n          newBaseQueueFirst = newBaseQueueLast = clone;\r\n          newBaseState = newState;\r\n        } else {\r\n          newBaseQueueLast = newBaseQueueLast.next = clone;\r\n        } // Update the remaining priority in the queue.\r\n        // TODO: Don't need to accumulate this. Instead, we can remove\r\n        // renderLanes from the original lanes.\r\n\r\n        currentlyRenderingFiber$1.lanes = mergeLanes(\r\n          currentlyRenderingFiber$1.lanes,\r\n          updateLane\r\n        );\r\n        markSkippedUpdateLanes(updateLane);\r\n      } else {\r\n        // This update does have sufficient priority.\r\n        if (newBaseQueueLast !== null) {\r\n          var _clone = {\r\n            // This update is going to be committed so we never want uncommit\r\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\r\n            // this will never be skipped by the check above.\r\n            lane: NoLane,\r\n            action: update.action,\r\n            hasEagerState: update.hasEagerState,\r\n            eagerState: update.eagerState,\r\n            next: null\r\n          };\r\n          newBaseQueueLast = newBaseQueueLast.next = _clone;\r\n        } // Process this update.\r\n\r\n        if (update.hasEagerState) {\r\n          // If this update is a state update (not a reducer) and was processed eagerly,\r\n          // we can use the eagerly computed state\r\n          newState = update.eagerState;\r\n        } else {\r\n          var action = update.action;\r\n          newState = reducer(newState, action);\r\n        }\r\n      }\r\n\r\n      update = update.next;\r\n    } while (update !== null && update !== first);\r\n\r\n    if (newBaseQueueLast === null) {\r\n      newBaseState = newState;\r\n    } else {\r\n      newBaseQueueLast.next = newBaseQueueFirst;\r\n    } // Mark that the fiber performed work, but only if the new state is\r\n    // different from the current state.\r\n\r\n    if (!objectIs(newState, hook.memoizedState)) {\r\n      markWorkInProgressReceivedUpdate();\r\n    }\r\n\r\n    hook.memoizedState = newState;\r\n    hook.baseState = newBaseState;\r\n    hook.baseQueue = newBaseQueueLast;\r\n    queue.lastRenderedState = newState;\r\n  } // Interleaved updates are stored on a separate queue. We aren't going to\r\n  // process them during this render, but we do need to track which lanes\r\n  // are remaining.\r\n\r\n  var lastInterleaved = queue.interleaved;\r\n\r\n  if (lastInterleaved !== null) {\r\n    var interleaved = lastInterleaved;\r\n\r\n    do {\r\n      var interleavedLane = interleaved.lane;\r\n      currentlyRenderingFiber$1.lanes = mergeLanes(\r\n        currentlyRenderingFiber$1.lanes,\r\n        interleavedLane\r\n      );\r\n      markSkippedUpdateLanes(interleavedLane);\r\n      interleaved = interleaved.next;\r\n    } while (interleaved !== lastInterleaved);\r\n  } else if (baseQueue === null) {\r\n    // `queue.lanes` is used for entangling transitions. We can set it back to\r\n    // zero once the queue is empty.\r\n    queue.lanes = NoLanes;\r\n  }\r\n\r\n  var dispatch = queue.dispatch;\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction rerenderReducer(reducer, initialArg, init) {\r\n  var hook = updateWorkInProgressHook();\r\n  var queue = hook.queue;\r\n\r\n  if (queue === null) {\r\n    throw new Error(\r\n      \"Should have a queue. This is likely a bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n\r\n  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous\r\n  // work-in-progress hook.\r\n\r\n  var dispatch = queue.dispatch;\r\n  var lastRenderPhaseUpdate = queue.pending;\r\n  var newState = hook.memoizedState;\r\n\r\n  if (lastRenderPhaseUpdate !== null) {\r\n    // The queue doesn't persist past this render pass.\r\n    queue.pending = null;\r\n    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\r\n    var update = firstRenderPhaseUpdate;\r\n\r\n    do {\r\n      // Process this render phase update. We don't have to check the\r\n      // priority because it will always be the same as the current\r\n      // render's.\r\n      var action = update.action;\r\n      newState = reducer(newState, action);\r\n      update = update.next;\r\n    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is\r\n    // different from the current state.\r\n\r\n    if (!objectIs(newState, hook.memoizedState)) {\r\n      markWorkInProgressReceivedUpdate();\r\n    }\r\n\r\n    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to\r\n    // the base state unless the queue is empty.\r\n    // TODO: Not sure if this is the desired semantics, but it's what we\r\n    // do for gDSFP. I can't remember why.\r\n\r\n    if (hook.baseQueue === null) {\r\n      hook.baseState = newState;\r\n    }\r\n\r\n    queue.lastRenderedState = newState;\r\n  }\r\n\r\n  return [newState, dispatch];\r\n}\r\n\r\nfunction mountMutableSource(source, getSnapshot, subscribe) {\r\n  {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nfunction updateMutableSource(source, getSnapshot, subscribe) {\r\n  {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nfunction mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\r\n  var fiber = currentlyRenderingFiber$1;\r\n  var hook = mountWorkInProgressHook();\r\n  var nextSnapshot;\r\n\r\n  {\r\n    nextSnapshot = getSnapshot();\r\n\r\n    {\r\n      if (!didWarnUncachedGetSnapshot) {\r\n        var cachedSnapshot = getSnapshot();\r\n\r\n        if (!objectIs(nextSnapshot, cachedSnapshot)) {\r\n          error(\r\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\r\n          );\r\n\r\n          didWarnUncachedGetSnapshot = true;\r\n        }\r\n      }\r\n    } // Unless we're rendering a blocking lane, schedule a consistency check.\r\n    // Right before committing, we will walk the tree and check if any of the\r\n    // stores were mutated.\r\n    //\r\n    // We won't do this if we're hydrating server-rendered content, because if\r\n    // the content is stale, it's already visible anyway. Instead we'll patch\r\n    // it up in a passive effect.\r\n\r\n    var root = getWorkInProgressRoot();\r\n\r\n    if (root === null) {\r\n      throw new Error(\r\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    if (!includesBlockingLane(root, renderLanes)) {\r\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\r\n    }\r\n  } // Read the current snapshot from the store on every render. This breaks the\r\n  // normal rules of React, and only works because store updates are\r\n  // always synchronous.\r\n\r\n  hook.memoizedState = nextSnapshot;\r\n  var inst = {\r\n    value: nextSnapshot,\r\n    getSnapshot: getSnapshot\r\n  };\r\n  hook.queue = inst; // Schedule an effect to subscribe to the store.\r\n\r\n  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update\r\n  // this whenever subscribe, getSnapshot, or value changes. Because there's no\r\n  // clean-up function, and we track the deps correctly, we can call pushEffect\r\n  // directly, without storing any additional state. For the same reason, we\r\n  // don't need to set a static flag, either.\r\n  // TODO: We can move this to the passive phase once we add a pre-commit\r\n  // consistency check. See the next comment.\r\n\r\n  fiber.flags |= Passive;\r\n  pushEffect(\r\n    HasEffect | Passive$1,\r\n    updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\r\n    undefined,\r\n    null\r\n  );\r\n  return nextSnapshot;\r\n}\r\n\r\nfunction updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\r\n  var fiber = currentlyRenderingFiber$1;\r\n  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the\r\n  // normal rules of React, and only works because store updates are\r\n  // always synchronous.\r\n\r\n  var nextSnapshot = getSnapshot();\r\n\r\n  {\r\n    if (!didWarnUncachedGetSnapshot) {\r\n      var cachedSnapshot = getSnapshot();\r\n\r\n      if (!objectIs(nextSnapshot, cachedSnapshot)) {\r\n        error(\r\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\r\n        );\r\n\r\n        didWarnUncachedGetSnapshot = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  var prevSnapshot = hook.memoizedState;\r\n  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);\r\n\r\n  if (snapshotChanged) {\r\n    hook.memoizedState = nextSnapshot;\r\n    markWorkInProgressReceivedUpdate();\r\n  }\r\n\r\n  var inst = hook.queue;\r\n  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [\r\n    subscribe\r\n  ]); // Whenever getSnapshot or subscribe changes, we need to check in the\r\n  // commit phase if there was an interleaved mutation. In concurrent mode\r\n  // this can happen all the time, but even in synchronous mode, an earlier\r\n  // effect may have mutated the store.\r\n\r\n  if (\r\n    inst.getSnapshot !== getSnapshot ||\r\n    snapshotChanged || // Check if the susbcribe function changed. We can save some memory by\r\n    // checking whether we scheduled a subscription effect above.\r\n    (workInProgressHook !== null &&\r\n      workInProgressHook.memoizedState.tag & HasEffect)\r\n  ) {\r\n    fiber.flags |= Passive;\r\n    pushEffect(\r\n      HasEffect | Passive$1,\r\n      updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot),\r\n      undefined,\r\n      null\r\n    ); // Unless we're rendering a blocking lane, schedule a consistency check.\r\n    // Right before committing, we will walk the tree and check if any of the\r\n    // stores were mutated.\r\n\r\n    var root = getWorkInProgressRoot();\r\n\r\n    if (root === null) {\r\n      throw new Error(\r\n        \"Expected a work-in-progress root. This is a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    if (!includesBlockingLane(root, renderLanes)) {\r\n      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);\r\n    }\r\n  }\r\n\r\n  return nextSnapshot;\r\n}\r\n\r\nfunction pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {\r\n  fiber.flags |= StoreConsistency;\r\n  var check = {\r\n    getSnapshot: getSnapshot,\r\n    value: renderedSnapshot\r\n  };\r\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\r\n\r\n  if (componentUpdateQueue === null) {\r\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\r\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\r\n    componentUpdateQueue.stores = [check];\r\n  } else {\r\n    var stores = componentUpdateQueue.stores;\r\n\r\n    if (stores === null) {\r\n      componentUpdateQueue.stores = [check];\r\n    } else {\r\n      stores.push(check);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {\r\n  // These are updated in the passive phase\r\n  inst.value = nextSnapshot;\r\n  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could\r\n  // have been in an event that fired before the passive effects, or it could\r\n  // have been in a layout effect. In that case, we would have used the old\r\n  // snapsho and getSnapshot values to bail out. We need to check one more time.\r\n\r\n  if (checkIfSnapshotChanged(inst)) {\r\n    // Force a re-render.\r\n    forceStoreRerender(fiber);\r\n  }\r\n}\r\n\r\nfunction subscribeToStore(fiber, inst, subscribe) {\r\n  var handleStoreChange = function() {\r\n    // The store changed. Check if the snapshot changed since the last time we\r\n    // read from the store.\r\n    if (checkIfSnapshotChanged(inst)) {\r\n      // Force a re-render.\r\n      forceStoreRerender(fiber);\r\n    }\r\n  }; // Subscribe to the store and return a clean-up function.\r\n\r\n  return subscribe(handleStoreChange);\r\n}\r\n\r\nfunction checkIfSnapshotChanged(inst) {\r\n  var latestGetSnapshot = inst.getSnapshot;\r\n  var prevValue = inst.value;\r\n\r\n  try {\r\n    var nextValue = latestGetSnapshot();\r\n    return !objectIs(prevValue, nextValue);\r\n  } catch (error) {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction forceStoreRerender(fiber) {\r\n  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n  if (root !== null) {\r\n    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n  }\r\n}\r\n\r\nfunction mountState(initialState) {\r\n  var hook = mountWorkInProgressHook();\r\n\r\n  if (typeof initialState === \"function\") {\r\n    // $FlowFixMe: Flow doesn't like mixed types\r\n    initialState = initialState();\r\n  }\r\n\r\n  hook.memoizedState = hook.baseState = initialState;\r\n  var queue = {\r\n    pending: null,\r\n    interleaved: null,\r\n    lanes: NoLanes,\r\n    dispatch: null,\r\n    lastRenderedReducer: basicStateReducer,\r\n    lastRenderedState: initialState\r\n  };\r\n  hook.queue = queue;\r\n  var dispatch = (queue.dispatch = dispatchSetState.bind(\r\n    null,\r\n    currentlyRenderingFiber$1,\r\n    queue\r\n  ));\r\n  return [hook.memoizedState, dispatch];\r\n}\r\n\r\nfunction updateState(initialState) {\r\n  return updateReducer(basicStateReducer);\r\n}\r\n\r\nfunction rerenderState(initialState) {\r\n  return rerenderReducer(basicStateReducer);\r\n}\r\n\r\nfunction pushEffect(tag, create, destroy, deps) {\r\n  var effect = {\r\n    tag: tag,\r\n    create: create,\r\n    destroy: destroy,\r\n    deps: deps,\r\n    // Circular\r\n    next: null\r\n  };\r\n  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;\r\n\r\n  if (componentUpdateQueue === null) {\r\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\r\n    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;\r\n    componentUpdateQueue.lastEffect = effect.next = effect;\r\n  } else {\r\n    var lastEffect = componentUpdateQueue.lastEffect;\r\n\r\n    if (lastEffect === null) {\r\n      componentUpdateQueue.lastEffect = effect.next = effect;\r\n    } else {\r\n      var firstEffect = lastEffect.next;\r\n      lastEffect.next = effect;\r\n      effect.next = firstEffect;\r\n      componentUpdateQueue.lastEffect = effect;\r\n    }\r\n  }\r\n\r\n  return effect;\r\n}\r\n\r\nfunction mountRef(initialValue) {\r\n  var hook = mountWorkInProgressHook();\r\n\r\n  {\r\n    var _ref2 = {\r\n      current: initialValue\r\n    };\r\n    hook.memoizedState = _ref2;\r\n    return _ref2;\r\n  }\r\n}\r\n\r\nfunction updateRef(initialValue) {\r\n  var hook = updateWorkInProgressHook();\r\n  return hook.memoizedState;\r\n}\r\n\r\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  currentlyRenderingFiber$1.flags |= fiberFlags;\r\n  hook.memoizedState = pushEffect(\r\n    HasEffect | hookFlags,\r\n    create,\r\n    undefined,\r\n    nextDeps\r\n  );\r\n}\r\n\r\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var destroy = undefined;\r\n\r\n  if (currentHook !== null) {\r\n    var prevEffect = currentHook.memoizedState;\r\n    destroy = prevEffect.destroy;\r\n\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevEffect.deps;\r\n\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  currentlyRenderingFiber$1.flags |= fiberFlags;\r\n  hook.memoizedState = pushEffect(\r\n    HasEffect | hookFlags,\r\n    create,\r\n    destroy,\r\n    nextDeps\r\n  );\r\n}\r\n\r\nfunction mountEffect(create, deps) {\r\n  {\r\n    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);\r\n  }\r\n}\r\n\r\nfunction updateEffect(create, deps) {\r\n  return updateEffectImpl(Passive, Passive$1, create, deps);\r\n}\r\n\r\nfunction mountInsertionEffect(create, deps) {\r\n  return mountEffectImpl(Update, Insertion, create, deps);\r\n}\r\n\r\nfunction updateInsertionEffect(create, deps) {\r\n  return updateEffectImpl(Update, Insertion, create, deps);\r\n}\r\n\r\nfunction mountLayoutEffect(create, deps) {\r\n  var fiberFlags = Update;\r\n\r\n  return mountEffectImpl(fiberFlags, Layout, create, deps);\r\n}\r\n\r\nfunction updateLayoutEffect(create, deps) {\r\n  return updateEffectImpl(Update, Layout, create, deps);\r\n}\r\n\r\nfunction imperativeHandleEffect(create, ref) {\r\n  if (typeof ref === \"function\") {\r\n    var refCallback = ref;\r\n\r\n    var _inst = create();\r\n\r\n    refCallback(_inst);\r\n    return function() {\r\n      refCallback(null);\r\n    };\r\n  } else if (ref !== null && ref !== undefined) {\r\n    var refObject = ref;\r\n\r\n    {\r\n      if (!refObject.hasOwnProperty(\"current\")) {\r\n        error(\r\n          \"Expected useImperativeHandle() first argument to either be a \" +\r\n            \"ref callback or React.createRef() object. Instead received: %s.\",\r\n          \"an object with keys {\" + Object.keys(refObject).join(\", \") + \"}\"\r\n        );\r\n      }\r\n    }\r\n\r\n    var _inst2 = create();\r\n\r\n    refObject.current = _inst2;\r\n    return function() {\r\n      refObject.current = null;\r\n    };\r\n  }\r\n}\r\n\r\nfunction mountImperativeHandle(ref, create, deps) {\r\n  {\r\n    if (typeof create !== \"function\") {\r\n      error(\r\n        \"Expected useImperativeHandle() second argument to be a function \" +\r\n          \"that creates a handle. Instead received: %s.\",\r\n        create !== null ? typeof create : \"null\"\r\n      );\r\n    }\r\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\r\n\r\n  var effectDeps =\r\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\r\n  var fiberFlags = Update;\r\n\r\n  return mountEffectImpl(\r\n    fiberFlags,\r\n    Layout,\r\n    imperativeHandleEffect.bind(null, create, ref),\r\n    effectDeps\r\n  );\r\n}\r\n\r\nfunction updateImperativeHandle(ref, create, deps) {\r\n  {\r\n    if (typeof create !== \"function\") {\r\n      error(\r\n        \"Expected useImperativeHandle() second argument to be a function \" +\r\n          \"that creates a handle. Instead received: %s.\",\r\n        create !== null ? typeof create : \"null\"\r\n      );\r\n    }\r\n  } // TODO: If deps are provided, should we skip comparing the ref itself?\r\n\r\n  var effectDeps =\r\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\r\n  return updateEffectImpl(\r\n    Update,\r\n    Layout,\r\n    imperativeHandleEffect.bind(null, create, ref),\r\n    effectDeps\r\n  );\r\n}\r\n\r\nfunction mountDebugValue(value, formatterFn) {\r\n  // This hook is normally a no-op.\r\n  // The react-debug-hooks package injects its own implementation\r\n  // so that e.g. DevTools can display custom hook values.\r\n}\r\n\r\nvar updateDebugValue = mountDebugValue;\r\n\r\nfunction mountCallback(callback, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  hook.memoizedState = [callback, nextDeps];\r\n  return callback;\r\n}\r\n\r\nfunction updateCallback(callback, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var prevState = hook.memoizedState;\r\n\r\n  if (prevState !== null) {\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevState[1];\r\n\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        return prevState[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  hook.memoizedState = [callback, nextDeps];\r\n  return callback;\r\n}\r\n\r\nfunction mountMemo(nextCreate, deps) {\r\n  var hook = mountWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var nextValue = nextCreate();\r\n  hook.memoizedState = [nextValue, nextDeps];\r\n  return nextValue;\r\n}\r\n\r\nfunction updateMemo(nextCreate, deps) {\r\n  var hook = updateWorkInProgressHook();\r\n  var nextDeps = deps === undefined ? null : deps;\r\n  var prevState = hook.memoizedState;\r\n\r\n  if (prevState !== null) {\r\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\r\n    if (nextDeps !== null) {\r\n      var prevDeps = prevState[1];\r\n\r\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\r\n        return prevState[0];\r\n      }\r\n    }\r\n  }\r\n\r\n  var nextValue = nextCreate();\r\n  hook.memoizedState = [nextValue, nextDeps];\r\n  return nextValue;\r\n}\r\n\r\nfunction mountDeferredValue(value) {\r\n  var hook = mountWorkInProgressHook();\r\n  hook.memoizedState = value;\r\n  return value;\r\n}\r\n\r\nfunction updateDeferredValue(value) {\r\n  var hook = updateWorkInProgressHook();\r\n  var resolvedCurrentHook = currentHook;\r\n  var prevValue = resolvedCurrentHook.memoizedState;\r\n  return updateDeferredValueImpl(hook, prevValue, value);\r\n}\r\n\r\nfunction rerenderDeferredValue(value) {\r\n  var hook = updateWorkInProgressHook();\r\n\r\n  if (currentHook === null) {\r\n    // This is a rerender during a mount.\r\n    hook.memoizedState = value;\r\n    return value;\r\n  } else {\r\n    // This is a rerender during an update.\r\n    var prevValue = currentHook.memoizedState;\r\n    return updateDeferredValueImpl(hook, prevValue, value);\r\n  }\r\n}\r\n\r\nfunction updateDeferredValueImpl(hook, prevValue, value) {\r\n  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);\r\n\r\n  if (shouldDeferValue) {\r\n    // This is an urgent update. If the value has changed, keep using the\r\n    // previous value and spawn a deferred render to update it later.\r\n    if (!objectIs(value, prevValue)) {\r\n      // Schedule a deferred render\r\n      var deferredLane = claimNextTransitionLane();\r\n      currentlyRenderingFiber$1.lanes = mergeLanes(\r\n        currentlyRenderingFiber$1.lanes,\r\n        deferredLane\r\n      );\r\n      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent\r\n      // from the latest value. The name \"baseState\" doesn't really match how we\r\n      // use it because we're reusing a state hook field instead of creating a\r\n      // new one.\r\n\r\n      hook.baseState = true;\r\n    } // Reuse the previous value\r\n\r\n    return prevValue;\r\n  } else {\r\n    // This is not an urgent update, so we can use the latest value regardless\r\n    // of what it is. No need to defer it.\r\n    // However, if we're currently inside a spawned render, then we need to mark\r\n    // this as an update to prevent the fiber from bailing out.\r\n    //\r\n    // `baseState` is true when the current value is different from the rendered\r\n    // value. The name doesn't really match how we use it because we're reusing\r\n    // a state hook field instead of creating a new one.\r\n    if (hook.baseState) {\r\n      // Flip this back to false.\r\n      hook.baseState = false;\r\n      markWorkInProgressReceivedUpdate();\r\n    }\r\n\r\n    hook.memoizedState = value;\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction startTransition(setPending, callback, options) {\r\n  var previousPriority = getCurrentUpdatePriority();\r\n  setCurrentUpdatePriority(\r\n    higherEventPriority(previousPriority, ContinuousEventPriority)\r\n  );\r\n  setPending(true);\r\n  var prevTransition = ReactCurrentBatchConfig$1.transition;\r\n  ReactCurrentBatchConfig$1.transition = {};\r\n  var currentTransition = ReactCurrentBatchConfig$1.transition;\r\n\r\n  {\r\n    ReactCurrentBatchConfig$1.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  try {\r\n    setPending(false);\r\n    callback();\r\n  } finally {\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$1.transition = prevTransition;\r\n\r\n    {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        var updatedFibersCount = currentTransition._updatedFibers.size;\r\n\r\n        if (updatedFibersCount > 10) {\r\n          warn(\r\n            \"Detected a large number of updates inside startTransition. \" +\r\n              \"If this is due to a subscription please re-write it to use React provided hooks. \" +\r\n              \"Otherwise concurrent mode guarantees are off the table.\"\r\n          );\r\n        }\r\n\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction mountTransition() {\r\n  var _mountState = mountState(false),\r\n    isPending = _mountState[0],\r\n    setPending = _mountState[1]; // The `start` method never changes.\r\n\r\n  var start = startTransition.bind(null, setPending);\r\n  var hook = mountWorkInProgressHook();\r\n  hook.memoizedState = start;\r\n  return [isPending, start];\r\n}\r\n\r\nfunction updateTransition() {\r\n  var _updateState = updateState(),\r\n    isPending = _updateState[0];\r\n\r\n  var hook = updateWorkInProgressHook();\r\n  var start = hook.memoizedState;\r\n  return [isPending, start];\r\n}\r\n\r\nfunction rerenderTransition() {\r\n  var _rerenderState = rerenderState(),\r\n    isPending = _rerenderState[0];\r\n\r\n  var hook = updateWorkInProgressHook();\r\n  var start = hook.memoizedState;\r\n  return [isPending, start];\r\n}\r\n\r\nvar isUpdatingOpaqueValueInRenderPhase = false;\r\nfunction getIsUpdatingOpaqueValueInRenderPhaseInDEV() {\r\n  {\r\n    return isUpdatingOpaqueValueInRenderPhase;\r\n  }\r\n}\r\n\r\nfunction mountId() {\r\n  var hook = mountWorkInProgressHook();\r\n  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we\r\n  // should do this in Fiber, too? Deferring this decision for now because\r\n  // there's no other place to store the prefix except for an internal field on\r\n  // the public createRoot object, which the fiber tree does not currently have\r\n  // a reference to.\r\n\r\n  var identifierPrefix = root.identifierPrefix;\r\n  var id;\r\n\r\n  {\r\n    // Use a lowercase r prefix for client-generated ids.\r\n    var globalClientId = globalClientIdCounter++;\r\n    id = \":\" + identifierPrefix + \"r\" + globalClientId.toString(32) + \":\";\r\n  }\r\n\r\n  hook.memoizedState = id;\r\n  return id;\r\n}\r\n\r\nfunction updateId() {\r\n  var hook = updateWorkInProgressHook();\r\n  var id = hook.memoizedState;\r\n  return id;\r\n}\r\n\r\nfunction dispatchReducerAction(fiber, queue, action) {\r\n  {\r\n    if (typeof arguments[3] === \"function\") {\r\n      error(\r\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\r\n          \"second callback argument. To execute a side effect after \" +\r\n          \"rendering, declare it in the component body with useEffect().\"\r\n      );\r\n    }\r\n  }\r\n\r\n  var lane = requestUpdateLane(fiber);\r\n  var update = {\r\n    lane: lane,\r\n    action: action,\r\n    hasEagerState: false,\r\n    eagerState: null,\r\n    next: null\r\n  };\r\n\r\n  if (isRenderPhaseUpdate(fiber)) {\r\n    enqueueRenderPhaseUpdate(queue, update);\r\n  } else {\r\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\r\n\r\n    if (root !== null) {\r\n      var eventTime = requestEventTime();\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitionUpdate(root, queue, lane);\r\n    }\r\n  }\r\n}\r\n\r\nfunction dispatchSetState(fiber, queue, action) {\r\n  {\r\n    if (typeof arguments[3] === \"function\") {\r\n      error(\r\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\r\n          \"second callback argument. To execute a side effect after \" +\r\n          \"rendering, declare it in the component body with useEffect().\"\r\n      );\r\n    }\r\n  }\r\n\r\n  var lane = requestUpdateLane(fiber);\r\n  var update = {\r\n    lane: lane,\r\n    action: action,\r\n    hasEagerState: false,\r\n    eagerState: null,\r\n    next: null\r\n  };\r\n\r\n  if (isRenderPhaseUpdate(fiber)) {\r\n    enqueueRenderPhaseUpdate(queue, update);\r\n  } else {\r\n    var alternate = fiber.alternate;\r\n\r\n    if (\r\n      fiber.lanes === NoLanes &&\r\n      (alternate === null || alternate.lanes === NoLanes)\r\n    ) {\r\n      // The queue is currently empty, which means we can eagerly compute the\r\n      // next state before entering the render phase. If the new state is the\r\n      // same as the current state, we may be able to bail out entirely.\r\n      var lastRenderedReducer = queue.lastRenderedReducer;\r\n\r\n      if (lastRenderedReducer !== null) {\r\n        var prevDispatcher;\r\n\r\n        {\r\n          prevDispatcher = ReactCurrentDispatcher$1.current;\r\n          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n        }\r\n\r\n        try {\r\n          var currentState = queue.lastRenderedState;\r\n          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute\r\n          // it, on the update object. If the reducer hasn't changed by the\r\n          // time we enter the render phase, then the eager state can be used\r\n          // without calling the reducer again.\r\n\r\n          update.hasEagerState = true;\r\n          update.eagerState = eagerState;\r\n\r\n          if (objectIs(eagerState, currentState)) {\r\n            // Fast path. We can bail out without scheduling React to re-render.\r\n            // It's still possible that we'll need to rebase this update later,\r\n            // if the component re-renders for a different reason and by that\r\n            // time the reducer has changed.\r\n            // TODO: Do we still need to entangle transitions in this case?\r\n            enqueueConcurrentHookUpdateAndEagerlyBailout(\r\n              fiber,\r\n              queue,\r\n              update,\r\n              lane\r\n            );\r\n            return;\r\n          }\r\n        } catch (error) {\r\n          // Suppress the error. It will throw again in the render phase.\r\n        } finally {\r\n          {\r\n            ReactCurrentDispatcher$1.current = prevDispatcher;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);\r\n\r\n    if (root !== null) {\r\n      var eventTime = requestEventTime();\r\n      scheduleUpdateOnFiber(root, fiber, lane, eventTime);\r\n      entangleTransitionUpdate(root, queue, lane);\r\n    }\r\n  }\r\n}\r\n\r\nfunction isRenderPhaseUpdate(fiber) {\r\n  var alternate = fiber.alternate;\r\n  return (\r\n    fiber === currentlyRenderingFiber$1 ||\r\n    (alternate !== null && alternate === currentlyRenderingFiber$1)\r\n  );\r\n}\r\n\r\nfunction enqueueRenderPhaseUpdate(queue, update) {\r\n  // This is a render phase update. Stash it in a lazily-created map of\r\n  // queue -> linked list of updates. After this render pass, we'll restart\r\n  // and apply the stashed updates on top of the work-in-progress hook.\r\n  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\r\n  var pending = queue.pending;\r\n\r\n  if (pending === null) {\r\n    // This is the first update. Create a circular list.\r\n    update.next = update;\r\n  } else {\r\n    update.next = pending.next;\r\n    pending.next = update;\r\n  }\r\n\r\n  queue.pending = update;\r\n} // TODO: Move to ReactFiberConcurrentUpdates?\r\n\r\nfunction entangleTransitionUpdate(root, queue, lane) {\r\n  if (isTransitionLane(lane)) {\r\n    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they\r\n    // must have finished. We can remove them from the shared queue, which\r\n    // represents a superset of the actually pending lanes. In some cases we\r\n    // may entangle more than we need to, but that's OK. In fact it's worse if\r\n    // we *don't* entangle when we should.\r\n\r\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.\r\n\r\n    var newQueueLanes = mergeLanes(queueLanes, lane);\r\n    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if\r\n    // the lane finished since the last time we entangled it. So we need to\r\n    // entangle it again, just to be sure.\r\n\r\n    markRootEntangled(root, newQueueLanes);\r\n  }\r\n}\r\n\r\nvar ContextOnlyDispatcher = {\r\n  readContext: readContext,\r\n  useCallback: throwInvalidHookError,\r\n  useContext: throwInvalidHookError,\r\n  useEffect: throwInvalidHookError,\r\n  useImperativeHandle: throwInvalidHookError,\r\n  useInsertionEffect: throwInvalidHookError,\r\n  useLayoutEffect: throwInvalidHookError,\r\n  useMemo: throwInvalidHookError,\r\n  useReducer: throwInvalidHookError,\r\n  useRef: throwInvalidHookError,\r\n  useState: throwInvalidHookError,\r\n  useDebugValue: throwInvalidHookError,\r\n  useDeferredValue: throwInvalidHookError,\r\n  useTransition: throwInvalidHookError,\r\n  useMutableSource: throwInvalidHookError,\r\n  useSyncExternalStore: throwInvalidHookError,\r\n  useId: throwInvalidHookError,\r\n  unstable_isNewReconciler: enableNewReconciler\r\n};\r\n\r\nvar HooksDispatcherOnMountInDEV = null;\r\nvar HooksDispatcherOnMountWithHookTypesInDEV = null;\r\nvar HooksDispatcherOnUpdateInDEV = null;\r\nvar HooksDispatcherOnRerenderInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnMountInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnUpdateInDEV = null;\r\nvar InvalidNestedHooksDispatcherOnRerenderInDEV = null;\r\n\r\n{\r\n  var warnInvalidContextAccess = function() {\r\n    error(\r\n      \"Context can only be read while React is rendering. \" +\r\n        \"In classes, you can read it in the render method or getDerivedStateFromProps. \" +\r\n        \"In function components, you can read it directly in the function body, but not \" +\r\n        \"inside Hooks like useReducer() or useMemo().\"\r\n    );\r\n  };\r\n\r\n  var warnInvalidHookAccess = function() {\r\n    error(\r\n      \"Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" +\r\n        \"You can only call Hooks at the top level of your React function. \" +\r\n        \"For more information, see \" +\r\n        \"https://reactjs.org/link/rules-of-hooks\"\r\n    );\r\n  };\r\n\r\n  HooksDispatcherOnMountInDEV = {\r\n    readContext: function(context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function(callback, deps) {\r\n      currentHookNameInDev = \"useCallback\";\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function(context) {\r\n      currentHookNameInDev = \"useContext\";\r\n      mountHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useEffect\";\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function(ref, create, deps) {\r\n      currentHookNameInDev = \"useImperativeHandle\";\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useInsertionEffect\";\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useLayoutEffect\";\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function(create, deps) {\r\n      currentHookNameInDev = \"useMemo\";\r\n      mountHookTypesDev();\r\n      checkDepsAreArrayDev(deps);\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function(reducer, initialArg, init) {\r\n      currentHookNameInDev = \"useReducer\";\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function(initialValue) {\r\n      currentHookNameInDev = \"useRef\";\r\n      mountHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function(initialState) {\r\n      currentHookNameInDev = \"useState\";\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function(value, formatterFn) {\r\n      currentHookNameInDev = \"useDebugValue\";\r\n      mountHookTypesDev();\r\n      return mountDebugValue();\r\n    },\r\n    useDeferredValue: function(value) {\r\n      currentHookNameInDev = \"useDeferredValue\";\r\n      mountHookTypesDev();\r\n      return mountDeferredValue(value);\r\n    },\r\n    useTransition: function() {\r\n      currentHookNameInDev = \"useTransition\";\r\n      mountHookTypesDev();\r\n      return mountTransition();\r\n    },\r\n    useMutableSource: function(source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = \"useMutableSource\";\r\n      mountHookTypesDev();\r\n      return mountMutableSource();\r\n    },\r\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = \"useSyncExternalStore\";\r\n      mountHookTypesDev();\r\n      return mountSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function() {\r\n      currentHookNameInDev = \"useId\";\r\n      mountHookTypesDev();\r\n      return mountId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  HooksDispatcherOnMountWithHookTypesInDEV = {\r\n    readContext: function(context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function(callback, deps) {\r\n      currentHookNameInDev = \"useCallback\";\r\n      updateHookTypesDev();\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function(context) {\r\n      currentHookNameInDev = \"useContext\";\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useEffect\";\r\n      updateHookTypesDev();\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function(ref, create, deps) {\r\n      currentHookNameInDev = \"useImperativeHandle\";\r\n      updateHookTypesDev();\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useInsertionEffect\";\r\n      updateHookTypesDev();\r\n      return mountInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useLayoutEffect\";\r\n      updateHookTypesDev();\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function(create, deps) {\r\n      currentHookNameInDev = \"useMemo\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function(reducer, initialArg, init) {\r\n      currentHookNameInDev = \"useReducer\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function(initialValue) {\r\n      currentHookNameInDev = \"useRef\";\r\n      updateHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function(initialState) {\r\n      currentHookNameInDev = \"useState\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function(value, formatterFn) {\r\n      currentHookNameInDev = \"useDebugValue\";\r\n      updateHookTypesDev();\r\n      return mountDebugValue();\r\n    },\r\n    useDeferredValue: function(value) {\r\n      currentHookNameInDev = \"useDeferredValue\";\r\n      updateHookTypesDev();\r\n      return mountDeferredValue(value);\r\n    },\r\n    useTransition: function() {\r\n      currentHookNameInDev = \"useTransition\";\r\n      updateHookTypesDev();\r\n      return mountTransition();\r\n    },\r\n    useMutableSource: function(source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = \"useMutableSource\";\r\n      updateHookTypesDev();\r\n      return mountMutableSource();\r\n    },\r\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = \"useSyncExternalStore\";\r\n      updateHookTypesDev();\r\n      return mountSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function() {\r\n      currentHookNameInDev = \"useId\";\r\n      updateHookTypesDev();\r\n      return mountId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  HooksDispatcherOnUpdateInDEV = {\r\n    readContext: function(context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function(callback, deps) {\r\n      currentHookNameInDev = \"useCallback\";\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function(context) {\r\n      currentHookNameInDev = \"useContext\";\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useEffect\";\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function(ref, create, deps) {\r\n      currentHookNameInDev = \"useImperativeHandle\";\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useInsertionEffect\";\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useLayoutEffect\";\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function(create, deps) {\r\n      currentHookNameInDev = \"useMemo\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function(reducer, initialArg, init) {\r\n      currentHookNameInDev = \"useReducer\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function(initialValue) {\r\n      currentHookNameInDev = \"useRef\";\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function(initialState) {\r\n      currentHookNameInDev = \"useState\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function(value, formatterFn) {\r\n      currentHookNameInDev = \"useDebugValue\";\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function(value) {\r\n      currentHookNameInDev = \"useDeferredValue\";\r\n      updateHookTypesDev();\r\n      return updateDeferredValue(value);\r\n    },\r\n    useTransition: function() {\r\n      currentHookNameInDev = \"useTransition\";\r\n      updateHookTypesDev();\r\n      return updateTransition();\r\n    },\r\n    useMutableSource: function(source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = \"useMutableSource\";\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = \"useSyncExternalStore\";\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function() {\r\n      currentHookNameInDev = \"useId\";\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  HooksDispatcherOnRerenderInDEV = {\r\n    readContext: function(context) {\r\n      return readContext(context);\r\n    },\r\n    useCallback: function(callback, deps) {\r\n      currentHookNameInDev = \"useCallback\";\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function(context) {\r\n      currentHookNameInDev = \"useContext\";\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useEffect\";\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function(ref, create, deps) {\r\n      currentHookNameInDev = \"useImperativeHandle\";\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useInsertionEffect\";\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useLayoutEffect\";\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function(create, deps) {\r\n      currentHookNameInDev = \"useMemo\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function(reducer, initialArg, init) {\r\n      currentHookNameInDev = \"useReducer\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n\r\n      try {\r\n        return rerenderReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function(initialValue) {\r\n      currentHookNameInDev = \"useRef\";\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function(initialState) {\r\n      currentHookNameInDev = \"useState\";\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\r\n\r\n      try {\r\n        return rerenderState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function(value, formatterFn) {\r\n      currentHookNameInDev = \"useDebugValue\";\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function(value) {\r\n      currentHookNameInDev = \"useDeferredValue\";\r\n      updateHookTypesDev();\r\n      return rerenderDeferredValue(value);\r\n    },\r\n    useTransition: function() {\r\n      currentHookNameInDev = \"useTransition\";\r\n      updateHookTypesDev();\r\n      return rerenderTransition();\r\n    },\r\n    useMutableSource: function(source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = \"useMutableSource\";\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = \"useSyncExternalStore\";\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function() {\r\n      currentHookNameInDev = \"useId\";\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnMountInDEV = {\r\n    readContext: function(context) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context);\r\n    },\r\n    useCallback: function(callback, deps) {\r\n      currentHookNameInDev = \"useCallback\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountCallback(callback, deps);\r\n    },\r\n    useContext: function(context) {\r\n      currentHookNameInDev = \"useContext\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useEffect\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function(ref, create, deps) {\r\n      currentHookNameInDev = \"useImperativeHandle\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useInsertionEffect\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useLayoutEffect\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function(create, deps) {\r\n      currentHookNameInDev = \"useMemo\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function(reducer, initialArg, init) {\r\n      currentHookNameInDev = \"useReducer\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function(initialValue) {\r\n      currentHookNameInDev = \"useRef\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountRef(initialValue);\r\n    },\r\n    useState: function(initialState) {\r\n      currentHookNameInDev = \"useState\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;\r\n\r\n      try {\r\n        return mountState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function(value, formatterFn) {\r\n      currentHookNameInDev = \"useDebugValue\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountDebugValue();\r\n    },\r\n    useDeferredValue: function(value) {\r\n      currentHookNameInDev = \"useDeferredValue\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountDeferredValue(value);\r\n    },\r\n    useTransition: function() {\r\n      currentHookNameInDev = \"useTransition\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountTransition();\r\n    },\r\n    useMutableSource: function(source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = \"useMutableSource\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountMutableSource();\r\n    },\r\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = \"useSyncExternalStore\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function() {\r\n      currentHookNameInDev = \"useId\";\r\n      warnInvalidHookAccess();\r\n      mountHookTypesDev();\r\n      return mountId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\r\n    readContext: function(context) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context);\r\n    },\r\n    useCallback: function(callback, deps) {\r\n      currentHookNameInDev = \"useCallback\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function(context) {\r\n      currentHookNameInDev = \"useContext\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useEffect\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function(ref, create, deps) {\r\n      currentHookNameInDev = \"useImperativeHandle\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useInsertionEffect\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useLayoutEffect\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function(create, deps) {\r\n      currentHookNameInDev = \"useMemo\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function(reducer, initialArg, init) {\r\n      currentHookNameInDev = \"useReducer\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function(initialValue) {\r\n      currentHookNameInDev = \"useRef\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function(initialState) {\r\n      currentHookNameInDev = \"useState\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function(value, formatterFn) {\r\n      currentHookNameInDev = \"useDebugValue\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function(value) {\r\n      currentHookNameInDev = \"useDeferredValue\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateDeferredValue(value);\r\n    },\r\n    useTransition: function() {\r\n      currentHookNameInDev = \"useTransition\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateTransition();\r\n    },\r\n    useMutableSource: function(source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = \"useMutableSource\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = \"useSyncExternalStore\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function() {\r\n      currentHookNameInDev = \"useId\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n\r\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\r\n    readContext: function(context) {\r\n      warnInvalidContextAccess();\r\n      return readContext(context);\r\n    },\r\n    useCallback: function(callback, deps) {\r\n      currentHookNameInDev = \"useCallback\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateCallback(callback, deps);\r\n    },\r\n    useContext: function(context) {\r\n      currentHookNameInDev = \"useContext\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return readContext(context);\r\n    },\r\n    useEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useEffect\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateEffect(create, deps);\r\n    },\r\n    useImperativeHandle: function(ref, create, deps) {\r\n      currentHookNameInDev = \"useImperativeHandle\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateImperativeHandle(ref, create, deps);\r\n    },\r\n    useInsertionEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useInsertionEffect\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateInsertionEffect(create, deps);\r\n    },\r\n    useLayoutEffect: function(create, deps) {\r\n      currentHookNameInDev = \"useLayoutEffect\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateLayoutEffect(create, deps);\r\n    },\r\n    useMemo: function(create, deps) {\r\n      currentHookNameInDev = \"useMemo\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return updateMemo(create, deps);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useReducer: function(reducer, initialArg, init) {\r\n      currentHookNameInDev = \"useReducer\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return rerenderReducer(reducer, initialArg, init);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useRef: function(initialValue) {\r\n      currentHookNameInDev = \"useRef\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateRef();\r\n    },\r\n    useState: function(initialState) {\r\n      currentHookNameInDev = \"useState\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      var prevDispatcher = ReactCurrentDispatcher$1.current;\r\n      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\r\n\r\n      try {\r\n        return rerenderState(initialState);\r\n      } finally {\r\n        ReactCurrentDispatcher$1.current = prevDispatcher;\r\n      }\r\n    },\r\n    useDebugValue: function(value, formatterFn) {\r\n      currentHookNameInDev = \"useDebugValue\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateDebugValue();\r\n    },\r\n    useDeferredValue: function(value) {\r\n      currentHookNameInDev = \"useDeferredValue\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return rerenderDeferredValue(value);\r\n    },\r\n    useTransition: function() {\r\n      currentHookNameInDev = \"useTransition\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return rerenderTransition();\r\n    },\r\n    useMutableSource: function(source, getSnapshot, subscribe) {\r\n      currentHookNameInDev = \"useMutableSource\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateMutableSource();\r\n    },\r\n    useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {\r\n      currentHookNameInDev = \"useSyncExternalStore\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateSyncExternalStore(subscribe, getSnapshot);\r\n    },\r\n    useId: function() {\r\n      currentHookNameInDev = \"useId\";\r\n      warnInvalidHookAccess();\r\n      updateHookTypesDev();\r\n      return updateId();\r\n    },\r\n    unstable_isNewReconciler: enableNewReconciler\r\n  };\r\n}\r\n\r\nvar now$1 = Scheduler.unstable_now;\r\nvar commitTime = 0;\r\nvar layoutEffectStartTime = -1;\r\nvar profilerStartTime = -1;\r\nvar passiveEffectStartTime = -1;\r\n/**\r\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\r\n *\r\n * The overall sequence is:\r\n *   1. render\r\n *   2. commit (and call `onRender`, `onCommit`)\r\n *   3. check for nested updates\r\n *   4. flush passive effects (and call `onPostCommit`)\r\n *\r\n * Nested updates are identified in step 3 above,\r\n * but step 4 still applies to the work that was just committed.\r\n * We use two flags to track nested updates then:\r\n * one tracks whether the upcoming update is a nested update,\r\n * and the other tracks whether the current update was a nested update.\r\n * The first value gets synced to the second at the start of the render phase.\r\n */\r\n\r\nvar currentUpdateIsNested = false;\r\nvar nestedUpdateScheduled = false;\r\n\r\nfunction isCurrentUpdateNested() {\r\n  return currentUpdateIsNested;\r\n}\r\n\r\nfunction markNestedUpdateScheduled() {\r\n  {\r\n    nestedUpdateScheduled = true;\r\n  }\r\n}\r\n\r\nfunction resetNestedUpdateFlag() {\r\n  {\r\n    currentUpdateIsNested = false;\r\n    nestedUpdateScheduled = false;\r\n  }\r\n}\r\n\r\nfunction syncNestedUpdateFlag() {\r\n  {\r\n    currentUpdateIsNested = nestedUpdateScheduled;\r\n    nestedUpdateScheduled = false;\r\n  }\r\n}\r\n\r\nfunction getCommitTime() {\r\n  return commitTime;\r\n}\r\n\r\nfunction recordCommitTime() {\r\n  commitTime = now$1();\r\n}\r\n\r\nfunction startProfilerTimer(fiber) {\r\n  profilerStartTime = now$1();\r\n\r\n  if (fiber.actualStartTime < 0) {\r\n    fiber.actualStartTime = now$1();\r\n  }\r\n}\r\n\r\nfunction stopProfilerTimerIfRunning(fiber) {\r\n  profilerStartTime = -1;\r\n}\r\n\r\nfunction stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {\r\n  if (profilerStartTime >= 0) {\r\n    var elapsedTime = now$1() - profilerStartTime;\r\n    fiber.actualDuration += elapsedTime;\r\n\r\n    if (overrideBaseTime) {\r\n      fiber.selfBaseDuration = elapsedTime;\r\n    }\r\n\r\n    profilerStartTime = -1;\r\n  }\r\n}\r\n\r\nfunction recordLayoutEffectDuration(fiber) {\r\n  if (layoutEffectStartTime >= 0) {\r\n    var elapsedTime = now$1() - layoutEffectStartTime;\r\n    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\r\n    // Or the root (for the DevTools Profiler to read)\r\n\r\n    var parentFiber = fiber.return;\r\n\r\n    while (parentFiber !== null) {\r\n      switch (parentFiber.tag) {\r\n        case HostRoot:\r\n          var root = parentFiber.stateNode;\r\n          root.effectDuration += elapsedTime;\r\n          return;\r\n\r\n        case Profiler:\r\n          var parentStateNode = parentFiber.stateNode;\r\n          parentStateNode.effectDuration += elapsedTime;\r\n          return;\r\n      }\r\n\r\n      parentFiber = parentFiber.return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction recordPassiveEffectDuration(fiber) {\r\n  if (passiveEffectStartTime >= 0) {\r\n    var elapsedTime = now$1() - passiveEffectStartTime;\r\n    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor\r\n    // Or the root (for the DevTools Profiler to read)\r\n\r\n    var parentFiber = fiber.return;\r\n\r\n    while (parentFiber !== null) {\r\n      switch (parentFiber.tag) {\r\n        case HostRoot:\r\n          var root = parentFiber.stateNode;\r\n\r\n          if (root !== null) {\r\n            root.passiveEffectDuration += elapsedTime;\r\n          }\r\n\r\n          return;\r\n\r\n        case Profiler:\r\n          var parentStateNode = parentFiber.stateNode;\r\n\r\n          if (parentStateNode !== null) {\r\n            // Detached fibers have their state node cleared out.\r\n            // In this case, the return pointer is also cleared out,\r\n            // so we won't be able to report the time spent in this Profiler's subtree.\r\n            parentStateNode.passiveEffectDuration += elapsedTime;\r\n          }\r\n\r\n          return;\r\n      }\r\n\r\n      parentFiber = parentFiber.return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction startLayoutEffectTimer() {\r\n  layoutEffectStartTime = now$1();\r\n}\r\n\r\nfunction startPassiveEffectTimer() {\r\n  passiveEffectStartTime = now$1();\r\n}\r\n\r\nfunction transferActualDuration(fiber) {\r\n  // Transfer time spent rendering these children so we don't lose it\r\n  // after we rerender. This is used as a helper in special cases\r\n  // where we should count the work of multiple passes.\r\n  var child = fiber.child;\r\n\r\n  while (child) {\r\n    fiber.actualDuration += child.actualDuration;\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nfunction createCapturedValueAtFiber(value, source) {\r\n  // If the value is an error, call this function immediately after it is thrown\r\n  // so the stack is accurate.\r\n  return {\r\n    value: value,\r\n    source: source,\r\n    stack: getStackByFiberInDevAndProd(source),\r\n    digest: null\r\n  };\r\n}\r\nfunction createCapturedValue(value, digest, stack) {\r\n  return {\r\n    value: value,\r\n    source: null,\r\n    stack: stack != null ? stack : null,\r\n    digest: digest != null ? digest : null\r\n  };\r\n}\r\n\r\nif (\r\n  typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog !==\r\n  \"function\"\r\n) {\r\n  throw new Error(\r\n    \"Expected ReactFiberErrorDialog.showErrorDialog to be a function.\"\r\n  );\r\n}\r\n\r\nfunction showErrorDialog(boundary, errorInfo) {\r\n  var capturedError = {\r\n    componentStack: errorInfo.stack !== null ? errorInfo.stack : \"\",\r\n    error: errorInfo.value,\r\n    errorBoundary:\r\n      boundary !== null && boundary.tag === ClassComponent\r\n        ? boundary.stateNode\r\n        : null\r\n  };\r\n  return ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(\r\n    capturedError\r\n  );\r\n}\r\n\r\nfunction logCapturedError(boundary, errorInfo) {\r\n  try {\r\n    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.\r\n    // This enables renderers like ReactNative to better manage redbox behavior.\r\n\r\n    if (logError === false) {\r\n      return;\r\n    }\r\n\r\n    var error = errorInfo.value;\r\n\r\n    if (true) {\r\n      var source = errorInfo.source;\r\n      var stack = errorInfo.stack;\r\n      var componentStack = stack !== null ? stack : \"\"; // Browsers support silencing uncaught errors by calling\r\n      // `preventDefault()` in window `error` handler.\r\n      // We record this information as an expando on the error.\r\n\r\n      if (error != null && error._suppressLogging) {\r\n        if (boundary.tag === ClassComponent) {\r\n          // The error is recoverable and was silenced.\r\n          // Ignore it and don't print the stack addendum.\r\n          // This is handy for testing error boundaries without noise.\r\n          return;\r\n        } // The error is fatal. Since the silencing might have\r\n        // been accidental, we'll surface it anyway.\r\n        // However, the browser would have silenced the original error\r\n        // so we'll print it first, and then print the stack addendum.\r\n\r\n        console[\"error\"](error); // Don't transform to our wrapper\r\n        // For a more detailed description of this block, see:\r\n        // https://github.com/facebook/react/pull/13384\r\n      }\r\n\r\n      var componentName = source ? getComponentNameFromFiber(source) : null;\r\n      var componentNameMessage = componentName\r\n        ? \"The above error occurred in the <\" + componentName + \"> component:\"\r\n        : \"The above error occurred in one of your React components:\";\r\n      var errorBoundaryMessage;\r\n\r\n      if (boundary.tag === HostRoot) {\r\n        errorBoundaryMessage =\r\n          \"Consider adding an error boundary to your tree to customize error handling behavior.\\n\" +\r\n          \"Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\";\r\n      } else {\r\n        var errorBoundaryName =\r\n          getComponentNameFromFiber(boundary) || \"Anonymous\";\r\n        errorBoundaryMessage =\r\n          \"React will try to recreate this component tree from scratch \" +\r\n          (\"using the error boundary you provided, \" + errorBoundaryName + \".\");\r\n      }\r\n\r\n      var combinedMessage =\r\n        componentNameMessage +\r\n        \"\\n\" +\r\n        componentStack +\r\n        \"\\n\\n\" +\r\n        (\"\" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.\r\n      // We don't include the original error message and JS stack because the browser\r\n      // has already printed it. Even if the application swallows the error, it is still\r\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\r\n\r\n      console[\"error\"](combinedMessage); // Don't transform to our wrapper\r\n    } else {\r\n      // In production, we print the error directly.\r\n      // This will include the message, the JS stack, and anything the browser wants to show.\r\n      // We pass the error object instead of custom message so that the browser displays the error natively.\r\n      console[\"error\"](error); // Don't transform to our wrapper\r\n    }\r\n  } catch (e) {\r\n    // This method must not throw, or React internal state will get messed up.\r\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\r\n    // we want to report this error outside of the normal stack as a last resort.\r\n    // https://github.com/facebook/react/issues/13188\r\n    setTimeout(function() {\r\n      throw e;\r\n    });\r\n  }\r\n}\r\n\r\nvar PossiblyWeakMap$1 = typeof WeakMap === \"function\" ? WeakMap : Map;\r\n\r\nfunction createRootErrorUpdate(fiber, errorInfo, lane) {\r\n  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.\r\n\r\n  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property\r\n  // being called \"element\".\r\n\r\n  update.payload = {\r\n    element: null\r\n  };\r\n  var error = errorInfo.value;\r\n\r\n  update.callback = function() {\r\n    onUncaughtError(error);\r\n    logCapturedError(fiber, errorInfo);\r\n  };\r\n\r\n  return update;\r\n}\r\n\r\nfunction createClassErrorUpdate(fiber, errorInfo, lane) {\r\n  var update = createUpdate(NoTimestamp, lane);\r\n  update.tag = CaptureUpdate;\r\n  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;\r\n\r\n  if (typeof getDerivedStateFromError === \"function\") {\r\n    var error$1 = errorInfo.value;\r\n\r\n    update.payload = function() {\r\n      return getDerivedStateFromError(error$1);\r\n    };\r\n\r\n    update.callback = function() {\r\n      {\r\n        markFailedErrorBoundaryForHotReloading(fiber);\r\n      }\r\n\r\n      logCapturedError(fiber, errorInfo);\r\n    };\r\n  }\r\n\r\n  var inst = fiber.stateNode;\r\n\r\n  if (inst !== null && typeof inst.componentDidCatch === \"function\") {\r\n    update.callback = function callback() {\r\n      {\r\n        markFailedErrorBoundaryForHotReloading(fiber);\r\n      }\r\n\r\n      logCapturedError(fiber, errorInfo);\r\n\r\n      if (typeof getDerivedStateFromError !== \"function\") {\r\n        // To preserve the preexisting retry behavior of error boundaries,\r\n        // we keep track of which ones already failed during this batch.\r\n        // This gets reset before we yield back to the browser.\r\n        // TODO: Warn in strict mode if getDerivedStateFromError is\r\n        // not defined.\r\n        markLegacyErrorBoundaryAsFailed(this);\r\n      }\r\n\r\n      var error$1 = errorInfo.value;\r\n      var stack = errorInfo.stack;\r\n      this.componentDidCatch(error$1, {\r\n        componentStack: stack !== null ? stack : \"\"\r\n      });\r\n\r\n      {\r\n        if (typeof getDerivedStateFromError !== \"function\") {\r\n          // If componentDidCatch is the only error boundary method defined,\r\n          // then it needs to call setState to recover from errors.\r\n          // If no state update is scheduled then the boundary will swallow the error.\r\n          if (!includesSomeLane(fiber.lanes, SyncLane)) {\r\n            error(\r\n              \"%s: Error boundaries should implement getDerivedStateFromError(). \" +\r\n                \"In that method, return a state update to display an error message or fallback UI.\",\r\n              getComponentNameFromFiber(fiber) || \"Unknown\"\r\n            );\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return update;\r\n}\r\n\r\nfunction attachPingListener(root, wakeable, lanes) {\r\n  // Attach a ping listener\r\n  //\r\n  // The data might resolve before we have a chance to commit the fallback. Or,\r\n  // in the case of a refresh, we'll never commit a fallback. So we need to\r\n  // attach a listener now. When it resolves (\"pings\"), we can decide whether to\r\n  // try rendering the tree again.\r\n  //\r\n  // Only attach a listener if one does not already exist for the lanes\r\n  // we're currently rendering (which acts like a \"thread ID\" here).\r\n  //\r\n  // We only need to do this in concurrent mode. Legacy Suspense always\r\n  // commits fallbacks synchronously, so there are no pings.\r\n  var pingCache = root.pingCache;\r\n  var threadIDs;\r\n\r\n  if (pingCache === null) {\r\n    pingCache = root.pingCache = new PossiblyWeakMap$1();\r\n    threadIDs = new Set();\r\n    pingCache.set(wakeable, threadIDs);\r\n  } else {\r\n    threadIDs = pingCache.get(wakeable);\r\n\r\n    if (threadIDs === undefined) {\r\n      threadIDs = new Set();\r\n      pingCache.set(wakeable, threadIDs);\r\n    }\r\n  }\r\n\r\n  if (!threadIDs.has(lanes)) {\r\n    // Memoize using the thread ID to prevent redundant listeners.\r\n    threadIDs.add(lanes);\r\n    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\r\n\r\n    {\r\n      if (isDevToolsPresent) {\r\n        // If we have pending work still, restore the original updaters\r\n        restorePendingUpdaters(root, lanes);\r\n      }\r\n    }\r\n\r\n    wakeable.then(ping, ping);\r\n  }\r\n}\r\n\r\nfunction attachRetryListener(suspenseBoundary, root, wakeable, lanes) {\r\n  // Retry listener\r\n  //\r\n  // If the fallback does commit, we need to attach a different type of\r\n  // listener. This one schedules an update on the Suspense boundary to turn\r\n  // the fallback state off.\r\n  //\r\n  // Stash the wakeable on the boundary fiber so we can access it in the\r\n  // commit phase.\r\n  //\r\n  // When the wakeable resolves, we'll attempt to render the boundary\r\n  // again (\"retry\").\r\n  var wakeables = suspenseBoundary.updateQueue;\r\n\r\n  if (wakeables === null) {\r\n    var updateQueue = new Set();\r\n    updateQueue.add(wakeable);\r\n    suspenseBoundary.updateQueue = updateQueue;\r\n  } else {\r\n    wakeables.add(wakeable);\r\n  }\r\n}\r\n\r\nfunction resetSuspendedComponent(sourceFiber, rootRenderLanes) {\r\n  // A legacy mode Suspense quirk, only relevant to hook components.\r\n\r\n  var tag = sourceFiber.tag;\r\n\r\n  if (\r\n    (sourceFiber.mode & ConcurrentMode) === NoMode &&\r\n    (tag === FunctionComponent ||\r\n      tag === ForwardRef ||\r\n      tag === SimpleMemoComponent)\r\n  ) {\r\n    var currentSource = sourceFiber.alternate;\r\n\r\n    if (currentSource) {\r\n      sourceFiber.updateQueue = currentSource.updateQueue;\r\n      sourceFiber.memoizedState = currentSource.memoizedState;\r\n      sourceFiber.lanes = currentSource.lanes;\r\n    } else {\r\n      sourceFiber.updateQueue = null;\r\n      sourceFiber.memoizedState = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getNearestSuspenseBoundaryToCapture(returnFiber) {\r\n  var node = returnFiber;\r\n\r\n  do {\r\n    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {\r\n      return node;\r\n    } // This boundary already captured during this render. Continue to the next\r\n    // boundary.\r\n\r\n    node = node.return;\r\n  } while (node !== null);\r\n\r\n  return null;\r\n}\r\n\r\nfunction markSuspenseBoundaryShouldCapture(\r\n  suspenseBoundary,\r\n  returnFiber,\r\n  sourceFiber,\r\n  root,\r\n  rootRenderLanes\r\n) {\r\n  // This marks a Suspense boundary so that when we're unwinding the stack,\r\n  // it captures the suspended \"exception\" and does a second (fallback) pass.\r\n  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {\r\n    // Legacy Mode Suspense\r\n    //\r\n    // If the boundary is in legacy mode, we should *not*\r\n    // suspend the commit. Pretend as if the suspended component rendered\r\n    // null and keep rendering. When the Suspense boundary completes,\r\n    // we'll do a second pass to render the fallback.\r\n    if (suspenseBoundary === returnFiber) {\r\n      // Special case where we suspended while reconciling the children of\r\n      // a Suspense boundary's inner Offscreen wrapper fiber. This happens\r\n      // when a React.lazy component is a direct child of a\r\n      // Suspense boundary.\r\n      //\r\n      // Suspense boundaries are implemented as multiple fibers, but they\r\n      // are a single conceptual unit. The legacy mode behavior where we\r\n      // pretend the suspended fiber committed as `null` won't work,\r\n      // because in this case the \"suspended\" fiber is the inner\r\n      // Offscreen wrapper.\r\n      //\r\n      // Because the contents of the boundary haven't started rendering\r\n      // yet (i.e. nothing in the tree has partially rendered) we can\r\n      // switch to the regular, concurrent mode behavior: mark the\r\n      // boundary with ShouldCapture and enter the unwind phase.\r\n      suspenseBoundary.flags |= ShouldCapture;\r\n    } else {\r\n      suspenseBoundary.flags |= DidCapture;\r\n      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.\r\n      // But we shouldn't call any lifecycle methods or callbacks. Remove\r\n      // all lifecycle effect tags.\r\n\r\n      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\r\n\r\n      if (sourceFiber.tag === ClassComponent) {\r\n        var currentSourceFiber = sourceFiber.alternate;\r\n\r\n        if (currentSourceFiber === null) {\r\n          // This is a new mount. Change the tag so it's not mistaken for a\r\n          // completed class component. For example, we should not call\r\n          // componentWillUnmount if it is deleted.\r\n          sourceFiber.tag = IncompleteClassComponent;\r\n        } else {\r\n          // When we try rendering again, we should not reuse the current fiber,\r\n          // since it's known to be in an inconsistent state. Use a force update to\r\n          // prevent a bail out.\r\n          var update = createUpdate(NoTimestamp, SyncLane);\r\n          update.tag = ForceUpdate;\r\n          enqueueUpdate(sourceFiber, update, SyncLane);\r\n        }\r\n      } // The source fiber did not complete. Mark it with Sync priority to\r\n      // indicate that it still has pending work.\r\n\r\n      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\r\n    }\r\n\r\n    return suspenseBoundary;\r\n  } // Confirmed that the boundary is in a concurrent mode tree. Continue\r\n  // with the normal suspend path.\r\n  //\r\n  // After this we'll use a set of heuristics to determine whether this\r\n  // render pass will run to completion or restart or \"suspend\" the commit.\r\n  // The actual logic for this is spread out in different places.\r\n  //\r\n  // This first principle is that if we're going to suspend when we complete\r\n  // a root, then we should also restart if we get an update or ping that\r\n  // might unsuspend it, and vice versa. The only reason to suspend is\r\n  // because you think you might want to restart before committing. However,\r\n  // it doesn't make sense to restart only while in the period we're suspended.\r\n  //\r\n  // Restarting too aggressively is also not good because it starves out any\r\n  // intermediate loading state. So we use heuristics to determine when.\r\n  // Suspense Heuristics\r\n  //\r\n  // If nothing threw a Promise or all the same fallbacks are already showing,\r\n  // then don't suspend/restart.\r\n  //\r\n  // If this is an initial render of a new tree of Suspense boundaries and\r\n  // those trigger a fallback, then don't suspend/restart. We want to ensure\r\n  // that we can show the initial loading state as quickly as possible.\r\n  //\r\n  // If we hit a \"Delayed\" case, such as when we'd switch from content back into\r\n  // a fallback, then we should always suspend/restart. Transitions apply\r\n  // to this case. If none is defined, JND is used instead.\r\n  //\r\n  // If we're already showing a fallback and it gets \"retried\", allowing us to show\r\n  // another level, but there's still an inner boundary that would show a fallback,\r\n  // then we suspend/restart for 500ms since the last time we showed a fallback\r\n  // anywhere in the tree. This effectively throttles progressive loading into a\r\n  // consistent train of commits. This also gives us an opportunity to restart to\r\n  // get to the completed state slightly earlier.\r\n  //\r\n  // If there's ambiguity due to batching it's resolved in preference of:\r\n  // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\r\n  //\r\n  // We want to ensure that a \"busy\" state doesn't get force committed. We want to\r\n  // ensure that new initial loading states can commit as soon as possible.\r\n\r\n  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in\r\n  // the begin phase to prevent an early bailout.\r\n\r\n  suspenseBoundary.lanes = rootRenderLanes;\r\n  return suspenseBoundary;\r\n}\r\n\r\nfunction throwException(\r\n  root,\r\n  returnFiber,\r\n  sourceFiber,\r\n  value,\r\n  rootRenderLanes\r\n) {\r\n  // The source fiber did not complete.\r\n  sourceFiber.flags |= Incomplete;\r\n\r\n  {\r\n    if (isDevToolsPresent) {\r\n      // If we have pending work still, restore the original updaters\r\n      restorePendingUpdaters(root, rootRenderLanes);\r\n    }\r\n  }\r\n\r\n  if (\r\n    value !== null &&\r\n    typeof value === \"object\" &&\r\n    typeof value.then === \"function\"\r\n  ) {\r\n    // This is a wakeable. The component suspended.\r\n    var wakeable = value;\r\n    resetSuspendedComponent(sourceFiber);\r\n\r\n    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);\r\n\r\n    if (suspenseBoundary !== null) {\r\n      suspenseBoundary.flags &= ~ForceClientRender;\r\n      markSuspenseBoundaryShouldCapture(\r\n        suspenseBoundary,\r\n        returnFiber,\r\n        sourceFiber,\r\n        root,\r\n        rootRenderLanes\r\n      ); // We only attach ping listeners in concurrent mode. Legacy Suspense always\r\n      // commits fallbacks synchronously, so there are no pings.\r\n\r\n      if (suspenseBoundary.mode & ConcurrentMode) {\r\n        attachPingListener(root, wakeable, rootRenderLanes);\r\n      }\r\n\r\n      attachRetryListener(suspenseBoundary, root, wakeable);\r\n      return;\r\n    } else {\r\n      // No boundary was found. Unless this is a sync update, this is OK.\r\n      // We can suspend and wait for more data to arrive.\r\n      if (!includesSyncLane(rootRenderLanes)) {\r\n        // This is not a sync update. Suspend. Since we're not activating a\r\n        // Suspense boundary, this will unwind all the way to the root without\r\n        // performing a second pass to render a fallback. (This is arguably how\r\n        // refresh transitions should work, too, since we're not going to commit\r\n        // the fallbacks anyway.)\r\n        //\r\n        // This case also applies to initial hydration.\r\n        attachPingListener(root, wakeable, rootRenderLanes);\r\n        renderDidSuspendDelayIfPossible();\r\n        return;\r\n      } // This is a sync/discrete update. We treat this case like an error\r\n      // because discrete renders are expected to produce a complete tree\r\n      // synchronously to maintain consistency with external state.\r\n\r\n      var uncaughtSuspenseError = new Error(\r\n        \"A component suspended while responding to synchronous input. This \" +\r\n          \"will cause the UI to be replaced with a loading indicator. To \" +\r\n          \"fix, updates that suspend should be wrapped \" +\r\n          \"with startTransition.\"\r\n      ); // If we're outside a transition, fall through to the regular error path.\r\n      // The error will be caught by the nearest suspense boundary.\r\n\r\n      value = uncaughtSuspenseError;\r\n    }\r\n  }\r\n\r\n  value = createCapturedValueAtFiber(value, sourceFiber);\r\n  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start\r\n  // over and traverse parent path again, this time treating the exception\r\n  // as an error.\r\n\r\n  var workInProgress = returnFiber;\r\n\r\n  do {\r\n    switch (workInProgress.tag) {\r\n      case HostRoot: {\r\n        var _errorInfo = value;\r\n        workInProgress.flags |= ShouldCapture;\r\n        var lane = pickArbitraryLane(rootRenderLanes);\r\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\r\n        var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);\r\n        enqueueCapturedUpdate(workInProgress, update);\r\n        return;\r\n      }\r\n\r\n      case ClassComponent:\r\n        // Capture and retry\r\n        var errorInfo = value;\r\n        var ctor = workInProgress.type;\r\n        var instance = workInProgress.stateNode;\r\n\r\n        if (\r\n          (workInProgress.flags & DidCapture) === NoFlags &&\r\n          (typeof ctor.getDerivedStateFromError === \"function\" ||\r\n            (instance !== null &&\r\n              typeof instance.componentDidCatch === \"function\" &&\r\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\r\n        ) {\r\n          workInProgress.flags |= ShouldCapture;\r\n\r\n          var _lane = pickArbitraryLane(rootRenderLanes);\r\n\r\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state\r\n\r\n          var _update = createClassErrorUpdate(\r\n            workInProgress,\r\n            errorInfo,\r\n            _lane\r\n          );\r\n\r\n          enqueueCapturedUpdate(workInProgress, _update);\r\n          return;\r\n        }\r\n\r\n        break;\r\n    }\r\n\r\n    workInProgress = workInProgress.return;\r\n  } while (workInProgress !== null);\r\n}\r\n\r\nfunction getSuspendedCache() {\r\n  {\r\n    return null;\r\n  } // This function is called when a Suspense boundary suspends. It returns the\r\n}\r\n\r\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\r\nvar didReceiveUpdate = false;\r\nvar didWarnAboutBadClass;\r\nvar didWarnAboutModulePatternComponent;\r\nvar didWarnAboutContextTypeOnFunctionComponent;\r\nvar didWarnAboutGetDerivedStateOnFunctionComponent;\r\nvar didWarnAboutFunctionRefs;\r\nvar didWarnAboutReassigningProps;\r\nvar didWarnAboutRevealOrder;\r\nvar didWarnAboutTailOptions;\r\n\r\n{\r\n  didWarnAboutBadClass = {};\r\n  didWarnAboutModulePatternComponent = {};\r\n  didWarnAboutContextTypeOnFunctionComponent = {};\r\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\r\n  didWarnAboutFunctionRefs = {};\r\n  didWarnAboutReassigningProps = false;\r\n  didWarnAboutRevealOrder = {};\r\n  didWarnAboutTailOptions = {};\r\n}\r\n\r\nfunction reconcileChildren(current, workInProgress, nextChildren, renderLanes) {\r\n  if (current === null) {\r\n    // If this is a fresh new component that hasn't been rendered yet, we\r\n    // won't update its child set by applying minimal side-effects. Instead,\r\n    // we will add them all to the child before it gets rendered. That means\r\n    // we can optimize this reconciliation pass by not tracking side-effects.\r\n    workInProgress.child = mountChildFibers(\r\n      workInProgress,\r\n      null,\r\n      nextChildren,\r\n      renderLanes\r\n    );\r\n  } else {\r\n    // If the current child is the same as the work in progress, it means that\r\n    // we haven't yet started any work on these children. Therefore, we use\r\n    // the clone algorithm to create a copy of all the current children.\r\n    // If we had any progressed work already, that is invalid at this point so\r\n    // let's throw it out.\r\n    workInProgress.child = reconcileChildFibers(\r\n      workInProgress,\r\n      current.child,\r\n      nextChildren,\r\n      renderLanes\r\n    );\r\n  }\r\n}\r\n\r\nfunction forceUnmountCurrentAndReconcile(\r\n  current,\r\n  workInProgress,\r\n  nextChildren,\r\n  renderLanes\r\n) {\r\n  // This function is fork of reconcileChildren. It's used in cases where we\r\n  // want to reconcile without matching against the existing set. This has the\r\n  // effect of all current children being unmounted; even if the type and key\r\n  // are the same, the old child is unmounted and a new child is created.\r\n  //\r\n  // To do this, we're going to go through the reconcile algorithm twice. In\r\n  // the first pass, we schedule a deletion for all the current children by\r\n  // passing null.\r\n  workInProgress.child = reconcileChildFibers(\r\n    workInProgress,\r\n    current.child,\r\n    null,\r\n    renderLanes\r\n  ); // In the second pass, we mount the new children. The trick here is that we\r\n  // pass null in place of where we usually pass the current child set. This has\r\n  // the effect of remounting all children regardless of whether their\r\n  // identities match.\r\n\r\n  workInProgress.child = reconcileChildFibers(\r\n    workInProgress,\r\n    null,\r\n    nextChildren,\r\n    renderLanes\r\n  );\r\n}\r\n\r\nfunction updateForwardRef(\r\n  current,\r\n  workInProgress,\r\n  Component,\r\n  nextProps,\r\n  renderLanes\r\n) {\r\n  // TODO: current can be non-null here even if the component\r\n  // hasn't yet mounted. This happens after the first render suspends.\r\n  // We'll need to figure out if this is fine or can cause issues.\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        checkPropTypes(\r\n          innerPropTypes,\r\n          nextProps, // Resolved props\r\n          \"prop\",\r\n          getComponentNameFromType(Component)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var render = Component.render;\r\n  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent\r\n\r\n  var nextChildren;\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n\r\n  {\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    setIsRendering(true);\r\n    nextChildren = renderWithHooks(\r\n      current,\r\n      workInProgress,\r\n      render,\r\n      nextProps,\r\n      ref,\r\n      renderLanes\r\n    );\r\n\r\n    setIsRendering(false);\r\n  }\r\n\r\n  if (current !== null && !didReceiveUpdate) {\r\n    bailoutHooks(current, workInProgress, renderLanes);\r\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n  }\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateMemoComponent(\r\n  current,\r\n  workInProgress,\r\n  Component,\r\n  nextProps,\r\n  renderLanes\r\n) {\r\n  if (current === null) {\r\n    var type = Component.type;\r\n\r\n    if (\r\n      isSimpleFunctionComponent(type) &&\r\n      Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.\r\n      Component.defaultProps === undefined\r\n    ) {\r\n      var resolvedType = type;\r\n\r\n      {\r\n        resolvedType = resolveFunctionForHotReloading(type);\r\n      } // If this is a plain function component without default props,\r\n      // and with only the default shallow comparison, we upgrade it\r\n      // to a SimpleMemoComponent to allow fast path updates.\r\n\r\n      workInProgress.tag = SimpleMemoComponent;\r\n      workInProgress.type = resolvedType;\r\n\r\n      {\r\n        validateFunctionComponentInDev(workInProgress, type);\r\n      }\r\n\r\n      return updateSimpleMemoComponent(\r\n        current,\r\n        workInProgress,\r\n        resolvedType,\r\n        nextProps,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    {\r\n      var innerPropTypes = type.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        // Inner memo component props aren't currently validated in createElement.\r\n        // We could move it there, but we'd still need this for lazy code path.\r\n        checkPropTypes(\r\n          innerPropTypes,\r\n          nextProps, // Resolved props\r\n          \"prop\",\r\n          getComponentNameFromType(type)\r\n        );\r\n      }\r\n    }\r\n\r\n    var child = createFiberFromTypeAndProps(\r\n      Component.type,\r\n      null,\r\n      nextProps,\r\n      workInProgress,\r\n      workInProgress.mode,\r\n      renderLanes\r\n    );\r\n    child.ref = workInProgress.ref;\r\n    child.return = workInProgress;\r\n    workInProgress.child = child;\r\n    return child;\r\n  }\r\n\r\n  {\r\n    var _type = Component.type;\r\n    var _innerPropTypes = _type.propTypes;\r\n\r\n    if (_innerPropTypes) {\r\n      // Inner memo component props aren't currently validated in createElement.\r\n      // We could move it there, but we'd still need this for lazy code path.\r\n      checkPropTypes(\r\n        _innerPropTypes,\r\n        nextProps, // Resolved props\r\n        \"prop\",\r\n        getComponentNameFromType(_type)\r\n      );\r\n    }\r\n  }\r\n\r\n  var currentChild = current.child; // This is always exactly one child\r\n\r\n  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\r\n    current,\r\n    renderLanes\r\n  );\r\n\r\n  if (!hasScheduledUpdateOrContext) {\r\n    // This will be the props with resolved defaultProps,\r\n    // unlike current.memoizedProps which will be the unresolved ones.\r\n    var prevProps = currentChild.memoizedProps; // Default to shallow comparison\r\n\r\n    var compare = Component.compare;\r\n    compare = compare !== null ? compare : shallowEqual;\r\n\r\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\r\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n    }\r\n  } // React DevTools reads this flag.\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  var newChild = createWorkInProgress(currentChild, nextProps);\r\n  newChild.ref = workInProgress.ref;\r\n  newChild.return = workInProgress;\r\n  workInProgress.child = newChild;\r\n  return newChild;\r\n}\r\n\r\nfunction updateSimpleMemoComponent(\r\n  current,\r\n  workInProgress,\r\n  Component,\r\n  nextProps,\r\n  renderLanes\r\n) {\r\n  // TODO: current can be non-null here even if the component\r\n  // hasn't yet mounted. This happens when the inner render suspends.\r\n  // We'll need to figure out if this is fine or can cause issues.\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var outerMemoType = workInProgress.elementType;\r\n\r\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\r\n        // We warn when you define propTypes on lazy()\r\n        // so let's just skip over it to find memo() outer wrapper.\r\n        // Inner props for memo are validated later.\r\n        var lazyComponent = outerMemoType;\r\n        var payload = lazyComponent._payload;\r\n        var init = lazyComponent._init;\r\n\r\n        try {\r\n          outerMemoType = init(payload);\r\n        } catch (x) {\r\n          outerMemoType = null;\r\n        } // Inner propTypes will be validated in the function component path.\r\n\r\n        var outerPropTypes = outerMemoType && outerMemoType.propTypes;\r\n\r\n        if (outerPropTypes) {\r\n          checkPropTypes(\r\n            outerPropTypes,\r\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\r\n            \"prop\",\r\n            getComponentNameFromType(outerMemoType)\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (current !== null) {\r\n    var prevProps = current.memoizedProps;\r\n\r\n    if (\r\n      shallowEqual(prevProps, nextProps) &&\r\n      current.ref === workInProgress.ref && // Prevent bailout if the implementation changed due to hot reload.\r\n      workInProgress.type === current.type\r\n    ) {\r\n      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we\r\n      // would during a normal fiber bailout.\r\n      //\r\n      // We don't have strong guarantees that the props object is referentially\r\n      // equal during updates where we can't bail out anyway — like if the props\r\n      // are shallowly equal, but there's a local state or context update in the\r\n      // same batch.\r\n      //\r\n      // However, as a principle, we should aim to make the behavior consistent\r\n      // across different ways of memoizing a component. For example, React.memo\r\n      // has a different internal Fiber layout if you pass a normal function\r\n      // component (SimpleMemoComponent) versus if you pass a different type\r\n      // like forwardRef (MemoComponent). But this is an implementation detail.\r\n      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't\r\n      // affect whether the props object is reused during a bailout.\r\n\r\n      workInProgress.pendingProps = nextProps = prevProps;\r\n\r\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\r\n        // The pending lanes were cleared at the beginning of beginWork. We're\r\n        // about to bail out, but there might be other lanes that weren't\r\n        // included in the current render. Usually, the priority level of the\r\n        // remaining updates is accumulated during the evaluation of the\r\n        // component (i.e. when processing the update queue). But since since\r\n        // we're bailing out early *without* evaluating the component, we need\r\n        // to account for it here, too. Reset to the value of the current fiber.\r\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\r\n        // because a MemoComponent fiber does not have hooks or an update queue;\r\n        // rather, it wraps around an inner component, which may or may not\r\n        // contains hooks.\r\n        // TODO: Move the reset at in beginWork out of the common path so that\r\n        // this is no longer necessary.\r\n        workInProgress.lanes = current.lanes;\r\n        return bailoutOnAlreadyFinishedWork(\r\n          current,\r\n          workInProgress,\r\n          renderLanes\r\n        );\r\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\r\n        // This is a special case that only exists for legacy mode.\r\n        // See https://github.com/facebook/react/pull/19216.\r\n        didReceiveUpdate = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return updateFunctionComponent(\r\n    current,\r\n    workInProgress,\r\n    Component,\r\n    nextProps,\r\n    renderLanes\r\n  );\r\n}\r\n\r\nfunction updateOffscreenComponent(current, workInProgress, renderLanes) {\r\n  var nextProps = workInProgress.pendingProps;\r\n  var nextChildren = nextProps.children;\r\n  var prevState = current !== null ? current.memoizedState : null;\r\n\r\n  if (nextProps.mode === \"hidden\" || enableLegacyHidden) {\r\n    // Rendering a hidden tree.\r\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n      // In legacy sync mode, don't defer the subtree. Render it now.\r\n      // TODO: Consider how Offscreen should work with transitions in the future\r\n      var nextState = {\r\n        baseLanes: NoLanes,\r\n        cachePool: null,\r\n        transitions: null\r\n      };\r\n      workInProgress.memoizedState = nextState;\r\n\r\n      pushRenderLanes(workInProgress, renderLanes);\r\n    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {\r\n      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out\r\n      // and resume this tree later.\r\n\r\n      var nextBaseLanes;\r\n\r\n      if (prevState !== null) {\r\n        var prevBaseLanes = prevState.baseLanes;\r\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\r\n      } else {\r\n        nextBaseLanes = renderLanes;\r\n      } // Schedule this fiber to re-render at offscreen priority. Then bailout.\r\n\r\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\r\n        OffscreenLane\r\n      );\r\n      var _nextState = {\r\n        baseLanes: nextBaseLanes,\r\n        cachePool: spawnedCachePool,\r\n        transitions: null\r\n      };\r\n      workInProgress.memoizedState = _nextState;\r\n      workInProgress.updateQueue = null;\r\n      // to avoid a push/pop misalignment.\r\n\r\n      pushRenderLanes(workInProgress, nextBaseLanes);\r\n\r\n      return null;\r\n    } else {\r\n      // This is the second render. The surrounding visible content has already\r\n      // committed. Now we resume rendering the hidden tree.\r\n      // Rendering at offscreen, so we can clear the base lanes.\r\n      var _nextState2 = {\r\n        baseLanes: NoLanes,\r\n        cachePool: null,\r\n        transitions: null\r\n      };\r\n      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.\r\n\r\n      var subtreeRenderLanes =\r\n        prevState !== null ? prevState.baseLanes : renderLanes;\r\n\r\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\r\n    }\r\n  } else {\r\n    // Rendering a visible tree.\r\n    var _subtreeRenderLanes;\r\n\r\n    if (prevState !== null) {\r\n      // We're going from hidden -> visible.\r\n      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\r\n\r\n      workInProgress.memoizedState = null;\r\n    } else {\r\n      // We weren't previously hidden, and we still aren't, so there's nothing\r\n      // special to do. Need to push to the stack regardless, though, to avoid\r\n      // a push/pop misalignment.\r\n      _subtreeRenderLanes = renderLanes;\r\n    }\r\n\r\n    pushRenderLanes(workInProgress, _subtreeRenderLanes);\r\n  }\r\n\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n} // Note: These happen to have identical begin phases, for now. We shouldn't hold\r\n\r\nfunction updateFragment(current, workInProgress, renderLanes) {\r\n  var nextChildren = workInProgress.pendingProps;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateMode(current, workInProgress, renderLanes) {\r\n  var nextChildren = workInProgress.pendingProps.children;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateProfiler(current, workInProgress, renderLanes) {\r\n  {\r\n    workInProgress.flags |= Update;\r\n\r\n    {\r\n      // Reset effect durations for the next eventual effect phase.\r\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\r\n      var stateNode = workInProgress.stateNode;\r\n      stateNode.effectDuration = 0;\r\n      stateNode.passiveEffectDuration = 0;\r\n    }\r\n  }\r\n\r\n  var nextProps = workInProgress.pendingProps;\r\n  var nextChildren = nextProps.children;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction markRef(current, workInProgress) {\r\n  var ref = workInProgress.ref;\r\n\r\n  if (\r\n    (current === null && ref !== null) ||\r\n    (current !== null && current.ref !== ref)\r\n  ) {\r\n    // Schedule a Ref effect\r\n    workInProgress.flags |= Ref;\r\n  }\r\n}\r\n\r\nfunction updateFunctionComponent(\r\n  current,\r\n  workInProgress,\r\n  Component,\r\n  nextProps,\r\n  renderLanes\r\n) {\r\n  {\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        checkPropTypes(\r\n          innerPropTypes,\r\n          nextProps, // Resolved props\r\n          \"prop\",\r\n          getComponentNameFromType(Component)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var context;\r\n\r\n  {\r\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\r\n    context = getMaskedContext(workInProgress, unmaskedContext);\r\n  }\r\n\r\n  var nextChildren;\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n\r\n  {\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    setIsRendering(true);\r\n    nextChildren = renderWithHooks(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      context,\r\n      renderLanes\r\n    );\r\n\r\n    setIsRendering(false);\r\n  }\r\n\r\n  if (current !== null && !didReceiveUpdate) {\r\n    bailoutHooks(current, workInProgress, renderLanes);\r\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n  }\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateClassComponent(\r\n  current,\r\n  workInProgress,\r\n  Component,\r\n  nextProps,\r\n  renderLanes\r\n) {\r\n  {\r\n    // This is used by DevTools to force a boundary to error.\r\n    switch (shouldError(workInProgress)) {\r\n      case false: {\r\n        var _instance = workInProgress.stateNode;\r\n        var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.\r\n        // Is there a better way to do this?\r\n\r\n        var tempInstance = new ctor(\r\n          workInProgress.memoizedProps,\r\n          _instance.context\r\n        );\r\n        var state = tempInstance.state;\r\n\r\n        _instance.updater.enqueueSetState(_instance, state, null);\r\n\r\n        break;\r\n      }\r\n\r\n      case true: {\r\n        workInProgress.flags |= DidCapture;\r\n        workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes\r\n\r\n        var error$1 = new Error(\"Simulated error coming from DevTools\");\r\n        var lane = pickArbitraryLane(renderLanes);\r\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state\r\n\r\n        var update = createClassErrorUpdate(\r\n          workInProgress,\r\n          createCapturedValueAtFiber(error$1, workInProgress),\r\n          lane\r\n        );\r\n        enqueueCapturedUpdate(workInProgress, update);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (workInProgress.type !== workInProgress.elementType) {\r\n      // Lazy component props can't be validated in createElement\r\n      // because they're only guaranteed to be resolved here.\r\n      var innerPropTypes = Component.propTypes;\r\n\r\n      if (innerPropTypes) {\r\n        checkPropTypes(\r\n          innerPropTypes,\r\n          nextProps, // Resolved props\r\n          \"prop\",\r\n          getComponentNameFromType(Component)\r\n        );\r\n      }\r\n    }\r\n  } // Push context providers early to prevent context stack mismatches.\r\n  // During mounting we don't know the child context yet as the instance doesn't exist.\r\n  // We will invalidate the child context in finishClassComponent() right after rendering.\r\n\r\n  var hasContext;\r\n\r\n  if (isContextProvider(Component)) {\r\n    hasContext = true;\r\n    pushContextProvider(workInProgress);\r\n  } else {\r\n    hasContext = false;\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  var instance = workInProgress.stateNode;\r\n  var shouldUpdate;\r\n\r\n  if (instance === null) {\r\n    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.\r\n\r\n    constructClassInstance(workInProgress, Component, nextProps);\r\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\r\n    shouldUpdate = true;\r\n  } else if (current === null) {\r\n    // In a resume, we'll already have an instance we can reuse.\r\n    shouldUpdate = resumeMountClassInstance(\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      renderLanes\r\n    );\r\n  } else {\r\n    shouldUpdate = updateClassInstance(\r\n      current,\r\n      workInProgress,\r\n      Component,\r\n      nextProps,\r\n      renderLanes\r\n    );\r\n  }\r\n\r\n  var nextUnitOfWork = finishClassComponent(\r\n    current,\r\n    workInProgress,\r\n    Component,\r\n    shouldUpdate,\r\n    hasContext,\r\n    renderLanes\r\n  );\r\n\r\n  {\r\n    var inst = workInProgress.stateNode;\r\n\r\n    if (shouldUpdate && inst.props !== nextProps) {\r\n      if (!didWarnAboutReassigningProps) {\r\n        error(\r\n          \"It looks like %s is reassigning its own `this.props` while rendering. \" +\r\n            \"This is not supported and can lead to confusing bugs.\",\r\n          getComponentNameFromFiber(workInProgress) || \"a component\"\r\n        );\r\n      }\r\n\r\n      didWarnAboutReassigningProps = true;\r\n    }\r\n  }\r\n\r\n  return nextUnitOfWork;\r\n}\r\n\r\nfunction finishClassComponent(\r\n  current,\r\n  workInProgress,\r\n  Component,\r\n  shouldUpdate,\r\n  hasContext,\r\n  renderLanes\r\n) {\r\n  // Refs should update even if shouldComponentUpdate returns false\r\n  markRef(current, workInProgress);\r\n  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\r\n\r\n  if (!shouldUpdate && !didCaptureError) {\r\n    // Context providers should defer to sCU for rendering\r\n    if (hasContext) {\r\n      invalidateContextProvider(workInProgress, Component, false);\r\n    }\r\n\r\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n  }\r\n\r\n  var instance = workInProgress.stateNode; // Rerender\r\n\r\n  ReactCurrentOwner$1.current = workInProgress;\r\n  var nextChildren;\r\n\r\n  if (\r\n    didCaptureError &&\r\n    typeof Component.getDerivedStateFromError !== \"function\"\r\n  ) {\r\n    // If we captured an error, but getDerivedStateFromError is not defined,\r\n    // unmount all the children. componentDidCatch will schedule an update to\r\n    // re-render a fallback. This is temporary until we migrate everyone to\r\n    // the new API.\r\n    // TODO: Warn in a future release.\r\n    nextChildren = null;\r\n\r\n    {\r\n      stopProfilerTimerIfRunning();\r\n    }\r\n  } else {\r\n    {\r\n      setIsRendering(true);\r\n      nextChildren = instance.render();\r\n\r\n      setIsRendering(false);\r\n    }\r\n  } // React DevTools reads this flag.\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n\r\n  if (current !== null && didCaptureError) {\r\n    // If we're recovering from an error, reconcile without reusing any of\r\n    // the existing children. Conceptually, the normal children and the children\r\n    // that are shown on error are two different sets, so we shouldn't reuse\r\n    // normal children even if their identities match.\r\n    forceUnmountCurrentAndReconcile(\r\n      current,\r\n      workInProgress,\r\n      nextChildren,\r\n      renderLanes\r\n    );\r\n  } else {\r\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  } // Memoize state using the values we just used to render.\r\n  // TODO: Restructure so we never read values from the instance.\r\n\r\n  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.\r\n\r\n  if (hasContext) {\r\n    invalidateContextProvider(workInProgress, Component, true);\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction pushHostRootContext(workInProgress) {\r\n  var root = workInProgress.stateNode;\r\n\r\n  if (root.pendingContext) {\r\n    pushTopLevelContextObject(\r\n      workInProgress,\r\n      root.pendingContext,\r\n      root.pendingContext !== root.context\r\n    );\r\n  } else if (root.context) {\r\n    // Should always be set\r\n    pushTopLevelContextObject(workInProgress, root.context, false);\r\n  }\r\n\r\n  pushHostContainer(workInProgress, root.containerInfo);\r\n}\r\n\r\nfunction updateHostRoot(current, workInProgress, renderLanes) {\r\n  pushHostRootContext(workInProgress);\r\n\r\n  if (current === null) {\r\n    throw new Error(\"Should have a current fiber. This is a bug in React.\");\r\n  }\r\n\r\n  var nextProps = workInProgress.pendingProps;\r\n  var prevState = workInProgress.memoizedState;\r\n  var prevChildren = prevState.element;\r\n  cloneUpdateQueue(current, workInProgress);\r\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\r\n  var nextState = workInProgress.memoizedState;\r\n  var root = workInProgress.stateNode;\r\n  // being called \"element\".\r\n\r\n  var nextChildren = nextState.element;\r\n\r\n  {\r\n    if (nextChildren === prevChildren) {\r\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n    }\r\n\r\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateHostComponent(current, workInProgress, renderLanes) {\r\n  pushHostContext(workInProgress);\r\n\r\n  var type = workInProgress.type;\r\n  var nextProps = workInProgress.pendingProps;\r\n  var prevProps = current !== null ? current.memoizedProps : null;\r\n  var nextChildren = nextProps.children;\r\n\r\n  if (prevProps !== null && shouldSetTextContent()) {\r\n    // If we're switching from a direct text child to a normal child, or to\r\n    // empty, we need to schedule the text content to be reset.\r\n    workInProgress.flags |= ContentReset;\r\n  }\r\n\r\n  markRef(current, workInProgress);\r\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updateHostText(current, workInProgress) {\r\n  // immediately after.\r\n\r\n  return null;\r\n}\r\n\r\nfunction mountLazyComponent(\r\n  _current,\r\n  workInProgress,\r\n  elementType,\r\n  renderLanes\r\n) {\r\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\r\n  var props = workInProgress.pendingProps;\r\n  var lazyComponent = elementType;\r\n  var payload = lazyComponent._payload;\r\n  var init = lazyComponent._init;\r\n  var Component = init(payload); // Store the unwrapped component in the type.\r\n\r\n  workInProgress.type = Component;\r\n  var resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\r\n  var resolvedProps = resolveDefaultProps(Component, props);\r\n  var child;\r\n\r\n  switch (resolvedTag) {\r\n    case FunctionComponent: {\r\n      {\r\n        validateFunctionComponentInDev(workInProgress, Component);\r\n        workInProgress.type = Component = resolveFunctionForHotReloading(\r\n          Component\r\n        );\r\n      }\r\n\r\n      child = updateFunctionComponent(\r\n        null,\r\n        workInProgress,\r\n        Component,\r\n        resolvedProps,\r\n        renderLanes\r\n      );\r\n      return child;\r\n    }\r\n\r\n    case ClassComponent: {\r\n      {\r\n        workInProgress.type = Component = resolveClassForHotReloading(\r\n          Component\r\n        );\r\n      }\r\n\r\n      child = updateClassComponent(\r\n        null,\r\n        workInProgress,\r\n        Component,\r\n        resolvedProps,\r\n        renderLanes\r\n      );\r\n      return child;\r\n    }\r\n\r\n    case ForwardRef: {\r\n      {\r\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\r\n          Component\r\n        );\r\n      }\r\n\r\n      child = updateForwardRef(\r\n        null,\r\n        workInProgress,\r\n        Component,\r\n        resolvedProps,\r\n        renderLanes\r\n      );\r\n      return child;\r\n    }\r\n\r\n    case MemoComponent: {\r\n      {\r\n        if (workInProgress.type !== workInProgress.elementType) {\r\n          var outerPropTypes = Component.propTypes;\r\n\r\n          if (outerPropTypes) {\r\n            checkPropTypes(\r\n              outerPropTypes,\r\n              resolvedProps, // Resolved for outer only\r\n              \"prop\",\r\n              getComponentNameFromType(Component)\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      child = updateMemoComponent(\r\n        null,\r\n        workInProgress,\r\n        Component,\r\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\r\n        renderLanes\r\n      );\r\n      return child;\r\n    }\r\n  }\r\n\r\n  var hint = \"\";\r\n\r\n  {\r\n    if (\r\n      Component !== null &&\r\n      typeof Component === \"object\" &&\r\n      Component.$$typeof === REACT_LAZY_TYPE\r\n    ) {\r\n      hint = \" Did you wrap a component in React.lazy() more than once?\";\r\n    }\r\n  } // This message intentionally doesn't mention ForwardRef or MemoComponent\r\n  // because the fact that it's a separate type of work is an\r\n  // implementation detail.\r\n\r\n  throw new Error(\r\n    \"Element type is invalid. Received a promise that resolves to: \" +\r\n      Component +\r\n      \". \" +\r\n      (\"Lazy element type must resolve to a class or function.\" + hint)\r\n  );\r\n}\r\n\r\nfunction mountIncompleteClassComponent(\r\n  _current,\r\n  workInProgress,\r\n  Component,\r\n  nextProps,\r\n  renderLanes\r\n) {\r\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.\r\n\r\n  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`\r\n  // Push context providers early to prevent context stack mismatches.\r\n  // During mounting we don't know the child context yet as the instance doesn't exist.\r\n  // We will invalidate the child context in finishClassComponent() right after rendering.\r\n\r\n  var hasContext;\r\n\r\n  if (isContextProvider(Component)) {\r\n    hasContext = true;\r\n    pushContextProvider(workInProgress);\r\n  } else {\r\n    hasContext = false;\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  constructClassInstance(workInProgress, Component, nextProps);\r\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\r\n  return finishClassComponent(\r\n    null,\r\n    workInProgress,\r\n    Component,\r\n    true,\r\n    hasContext,\r\n    renderLanes\r\n  );\r\n}\r\n\r\nfunction mountIndeterminateComponent(\r\n  _current,\r\n  workInProgress,\r\n  Component,\r\n  renderLanes\r\n) {\r\n  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);\r\n  var props = workInProgress.pendingProps;\r\n  var context;\r\n\r\n  {\r\n    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);\r\n    context = getMaskedContext(workInProgress, unmaskedContext);\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  var value;\r\n\r\n  {\r\n    if (\r\n      Component.prototype &&\r\n      typeof Component.prototype.render === \"function\"\r\n    ) {\r\n      var componentName = getComponentNameFromType(Component) || \"Unknown\";\r\n\r\n      if (!didWarnAboutBadClass[componentName]) {\r\n        error(\r\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\r\n            \"This is likely to cause errors. Change %s to extend React.Component instead.\",\r\n          componentName,\r\n          componentName\r\n        );\r\n\r\n        didWarnAboutBadClass[componentName] = true;\r\n      }\r\n    }\r\n\r\n    if (workInProgress.mode & StrictLegacyMode) {\r\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\r\n    }\r\n\r\n    setIsRendering(true);\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    value = renderWithHooks(\r\n      null,\r\n      workInProgress,\r\n      Component,\r\n      props,\r\n      context,\r\n      renderLanes\r\n    );\r\n    setIsRendering(false);\r\n  }\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n\r\n  {\r\n    // Support for module components is deprecated and is removed behind a flag.\r\n    // Whether or not it would crash later, we want to show a good message in DEV first.\r\n    if (\r\n      typeof value === \"object\" &&\r\n      value !== null &&\r\n      typeof value.render === \"function\" &&\r\n      value.$$typeof === undefined\r\n    ) {\r\n      var _componentName = getComponentNameFromType(Component) || \"Unknown\";\r\n\r\n      if (!didWarnAboutModulePatternComponent[_componentName]) {\r\n        error(\r\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\r\n            \"Change %s to a class that extends React.Component instead. \" +\r\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\r\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\r\n            \"cannot be called with `new` by React.\",\r\n          _componentName,\r\n          _componentName,\r\n          _componentName\r\n        );\r\n\r\n        didWarnAboutModulePatternComponent[_componentName] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    // Run these checks in production only if the flag is off.\r\n    // Eventually we'll delete this branch altogether.\r\n    typeof value === \"object\" &&\r\n    value !== null &&\r\n    typeof value.render === \"function\" &&\r\n    value.$$typeof === undefined\r\n  ) {\r\n    {\r\n      var _componentName2 = getComponentNameFromType(Component) || \"Unknown\";\r\n\r\n      if (!didWarnAboutModulePatternComponent[_componentName2]) {\r\n        error(\r\n          \"The <%s /> component appears to be a function component that returns a class instance. \" +\r\n            \"Change %s to a class that extends React.Component instead. \" +\r\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\r\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\r\n            \"cannot be called with `new` by React.\",\r\n          _componentName2,\r\n          _componentName2,\r\n          _componentName2\r\n        );\r\n\r\n        didWarnAboutModulePatternComponent[_componentName2] = true;\r\n      }\r\n    } // Proceed under the assumption that this is a class instance\r\n\r\n    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.\r\n\r\n    workInProgress.memoizedState = null;\r\n    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.\r\n    // During mounting we don't know the child context yet as the instance doesn't exist.\r\n    // We will invalidate the child context in finishClassComponent() right after rendering.\r\n\r\n    var hasContext = false;\r\n\r\n    if (isContextProvider(Component)) {\r\n      hasContext = true;\r\n      pushContextProvider(workInProgress);\r\n    } else {\r\n      hasContext = false;\r\n    }\r\n\r\n    workInProgress.memoizedState =\r\n      value.state !== null && value.state !== undefined ? value.state : null;\r\n    initializeUpdateQueue(workInProgress);\r\n    adoptClassInstance(workInProgress, value);\r\n    mountClassInstance(workInProgress, Component, props, renderLanes);\r\n    return finishClassComponent(\r\n      null,\r\n      workInProgress,\r\n      Component,\r\n      true,\r\n      hasContext,\r\n      renderLanes\r\n    );\r\n  } else {\r\n    // Proceed under the assumption that this is a function component\r\n    workInProgress.tag = FunctionComponent;\r\n\r\n    reconcileChildren(null, workInProgress, value, renderLanes);\r\n\r\n    {\r\n      validateFunctionComponentInDev(workInProgress, Component);\r\n    }\r\n\r\n    return workInProgress.child;\r\n  }\r\n}\r\n\r\nfunction validateFunctionComponentInDev(workInProgress, Component) {\r\n  {\r\n    if (Component) {\r\n      if (Component.childContextTypes) {\r\n        error(\r\n          \"%s(...): childContextTypes cannot be defined on a function component.\",\r\n          Component.displayName || Component.name || \"Component\"\r\n        );\r\n      }\r\n    }\r\n\r\n    if (workInProgress.ref !== null) {\r\n      var info = \"\";\r\n      var ownerName = getCurrentFiberOwnerNameInDevOrNull();\r\n\r\n      if (ownerName) {\r\n        info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\r\n      }\r\n\r\n      var warningKey = ownerName || \"\";\r\n      var debugSource = workInProgress._debugSource;\r\n\r\n      if (debugSource) {\r\n        warningKey = debugSource.fileName + \":\" + debugSource.lineNumber;\r\n      }\r\n\r\n      if (!didWarnAboutFunctionRefs[warningKey]) {\r\n        didWarnAboutFunctionRefs[warningKey] = true;\r\n\r\n        error(\r\n          \"Function components cannot be given refs. \" +\r\n            \"Attempts to access this ref will fail. \" +\r\n            \"Did you mean to use React.forwardRef()?%s\",\r\n          info\r\n        );\r\n      }\r\n    }\r\n\r\n    if (typeof Component.getDerivedStateFromProps === \"function\") {\r\n      var _componentName3 = getComponentNameFromType(Component) || \"Unknown\";\r\n\r\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {\r\n        error(\r\n          \"%s: Function components do not support getDerivedStateFromProps.\",\r\n          _componentName3\r\n        );\r\n\r\n        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;\r\n      }\r\n    }\r\n\r\n    if (\r\n      typeof Component.contextType === \"object\" &&\r\n      Component.contextType !== null\r\n    ) {\r\n      var _componentName4 = getComponentNameFromType(Component) || \"Unknown\";\r\n\r\n      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {\r\n        error(\r\n          \"%s: Function components do not support contextType.\",\r\n          _componentName4\r\n        );\r\n\r\n        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvar SUSPENDED_MARKER = {\r\n  dehydrated: null,\r\n  treeContext: null,\r\n  retryLane: NoLane\r\n};\r\n\r\nfunction mountSuspenseOffscreenState(renderLanes) {\r\n  return {\r\n    baseLanes: renderLanes,\r\n    cachePool: getSuspendedCache(),\r\n    transitions: null\r\n  };\r\n}\r\n\r\nfunction updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {\r\n  var cachePool = null;\r\n\r\n  return {\r\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\r\n    cachePool: cachePool,\r\n    transitions: prevOffscreenState.transitions\r\n  };\r\n} // TODO: Probably should inline this back\r\n\r\nfunction shouldRemainOnFallback(\r\n  suspenseContext,\r\n  current,\r\n  workInProgress,\r\n  renderLanes\r\n) {\r\n  // If we're already showing a fallback, there are cases where we need to\r\n  // remain on that fallback regardless of whether the content has resolved.\r\n  // For example, SuspenseList coordinates when nested content appears.\r\n  if (current !== null) {\r\n    var suspenseState = current.memoizedState;\r\n\r\n    if (suspenseState === null) {\r\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\r\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\r\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\r\n      // no fallback to remain on.\r\n      return false;\r\n    }\r\n  } // Not currently showing content. Consult the Suspense context.\r\n\r\n  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);\r\n}\r\n\r\nfunction getRemainingWorkInPrimaryTree(current, renderLanes) {\r\n  // TODO: Should not remove render lanes that were pinged during this render\r\n  return removeLanes(current.childLanes, renderLanes);\r\n}\r\n\r\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\r\n  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.\r\n\r\n  {\r\n    if (shouldSuspend(workInProgress)) {\r\n      workInProgress.flags |= DidCapture;\r\n    }\r\n  }\r\n\r\n  var suspenseContext = suspenseStackCursor.current;\r\n  var showFallback = false;\r\n  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\r\n\r\n  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {\r\n    // Something in this boundary's subtree already suspended. Switch to\r\n    // rendering the fallback children.\r\n    showFallback = true;\r\n    workInProgress.flags &= ~DidCapture;\r\n  } else {\r\n    // Attempting the main content\r\n    if (current === null || current.memoizedState !== null) {\r\n      // This is a new mount or this boundary is already showing a fallback state.\r\n      // Mark this subtree context as having at least one invisible parent that could\r\n      // handle the fallback state.\r\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\r\n      {\r\n        suspenseContext = addSubtreeSuspenseContext(\r\n          suspenseContext,\r\n          InvisibleParentSuspenseContext\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\r\n  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense\r\n  // boundary's children. This involves some custom reconciliation logic. Two\r\n  // main reasons this is so complicated.\r\n  //\r\n  // First, Legacy Mode has different semantics for backwards compatibility. The\r\n  // primary tree will commit in an inconsistent state, so when we do the\r\n  // second pass to render the fallback, we do some exceedingly, uh, clever\r\n  // hacks to make that not totally break. Like transferring effects and\r\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\r\n  // because we bailout on the primary tree completely and leave it in its old\r\n  // state, no effects. Same as what we do for Offscreen (except that\r\n  // Offscreen doesn't have the first render pass).\r\n  //\r\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\r\n  // different layout, where the child points to a dehydrated fragment, which\r\n  // contains the DOM rendered by the server.\r\n  //\r\n  // Third, even if you set all that aside, Suspense is like error boundaries in\r\n  // that we first we try to render one tree, and if that fails, we render again\r\n  // and switch to a different tree. Like a try/catch block. So we have to track\r\n  // which branch we're currently rendering. Ideally we would model this using\r\n  // a stack.\r\n\r\n  if (current === null) {\r\n    var suspenseState = workInProgress.memoizedState;\r\n\r\n    if (suspenseState !== null) {\r\n      var dehydrated = suspenseState.dehydrated;\r\n\r\n      if (dehydrated !== null) {\r\n        return mountDehydratedSuspenseComponent(workInProgress);\r\n      }\r\n    }\r\n\r\n    var nextPrimaryChildren = nextProps.children;\r\n    var nextFallbackChildren = nextProps.fallback;\r\n\r\n    if (showFallback) {\r\n      var fallbackFragment = mountSuspenseFallbackChildren(\r\n        workInProgress,\r\n        nextPrimaryChildren,\r\n        nextFallbackChildren,\r\n        renderLanes\r\n      );\r\n      var primaryChildFragment = workInProgress.child;\r\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\r\n        renderLanes\r\n      );\r\n      workInProgress.memoizedState = SUSPENDED_MARKER;\r\n\r\n      return fallbackFragment;\r\n    } else {\r\n      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);\r\n    }\r\n  } else {\r\n    // This is an update.\r\n    // Special path for hydration\r\n    var prevState = current.memoizedState;\r\n\r\n    if (prevState !== null) {\r\n      var _dehydrated = prevState.dehydrated;\r\n\r\n      if (_dehydrated !== null) {\r\n        return updateDehydratedSuspenseComponent(\r\n          current,\r\n          workInProgress,\r\n          didSuspend,\r\n          nextProps,\r\n          _dehydrated,\r\n          prevState,\r\n          renderLanes\r\n        );\r\n      }\r\n    }\r\n\r\n    if (showFallback) {\r\n      var _nextFallbackChildren = nextProps.fallback;\r\n      var _nextPrimaryChildren = nextProps.children;\r\n      var fallbackChildFragment = updateSuspenseFallbackChildren(\r\n        current,\r\n        workInProgress,\r\n        _nextPrimaryChildren,\r\n        _nextFallbackChildren,\r\n        renderLanes\r\n      );\r\n      var _primaryChildFragment2 = workInProgress.child;\r\n      var prevOffscreenState = current.child.memoizedState;\r\n      _primaryChildFragment2.memoizedState =\r\n        prevOffscreenState === null\r\n          ? mountSuspenseOffscreenState(renderLanes)\r\n          : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\r\n\r\n      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(\r\n        current,\r\n        renderLanes\r\n      );\r\n      workInProgress.memoizedState = SUSPENDED_MARKER;\r\n      return fallbackChildFragment;\r\n    } else {\r\n      var _nextPrimaryChildren2 = nextProps.children;\r\n\r\n      var _primaryChildFragment3 = updateSuspensePrimaryChildren(\r\n        current,\r\n        workInProgress,\r\n        _nextPrimaryChildren2,\r\n        renderLanes\r\n      );\r\n\r\n      workInProgress.memoizedState = null;\r\n      return _primaryChildFragment3;\r\n    }\r\n  }\r\n}\r\n\r\nfunction mountSuspensePrimaryChildren(\r\n  workInProgress,\r\n  primaryChildren,\r\n  renderLanes\r\n) {\r\n  var mode = workInProgress.mode;\r\n  var primaryChildProps = {\r\n    mode: \"visible\",\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\r\n    primaryChildProps,\r\n    mode\r\n  );\r\n  primaryChildFragment.return = workInProgress;\r\n  workInProgress.child = primaryChildFragment;\r\n  return primaryChildFragment;\r\n}\r\n\r\nfunction mountSuspenseFallbackChildren(\r\n  workInProgress,\r\n  primaryChildren,\r\n  fallbackChildren,\r\n  renderLanes\r\n) {\r\n  var mode = workInProgress.mode;\r\n  var progressedPrimaryFragment = workInProgress.child;\r\n  var primaryChildProps = {\r\n    mode: \"hidden\",\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment;\r\n  var fallbackChildFragment;\r\n\r\n  if (\r\n    (mode & ConcurrentMode) === NoMode &&\r\n    progressedPrimaryFragment !== null\r\n  ) {\r\n    // In legacy mode, we commit the primary tree as if it successfully\r\n    // completed, even though it's in an inconsistent state.\r\n    primaryChildFragment = progressedPrimaryFragment;\r\n    primaryChildFragment.childLanes = NoLanes;\r\n    primaryChildFragment.pendingProps = primaryChildProps;\r\n\r\n    if (workInProgress.mode & ProfileMode) {\r\n      // Reset the durations from the first pass so they aren't included in the\r\n      // final amounts. This seems counterintuitive, since we're intentionally\r\n      // not measuring part of the render phase, but this makes it match what we\r\n      // do in Concurrent Mode.\r\n      primaryChildFragment.actualDuration = 0;\r\n      primaryChildFragment.actualStartTime = -1;\r\n      primaryChildFragment.selfBaseDuration = 0;\r\n      primaryChildFragment.treeBaseDuration = 0;\r\n    }\r\n\r\n    fallbackChildFragment = createFiberFromFragment(\r\n      fallbackChildren,\r\n      mode,\r\n      renderLanes,\r\n      null\r\n    );\r\n  } else {\r\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\r\n      primaryChildProps,\r\n      mode\r\n    );\r\n    fallbackChildFragment = createFiberFromFragment(\r\n      fallbackChildren,\r\n      mode,\r\n      renderLanes,\r\n      null\r\n    );\r\n  }\r\n\r\n  primaryChildFragment.return = workInProgress;\r\n  fallbackChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = fallbackChildFragment;\r\n  workInProgress.child = primaryChildFragment;\r\n  return fallbackChildFragment;\r\n}\r\n\r\nfunction mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {\r\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\r\n  // this wrapper function to constrain it.\r\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\r\n}\r\n\r\nfunction updateWorkInProgressOffscreenFiber(current, offscreenProps) {\r\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\r\n  // wrapper function to constrain it.\r\n  return createWorkInProgress(current, offscreenProps);\r\n}\r\n\r\nfunction updateSuspensePrimaryChildren(\r\n  current,\r\n  workInProgress,\r\n  primaryChildren,\r\n  renderLanes\r\n) {\r\n  var currentPrimaryChildFragment = current.child;\r\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\r\n  var primaryChildFragment = updateWorkInProgressOffscreenFiber(\r\n    currentPrimaryChildFragment,\r\n    {\r\n      mode: \"visible\",\r\n      children: primaryChildren\r\n    }\r\n  );\r\n\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    primaryChildFragment.lanes = renderLanes;\r\n  }\r\n\r\n  primaryChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = null;\r\n\r\n  if (currentFallbackChildFragment !== null) {\r\n    // Delete the fallback child fragment\r\n    var deletions = workInProgress.deletions;\r\n\r\n    if (deletions === null) {\r\n      workInProgress.deletions = [currentFallbackChildFragment];\r\n      workInProgress.flags |= ChildDeletion;\r\n    } else {\r\n      deletions.push(currentFallbackChildFragment);\r\n    }\r\n  }\r\n\r\n  workInProgress.child = primaryChildFragment;\r\n  return primaryChildFragment;\r\n}\r\n\r\nfunction updateSuspenseFallbackChildren(\r\n  current,\r\n  workInProgress,\r\n  primaryChildren,\r\n  fallbackChildren,\r\n  renderLanes\r\n) {\r\n  var mode = workInProgress.mode;\r\n  var currentPrimaryChildFragment = current.child;\r\n  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;\r\n  var primaryChildProps = {\r\n    mode: \"hidden\",\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment;\r\n\r\n  if (\r\n    // In legacy mode, we commit the primary tree as if it successfully\r\n    // completed, even though it's in an inconsistent state.\r\n    (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was\r\n    // already cloned. In legacy mode, the only case where this isn't true is\r\n    // when DevTools forces us to display a fallback; we skip the first render\r\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\r\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\r\n    // only codepath.)\r\n    workInProgress.child !== currentPrimaryChildFragment\r\n  ) {\r\n    var progressedPrimaryFragment = workInProgress.child;\r\n    primaryChildFragment = progressedPrimaryFragment;\r\n    primaryChildFragment.childLanes = NoLanes;\r\n    primaryChildFragment.pendingProps = primaryChildProps;\r\n\r\n    if (workInProgress.mode & ProfileMode) {\r\n      // Reset the durations from the first pass so they aren't included in the\r\n      // final amounts. This seems counterintuitive, since we're intentionally\r\n      // not measuring part of the render phase, but this makes it match what we\r\n      // do in Concurrent Mode.\r\n      primaryChildFragment.actualDuration = 0;\r\n      primaryChildFragment.actualStartTime = -1;\r\n      primaryChildFragment.selfBaseDuration =\r\n        currentPrimaryChildFragment.selfBaseDuration;\r\n      primaryChildFragment.treeBaseDuration =\r\n        currentPrimaryChildFragment.treeBaseDuration;\r\n    } // The fallback fiber was added as a deletion during the first pass.\r\n    // However, since we're going to remain on the fallback, we no longer want\r\n    // to delete it.\r\n\r\n    workInProgress.deletions = null;\r\n  } else {\r\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\r\n      currentPrimaryChildFragment,\r\n      primaryChildProps\r\n    ); // Since we're reusing a current tree, we need to reuse the flags, too.\r\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\r\n    // the current tree; see previous branch.)\r\n\r\n    primaryChildFragment.subtreeFlags =\r\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\r\n  }\r\n\r\n  var fallbackChildFragment;\r\n\r\n  if (currentFallbackChildFragment !== null) {\r\n    fallbackChildFragment = createWorkInProgress(\r\n      currentFallbackChildFragment,\r\n      fallbackChildren\r\n    );\r\n  } else {\r\n    fallbackChildFragment = createFiberFromFragment(\r\n      fallbackChildren,\r\n      mode,\r\n      renderLanes,\r\n      null\r\n    ); // Needs a placement effect because the parent (the Suspense boundary) already\r\n    // mounted but this is a new fiber.\r\n\r\n    fallbackChildFragment.flags |= Placement;\r\n  }\r\n\r\n  fallbackChildFragment.return = workInProgress;\r\n  primaryChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = fallbackChildFragment;\r\n  workInProgress.child = primaryChildFragment;\r\n  return fallbackChildFragment;\r\n}\r\n\r\nfunction retrySuspenseComponentWithoutHydrating(\r\n  current,\r\n  workInProgress,\r\n  renderLanes,\r\n  recoverableError\r\n) {\r\n  // Falling back to client rendering. Because this has performance\r\n  // implications, it's considered a recoverable error, even though the user\r\n  // likely won't observe anything wrong with the UI.\r\n  //\r\n  // The error is passed in as an argument to enforce that every caller provide\r\n  // a custom message, or explicitly opt out (currently the only path that opts\r\n  // out is legacy mode; every concurrent path provides an error).\r\n  if (recoverableError !== null) {\r\n    queueHydrationError(recoverableError);\r\n  } // This will add the old fiber to the deletion list\r\n\r\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.\r\n\r\n  var nextProps = workInProgress.pendingProps;\r\n  var primaryChildren = nextProps.children;\r\n  var primaryChildFragment = mountSuspensePrimaryChildren(\r\n    workInProgress,\r\n    primaryChildren\r\n  ); // Needs a placement effect because the parent (the Suspense boundary) already\r\n  // mounted but this is a new fiber.\r\n\r\n  primaryChildFragment.flags |= Placement;\r\n  workInProgress.memoizedState = null;\r\n  return primaryChildFragment;\r\n}\r\n\r\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\r\n  current,\r\n  workInProgress,\r\n  primaryChildren,\r\n  fallbackChildren,\r\n  renderLanes\r\n) {\r\n  var fiberMode = workInProgress.mode;\r\n  var primaryChildProps = {\r\n    mode: \"visible\",\r\n    children: primaryChildren\r\n  };\r\n  var primaryChildFragment = mountWorkInProgressOffscreenFiber(\r\n    primaryChildProps,\r\n    fiberMode\r\n  );\r\n  var fallbackChildFragment = createFiberFromFragment(\r\n    fallbackChildren,\r\n    fiberMode,\r\n    renderLanes,\r\n    null\r\n  ); // Needs a placement effect because the parent (the Suspense\r\n  // boundary) already mounted but this is a new fiber.\r\n\r\n  fallbackChildFragment.flags |= Placement;\r\n  primaryChildFragment.return = workInProgress;\r\n  fallbackChildFragment.return = workInProgress;\r\n  primaryChildFragment.sibling = fallbackChildFragment;\r\n  workInProgress.child = primaryChildFragment;\r\n\r\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\r\n    // We will have dropped the effect list which contains the\r\n    // deletion. We need to reconcile to delete the current child.\r\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\r\n  }\r\n\r\n  return fallbackChildFragment;\r\n}\r\n\r\nfunction mountDehydratedSuspenseComponent(\r\n  workInProgress,\r\n  suspenseInstance,\r\n  renderLanes\r\n) {\r\n  // During the first pass, we'll bail out and not drill into the children.\r\n  // Instead, we'll leave the content in place and try to hydrate it later.\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    {\r\n      error(\r\n        \"Cannot hydrate Suspense in legacy mode. Switch from \" +\r\n          \"ReactDOM.hydrate(element, container) to \" +\r\n          \"ReactDOMClient.hydrateRoot(container, <App />)\" +\r\n          \".render(element) or remove the Suspense components from \" +\r\n          \"the server rendered components.\"\r\n      );\r\n    }\r\n\r\n    workInProgress.lanes = laneToLanes(SyncLane);\r\n  } else if (isSuspenseInstanceFallback()) {\r\n    // This is a client-only boundary. Since we won't get any content from the server\r\n    // for this, we need to schedule that at a higher priority based on when it would\r\n    // have timed out. In theory we could render it in this pass but it would have the\r\n    // wrong priority associated with it and will prevent hydration of parent path.\r\n    // Instead, we'll leave work left on it to render it in a separate commit.\r\n    // TODO This time should be the time at which the server rendered response that is\r\n    // a parent to this boundary was displayed. However, since we currently don't have\r\n    // a protocol to transfer that time, we'll just estimate it by using the current\r\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\r\n    // they should be.\r\n    // Schedule a normal pri update to render this content.\r\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\r\n  } else {\r\n    // We'll continue hydrating the rest at offscreen priority since we'll already\r\n    // be showing the right content coming from the server, it is no rush.\r\n    workInProgress.lanes = laneToLanes(OffscreenLane);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction updateDehydratedSuspenseComponent(\r\n  current,\r\n  workInProgress,\r\n  didSuspend,\r\n  nextProps,\r\n  suspenseInstance,\r\n  suspenseState,\r\n  renderLanes\r\n) {\r\n  if (!didSuspend) {\r\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n      return retrySuspenseComponentWithoutHydrating(\r\n        current,\r\n        workInProgress,\r\n        renderLanes, // TODO: When we delete legacy mode, we should make this error argument\r\n        // required — every concurrent mode path that causes hydration to\r\n        // de-opt to client rendering should have an error message.\r\n        null\r\n      );\r\n    }\r\n\r\n    if (isSuspenseInstanceFallback()) {\r\n      // This boundary is in a permanent fallback state. In this case, we'll never\r\n      // get an update and we'll never be able to hydrate the final content. Let's just try the\r\n      // client side render instead.\r\n      var digest, message, stack;\r\n\r\n      {\r\n        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails();\r\n\r\n        digest = _getSuspenseInstanceF.digest;\r\n        message = _getSuspenseInstanceF.message;\r\n        stack = _getSuspenseInstanceF.stack;\r\n      }\r\n\r\n      var error;\r\n\r\n      if (message) {\r\n        // eslint-disable-next-line react-internal/prod-error-codes\r\n        error = new Error(message);\r\n      } else {\r\n        error = new Error(\r\n          \"The server could not finish this Suspense boundary, likely \" +\r\n            \"due to an error during server rendering. Switched to \" +\r\n            \"client rendering.\"\r\n        );\r\n      }\r\n\r\n      var capturedValue = createCapturedValue(error, digest, stack);\r\n      return retrySuspenseComponentWithoutHydrating(\r\n        current,\r\n        workInProgress,\r\n        renderLanes,\r\n        capturedValue\r\n      );\r\n    }\r\n    // any context has changed, we need to treat is as if the input might have changed.\r\n\r\n    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\r\n\r\n    if (didReceiveUpdate || hasContextChanged) {\r\n      // This boundary has changed since the first render. This means that we are now unable to\r\n      // hydrate it. We might still be able to hydrate it using a higher priority lane.\r\n      var root = getWorkInProgressRoot();\r\n\r\n      if (root !== null) {\r\n        var attemptHydrationAtLane = getBumpedLaneForHydration(\r\n          root,\r\n          renderLanes\r\n        );\r\n\r\n        if (\r\n          attemptHydrationAtLane !== NoLane &&\r\n          attemptHydrationAtLane !== suspenseState.retryLane\r\n        ) {\r\n          // Intentionally mutating since this render will get interrupted. This\r\n          // is one of the very rare times where we mutate the current tree\r\n          // during the render phase.\r\n          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render\r\n\r\n          var eventTime = NoTimestamp;\r\n          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);\r\n          scheduleUpdateOnFiber(\r\n            root,\r\n            current,\r\n            attemptHydrationAtLane,\r\n            eventTime\r\n          );\r\n        }\r\n      } // If we have scheduled higher pri work above, this will probably just abort the render\r\n      // since we now have higher priority work, but in case it doesn't, we need to prepare to\r\n      // render something, if we time out. Even if that requires us to delete everything and\r\n      // skip hydration.\r\n      // Delay having to do this as long as the suspense timeout allows us.\r\n\r\n      renderDidSuspendDelayIfPossible();\r\n\r\n      var _capturedValue = createCapturedValue(\r\n        new Error(\r\n          \"This Suspense boundary received an update before it finished \" +\r\n            \"hydrating. This caused the boundary to switch to client rendering. \" +\r\n            \"The usual way to fix this is to wrap the original update \" +\r\n            \"in startTransition.\"\r\n        )\r\n      );\r\n\r\n      return retrySuspenseComponentWithoutHydrating(\r\n        current,\r\n        workInProgress,\r\n        renderLanes,\r\n        _capturedValue\r\n      );\r\n    } else if (isSuspenseInstancePending()) {\r\n      // This component is still pending more data from the server, so we can't hydrate its\r\n      // content. We treat it as if this component suspended itself. It might seem as if\r\n      // we could just try to render it client-side instead. However, this will perform a\r\n      // lot of unnecessary work and is unlikely to complete since it often will suspend\r\n      // on missing data anyway. Additionally, the server might be able to render more\r\n      // than we can on the client yet. In that case we'd end up with more fallback states\r\n      // on the client than if we just leave it alone. If the server times out or errors\r\n      // these should update this boundary to the permanent Fallback state instead.\r\n      // Mark it as having captured (i.e. suspended).\r\n      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.\r\n\r\n      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.\r\n\r\n      var retry = retryDehydratedSuspenseBoundary.bind(null, current);\r\n      registerSuspenseInstanceRetry();\r\n      return null;\r\n    } else {\r\n      // This is the first attempt.\r\n      reenterHydrationStateFromDehydratedSuspenseInstance(\r\n        workInProgress,\r\n        suspenseInstance,\r\n        suspenseState.treeContext\r\n      );\r\n      var primaryChildren = nextProps.children;\r\n      var primaryChildFragment = mountSuspensePrimaryChildren(\r\n        workInProgress,\r\n        primaryChildren\r\n      ); // Mark the children as hydrating. This is a fast path to know whether this\r\n      // tree is part of a hydrating tree. This is used to determine if a child\r\n      // node has fully mounted yet, and for scheduling event replaying.\r\n      // Conceptually this is similar to Placement in that a new subtree is\r\n      // inserted into the React tree here. It just happens to not need DOM\r\n      // mutations because it already exists.\r\n\r\n      primaryChildFragment.flags |= Hydrating;\r\n      return primaryChildFragment;\r\n    }\r\n  } else {\r\n    // This is the second render pass. We already attempted to hydrated, but\r\n    // something either suspended or errored.\r\n    if (workInProgress.flags & ForceClientRender) {\r\n      // Something errored during hydration. Try again without hydrating.\r\n      workInProgress.flags &= ~ForceClientRender;\r\n\r\n      var _capturedValue2 = createCapturedValue(\r\n        new Error(\r\n          \"There was an error while hydrating this Suspense boundary. \" +\r\n            \"Switched to client rendering.\"\r\n        )\r\n      );\r\n\r\n      return retrySuspenseComponentWithoutHydrating(\r\n        current,\r\n        workInProgress,\r\n        renderLanes,\r\n        _capturedValue2\r\n      );\r\n    } else if (workInProgress.memoizedState !== null) {\r\n      // Something suspended and we should still be in dehydrated mode.\r\n      // Leave the existing child in place.\r\n      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there\r\n      // but the normal suspense pass doesn't.\r\n\r\n      workInProgress.flags |= DidCapture;\r\n      return null;\r\n    } else {\r\n      // Suspended but we should no longer be in dehydrated mode.\r\n      // Therefore we now have to render the fallback.\r\n      var nextPrimaryChildren = nextProps.children;\r\n      var nextFallbackChildren = nextProps.fallback;\r\n      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\r\n        current,\r\n        workInProgress,\r\n        nextPrimaryChildren,\r\n        nextFallbackChildren,\r\n        renderLanes\r\n      );\r\n      var _primaryChildFragment4 = workInProgress.child;\r\n      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(\r\n        renderLanes\r\n      );\r\n      workInProgress.memoizedState = SUSPENDED_MARKER;\r\n      return fallbackChildFragment;\r\n    }\r\n  }\r\n}\r\n\r\nfunction scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {\r\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\r\n  var alternate = fiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\r\n  }\r\n\r\n  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);\r\n}\r\n\r\nfunction propagateSuspenseContextChange(\r\n  workInProgress,\r\n  firstChild,\r\n  renderLanes\r\n) {\r\n  // Mark any Suspense boundaries with fallbacks as having work to do.\r\n  // If they were previously forced into fallbacks, they may now be able\r\n  // to unblock.\r\n  var node = firstChild;\r\n\r\n  while (node !== null) {\r\n    if (node.tag === SuspenseComponent) {\r\n      var state = node.memoizedState;\r\n\r\n      if (state !== null) {\r\n        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\r\n      }\r\n    } else if (node.tag === SuspenseListComponent) {\r\n      // If the tail is hidden there might not be an Suspense boundaries\r\n      // to schedule work on. In this case we have to schedule it on the\r\n      // list itself.\r\n      // We don't have to traverse to the children of the list since\r\n      // the list will propagate the change when it rerenders.\r\n      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);\r\n    } else if (node.child !== null) {\r\n      node.child.return = node;\r\n      node = node.child;\r\n      continue;\r\n    }\r\n\r\n    if (node === workInProgress) {\r\n      return;\r\n    }\r\n\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === workInProgress) {\r\n        return;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  }\r\n}\r\n\r\nfunction findLastContentRow(firstChild) {\r\n  // This is going to find the last row among these children that is already\r\n  // showing content on the screen, as opposed to being in fallback state or\r\n  // new. If a row has multiple Suspense boundaries, any of them being in the\r\n  // fallback state, counts as the whole row being in a fallback state.\r\n  // Note that the \"rows\" will be workInProgress, but any nested children\r\n  // will still be current since we haven't rendered them yet. The mounted\r\n  // order may not be the same as the new order. We use the new order.\r\n  var row = firstChild;\r\n  var lastContentRow = null;\r\n\r\n  while (row !== null) {\r\n    var currentRow = row.alternate; // New rows can't be content rows.\r\n\r\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\r\n      lastContentRow = row;\r\n    }\r\n\r\n    row = row.sibling;\r\n  }\r\n\r\n  return lastContentRow;\r\n}\r\n\r\nfunction validateRevealOrder(revealOrder) {\r\n  {\r\n    if (\r\n      revealOrder !== undefined &&\r\n      revealOrder !== \"forwards\" &&\r\n      revealOrder !== \"backwards\" &&\r\n      revealOrder !== \"together\" &&\r\n      !didWarnAboutRevealOrder[revealOrder]\r\n    ) {\r\n      didWarnAboutRevealOrder[revealOrder] = true;\r\n\r\n      if (typeof revealOrder === \"string\") {\r\n        switch (revealOrder.toLowerCase()) {\r\n          case \"together\":\r\n          case \"forwards\":\r\n          case \"backwards\": {\r\n            error(\r\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\r\n                'Use lowercase \"%s\" instead.',\r\n              revealOrder,\r\n              revealOrder.toLowerCase()\r\n            );\r\n\r\n            break;\r\n          }\r\n\r\n          case \"forward\":\r\n          case \"backward\": {\r\n            error(\r\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\r\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\r\n              revealOrder,\r\n              revealOrder.toLowerCase()\r\n            );\r\n\r\n            break;\r\n          }\r\n\r\n          default:\r\n            error(\r\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\r\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\r\n              revealOrder\r\n            );\r\n\r\n            break;\r\n        }\r\n      } else {\r\n        error(\r\n          \"%s is not a supported value for revealOrder on <SuspenseList />. \" +\r\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\r\n          revealOrder\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction validateTailOptions(tailMode, revealOrder) {\r\n  {\r\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\r\n      if (tailMode !== \"collapsed\" && tailMode !== \"hidden\") {\r\n        didWarnAboutTailOptions[tailMode] = true;\r\n\r\n        error(\r\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\r\n            'Did you mean \"collapsed\" or \"hidden\"?',\r\n          tailMode\r\n        );\r\n      } else if (revealOrder !== \"forwards\" && revealOrder !== \"backwards\") {\r\n        didWarnAboutTailOptions[tailMode] = true;\r\n\r\n        error(\r\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\r\n            '\"forwards\" or \"backwards\". ' +\r\n            'Did you mean to specify revealOrder=\"forwards\"?',\r\n          tailMode\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction validateSuspenseListNestedChild(childSlot, index) {\r\n  {\r\n    var isAnArray = isArray(childSlot);\r\n    var isIterable =\r\n      !isAnArray && typeof getIteratorFn(childSlot) === \"function\";\r\n\r\n    if (isAnArray || isIterable) {\r\n      var type = isAnArray ? \"array\" : \"iterable\";\r\n\r\n      error(\r\n        \"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in \" +\r\n          \"an additional SuspenseList to configure its revealOrder: \" +\r\n          \"<SuspenseList revealOrder=...> ... \" +\r\n          \"<SuspenseList revealOrder=...>{%s}</SuspenseList> ... \" +\r\n          \"</SuspenseList>\",\r\n        type,\r\n        index,\r\n        type\r\n      );\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validateSuspenseListChildren(children, revealOrder) {\r\n  {\r\n    if (\r\n      (revealOrder === \"forwards\" || revealOrder === \"backwards\") &&\r\n      children !== undefined &&\r\n      children !== null &&\r\n      children !== false\r\n    ) {\r\n      if (isArray(children)) {\r\n        for (var i = 0; i < children.length; i++) {\r\n          if (!validateSuspenseListNestedChild(children[i], i)) {\r\n            return;\r\n          }\r\n        }\r\n      } else {\r\n        var iteratorFn = getIteratorFn(children);\r\n\r\n        if (typeof iteratorFn === \"function\") {\r\n          var childrenIterator = iteratorFn.call(children);\r\n\r\n          if (childrenIterator) {\r\n            var step = childrenIterator.next();\r\n            var _i = 0;\r\n\r\n            for (; !step.done; step = childrenIterator.next()) {\r\n              if (!validateSuspenseListNestedChild(step.value, _i)) {\r\n                return;\r\n              }\r\n\r\n              _i++;\r\n            }\r\n          }\r\n        } else {\r\n          error(\r\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\r\n              \"This is not useful since it needs multiple rows. \" +\r\n              \"Did you mean to pass multiple children or an array?\",\r\n            revealOrder\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction initSuspenseListRenderState(\r\n  workInProgress,\r\n  isBackwards,\r\n  tail,\r\n  lastContentRow,\r\n  tailMode\r\n) {\r\n  var renderState = workInProgress.memoizedState;\r\n\r\n  if (renderState === null) {\r\n    workInProgress.memoizedState = {\r\n      isBackwards: isBackwards,\r\n      rendering: null,\r\n      renderingStartTime: 0,\r\n      last: lastContentRow,\r\n      tail: tail,\r\n      tailMode: tailMode\r\n    };\r\n  } else {\r\n    // We can reuse the existing object from previous renders.\r\n    renderState.isBackwards = isBackwards;\r\n    renderState.rendering = null;\r\n    renderState.renderingStartTime = 0;\r\n    renderState.last = lastContentRow;\r\n    renderState.tail = tail;\r\n    renderState.tailMode = tailMode;\r\n  }\r\n} // This can end up rendering this component multiple passes.\r\n// The first pass splits the children fibers into two sets. A head and tail.\r\n// We first render the head. If anything is in fallback state, we do another\r\n// pass through beginWork to rerender all children (including the tail) with\r\n// the force suspend context. If the first render didn't have anything in\r\n// in fallback state. Then we render each row in the tail one-by-one.\r\n// That happens in the completeWork phase without going back to beginWork.\r\n\r\nfunction updateSuspenseListComponent(current, workInProgress, renderLanes) {\r\n  var nextProps = workInProgress.pendingProps;\r\n  var revealOrder = nextProps.revealOrder;\r\n  var tailMode = nextProps.tail;\r\n  var newChildren = nextProps.children;\r\n  validateRevealOrder(revealOrder);\r\n  validateTailOptions(tailMode, revealOrder);\r\n  validateSuspenseListChildren(newChildren, revealOrder);\r\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\r\n  var suspenseContext = suspenseStackCursor.current;\r\n  var shouldForceFallback = hasSuspenseContext(\r\n    suspenseContext,\r\n    ForceSuspenseFallback\r\n  );\r\n\r\n  if (shouldForceFallback) {\r\n    suspenseContext = setShallowSuspenseContext(\r\n      suspenseContext,\r\n      ForceSuspenseFallback\r\n    );\r\n    workInProgress.flags |= DidCapture;\r\n  } else {\r\n    var didSuspendBefore =\r\n      current !== null && (current.flags & DidCapture) !== NoFlags;\r\n\r\n    if (didSuspendBefore) {\r\n      // If we previously forced a fallback, we need to schedule work\r\n      // on any nested boundaries to let them know to try to render\r\n      // again. This is the same as context updating.\r\n      propagateSuspenseContextChange(\r\n        workInProgress,\r\n        workInProgress.child,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\r\n  }\r\n\r\n  pushSuspenseContext(workInProgress, suspenseContext);\r\n\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    // In legacy mode, SuspenseList doesn't work so we just\r\n    // use make it a noop by treating it as the default revealOrder.\r\n    workInProgress.memoizedState = null;\r\n  } else {\r\n    switch (revealOrder) {\r\n      case \"forwards\": {\r\n        var lastContentRow = findLastContentRow(workInProgress.child);\r\n        var tail;\r\n\r\n        if (lastContentRow === null) {\r\n          // The whole list is part of the tail.\r\n          // TODO: We could fast path by just rendering the tail now.\r\n          tail = workInProgress.child;\r\n          workInProgress.child = null;\r\n        } else {\r\n          // Disconnect the tail rows after the content row.\r\n          // We're going to render them separately later.\r\n          tail = lastContentRow.sibling;\r\n          lastContentRow.sibling = null;\r\n        }\r\n\r\n        initSuspenseListRenderState(\r\n          workInProgress,\r\n          false, // isBackwards\r\n          tail,\r\n          lastContentRow,\r\n          tailMode\r\n        );\r\n        break;\r\n      }\r\n\r\n      case \"backwards\": {\r\n        // We're going to find the first row that has existing content.\r\n        // At the same time we're going to reverse the list of everything\r\n        // we pass in the meantime. That's going to be our tail in reverse\r\n        // order.\r\n        var _tail = null;\r\n        var row = workInProgress.child;\r\n        workInProgress.child = null;\r\n\r\n        while (row !== null) {\r\n          var currentRow = row.alternate; // New rows can't be content rows.\r\n\r\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\r\n            // This is the beginning of the main content.\r\n            workInProgress.child = row;\r\n            break;\r\n          }\r\n\r\n          var nextRow = row.sibling;\r\n          row.sibling = _tail;\r\n          _tail = row;\r\n          row = nextRow;\r\n        } // TODO: If workInProgress.child is null, we can continue on the tail immediately.\r\n\r\n        initSuspenseListRenderState(\r\n          workInProgress,\r\n          true, // isBackwards\r\n          _tail,\r\n          null, // last\r\n          tailMode\r\n        );\r\n        break;\r\n      }\r\n\r\n      case \"together\": {\r\n        initSuspenseListRenderState(\r\n          workInProgress,\r\n          false, // isBackwards\r\n          null, // tail\r\n          null, // last\r\n          undefined\r\n        );\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        // The default reveal order is the same as not having\r\n        // a boundary.\r\n        workInProgress.memoizedState = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction updatePortalComponent(current, workInProgress, renderLanes) {\r\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\r\n  var nextChildren = workInProgress.pendingProps;\r\n\r\n  if (current === null) {\r\n    // Portals are special because we don't append the children during mount\r\n    // but at commit. Therefore we need to track insertions which the normal\r\n    // flow doesn't do during mount. This doesn't happen at the root because\r\n    // the root always starts with a \"current\" with a null child.\r\n    // TODO: Consider unifying this with how the root works.\r\n    workInProgress.child = reconcileChildFibers(\r\n      workInProgress,\r\n      null,\r\n      nextChildren,\r\n      renderLanes\r\n    );\r\n  } else {\r\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\r\n  }\r\n\r\n  return workInProgress.child;\r\n}\r\n\r\nvar hasWarnedAboutUsingNoValuePropOnContextProvider = false;\r\n\r\nfunction updateContextProvider(current, workInProgress, renderLanes) {\r\n  var providerType = workInProgress.type;\r\n  var context = providerType._context;\r\n  var newProps = workInProgress.pendingProps;\r\n  var oldProps = workInProgress.memoizedProps;\r\n  var newValue = newProps.value;\r\n\r\n  {\r\n    if (!(\"value\" in newProps)) {\r\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\r\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\r\n\r\n        error(\r\n          \"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\"\r\n        );\r\n      }\r\n    }\r\n\r\n    var providerPropTypes = workInProgress.type.propTypes;\r\n\r\n    if (providerPropTypes) {\r\n      checkPropTypes(providerPropTypes, newProps, \"prop\", \"Context.Provider\");\r\n    }\r\n  }\r\n\r\n  pushProvider(workInProgress, context, newValue);\r\n\r\n  {\r\n    if (oldProps !== null) {\r\n      var oldValue = oldProps.value;\r\n\r\n      if (objectIs(oldValue, newValue)) {\r\n        // No change. Bailout early if children are the same.\r\n        if (oldProps.children === newProps.children && !hasContextChanged()) {\r\n          return bailoutOnAlreadyFinishedWork(\r\n            current,\r\n            workInProgress,\r\n            renderLanes\r\n          );\r\n        }\r\n      } else {\r\n        // The context value changed. Search for matching consumers and schedule\r\n        // them to update.\r\n        propagateContextChange(workInProgress, context, renderLanes);\r\n      }\r\n    }\r\n  }\r\n\r\n  var newChildren = newProps.children;\r\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nvar hasWarnedAboutUsingContextAsConsumer = false;\r\n\r\nfunction updateContextConsumer(current, workInProgress, renderLanes) {\r\n  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In\r\n  // DEV mode, we create a separate object for Context.Consumer that acts\r\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\r\n  // so we use the old behaviour (Context.Consumer references Context) to\r\n  // reduce size and overhead. The separate object references context via\r\n  // a property called \"_context\", which also gives us the ability to check\r\n  // in DEV mode if this property exists or not and warn if it does not.\r\n\r\n  {\r\n    if (context._context === undefined) {\r\n      // This may be because it's a Context (rather than a Consumer).\r\n      // Or it may be because it's older React where they're the same thing.\r\n      // We only want to warn if we're sure it's a new React.\r\n      if (context !== context.Consumer) {\r\n        if (!hasWarnedAboutUsingContextAsConsumer) {\r\n          hasWarnedAboutUsingContextAsConsumer = true;\r\n\r\n          error(\r\n            \"Rendering <Context> directly is not supported and will be removed in \" +\r\n              \"a future major release. Did you mean to render <Context.Consumer> instead?\"\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      context = context._context;\r\n    }\r\n  }\r\n\r\n  var newProps = workInProgress.pendingProps;\r\n  var render = newProps.children;\r\n\r\n  {\r\n    if (typeof render !== \"function\") {\r\n      error(\r\n        \"A context consumer was rendered with multiple children, or a child \" +\r\n          \"that isn't a function. A context consumer expects a single child \" +\r\n          \"that is a function. If you did pass a function, make sure there \" +\r\n          \"is no trailing or leading whitespace around it.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  prepareToReadContext(workInProgress, renderLanes);\r\n  var newValue = readContext(context);\r\n\r\n  var newChildren;\r\n\r\n  {\r\n    ReactCurrentOwner$1.current = workInProgress;\r\n    setIsRendering(true);\r\n    newChildren = render(newValue);\r\n    setIsRendering(false);\r\n  }\r\n\r\n  workInProgress.flags |= PerformedWork;\r\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction markWorkInProgressReceivedUpdate() {\r\n  didReceiveUpdate = true;\r\n}\r\n\r\nfunction resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {\r\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\r\n    if (current !== null) {\r\n      // A lazy component only mounts if it suspended inside a non-\r\n      // concurrent tree, in an inconsistent state. We want to treat it like\r\n      // a new mount, even though an empty version of it already committed.\r\n      // Disconnect the alternate pointers.\r\n      current.alternate = null;\r\n      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect\r\n\r\n      workInProgress.flags |= Placement;\r\n    }\r\n  }\r\n}\r\n\r\nfunction bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {\r\n  if (current !== null) {\r\n    // Reuse previous dependencies\r\n    workInProgress.dependencies = current.dependencies;\r\n  }\r\n\r\n  {\r\n    // Don't update \"base\" render times for bailouts.\r\n    stopProfilerTimerIfRunning();\r\n  }\r\n\r\n  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.\r\n\r\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\r\n    // The children don't have any work either. We can skip them.\r\n    // TODO: Once we add back resuming, we should check if the children are\r\n    // a work-in-progress set. If so, we need to transfer their effects.\r\n    {\r\n      return null;\r\n    }\r\n  } // This fiber doesn't have work, but its subtree does. Clone the child\r\n  // fibers and continue.\r\n\r\n  cloneChildFibers(current, workInProgress);\r\n  return workInProgress.child;\r\n}\r\n\r\nfunction remountFiber(current, oldWorkInProgress, newWorkInProgress) {\r\n  {\r\n    var returnFiber = oldWorkInProgress.return;\r\n\r\n    if (returnFiber === null) {\r\n      // eslint-disable-next-line react-internal/prod-error-codes\r\n      throw new Error(\"Cannot swap the root fiber.\");\r\n    } // Disconnect from the old current.\r\n    // It will get deleted.\r\n\r\n    current.alternate = null;\r\n    oldWorkInProgress.alternate = null; // Connect to the new tree.\r\n\r\n    newWorkInProgress.index = oldWorkInProgress.index;\r\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\r\n    newWorkInProgress.return = oldWorkInProgress.return;\r\n    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.\r\n\r\n    if (oldWorkInProgress === returnFiber.child) {\r\n      returnFiber.child = newWorkInProgress;\r\n    } else {\r\n      var prevSibling = returnFiber.child;\r\n\r\n      if (prevSibling === null) {\r\n        // eslint-disable-next-line react-internal/prod-error-codes\r\n        throw new Error(\"Expected parent to have a child.\");\r\n      }\r\n\r\n      while (prevSibling.sibling !== oldWorkInProgress) {\r\n        prevSibling = prevSibling.sibling;\r\n\r\n        if (prevSibling === null) {\r\n          // eslint-disable-next-line react-internal/prod-error-codes\r\n          throw new Error(\"Expected to find the previous sibling.\");\r\n        }\r\n      }\r\n\r\n      prevSibling.sibling = newWorkInProgress;\r\n    } // Delete the old fiber and place the new one.\r\n    // Since the old fiber is disconnected, we have to schedule it manually.\r\n\r\n    var deletions = returnFiber.deletions;\r\n\r\n    if (deletions === null) {\r\n      returnFiber.deletions = [current];\r\n      returnFiber.flags |= ChildDeletion;\r\n    } else {\r\n      deletions.push(current);\r\n    }\r\n\r\n    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.\r\n\r\n    return newWorkInProgress;\r\n  }\r\n}\r\n\r\nfunction checkScheduledUpdateOrContext(current, renderLanes) {\r\n  // Before performing an early bailout, we must check if there are pending\r\n  // updates or context.\r\n  var updateLanes = current.lanes;\r\n\r\n  if (includesSomeLane(updateLanes, renderLanes)) {\r\n    return true;\r\n  } // No pending update, but because context is propagated lazily, we need\r\n\r\n  return false;\r\n}\r\n\r\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\r\n  current,\r\n  workInProgress,\r\n  renderLanes\r\n) {\r\n  // This fiber does not have any pending work. Bailout without entering\r\n  // the begin phase. There's still some bookkeeping we that needs to be done\r\n  // in this optimized path, mostly pushing stuff onto the stack.\r\n  switch (workInProgress.tag) {\r\n    case HostRoot:\r\n      pushHostRootContext(workInProgress);\r\n      var root = workInProgress.stateNode;\r\n      break;\r\n\r\n    case HostComponent:\r\n      pushHostContext(workInProgress);\r\n      break;\r\n\r\n    case ClassComponent: {\r\n      var Component = workInProgress.type;\r\n\r\n      if (isContextProvider(Component)) {\r\n        pushContextProvider(workInProgress);\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    case HostPortal:\r\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\r\n      break;\r\n\r\n    case ContextProvider: {\r\n      var newValue = workInProgress.memoizedProps.value;\r\n      var context = workInProgress.type._context;\r\n      pushProvider(workInProgress, context, newValue);\r\n      break;\r\n    }\r\n\r\n    case Profiler:\r\n      {\r\n        // Profiler should only call onRender when one of its descendants actually rendered.\r\n        var hasChildWork = includesSomeLane(\r\n          renderLanes,\r\n          workInProgress.childLanes\r\n        );\r\n\r\n        if (hasChildWork) {\r\n          workInProgress.flags |= Update;\r\n        }\r\n\r\n        {\r\n          // Reset effect durations for the next eventual effect phase.\r\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\r\n          var stateNode = workInProgress.stateNode;\r\n          stateNode.effectDuration = 0;\r\n          stateNode.passiveEffectDuration = 0;\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    case SuspenseComponent: {\r\n      var state = workInProgress.memoizedState;\r\n\r\n      if (state !== null) {\r\n        if (state.dehydrated !== null) {\r\n          pushSuspenseContext(\r\n            workInProgress,\r\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\r\n          ); // We know that this component will suspend again because if it has\r\n          // been unsuspended it has committed as a resolved Suspense component.\r\n          // If it needs to be retried, it should have work scheduled on it.\r\n\r\n          workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we\r\n          // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\r\n\r\n          return null;\r\n        } // If this boundary is currently timed out, we need to decide\r\n        // whether to retry the primary children, or to skip over it and\r\n        // go straight to the fallback. Check the priority of the primary\r\n        // child fragment.\r\n\r\n        var primaryChildFragment = workInProgress.child;\r\n        var primaryChildLanes = primaryChildFragment.childLanes;\r\n\r\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\r\n          // The primary children have pending work. Use the normal path\r\n          // to attempt to render the primary children again.\r\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\r\n        } else {\r\n          // The primary child fragment does not have pending work marked\r\n          // on it\r\n          pushSuspenseContext(\r\n            workInProgress,\r\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current)\r\n          ); // The primary children do not have pending work with sufficient\r\n          // priority. Bailout.\r\n\r\n          var child = bailoutOnAlreadyFinishedWork(\r\n            current,\r\n            workInProgress,\r\n            renderLanes\r\n          );\r\n\r\n          if (child !== null) {\r\n            // The fallback children have pending work. Skip over the\r\n            // primary children and work on the fallback.\r\n            return child.sibling;\r\n          } else {\r\n            // Note: We can return `null` here because we already checked\r\n            // whether there were nested context consumers, via the call to\r\n            // `bailoutOnAlreadyFinishedWork` above.\r\n            return null;\r\n          }\r\n        }\r\n      } else {\r\n        pushSuspenseContext(\r\n          workInProgress,\r\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current)\r\n        );\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    case SuspenseListComponent: {\r\n      var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\r\n\r\n      var _hasChildWork = includesSomeLane(\r\n        renderLanes,\r\n        workInProgress.childLanes\r\n      );\r\n\r\n      if (didSuspendBefore) {\r\n        if (_hasChildWork) {\r\n          // If something was in fallback state last time, and we have all the\r\n          // same children then we're still in progressive loading state.\r\n          // Something might get unblocked by state updates or retries in the\r\n          // tree which will affect the tail. So we need to use the normal\r\n          // path to compute the correct tail.\r\n          return updateSuspenseListComponent(\r\n            current,\r\n            workInProgress,\r\n            renderLanes\r\n          );\r\n        } // If none of the children had any work, that means that none of\r\n        // them got retried so they'll still be blocked in the same way\r\n        // as before. We can fast bail out.\r\n\r\n        workInProgress.flags |= DidCapture;\r\n      } // If nothing suspended before and we're rendering the same children,\r\n      // then the tail doesn't matter. Anything new that suspends will work\r\n      // in the \"together\" mode, so we can continue from the state we had.\r\n\r\n      var renderState = workInProgress.memoizedState;\r\n\r\n      if (renderState !== null) {\r\n        // Reset to the \"together\" mode in case we've started a different\r\n        // update in the past but didn't complete it.\r\n        renderState.rendering = null;\r\n        renderState.tail = null;\r\n        renderState.lastEffect = null;\r\n      }\r\n\r\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\r\n\r\n      if (_hasChildWork) {\r\n        break;\r\n      } else {\r\n        // If none of the children had any work, that means that none of\r\n        // them got retried so they'll still be blocked in the same way\r\n        // as before. We can fast bail out.\r\n        return null;\r\n      }\r\n    }\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent: {\r\n      // Need to check if the tree still needs to be deferred. This is\r\n      // almost identical to the logic used in the normal update path,\r\n      // so we'll just enter that. The only difference is we'll bail out\r\n      // at the next level instead of this one, because the child props\r\n      // have not changed. Which is fine.\r\n      // TODO: Probably should refactor `beginWork` to split the bailout\r\n      // path from the normal path. I'm tempted to do a labeled break here\r\n      // but I won't :)\r\n      workInProgress.lanes = NoLanes;\r\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\r\n    }\r\n  }\r\n\r\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\r\n}\r\n\r\nfunction beginWork(current, workInProgress, renderLanes) {\r\n  {\r\n    if (workInProgress._debugNeedsRemount && current !== null) {\r\n      // This will restart the begin phase with a new fiber.\r\n      return remountFiber(\r\n        current,\r\n        workInProgress,\r\n        createFiberFromTypeAndProps(\r\n          workInProgress.type,\r\n          workInProgress.key,\r\n          workInProgress.pendingProps,\r\n          workInProgress._debugOwner || null,\r\n          workInProgress.mode,\r\n          workInProgress.lanes\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  if (current !== null) {\r\n    var oldProps = current.memoizedProps;\r\n    var newProps = workInProgress.pendingProps;\r\n\r\n    if (\r\n      oldProps !== newProps ||\r\n      hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:\r\n      workInProgress.type !== current.type\r\n    ) {\r\n      // If props or context changed, mark the fiber as having performed work.\r\n      // This may be unset if the props are determined to be equal later (memo).\r\n      didReceiveUpdate = true;\r\n    } else {\r\n      // Neither props nor legacy context changes. Check if there's a pending\r\n      // update or context change.\r\n      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\r\n        current,\r\n        renderLanes\r\n      );\r\n\r\n      if (\r\n        !hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there\r\n        // may not be work scheduled on `current`, so we check for this flag.\r\n        (workInProgress.flags & DidCapture) === NoFlags\r\n      ) {\r\n        // No pending updates or context. Bail out now.\r\n        didReceiveUpdate = false;\r\n        return attemptEarlyBailoutIfNoScheduledUpdate(\r\n          current,\r\n          workInProgress,\r\n          renderLanes\r\n        );\r\n      }\r\n\r\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\r\n        // This is a special case that only exists for legacy mode.\r\n        // See https://github.com/facebook/react/pull/19216.\r\n        didReceiveUpdate = true;\r\n      } else {\r\n        // An update was scheduled on this fiber, but there are no new props\r\n        // nor legacy context. Set this to false. If an update queue or context\r\n        // consumer produces a changed value, it will set this to true. Otherwise,\r\n        // the component will assume the children have not changed and bail out.\r\n        didReceiveUpdate = false;\r\n      }\r\n    }\r\n  } else {\r\n    didReceiveUpdate = false;\r\n  } // Before entering the begin phase, clear pending update priority.\r\n  // TODO: This assumes that we're about to evaluate the component and process\r\n  // the update queue. However, there's an exception: SimpleMemoComponent\r\n  // sometimes bails out later in the begin phase. This indicates that we should\r\n  // move this assignment out of the common path and into each branch.\r\n\r\n  workInProgress.lanes = NoLanes;\r\n\r\n  switch (workInProgress.tag) {\r\n    case IndeterminateComponent: {\r\n      return mountIndeterminateComponent(\r\n        current,\r\n        workInProgress,\r\n        workInProgress.type,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case LazyComponent: {\r\n      var elementType = workInProgress.elementType;\r\n      return mountLazyComponent(\r\n        current,\r\n        workInProgress,\r\n        elementType,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case FunctionComponent: {\r\n      var Component = workInProgress.type;\r\n      var unresolvedProps = workInProgress.pendingProps;\r\n      var resolvedProps =\r\n        workInProgress.elementType === Component\r\n          ? unresolvedProps\r\n          : resolveDefaultProps(Component, unresolvedProps);\r\n      return updateFunctionComponent(\r\n        current,\r\n        workInProgress,\r\n        Component,\r\n        resolvedProps,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case ClassComponent: {\r\n      var _Component = workInProgress.type;\r\n      var _unresolvedProps = workInProgress.pendingProps;\r\n\r\n      var _resolvedProps =\r\n        workInProgress.elementType === _Component\r\n          ? _unresolvedProps\r\n          : resolveDefaultProps(_Component, _unresolvedProps);\r\n\r\n      return updateClassComponent(\r\n        current,\r\n        workInProgress,\r\n        _Component,\r\n        _resolvedProps,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case HostRoot:\r\n      return updateHostRoot(current, workInProgress, renderLanes);\r\n\r\n    case HostComponent:\r\n      return updateHostComponent(current, workInProgress, renderLanes);\r\n\r\n    case HostText:\r\n      return updateHostText();\r\n\r\n    case SuspenseComponent:\r\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\r\n\r\n    case HostPortal:\r\n      return updatePortalComponent(current, workInProgress, renderLanes);\r\n\r\n    case ForwardRef: {\r\n      var type = workInProgress.type;\r\n      var _unresolvedProps2 = workInProgress.pendingProps;\r\n\r\n      var _resolvedProps2 =\r\n        workInProgress.elementType === type\r\n          ? _unresolvedProps2\r\n          : resolveDefaultProps(type, _unresolvedProps2);\r\n\r\n      return updateForwardRef(\r\n        current,\r\n        workInProgress,\r\n        type,\r\n        _resolvedProps2,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case Fragment:\r\n      return updateFragment(current, workInProgress, renderLanes);\r\n\r\n    case Mode:\r\n      return updateMode(current, workInProgress, renderLanes);\r\n\r\n    case Profiler:\r\n      return updateProfiler(current, workInProgress, renderLanes);\r\n\r\n    case ContextProvider:\r\n      return updateContextProvider(current, workInProgress, renderLanes);\r\n\r\n    case ContextConsumer:\r\n      return updateContextConsumer(current, workInProgress, renderLanes);\r\n\r\n    case MemoComponent: {\r\n      var _type2 = workInProgress.type;\r\n      var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.\r\n\r\n      var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);\r\n\r\n      {\r\n        if (workInProgress.type !== workInProgress.elementType) {\r\n          var outerPropTypes = _type2.propTypes;\r\n\r\n          if (outerPropTypes) {\r\n            checkPropTypes(\r\n              outerPropTypes,\r\n              _resolvedProps3, // Resolved for outer only\r\n              \"prop\",\r\n              getComponentNameFromType(_type2)\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);\r\n      return updateMemoComponent(\r\n        current,\r\n        workInProgress,\r\n        _type2,\r\n        _resolvedProps3,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case SimpleMemoComponent: {\r\n      return updateSimpleMemoComponent(\r\n        current,\r\n        workInProgress,\r\n        workInProgress.type,\r\n        workInProgress.pendingProps,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case IncompleteClassComponent: {\r\n      var _Component2 = workInProgress.type;\r\n      var _unresolvedProps4 = workInProgress.pendingProps;\r\n\r\n      var _resolvedProps4 =\r\n        workInProgress.elementType === _Component2\r\n          ? _unresolvedProps4\r\n          : resolveDefaultProps(_Component2, _unresolvedProps4);\r\n\r\n      return mountIncompleteClassComponent(\r\n        current,\r\n        workInProgress,\r\n        _Component2,\r\n        _resolvedProps4,\r\n        renderLanes\r\n      );\r\n    }\r\n\r\n    case SuspenseListComponent: {\r\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\r\n    }\r\n\r\n    case ScopeComponent: {\r\n      break;\r\n    }\r\n\r\n    case OffscreenComponent: {\r\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\r\n    }\r\n  }\r\n\r\n  throw new Error(\r\n    \"Unknown unit of work tag (\" +\r\n      workInProgress.tag +\r\n      \"). This error is likely caused by a bug in \" +\r\n      \"React. Please file an issue.\"\r\n  );\r\n}\r\n\r\nfunction markUpdate(workInProgress) {\r\n  // Tag the fiber with an update effect. This turns a Placement into\r\n  // a PlacementAndUpdate.\r\n  workInProgress.flags |= Update;\r\n}\r\n\r\nfunction markRef$1(workInProgress) {\r\n  workInProgress.flags |= Ref;\r\n}\r\n\r\nvar appendAllChildren;\r\nvar updateHostContainer;\r\nvar updateHostComponent$1;\r\nvar updateHostText$1;\r\n\r\n{\r\n  // Mutation mode\r\n  appendAllChildren = function(\r\n    parent,\r\n    workInProgress,\r\n    needsVisibilityToggle,\r\n    isHidden\r\n  ) {\r\n    // We only have the top Fiber that was created but we need recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = workInProgress.child;\r\n\r\n    while (node !== null) {\r\n      if (node.tag === HostComponent || node.tag === HostText) {\r\n        appendInitialChild(parent, node.stateNode);\r\n      } else if (node.tag === HostPortal);\r\n      else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n\r\n      if (node === workInProgress) {\r\n        return;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === workInProgress) {\r\n          return;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  };\r\n\r\n  updateHostContainer = function(current, workInProgress) {\r\n    // Noop\r\n  };\r\n\r\n  updateHostComponent$1 = function(\r\n    current,\r\n    workInProgress,\r\n    type,\r\n    newProps,\r\n    rootContainerInstance\r\n  ) {\r\n    // If we have an alternate, that means this is an update and we need to\r\n    // schedule a side-effect to do the updates.\r\n    var oldProps = current.memoizedProps;\r\n\r\n    if (oldProps === newProps) {\r\n      // In mutation mode, this is sufficient for a bailout because\r\n      // we won't touch this node even if children changed.\r\n      return;\r\n    } // If we get updated because one of our children updated, we don't\r\n    // have newProps so we'll have to reuse them.\r\n    // TODO: Split the update API as separate for the props vs. children.\r\n    // Even better would be if children weren't special cased at all tho.\r\n\r\n    var instance = workInProgress.stateNode;\r\n    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host\r\n    // component is hitting the resume path. Figure out why. Possibly\r\n    // related to `hidden`.\r\n\r\n    var updatePayload = prepareUpdate(); // TODO: Type this specific to this type of component.\r\n\r\n    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there\r\n    // is a new ref we mark this as an update. All the work is done in commitWork.\r\n\r\n    if (updatePayload) {\r\n      markUpdate(workInProgress);\r\n    }\r\n  };\r\n\r\n  updateHostText$1 = function(current, workInProgress, oldText, newText) {\r\n    // If the text differs, mark it as an update. All the work in done in commitWork.\r\n    if (oldText !== newText) {\r\n      markUpdate(workInProgress);\r\n    }\r\n  };\r\n}\r\n\r\nfunction cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {\r\n  switch (renderState.tailMode) {\r\n    case \"hidden\": {\r\n      // Any insertions at the end of the tail list after this point\r\n      // should be invisible. If there are already mounted boundaries\r\n      // anything before them are not considered for collapsing.\r\n      // Therefore we need to go through the whole tail to find if\r\n      // there are any.\r\n      var tailNode = renderState.tail;\r\n      var lastTailNode = null;\r\n\r\n      while (tailNode !== null) {\r\n        if (tailNode.alternate !== null) {\r\n          lastTailNode = tailNode;\r\n        }\r\n\r\n        tailNode = tailNode.sibling;\r\n      } // Next we're simply going to delete all insertions after the\r\n      // last rendered item.\r\n\r\n      if (lastTailNode === null) {\r\n        // All remaining items in the tail are insertions.\r\n        renderState.tail = null;\r\n      } else {\r\n        // Detach the insertion after the last node that was already\r\n        // inserted.\r\n        lastTailNode.sibling = null;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    case \"collapsed\": {\r\n      // Any insertions at the end of the tail list after this point\r\n      // should be invisible. If there are already mounted boundaries\r\n      // anything before them are not considered for collapsing.\r\n      // Therefore we need to go through the whole tail to find if\r\n      // there are any.\r\n      var _tailNode = renderState.tail;\r\n      var _lastTailNode = null;\r\n\r\n      while (_tailNode !== null) {\r\n        if (_tailNode.alternate !== null) {\r\n          _lastTailNode = _tailNode;\r\n        }\r\n\r\n        _tailNode = _tailNode.sibling;\r\n      } // Next we're simply going to delete all insertions after the\r\n      // last rendered item.\r\n\r\n      if (_lastTailNode === null) {\r\n        // All remaining items in the tail are insertions.\r\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\r\n          // We suspended during the head. We want to show at least one\r\n          // row at the tail. So we'll keep on and cut off the rest.\r\n          renderState.tail.sibling = null;\r\n        } else {\r\n          renderState.tail = null;\r\n        }\r\n      } else {\r\n        // Detach the insertion after the last node that was already\r\n        // inserted.\r\n        _lastTailNode.sibling = null;\r\n      }\r\n\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction bubbleProperties(completedWork) {\r\n  var didBailout =\r\n    completedWork.alternate !== null &&\r\n    completedWork.alternate.child === completedWork.child;\r\n  var newChildLanes = NoLanes;\r\n  var subtreeFlags = NoFlags;\r\n\r\n  if (!didBailout) {\r\n    // Bubble up the earliest expiration time.\r\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\r\n      // In profiling mode, resetChildExpirationTime is also used to reset\r\n      // profiler durations.\r\n      var actualDuration = completedWork.actualDuration;\r\n      var treeBaseDuration = completedWork.selfBaseDuration;\r\n      var child = completedWork.child;\r\n\r\n      while (child !== null) {\r\n        newChildLanes = mergeLanes(\r\n          newChildLanes,\r\n          mergeLanes(child.lanes, child.childLanes)\r\n        );\r\n        subtreeFlags |= child.subtreeFlags;\r\n        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will\r\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\r\n        // When work is done, it should bubble to the parent's actualDuration. If\r\n        // the fiber has not been cloned though, (meaning no work was done), then\r\n        // this value will reflect the amount of time spent working on a previous\r\n        // render. In that case it should not bubble. We determine whether it was\r\n        // cloned by comparing the child pointer.\r\n\r\n        actualDuration += child.actualDuration;\r\n        treeBaseDuration += child.treeBaseDuration;\r\n        child = child.sibling;\r\n      }\r\n\r\n      completedWork.actualDuration = actualDuration;\r\n      completedWork.treeBaseDuration = treeBaseDuration;\r\n    } else {\r\n      var _child = completedWork.child;\r\n\r\n      while (_child !== null) {\r\n        newChildLanes = mergeLanes(\r\n          newChildLanes,\r\n          mergeLanes(_child.lanes, _child.childLanes)\r\n        );\r\n        subtreeFlags |= _child.subtreeFlags;\r\n        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code\r\n        // smell because it assumes the commit phase is never concurrent with\r\n        // the render phase. Will address during refactor to alternate model.\r\n\r\n        _child.return = completedWork;\r\n        _child = _child.sibling;\r\n      }\r\n    }\r\n\r\n    completedWork.subtreeFlags |= subtreeFlags;\r\n  } else {\r\n    // Bubble up the earliest expiration time.\r\n    if ((completedWork.mode & ProfileMode) !== NoMode) {\r\n      // In profiling mode, resetChildExpirationTime is also used to reset\r\n      // profiler durations.\r\n      var _treeBaseDuration = completedWork.selfBaseDuration;\r\n      var _child2 = completedWork.child;\r\n\r\n      while (_child2 !== null) {\r\n        newChildLanes = mergeLanes(\r\n          newChildLanes,\r\n          mergeLanes(_child2.lanes, _child2.childLanes)\r\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\r\n        // so we should bubble those up even during a bailout. All the other\r\n        // flags have a lifetime only of a single render + commit, so we should\r\n        // ignore them.\r\n\r\n        subtreeFlags |= _child2.subtreeFlags & StaticMask;\r\n        subtreeFlags |= _child2.flags & StaticMask;\r\n        _treeBaseDuration += _child2.treeBaseDuration;\r\n        _child2 = _child2.sibling;\r\n      }\r\n\r\n      completedWork.treeBaseDuration = _treeBaseDuration;\r\n    } else {\r\n      var _child3 = completedWork.child;\r\n\r\n      while (_child3 !== null) {\r\n        newChildLanes = mergeLanes(\r\n          newChildLanes,\r\n          mergeLanes(_child3.lanes, _child3.childLanes)\r\n        ); // \"Static\" flags share the lifetime of the fiber/hook they belong to,\r\n        // so we should bubble those up even during a bailout. All the other\r\n        // flags have a lifetime only of a single render + commit, so we should\r\n        // ignore them.\r\n\r\n        subtreeFlags |= _child3.subtreeFlags & StaticMask;\r\n        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code\r\n        // smell because it assumes the commit phase is never concurrent with\r\n        // the render phase. Will address during refactor to alternate model.\r\n\r\n        _child3.return = completedWork;\r\n        _child3 = _child3.sibling;\r\n      }\r\n    }\r\n\r\n    completedWork.subtreeFlags |= subtreeFlags;\r\n  }\r\n\r\n  completedWork.childLanes = newChildLanes;\r\n  return didBailout;\r\n}\r\n\r\nfunction completeDehydratedSuspenseBoundary(\r\n  current,\r\n  workInProgress,\r\n  nextState\r\n) {\r\n  var wasHydrated = popHydrationState();\r\n\r\n  if (nextState !== null && nextState.dehydrated !== null) {\r\n    // We might be inside a hydration state the first time we're picking up this\r\n    // Suspense boundary, and also after we've reentered it for further hydration.\r\n    if (current === null) {\r\n      if (!wasHydrated) {\r\n        throw new Error(\r\n          \"A dehydrated suspense component was completed without a hydrated node. \" +\r\n            \"This is probably a bug in React.\"\r\n        );\r\n      }\r\n\r\n      prepareToHydrateHostSuspenseInstance();\r\n      bubbleProperties(workInProgress);\r\n\r\n      {\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          var isTimedOutSuspense = nextState !== null;\r\n\r\n          if (isTimedOutSuspense) {\r\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\r\n            var primaryChildFragment = workInProgress.child;\r\n\r\n            if (primaryChildFragment !== null) {\r\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\r\n              workInProgress.treeBaseDuration -=\r\n                primaryChildFragment.treeBaseDuration;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    } else {\r\n      if ((workInProgress.flags & DidCapture) === NoFlags) {\r\n        // This boundary did not suspend so it's now hydrated and unsuspended.\r\n        workInProgress.memoizedState = null;\r\n      } // If nothing suspended, we need to schedule an effect to mark this boundary\r\n      // as having hydrated so events know that they're free to be invoked.\r\n      // It's also a signal to replay events and the suspense callback.\r\n      // If something suspended, schedule an effect to attach retry listeners.\r\n      // So we might as well always mark this.\r\n\r\n      workInProgress.flags |= Update;\r\n      bubbleProperties(workInProgress);\r\n\r\n      {\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          var _isTimedOutSuspense = nextState !== null;\r\n\r\n          if (_isTimedOutSuspense) {\r\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\r\n            var _primaryChildFragment = workInProgress.child;\r\n\r\n            if (_primaryChildFragment !== null) {\r\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\r\n              workInProgress.treeBaseDuration -=\r\n                _primaryChildFragment.treeBaseDuration;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    }\r\n  } else {\r\n    // Successfully completed this tree. If this was a forced client render,\r\n    // there may have been recoverable errors during first hydration\r\n    // attempt. If so, add them to a queue so we can log them in the\r\n    // commit phase.\r\n    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction completeWork(current, workInProgress, renderLanes) {\r\n  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing\r\n  // to the current tree provider fiber is just as fast and less error-prone.\r\n  // Ideally we would have a special version of the work loop only\r\n  // for hydration.\r\n\r\n  popTreeContext(workInProgress);\r\n\r\n  switch (workInProgress.tag) {\r\n    case IndeterminateComponent:\r\n    case LazyComponent:\r\n    case SimpleMemoComponent:\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case Fragment:\r\n    case Mode:\r\n    case Profiler:\r\n    case ContextConsumer:\r\n    case MemoComponent:\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n\r\n    case ClassComponent: {\r\n      var Component = workInProgress.type;\r\n\r\n      if (isContextProvider(Component)) {\r\n        popContext(workInProgress);\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n    }\r\n\r\n    case HostRoot: {\r\n      var fiberRoot = workInProgress.stateNode;\r\n      popHostContainer(workInProgress);\r\n      popTopLevelContextObject(workInProgress);\r\n      resetWorkInProgressVersions();\r\n\r\n      if (fiberRoot.pendingContext) {\r\n        fiberRoot.context = fiberRoot.pendingContext;\r\n        fiberRoot.pendingContext = null;\r\n      }\r\n\r\n      if (current === null || current.child === null) {\r\n        // If we hydrated, pop so that we can delete any remaining children\r\n        // that weren't hydrated.\r\n        var wasHydrated = popHydrationState();\r\n\r\n        if (wasHydrated) {\r\n          // If we hydrated, then we'll need to schedule an update for\r\n          // the commit side-effects on the root.\r\n          markUpdate(workInProgress);\r\n        } else {\r\n          if (current !== null) {\r\n            var prevState = current.memoizedState;\r\n\r\n            if (\r\n              // Check if this is a client root\r\n              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)\r\n              (workInProgress.flags & ForceClientRender) !== NoFlags\r\n            ) {\r\n              // Schedule an effect to clear this container at the start of the\r\n              // next commit. This handles the case of React rendering into a\r\n              // container with previous children. It's also safe to do for\r\n              // updates too, because current.child would only be null if the\r\n              // previous render was null (so the container would already\r\n              // be empty).\r\n              workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been\r\n              // recoverable errors during first hydration attempt. If so, add\r\n              // them to a queue so we can log them in the commit phase.\r\n\r\n              upgradeHydrationErrorsToRecoverable();\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      updateHostContainer(current, workInProgress);\r\n      bubbleProperties(workInProgress);\r\n\r\n      return null;\r\n    }\r\n\r\n    case HostComponent: {\r\n      popHostContext(workInProgress);\r\n      var rootContainerInstance = getRootHostContainer();\r\n      var type = workInProgress.type;\r\n\r\n      if (current !== null && workInProgress.stateNode != null) {\r\n        updateHostComponent$1(\r\n          current,\r\n          workInProgress,\r\n          type,\r\n          newProps,\r\n          rootContainerInstance\r\n        );\r\n\r\n        if (current.ref !== workInProgress.ref) {\r\n          markRef$1(workInProgress);\r\n        }\r\n      } else {\r\n        if (!newProps) {\r\n          if (workInProgress.stateNode === null) {\r\n            throw new Error(\r\n              \"We must have new props for new mounts. This error is likely \" +\r\n                \"caused by a bug in React. Please file an issue.\"\r\n            );\r\n          } // This can happen when we abort work.\r\n\r\n          bubbleProperties(workInProgress);\r\n          return null;\r\n        }\r\n\r\n        var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context\r\n        // \"stack\" as the parent. Then append children as we go in beginWork\r\n        // or completeWork depending on whether we want to add them top->down or\r\n        // bottom->up. Top->down is faster in IE11.\r\n\r\n        var _wasHydrated = popHydrationState();\r\n\r\n        if (_wasHydrated) {\r\n          // TODO: Move this and createInstance step into the beginPhase\r\n          // to consolidate.\r\n          if (prepareToHydrateHostInstance()) {\r\n            // If changes to the hydrated node need to be applied at the\r\n            // commit-phase we mark this as such.\r\n            markUpdate(workInProgress);\r\n          }\r\n        } else {\r\n          var instance = createInstance(\r\n            type,\r\n            newProps,\r\n            rootContainerInstance,\r\n            currentHostContext,\r\n            workInProgress\r\n          );\r\n          appendAllChildren(instance, workInProgress, false, false);\r\n          workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.\r\n          // (eg DOM renderer supports auto-focus for certain elements).\r\n          // Make sure such renderers get scheduled for later work.\r\n\r\n          if (finalizeInitialChildren(instance)) {\r\n            markUpdate(workInProgress);\r\n          }\r\n        }\r\n\r\n        if (workInProgress.ref !== null) {\r\n          // If there is a ref on a host node we need to schedule a callback\r\n          markRef$1(workInProgress);\r\n        }\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n    }\r\n\r\n    case HostText: {\r\n      var newText = newProps;\r\n\r\n      if (current && workInProgress.stateNode != null) {\r\n        var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need\r\n        // to schedule a side-effect to do the updates.\r\n\r\n        updateHostText$1(current, workInProgress, oldText, newText);\r\n      } else {\r\n        if (typeof newText !== \"string\") {\r\n          if (workInProgress.stateNode === null) {\r\n            throw new Error(\r\n              \"We must have new props for new mounts. This error is likely \" +\r\n                \"caused by a bug in React. Please file an issue.\"\r\n            );\r\n          } // This can happen when we abort work.\r\n        }\r\n\r\n        var _rootContainerInstance = getRootHostContainer();\r\n\r\n        var _currentHostContext = getHostContext();\r\n\r\n        var _wasHydrated2 = popHydrationState();\r\n\r\n        if (_wasHydrated2) {\r\n          if (prepareToHydrateHostTextInstance()) {\r\n            markUpdate(workInProgress);\r\n          }\r\n        } else {\r\n          workInProgress.stateNode = createTextInstance(\r\n            newText,\r\n            _rootContainerInstance,\r\n            _currentHostContext,\r\n            workInProgress\r\n          );\r\n        }\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n    }\r\n\r\n    case SuspenseComponent: {\r\n      popSuspenseContext(workInProgress);\r\n      var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this\r\n      // to its own fiber type so that we can add other kinds of hydration\r\n      // boundaries that aren't associated with a Suspense tree. In anticipation\r\n      // of such a refactor, all the hydration logic is contained in\r\n      // this branch.\r\n\r\n      if (\r\n        current === null ||\r\n        (current.memoizedState !== null &&\r\n          current.memoizedState.dehydrated !== null)\r\n      ) {\r\n        var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(\r\n          current,\r\n          workInProgress,\r\n          nextState\r\n        );\r\n\r\n        if (!fallthroughToNormalSuspensePath) {\r\n          if (workInProgress.flags & ShouldCapture) {\r\n            // Special case. There were remaining unhydrated nodes. We treat\r\n            // this as a mismatch. Revert to client rendering.\r\n            return workInProgress;\r\n          } else {\r\n            // Did not finish hydrating, either because this is the initial\r\n            // render or because something suspended.\r\n            return null;\r\n          }\r\n        } // Continue with the normal Suspense path.\r\n      }\r\n\r\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\r\n        // Something suspended. Re-render with the fallback children.\r\n        workInProgress.lanes = renderLanes; // Do not reset the effect list.\r\n\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          transferActualDuration(workInProgress);\r\n        } // Don't bubble properties in this case.\r\n\r\n        return workInProgress;\r\n      }\r\n\r\n      var nextDidTimeout = nextState !== null;\r\n      var prevDidTimeout = current !== null && current.memoizedState !== null;\r\n      // a passive effect, which is when we process the transitions\r\n\r\n      if (nextDidTimeout !== prevDidTimeout) {\r\n        // an effect to toggle the subtree's visibility. When we switch from\r\n        // fallback -> primary, the inner Offscreen fiber schedules this effect\r\n        // as part of its normal complete phase. But when we switch from\r\n        // primary -> fallback, the inner Offscreen fiber does not have a complete\r\n        // phase. So we need to schedule its effect here.\r\n        //\r\n        // We also use this flag to connect/disconnect the effects, but the same\r\n        // logic applies: when re-connecting, the Offscreen fiber's complete\r\n        // phase will handle scheduling the effect. It's only when the fallback\r\n        // is active that we have to do anything special.\r\n\r\n        if (nextDidTimeout) {\r\n          var _offscreenFiber2 = workInProgress.child;\r\n          _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything\r\n          // in the concurrent tree already suspended during this render.\r\n          // This is a known bug.\r\n\r\n          if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\r\n            // TODO: Move this back to throwException because this is too late\r\n            // if this is a large tree which is common for initial loads. We\r\n            // don't know if we should restart a render or not until we get\r\n            // this marker, and this is too late.\r\n            // If this render already had a ping or lower pri updates,\r\n            // and this is the first time we know we're going to suspend we\r\n            // should be able to immediately restart from within throwException.\r\n            var hasInvisibleChildContext =\r\n              current === null &&\r\n              (workInProgress.memoizedProps.unstable_avoidThisFallback !==\r\n                true ||\r\n                !enableSuspenseAvoidThisFallback);\r\n\r\n            if (\r\n              hasInvisibleChildContext ||\r\n              hasSuspenseContext(\r\n                suspenseStackCursor.current,\r\n                InvisibleParentSuspenseContext\r\n              )\r\n            ) {\r\n              // If this was in an invisible tree or a new render, then showing\r\n              // this boundary is ok.\r\n              renderDidSuspend();\r\n            } else {\r\n              // Otherwise, we're going to have to hide content so we should\r\n              // suspend for longer if possible.\r\n              renderDidSuspendDelayIfPossible();\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      var wakeables = workInProgress.updateQueue;\r\n\r\n      if (wakeables !== null) {\r\n        // Schedule an effect to attach a retry listener to the promise.\r\n        // TODO: Move to passive phase\r\n        workInProgress.flags |= Update;\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n\r\n      {\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          if (nextDidTimeout) {\r\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\r\n            var primaryChildFragment = workInProgress.child;\r\n\r\n            if (primaryChildFragment !== null) {\r\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\r\n              workInProgress.treeBaseDuration -=\r\n                primaryChildFragment.treeBaseDuration;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    case HostPortal:\r\n      popHostContainer(workInProgress);\r\n      updateHostContainer(current, workInProgress);\r\n\r\n      if (current === null) {\r\n        preparePortalMount(workInProgress.stateNode.containerInfo);\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n\r\n    case ContextProvider:\r\n      // Pop provider fiber\r\n      var context = workInProgress.type._context;\r\n      popProvider(context, workInProgress);\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n\r\n    case IncompleteClassComponent: {\r\n      // Same as class component case. I put it down here so that the tags are\r\n      // sequential to ensure this switch is compiled to a jump table.\r\n      var _Component = workInProgress.type;\r\n\r\n      if (isContextProvider(_Component)) {\r\n        popContext(workInProgress);\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n    }\r\n\r\n    case SuspenseListComponent: {\r\n      popSuspenseContext(workInProgress);\r\n      var renderState = workInProgress.memoizedState;\r\n\r\n      if (renderState === null) {\r\n        // We're running in the default, \"independent\" mode.\r\n        // We don't do anything in this mode.\r\n        bubbleProperties(workInProgress);\r\n        return null;\r\n      }\r\n\r\n      var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\r\n      var renderedTail = renderState.rendering;\r\n\r\n      if (renderedTail === null) {\r\n        // We just rendered the head.\r\n        if (!didSuspendAlready) {\r\n          // This is the first pass. We need to figure out if anything is still\r\n          // suspended in the rendered set.\r\n          // If new content unsuspended, but there's still some content that\r\n          // didn't. Then we need to do a second pass that forces everything\r\n          // to keep showing their fallbacks.\r\n          // We might be suspended if something in this render pass suspended, or\r\n          // something in the previous committed pass suspended. Otherwise,\r\n          // there's no chance so we can skip the expensive call to\r\n          // findFirstSuspended.\r\n          var cannotBeSuspended =\r\n            renderHasNotSuspendedYet() &&\r\n            (current === null || (current.flags & DidCapture) === NoFlags);\r\n\r\n          if (!cannotBeSuspended) {\r\n            var row = workInProgress.child;\r\n\r\n            while (row !== null) {\r\n              var suspended = findFirstSuspended(row);\r\n\r\n              if (suspended !== null) {\r\n                didSuspendAlready = true;\r\n                workInProgress.flags |= DidCapture;\r\n                cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as\r\n                // part of the second pass. In that case nothing will subscribe to\r\n                // its thenables. Instead, we'll transfer its thenables to the\r\n                // SuspenseList so that it can retry if they resolve.\r\n                // There might be multiple of these in the list but since we're\r\n                // going to wait for all of them anyway, it doesn't really matter\r\n                // which ones gets to ping. In theory we could get clever and keep\r\n                // track of how many dependencies remain but it gets tricky because\r\n                // in the meantime, we can add/remove/change items and dependencies.\r\n                // We might bail out of the loop before finding any but that\r\n                // doesn't matter since that means that the other boundaries that\r\n                // we did find already has their listeners attached.\r\n\r\n                var newThenables = suspended.updateQueue;\r\n\r\n                if (newThenables !== null) {\r\n                  workInProgress.updateQueue = newThenables;\r\n                  workInProgress.flags |= Update;\r\n                } // Rerender the whole list, but this time, we'll force fallbacks\r\n                // to stay in place.\r\n                // Reset the effect flags before doing the second pass since that's now invalid.\r\n                // Reset the child fibers to their original state.\r\n\r\n                workInProgress.subtreeFlags = NoFlags;\r\n                resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately\r\n                // rerender the children.\r\n\r\n                pushSuspenseContext(\r\n                  workInProgress,\r\n                  setShallowSuspenseContext(\r\n                    suspenseStackCursor.current,\r\n                    ForceSuspenseFallback\r\n                  )\r\n                ); // Don't bubble properties in this case.\r\n\r\n                return workInProgress.child;\r\n              }\r\n\r\n              row = row.sibling;\r\n            }\r\n          }\r\n\r\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\r\n            // We have already passed our CPU deadline but we still have rows\r\n            // left in the tail. We'll just give up further attempts to render\r\n            // the main content and only render fallbacks.\r\n            workInProgress.flags |= DidCapture;\r\n            didSuspendAlready = true;\r\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\r\n            // to get it started back up to attempt the next item. While in terms\r\n            // of priority this work has the same priority as this current render,\r\n            // it's not part of the same transition once the transition has\r\n            // committed. If it's sync, we still want to yield so that it can be\r\n            // painted. Conceptually, this is really the same as pinging.\r\n            // We can use any RetryLane even if it's the one currently rendering\r\n            // since we're leaving it behind on this node.\r\n\r\n            workInProgress.lanes = SomeRetryLane;\r\n          }\r\n        } else {\r\n          cutOffTailIfNeeded(renderState, false);\r\n        } // Next we're going to render the tail.\r\n      } else {\r\n        // Append the rendered row to the child list.\r\n        if (!didSuspendAlready) {\r\n          var _suspended = findFirstSuspended(renderedTail);\r\n\r\n          if (_suspended !== null) {\r\n            workInProgress.flags |= DidCapture;\r\n            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't\r\n            // get lost if this row ends up dropped during a second pass.\r\n\r\n            var _newThenables = _suspended.updateQueue;\r\n\r\n            if (_newThenables !== null) {\r\n              workInProgress.updateQueue = _newThenables;\r\n              workInProgress.flags |= Update;\r\n            }\r\n\r\n            cutOffTailIfNeeded(renderState, true); // This might have been modified.\r\n\r\n            if (\r\n              renderState.tail === null &&\r\n              renderState.tailMode === \"hidden\" &&\r\n              !renderedTail.alternate &&\r\n              !getIsHydrating() // We don't cut it if we're hydrating.\r\n            ) {\r\n              // We're done.\r\n              bubbleProperties(workInProgress);\r\n              return null;\r\n            }\r\n          } else if (\r\n            // The time it took to render last row is greater than the remaining\r\n            // time we have to render. So rendering one more row would likely\r\n            // exceed it.\r\n            now() * 2 - renderState.renderingStartTime >\r\n              getRenderTargetTime() &&\r\n            renderLanes !== OffscreenLane\r\n          ) {\r\n            // We have now passed our CPU deadline and we'll just give up further\r\n            // attempts to render the main content and only render fallbacks.\r\n            // The assumption is that this is usually faster.\r\n            workInProgress.flags |= DidCapture;\r\n            didSuspendAlready = true;\r\n            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this\r\n            // to get it started back up to attempt the next item. While in terms\r\n            // of priority this work has the same priority as this current render,\r\n            // it's not part of the same transition once the transition has\r\n            // committed. If it's sync, we still want to yield so that it can be\r\n            // painted. Conceptually, this is really the same as pinging.\r\n            // We can use any RetryLane even if it's the one currently rendering\r\n            // since we're leaving it behind on this node.\r\n\r\n            workInProgress.lanes = SomeRetryLane;\r\n          }\r\n        }\r\n\r\n        if (renderState.isBackwards) {\r\n          // The effect list of the backwards tail will have been added\r\n          // to the end. This breaks the guarantee that life-cycles fire in\r\n          // sibling order but that isn't a strong guarantee promised by React.\r\n          // Especially since these might also just pop in during future commits.\r\n          // Append to the beginning of the list.\r\n          renderedTail.sibling = workInProgress.child;\r\n          workInProgress.child = renderedTail;\r\n        } else {\r\n          var previousSibling = renderState.last;\r\n\r\n          if (previousSibling !== null) {\r\n            previousSibling.sibling = renderedTail;\r\n          } else {\r\n            workInProgress.child = renderedTail;\r\n          }\r\n\r\n          renderState.last = renderedTail;\r\n        }\r\n      }\r\n\r\n      if (renderState.tail !== null) {\r\n        // We still have tail rows to render.\r\n        // Pop a row.\r\n        var next = renderState.tail;\r\n        renderState.rendering = next;\r\n        renderState.tail = next.sibling;\r\n        renderState.renderingStartTime = now();\r\n        next.sibling = null; // Restore the context.\r\n        // TODO: We can probably just avoid popping it instead and only\r\n        // setting it the first time we go from not suspended to suspended.\r\n\r\n        var suspenseContext = suspenseStackCursor.current;\r\n\r\n        if (didSuspendAlready) {\r\n          suspenseContext = setShallowSuspenseContext(\r\n            suspenseContext,\r\n            ForceSuspenseFallback\r\n          );\r\n        } else {\r\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\r\n        }\r\n\r\n        pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.\r\n        // Don't bubble properties in this case.\r\n\r\n        return next;\r\n      }\r\n\r\n      bubbleProperties(workInProgress);\r\n      return null;\r\n    }\r\n\r\n    case ScopeComponent: {\r\n      break;\r\n    }\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent: {\r\n      popRenderLanes(workInProgress);\r\n      var _nextState = workInProgress.memoizedState;\r\n      var nextIsHidden = _nextState !== null;\r\n\r\n      if (current !== null) {\r\n        var _prevState = current.memoizedState;\r\n        var prevIsHidden = _prevState !== null;\r\n\r\n        if (\r\n          prevIsHidden !== nextIsHidden && // LegacyHidden doesn't do any hiding — it only pre-renders.\r\n          !enableLegacyHidden\r\n        ) {\r\n          workInProgress.flags |= Visibility;\r\n        }\r\n      }\r\n\r\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\r\n        bubbleProperties(workInProgress);\r\n      } else {\r\n        // Don't bubble properties for hidden children unless we're rendering\r\n        // at offscreen priority.\r\n        if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {\r\n          bubbleProperties(workInProgress);\r\n\r\n          {\r\n            // Check if there was an insertion or update in the hidden subtree.\r\n            // If so, we need to hide those nodes in the commit phase, so\r\n            // schedule a visibility effect.\r\n            if (workInProgress.subtreeFlags & (Placement | Update)) {\r\n              workInProgress.flags |= Visibility;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    case CacheComponent: {\r\n      return null;\r\n    }\r\n\r\n    case TracingMarkerComponent: {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  throw new Error(\r\n    \"Unknown unit of work tag (\" +\r\n      workInProgress.tag +\r\n      \"). This error is likely caused by a bug in \" +\r\n      \"React. Please file an issue.\"\r\n  );\r\n}\r\n\r\nfunction unwindWork(current, workInProgress, renderLanes) {\r\n  // Note: This intentionally doesn't check if we're hydrating because comparing\r\n  // to the current tree provider fiber is just as fast and less error-prone.\r\n  // Ideally we would have a special version of the work loop only\r\n  // for hydration.\r\n  popTreeContext(workInProgress);\r\n\r\n  switch (workInProgress.tag) {\r\n    case ClassComponent: {\r\n      var Component = workInProgress.type;\r\n\r\n      if (isContextProvider(Component)) {\r\n        popContext(workInProgress);\r\n      }\r\n\r\n      var flags = workInProgress.flags;\r\n\r\n      if (flags & ShouldCapture) {\r\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\r\n\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          transferActualDuration(workInProgress);\r\n        }\r\n\r\n        return workInProgress;\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    case HostRoot: {\r\n      var root = workInProgress.stateNode;\r\n      popHostContainer(workInProgress);\r\n      popTopLevelContextObject(workInProgress);\r\n      resetWorkInProgressVersions();\r\n      var _flags = workInProgress.flags;\r\n\r\n      if (\r\n        (_flags & ShouldCapture) !== NoFlags &&\r\n        (_flags & DidCapture) === NoFlags\r\n      ) {\r\n        // There was an error during render that wasn't captured by a suspense\r\n        // boundary. Do a second pass on the root to unmount the children.\r\n        workInProgress.flags = (_flags & ~ShouldCapture) | DidCapture;\r\n        return workInProgress;\r\n      } // We unwound to the root without completing it. Exit.\r\n\r\n      return null;\r\n    }\r\n\r\n    case HostComponent: {\r\n      // TODO: popHydrationState\r\n      popHostContext(workInProgress);\r\n      return null;\r\n    }\r\n\r\n    case SuspenseComponent: {\r\n      popSuspenseContext(workInProgress);\r\n      var suspenseState = workInProgress.memoizedState;\r\n\r\n      if (suspenseState !== null && suspenseState.dehydrated !== null) {\r\n        if (workInProgress.alternate === null) {\r\n          throw new Error(\r\n            \"Threw in newly mounted dehydrated component. This is likely a bug in \" +\r\n              \"React. Please file an issue.\"\r\n          );\r\n        }\r\n      }\r\n\r\n      var _flags2 = workInProgress.flags;\r\n\r\n      if (_flags2 & ShouldCapture) {\r\n        workInProgress.flags = (_flags2 & ~ShouldCapture) | DidCapture; // Captured a suspense effect. Re-render the boundary.\r\n\r\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\r\n          transferActualDuration(workInProgress);\r\n        }\r\n\r\n        return workInProgress;\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    case SuspenseListComponent: {\r\n      popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been\r\n      // caught by a nested boundary. If not, it should bubble through.\r\n\r\n      return null;\r\n    }\r\n\r\n    case HostPortal:\r\n      popHostContainer(workInProgress);\r\n      return null;\r\n\r\n    case ContextProvider:\r\n      var context = workInProgress.type._context;\r\n      popProvider(context, workInProgress);\r\n      return null;\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent:\r\n      popRenderLanes(workInProgress);\r\n      return null;\r\n\r\n    case CacheComponent:\r\n      return null;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction unwindInterruptedWork(current, interruptedWork, renderLanes) {\r\n  // Note: This intentionally doesn't check if we're hydrating because comparing\r\n  // to the current tree provider fiber is just as fast and less error-prone.\r\n  // Ideally we would have a special version of the work loop only\r\n  // for hydration.\r\n  popTreeContext(interruptedWork);\r\n\r\n  switch (interruptedWork.tag) {\r\n    case ClassComponent: {\r\n      var childContextTypes = interruptedWork.type.childContextTypes;\r\n\r\n      if (childContextTypes !== null && childContextTypes !== undefined) {\r\n        popContext(interruptedWork);\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    case HostRoot: {\r\n      var root = interruptedWork.stateNode;\r\n      popHostContainer(interruptedWork);\r\n      popTopLevelContextObject(interruptedWork);\r\n      resetWorkInProgressVersions();\r\n      break;\r\n    }\r\n\r\n    case HostComponent: {\r\n      popHostContext(interruptedWork);\r\n      break;\r\n    }\r\n\r\n    case HostPortal:\r\n      popHostContainer(interruptedWork);\r\n      break;\r\n\r\n    case SuspenseComponent:\r\n      popSuspenseContext(interruptedWork);\r\n      break;\r\n\r\n    case SuspenseListComponent:\r\n      popSuspenseContext(interruptedWork);\r\n      break;\r\n\r\n    case ContextProvider:\r\n      var context = interruptedWork.type._context;\r\n      popProvider(context, interruptedWork);\r\n      break;\r\n\r\n    case OffscreenComponent:\r\n    case LegacyHiddenComponent:\r\n      popRenderLanes(interruptedWork);\r\n      break;\r\n  }\r\n}\r\n\r\nvar didWarnAboutUndefinedSnapshotBeforeUpdate = null;\r\n\r\n{\r\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\r\n} // Used during the commit phase to track the state of the Offscreen component stack.\r\nvar PossiblyWeakSet = typeof WeakSet === \"function\" ? WeakSet : Set;\r\nvar nextEffect = null; // Used for Profiling builds to track updaters.\r\n\r\nvar inProgressLanes = null;\r\nvar inProgressRoot = null;\r\nfunction reportUncaughtErrorInDEV(error) {\r\n  // Wrapping each small part of the commit phase into a guarded\r\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\r\n  // But we rely on it to surface errors to DEV tools like overlays\r\n  // (https://github.com/facebook/react/issues/21712).\r\n  // As a compromise, rethrow only caught errors in a guard.\r\n  {\r\n    invokeGuardedCallback(null, function() {\r\n      throw error;\r\n    });\r\n    clearCaughtError();\r\n  }\r\n}\r\n\r\nvar callComponentWillUnmountWithTimer = function(current, instance) {\r\n  instance.props = current.memoizedProps;\r\n  instance.state = current.memoizedState;\r\n\r\n  if (current.mode & ProfileMode) {\r\n    try {\r\n      startLayoutEffectTimer();\r\n      instance.componentWillUnmount();\r\n    } finally {\r\n      recordLayoutEffectDuration(current);\r\n    }\r\n  } else {\r\n    instance.componentWillUnmount();\r\n  }\r\n}; // Capture errors so they don't interrupt mounting.\r\n\r\nfunction safelyCallComponentWillUnmount(\r\n  current,\r\n  nearestMountedAncestor,\r\n  instance\r\n) {\r\n  try {\r\n    callComponentWillUnmountWithTimer(current, instance);\r\n  } catch (error) {\r\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n  }\r\n} // Capture errors so they don't interrupt mounting.\r\n\r\nfunction safelyDetachRef(current, nearestMountedAncestor) {\r\n  var ref = current.ref;\r\n\r\n  if (ref !== null) {\r\n    if (typeof ref === \"function\") {\r\n      var retVal;\r\n\r\n      try {\r\n        if (\r\n          enableProfilerTimer &&\r\n          enableProfilerCommitHooks &&\r\n          current.mode & ProfileMode\r\n        ) {\r\n          try {\r\n            startLayoutEffectTimer();\r\n            retVal = ref(null);\r\n          } finally {\r\n            recordLayoutEffectDuration(current);\r\n          }\r\n        } else {\r\n          retVal = ref(null);\r\n        }\r\n      } catch (error) {\r\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n      }\r\n\r\n      {\r\n        if (typeof retVal === \"function\") {\r\n          error(\r\n            \"Unexpected return value from a callback ref in %s. \" +\r\n              \"A callback ref should not return a function.\",\r\n            getComponentNameFromFiber(current)\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      ref.current = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction safelyCallDestroy(current, nearestMountedAncestor, destroy) {\r\n  try {\r\n    destroy();\r\n  } catch (error) {\r\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\r\n  }\r\n}\r\n\r\nvar focusedInstanceHandle = null;\r\nvar shouldFireAfterActiveInstanceBlur = false;\r\nfunction commitBeforeMutationEffects(root, firstChild) {\r\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\r\n  nextEffect = firstChild;\r\n  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber\r\n\r\n  var shouldFire = shouldFireAfterActiveInstanceBlur;\r\n  shouldFireAfterActiveInstanceBlur = false;\r\n  focusedInstanceHandle = null;\r\n  return shouldFire;\r\n}\r\n\r\nfunction commitBeforeMutationEffects_begin() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.\r\n\r\n    var child = fiber.child;\r\n\r\n    if (\r\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\r\n      child !== null\r\n    ) {\r\n      child.return = fiber;\r\n      nextEffect = child;\r\n    } else {\r\n      commitBeforeMutationEffects_complete();\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitBeforeMutationEffects_complete() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    setCurrentFiber(fiber);\r\n\r\n    try {\r\n      commitBeforeMutationEffectsOnFiber(fiber);\r\n    } catch (error) {\r\n      captureCommitPhaseError(fiber, fiber.return, error);\r\n    }\r\n\r\n    resetCurrentFiber();\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitBeforeMutationEffectsOnFiber(finishedWork) {\r\n  var current = finishedWork.alternate;\r\n  var flags = finishedWork.flags;\r\n\r\n  if ((flags & Snapshot) !== NoFlags) {\r\n    setCurrentFiber(finishedWork);\r\n\r\n    switch (finishedWork.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent: {\r\n        break;\r\n      }\r\n\r\n      case ClassComponent: {\r\n        if (current !== null) {\r\n          var prevProps = current.memoizedProps;\r\n          var prevState = current.memoizedState;\r\n          var instance = finishedWork.stateNode; // We could update instance props and state here,\r\n          // but instead we rely on them being set during last render.\r\n          // TODO: revisit this when we implement resuming.\r\n\r\n          {\r\n            if (\r\n              finishedWork.type === finishedWork.elementType &&\r\n              !didWarnAboutReassigningProps\r\n            ) {\r\n              if (instance.props !== finishedWork.memoizedProps) {\r\n                error(\r\n                  \"Expected %s props to match memoized props before \" +\r\n                    \"getSnapshotBeforeUpdate. \" +\r\n                    \"This might either be because of a bug in React, or because \" +\r\n                    \"a component reassigns its own `this.props`. \" +\r\n                    \"Please file an issue.\",\r\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                );\r\n              }\r\n\r\n              if (instance.state !== finishedWork.memoizedState) {\r\n                error(\r\n                  \"Expected %s state to match memoized state before \" +\r\n                    \"getSnapshotBeforeUpdate. \" +\r\n                    \"This might either be because of a bug in React, or because \" +\r\n                    \"a component reassigns its own `this.state`. \" +\r\n                    \"Please file an issue.\",\r\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                );\r\n              }\r\n            }\r\n          }\r\n\r\n          var snapshot = instance.getSnapshotBeforeUpdate(\r\n            finishedWork.elementType === finishedWork.type\r\n              ? prevProps\r\n              : resolveDefaultProps(finishedWork.type, prevProps),\r\n            prevState\r\n          );\r\n\r\n          {\r\n            var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;\r\n\r\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\r\n              didWarnSet.add(finishedWork.type);\r\n\r\n              error(\r\n                \"%s.getSnapshotBeforeUpdate(): A snapshot value (or null) \" +\r\n                  \"must be returned. You have returned undefined.\",\r\n                getComponentNameFromFiber(finishedWork)\r\n              );\r\n            }\r\n          }\r\n\r\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case HostRoot: {\r\n        {\r\n          var root = finishedWork.stateNode;\r\n          clearContainer(root.containerInfo);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case HostComponent:\r\n      case HostText:\r\n      case HostPortal:\r\n      case IncompleteClassComponent:\r\n        // Nothing to do for these component types\r\n        break;\r\n\r\n      default: {\r\n        throw new Error(\r\n          \"This unit of work tag should not have side-effects. This error is \" +\r\n            \"likely caused by a bug in React. Please file an issue.\"\r\n        );\r\n      }\r\n    }\r\n\r\n    resetCurrentFiber();\r\n  }\r\n}\r\n\r\nfunction commitHookEffectListUnmount(\r\n  flags,\r\n  finishedWork,\r\n  nearestMountedAncestor\r\n) {\r\n  var updateQueue = finishedWork.updateQueue;\r\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\r\n\r\n  if (lastEffect !== null) {\r\n    var firstEffect = lastEffect.next;\r\n    var effect = firstEffect;\r\n\r\n    do {\r\n      if ((effect.tag & flags) === flags) {\r\n        // Unmount\r\n        var destroy = effect.destroy;\r\n        effect.destroy = undefined;\r\n\r\n        if (destroy !== undefined) {\r\n          {\r\n            if ((flags & Insertion) !== NoFlags$1) {\r\n              setIsRunningInsertionEffect(true);\r\n            }\r\n          }\r\n\r\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\r\n\r\n          {\r\n            if ((flags & Insertion) !== NoFlags$1) {\r\n              setIsRunningInsertionEffect(false);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      effect = effect.next;\r\n    } while (effect !== firstEffect);\r\n  }\r\n}\r\n\r\nfunction commitHookEffectListMount(flags, finishedWork) {\r\n  var updateQueue = finishedWork.updateQueue;\r\n  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\r\n\r\n  if (lastEffect !== null) {\r\n    var firstEffect = lastEffect.next;\r\n    var effect = firstEffect;\r\n\r\n    do {\r\n      if ((effect.tag & flags) === flags) {\r\n        var create = effect.create;\r\n\r\n        {\r\n          if ((flags & Insertion) !== NoFlags$1) {\r\n            setIsRunningInsertionEffect(true);\r\n          }\r\n        }\r\n\r\n        effect.destroy = create();\r\n\r\n        {\r\n          if ((flags & Insertion) !== NoFlags$1) {\r\n            setIsRunningInsertionEffect(false);\r\n          }\r\n        }\r\n\r\n        {\r\n          var destroy = effect.destroy;\r\n\r\n          if (destroy !== undefined && typeof destroy !== \"function\") {\r\n            var hookName = void 0;\r\n\r\n            if ((effect.tag & Layout) !== NoFlags) {\r\n              hookName = \"useLayoutEffect\";\r\n            } else if ((effect.tag & Insertion) !== NoFlags) {\r\n              hookName = \"useInsertionEffect\";\r\n            } else {\r\n              hookName = \"useEffect\";\r\n            }\r\n\r\n            var addendum = void 0;\r\n\r\n            if (destroy === null) {\r\n              addendum =\r\n                \" You returned null. If your effect does not require clean \" +\r\n                \"up, return undefined (or nothing).\";\r\n            } else if (typeof destroy.then === \"function\") {\r\n              addendum =\r\n                \"\\n\\nIt looks like you wrote \" +\r\n                hookName +\r\n                \"(async () => ...) or returned a Promise. \" +\r\n                \"Instead, write the async function inside your effect \" +\r\n                \"and call it immediately:\\n\\n\" +\r\n                hookName +\r\n                \"(() => {\\n\" +\r\n                \"  async function fetchData() {\\n\" +\r\n                \"    // You can await here\\n\" +\r\n                \"    const response = await MyAPI.getData(someId);\\n\" +\r\n                \"    // ...\\n\" +\r\n                \"  }\\n\" +\r\n                \"  fetchData();\\n\" +\r\n                \"}, [someId]); // Or [] if effect doesn't need props or state\\n\\n\" +\r\n                \"Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching\";\r\n            } else {\r\n              addendum = \" You returned: \" + destroy;\r\n            }\r\n\r\n            error(\r\n              \"%s must not return anything besides a function, \" +\r\n                \"which is used for clean-up.%s\",\r\n              hookName,\r\n              addendum\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      effect = effect.next;\r\n    } while (effect !== firstEffect);\r\n  }\r\n}\r\n\r\nfunction commitPassiveEffectDurations(finishedRoot, finishedWork) {\r\n  {\r\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\r\n    if ((finishedWork.flags & Update) !== NoFlags) {\r\n      switch (finishedWork.tag) {\r\n        case Profiler: {\r\n          var passiveEffectDuration =\r\n            finishedWork.stateNode.passiveEffectDuration;\r\n          var _finishedWork$memoize = finishedWork.memoizedProps,\r\n            id = _finishedWork$memoize.id,\r\n            onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.\r\n          // It does not get reset until the start of the next commit phase.\r\n\r\n          var commitTime = getCommitTime();\r\n          var phase = finishedWork.alternate === null ? \"mount\" : \"update\";\r\n\r\n          {\r\n            if (isCurrentUpdateNested()) {\r\n              phase = \"nested-update\";\r\n            }\r\n          }\r\n\r\n          if (typeof onPostCommit === \"function\") {\r\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\r\n          } // Bubble times to the next nearest ancestor Profiler.\r\n          // After we process that Profiler, we'll bubble further up.\r\n\r\n          var parentFiber = finishedWork.return;\r\n\r\n          outer: while (parentFiber !== null) {\r\n            switch (parentFiber.tag) {\r\n              case HostRoot:\r\n                var root = parentFiber.stateNode;\r\n                root.passiveEffectDuration += passiveEffectDuration;\r\n                break outer;\r\n\r\n              case Profiler:\r\n                var parentStateNode = parentFiber.stateNode;\r\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\r\n                break outer;\r\n            }\r\n\r\n            parentFiber = parentFiber.return;\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitLayoutEffectOnFiber(\r\n  finishedRoot,\r\n  current,\r\n  finishedWork,\r\n  committedLanes\r\n) {\r\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\r\n    switch (finishedWork.tag) {\r\n      case FunctionComponent:\r\n      case ForwardRef:\r\n      case SimpleMemoComponent: {\r\n        {\r\n          // At this point layout effects have already been destroyed (during mutation phase).\r\n          // This is done to prevent sibling component effects from interfering with each other,\r\n          // e.g. a destroy function in one component should never override a ref set\r\n          // by a create function in another component during the same commit.\r\n          if (finishedWork.mode & ProfileMode) {\r\n            try {\r\n              startLayoutEffectTimer();\r\n              commitHookEffectListMount(Layout | HasEffect, finishedWork);\r\n            } finally {\r\n              recordLayoutEffectDuration(finishedWork);\r\n            }\r\n          } else {\r\n            commitHookEffectListMount(Layout | HasEffect, finishedWork);\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case ClassComponent: {\r\n        var instance = finishedWork.stateNode;\r\n\r\n        if (finishedWork.flags & Update) {\r\n          {\r\n            if (current === null) {\r\n              // We could update instance props and state here,\r\n              // but instead we rely on them being set during last render.\r\n              // TODO: revisit this when we implement resuming.\r\n              {\r\n                if (\r\n                  finishedWork.type === finishedWork.elementType &&\r\n                  !didWarnAboutReassigningProps\r\n                ) {\r\n                  if (instance.props !== finishedWork.memoizedProps) {\r\n                    error(\r\n                      \"Expected %s props to match memoized props before \" +\r\n                        \"componentDidMount. \" +\r\n                        \"This might either be because of a bug in React, or because \" +\r\n                        \"a component reassigns its own `this.props`. \" +\r\n                        \"Please file an issue.\",\r\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                    );\r\n                  }\r\n\r\n                  if (instance.state !== finishedWork.memoizedState) {\r\n                    error(\r\n                      \"Expected %s state to match memoized state before \" +\r\n                        \"componentDidMount. \" +\r\n                        \"This might either be because of a bug in React, or because \" +\r\n                        \"a component reassigns its own `this.state`. \" +\r\n                        \"Please file an issue.\",\r\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (finishedWork.mode & ProfileMode) {\r\n                try {\r\n                  startLayoutEffectTimer();\r\n                  instance.componentDidMount();\r\n                } finally {\r\n                  recordLayoutEffectDuration(finishedWork);\r\n                }\r\n              } else {\r\n                instance.componentDidMount();\r\n              }\r\n            } else {\r\n              var prevProps =\r\n                finishedWork.elementType === finishedWork.type\r\n                  ? current.memoizedProps\r\n                  : resolveDefaultProps(\r\n                      finishedWork.type,\r\n                      current.memoizedProps\r\n                    );\r\n              var prevState = current.memoizedState; // We could update instance props and state here,\r\n              // but instead we rely on them being set during last render.\r\n              // TODO: revisit this when we implement resuming.\r\n\r\n              {\r\n                if (\r\n                  finishedWork.type === finishedWork.elementType &&\r\n                  !didWarnAboutReassigningProps\r\n                ) {\r\n                  if (instance.props !== finishedWork.memoizedProps) {\r\n                    error(\r\n                      \"Expected %s props to match memoized props before \" +\r\n                        \"componentDidUpdate. \" +\r\n                        \"This might either be because of a bug in React, or because \" +\r\n                        \"a component reassigns its own `this.props`. \" +\r\n                        \"Please file an issue.\",\r\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                    );\r\n                  }\r\n\r\n                  if (instance.state !== finishedWork.memoizedState) {\r\n                    error(\r\n                      \"Expected %s state to match memoized state before \" +\r\n                        \"componentDidUpdate. \" +\r\n                        \"This might either be because of a bug in React, or because \" +\r\n                        \"a component reassigns its own `this.state`. \" +\r\n                        \"Please file an issue.\",\r\n                      getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (finishedWork.mode & ProfileMode) {\r\n                try {\r\n                  startLayoutEffectTimer();\r\n                  instance.componentDidUpdate(\r\n                    prevProps,\r\n                    prevState,\r\n                    instance.__reactInternalSnapshotBeforeUpdate\r\n                  );\r\n                } finally {\r\n                  recordLayoutEffectDuration(finishedWork);\r\n                }\r\n              } else {\r\n                instance.componentDidUpdate(\r\n                  prevProps,\r\n                  prevState,\r\n                  instance.__reactInternalSnapshotBeforeUpdate\r\n                );\r\n              }\r\n            }\r\n          }\r\n        } // TODO: I think this is now always non-null by the time it reaches the\r\n        // commit phase. Consider removing the type check.\r\n\r\n        var updateQueue = finishedWork.updateQueue;\r\n\r\n        if (updateQueue !== null) {\r\n          {\r\n            if (\r\n              finishedWork.type === finishedWork.elementType &&\r\n              !didWarnAboutReassigningProps\r\n            ) {\r\n              if (instance.props !== finishedWork.memoizedProps) {\r\n                error(\r\n                  \"Expected %s props to match memoized props before \" +\r\n                    \"processing the update queue. \" +\r\n                    \"This might either be because of a bug in React, or because \" +\r\n                    \"a component reassigns its own `this.props`. \" +\r\n                    \"Please file an issue.\",\r\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                );\r\n              }\r\n\r\n              if (instance.state !== finishedWork.memoizedState) {\r\n                error(\r\n                  \"Expected %s state to match memoized state before \" +\r\n                    \"processing the update queue. \" +\r\n                    \"This might either be because of a bug in React, or because \" +\r\n                    \"a component reassigns its own `this.state`. \" +\r\n                    \"Please file an issue.\",\r\n                  getComponentNameFromFiber(finishedWork) || \"instance\"\r\n                );\r\n              }\r\n            }\r\n          } // We could update instance props and state here,\r\n          // but instead we rely on them being set during last render.\r\n          // TODO: revisit this when we implement resuming.\r\n\r\n          commitUpdateQueue(finishedWork, updateQueue, instance);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case HostRoot: {\r\n        // TODO: I think this is now always non-null by the time it reaches the\r\n        // commit phase. Consider removing the type check.\r\n        var _updateQueue = finishedWork.updateQueue;\r\n\r\n        if (_updateQueue !== null) {\r\n          var _instance = null;\r\n\r\n          if (finishedWork.child !== null) {\r\n            switch (finishedWork.child.tag) {\r\n              case HostComponent:\r\n                _instance = getPublicInstance(finishedWork.child.stateNode);\r\n                break;\r\n\r\n              case ClassComponent:\r\n                _instance = finishedWork.child.stateNode;\r\n                break;\r\n            }\r\n          }\r\n\r\n          commitUpdateQueue(finishedWork, _updateQueue, _instance);\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case HostComponent: {\r\n        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted\r\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\r\n        // These effects should only be committed when components are first mounted,\r\n        // aka when there is no current/alternate.\r\n\r\n        if (current === null && finishedWork.flags & Update) {\r\n          var type = finishedWork.type;\r\n          var props = finishedWork.memoizedProps;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case HostText: {\r\n        // We have no life-cycles associated with text.\r\n        break;\r\n      }\r\n\r\n      case HostPortal: {\r\n        // We have no life-cycles associated with portals.\r\n        break;\r\n      }\r\n\r\n      case Profiler: {\r\n        {\r\n          var _finishedWork$memoize2 = finishedWork.memoizedProps,\r\n            onCommit = _finishedWork$memoize2.onCommit,\r\n            onRender = _finishedWork$memoize2.onRender;\r\n          var effectDuration = finishedWork.stateNode.effectDuration;\r\n          var commitTime = getCommitTime();\r\n          var phase = current === null ? \"mount\" : \"update\";\r\n\r\n          {\r\n            if (isCurrentUpdateNested()) {\r\n              phase = \"nested-update\";\r\n            }\r\n          }\r\n\r\n          if (typeof onRender === \"function\") {\r\n            onRender(\r\n              finishedWork.memoizedProps.id,\r\n              phase,\r\n              finishedWork.actualDuration,\r\n              finishedWork.treeBaseDuration,\r\n              finishedWork.actualStartTime,\r\n              commitTime\r\n            );\r\n          }\r\n\r\n          {\r\n            if (typeof onCommit === \"function\") {\r\n              onCommit(\r\n                finishedWork.memoizedProps.id,\r\n                phase,\r\n                effectDuration,\r\n                commitTime\r\n              );\r\n            } // Schedule a passive effect for this Profiler to call onPostCommit hooks.\r\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\r\n            // because the effect is also where times bubble to parent Profilers.\r\n\r\n            enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.\r\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\r\n\r\n            var parentFiber = finishedWork.return;\r\n\r\n            outer: while (parentFiber !== null) {\r\n              switch (parentFiber.tag) {\r\n                case HostRoot:\r\n                  var root = parentFiber.stateNode;\r\n                  root.effectDuration += effectDuration;\r\n                  break outer;\r\n\r\n                case Profiler:\r\n                  var parentStateNode = parentFiber.stateNode;\r\n                  parentStateNode.effectDuration += effectDuration;\r\n                  break outer;\r\n              }\r\n\r\n              parentFiber = parentFiber.return;\r\n            }\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case SuspenseComponent: {\r\n        break;\r\n      }\r\n\r\n      case SuspenseListComponent:\r\n      case IncompleteClassComponent:\r\n      case ScopeComponent:\r\n      case OffscreenComponent:\r\n      case LegacyHiddenComponent:\r\n      case TracingMarkerComponent: {\r\n        break;\r\n      }\r\n\r\n      default:\r\n        throw new Error(\r\n          \"This unit of work tag should not have side-effects. This error is \" +\r\n            \"likely caused by a bug in React. Please file an issue.\"\r\n        );\r\n    }\r\n  }\r\n\r\n  {\r\n    {\r\n      if (finishedWork.flags & Ref) {\r\n        commitAttachRef(finishedWork);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\r\n  // Only hide or unhide the top-most host nodes.\r\n  var hostSubtreeRoot = null;\r\n\r\n  {\r\n    // We only have the top Fiber that was inserted but we need to recurse down its\r\n    // children to find all the terminal nodes.\r\n    var node = finishedWork;\r\n\r\n    while (true) {\r\n      if (node.tag === HostComponent) {\r\n        if (hostSubtreeRoot === null) {\r\n          hostSubtreeRoot = node;\r\n\r\n          try {\r\n            var instance = node.stateNode;\r\n\r\n            if (isHidden) {\r\n              hideInstance(instance);\r\n            } else {\r\n              unhideInstance(node.stateNode, node.memoizedProps);\r\n            }\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      } else if (node.tag === HostText) {\r\n        if (hostSubtreeRoot === null) {\r\n          try {\r\n            var _instance3 = node.stateNode;\r\n\r\n            if (isHidden) {\r\n              hideTextInstance(_instance3);\r\n            } else {\r\n              unhideTextInstance(_instance3, node.memoizedProps);\r\n            }\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      } else if (\r\n        (node.tag === OffscreenComponent ||\r\n          node.tag === LegacyHiddenComponent) &&\r\n        node.memoizedState !== null &&\r\n        node !== finishedWork\r\n      );\r\n      else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n\r\n      if (node === finishedWork) {\r\n        return;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === finishedWork) {\r\n          return;\r\n        }\r\n\r\n        if (hostSubtreeRoot === node) {\r\n          hostSubtreeRoot = null;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      if (hostSubtreeRoot === node) {\r\n        hostSubtreeRoot = null;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitAttachRef(finishedWork) {\r\n  var ref = finishedWork.ref;\r\n\r\n  if (ref !== null) {\r\n    var instance = finishedWork.stateNode;\r\n    var instanceToUse;\r\n\r\n    switch (finishedWork.tag) {\r\n      case HostComponent:\r\n        instanceToUse = getPublicInstance(instance);\r\n        break;\r\n\r\n      default:\r\n        instanceToUse = instance;\r\n    } // Moved outside to ensure DCE works with this flag\r\n\r\n    if (typeof ref === \"function\") {\r\n      var retVal;\r\n\r\n      if (finishedWork.mode & ProfileMode) {\r\n        try {\r\n          startLayoutEffectTimer();\r\n          retVal = ref(instanceToUse);\r\n        } finally {\r\n          recordLayoutEffectDuration(finishedWork);\r\n        }\r\n      } else {\r\n        retVal = ref(instanceToUse);\r\n      }\r\n\r\n      {\r\n        if (typeof retVal === \"function\") {\r\n          error(\r\n            \"Unexpected return value from a callback ref in %s. \" +\r\n              \"A callback ref should not return a function.\",\r\n            getComponentNameFromFiber(finishedWork)\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      {\r\n        if (!ref.hasOwnProperty(\"current\")) {\r\n          error(\r\n            \"Unexpected ref object provided for %s. \" +\r\n              \"Use either a ref-setter function or React.createRef().\",\r\n            getComponentNameFromFiber(finishedWork)\r\n          );\r\n        }\r\n      }\r\n\r\n      ref.current = instanceToUse;\r\n    }\r\n  }\r\n}\r\n\r\nfunction detachFiberMutation(fiber) {\r\n  // Cut off the return pointer to disconnect it from the tree.\r\n  // This enables us to detect and warn against state updates on an unmounted component.\r\n  // It also prevents events from bubbling from within disconnected components.\r\n  //\r\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\r\n  // get GC:ed but we don't know which for sure which parent is the current\r\n  // one so we'll settle for GC:ing the subtree of this child.\r\n  // This child itself will be GC:ed when the parent updates the next time.\r\n  //\r\n  // Note that we can't clear child or sibling pointers yet.\r\n  // They're needed for passive effects and for findDOMNode.\r\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\r\n  //\r\n  // Don't reset the alternate yet, either. We need that so we can detach the\r\n  // alternate's fields in the passive phase. Clearing the return pointer is\r\n  // sufficient for findDOMNode semantics.\r\n  var alternate = fiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    alternate.return = null;\r\n  }\r\n\r\n  fiber.return = null;\r\n}\r\n\r\nfunction detachFiberAfterEffects(fiber) {\r\n  var alternate = fiber.alternate;\r\n\r\n  if (alternate !== null) {\r\n    fiber.alternate = null;\r\n    detachFiberAfterEffects(alternate);\r\n  } // Note: Defensively using negation instead of < in case\r\n  // `deletedTreeCleanUpLevel` is undefined.\r\n\r\n  {\r\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\r\n    // approximate the planned Fiber refactor. In that world, `setState` will be\r\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\r\n    // object will not have any of these fields. It will only be connected to\r\n    // the fiber tree via a single link at the root. So if this level alone is\r\n    // sufficient to fix memory issues, that bodes well for our plans.\r\n    fiber.child = null;\r\n    fiber.deletions = null;\r\n    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host\r\n    // tree, which has its own pointers to children, parents, and siblings.\r\n    // The other host nodes also point back to fibers, so we should detach that\r\n    // one, too.\r\n\r\n    if (fiber.tag === HostComponent) {\r\n      var hostInstance = fiber.stateNode;\r\n    }\r\n\r\n    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We\r\n    // already disconnect the `return` pointer at the root of the deleted\r\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\r\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\r\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\r\n\r\n    {\r\n      fiber._debugOwner = null;\r\n    }\r\n\r\n    {\r\n      // Theoretically, nothing in here should be necessary, because we already\r\n      // disconnected the fiber from the tree. So even if something leaks this\r\n      // particular fiber, it won't leak anything else\r\n      //\r\n      // The purpose of this branch is to be super aggressive so we can measure\r\n      // if there's any difference in memory impact. If there is, that could\r\n      // indicate a React leak we don't know about.\r\n      fiber.return = null;\r\n      fiber.dependencies = null;\r\n      fiber.memoizedProps = null;\r\n      fiber.memoizedState = null;\r\n      fiber.pendingProps = null;\r\n      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\r\n\r\n      fiber.updateQueue = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getHostParentFiber(fiber) {\r\n  var parent = fiber.return;\r\n\r\n  while (parent !== null) {\r\n    if (isHostParent(parent)) {\r\n      return parent;\r\n    }\r\n\r\n    parent = parent.return;\r\n  }\r\n\r\n  throw new Error(\r\n    \"Expected to find a host parent. This error is likely caused by a bug \" +\r\n      \"in React. Please file an issue.\"\r\n  );\r\n}\r\n\r\nfunction isHostParent(fiber) {\r\n  return (\r\n    fiber.tag === HostComponent ||\r\n    fiber.tag === HostRoot ||\r\n    fiber.tag === HostPortal\r\n  );\r\n}\r\n\r\nfunction getHostSibling(fiber) {\r\n  // We're going to search forward into the tree until we find a sibling host\r\n  // node. Unfortunately, if multiple insertions are done in a row we have to\r\n  // search past them. This leads to exponential search for the next sibling.\r\n  // TODO: Find a more efficient way to do this.\r\n  var node = fiber;\r\n\r\n  siblings: while (true) {\r\n    // If we didn't find anything, let's try the next sibling.\r\n    while (node.sibling === null) {\r\n      if (node.return === null || isHostParent(node.return)) {\r\n        // If we pop out of the root or hit the parent the fiber we are the\r\n        // last sibling.\r\n        return null;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n\r\n    while (\r\n      node.tag !== HostComponent &&\r\n      node.tag !== HostText &&\r\n      node.tag !== DehydratedFragment\r\n    ) {\r\n      // If it is not host node and, we might have a host node inside it.\r\n      // Try to search down until we find one.\r\n      if (node.flags & Placement) {\r\n        // If we don't have a child, try the siblings instead.\r\n        continue siblings;\r\n      } // If we don't have a child, try the siblings instead.\r\n      // We also skip portals because they are not part of this host tree.\r\n\r\n      if (node.child === null || node.tag === HostPortal) {\r\n        continue siblings;\r\n      } else {\r\n        node.child.return = node;\r\n        node = node.child;\r\n      }\r\n    } // Check if this host node is stable or about to be placed.\r\n\r\n    if (!(node.flags & Placement)) {\r\n      // Found it!\r\n      return node.stateNode;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPlacement(finishedWork) {\r\n  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.\r\n\r\n  switch (parentFiber.tag) {\r\n    case HostComponent: {\r\n      var parent = parentFiber.stateNode;\r\n\r\n      if (parentFiber.flags & ContentReset) {\r\n        parentFiber.flags &= ~ContentReset;\r\n      }\r\n\r\n      var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its\r\n      // children to find all the terminal nodes.\r\n\r\n      insertOrAppendPlacementNode(finishedWork, before, parent);\r\n      break;\r\n    }\r\n\r\n    case HostRoot:\r\n    case HostPortal: {\r\n      var _parent = parentFiber.stateNode.containerInfo;\r\n\r\n      var _before = getHostSibling(finishedWork);\r\n\r\n      insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);\r\n      break;\r\n    }\r\n    // eslint-disable-next-line-no-fallthrough\r\n\r\n    default:\r\n      throw new Error(\r\n        \"Invalid host parent fiber. This error is likely caused by a bug \" +\r\n          \"in React. Please file an issue.\"\r\n      );\r\n  }\r\n}\r\n\r\nfunction insertOrAppendPlacementNodeIntoContainer(node, before, parent) {\r\n  var tag = node.tag;\r\n  var isHost = tag === HostComponent || tag === HostText;\r\n\r\n  if (isHost) {\r\n    var stateNode = node.stateNode;\r\n\r\n    if (before) {\r\n      insertInContainerBefore(parent);\r\n    } else {\r\n      appendChildToContainer(parent, stateNode);\r\n    }\r\n  } else if (tag === HostPortal);\r\n  else {\r\n    var child = node.child;\r\n\r\n    if (child !== null) {\r\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\r\n      var sibling = child.sibling;\r\n\r\n      while (sibling !== null) {\r\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\r\n        sibling = sibling.sibling;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction insertOrAppendPlacementNode(node, before, parent) {\r\n  var tag = node.tag;\r\n  var isHost = tag === HostComponent || tag === HostText;\r\n\r\n  if (isHost) {\r\n    var stateNode = node.stateNode;\r\n\r\n    if (before) {\r\n      insertBefore(parent, stateNode, before);\r\n    } else {\r\n      appendChild(parent, stateNode);\r\n    }\r\n  } else if (tag === HostPortal);\r\n  else {\r\n    var child = node.child;\r\n\r\n    if (child !== null) {\r\n      insertOrAppendPlacementNode(child, before, parent);\r\n      var sibling = child.sibling;\r\n\r\n      while (sibling !== null) {\r\n        insertOrAppendPlacementNode(sibling, before, parent);\r\n        sibling = sibling.sibling;\r\n      }\r\n    }\r\n  }\r\n} // These are tracked on the stack as we recursively traverse a\r\n// deleted subtree.\r\n// TODO: Update these during the whole mutation phase, not just during\r\n// a deletion.\r\n\r\nvar hostParent = null;\r\nvar hostParentIsContainer = false;\r\n\r\nfunction commitDeletionEffects(root, returnFiber, deletedFiber) {\r\n  {\r\n    // We only have the top Fiber that was deleted but we need to recurse down its\r\n    // children to find all the terminal nodes.\r\n    // Recursively delete all host nodes from the parent, detach refs, clean\r\n    // up mounted layout effects, and call componentWillUnmount.\r\n    // We only need to remove the topmost host child in each branch. But then we\r\n    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We\r\n    // could split this into two separate traversals functions, where the second\r\n    // one doesn't include any removeChild logic. This is maybe the same\r\n    // function as \"disappearLayoutEffects\" (or whatever that turns into after\r\n    // the layout phase is refactored to use recursion).\r\n    // Before starting, find the nearest host parent on the stack so we know\r\n    // which instance/container to remove the children from.\r\n    // TODO: Instead of searching up the fiber return path on every deletion, we\r\n    // can track the nearest host component on the JS stack as we traverse the\r\n    // tree during the commit phase. This would make insertions faster, too.\r\n    var parent = returnFiber;\r\n\r\n    findParent: while (parent !== null) {\r\n      switch (parent.tag) {\r\n        case HostComponent: {\r\n          hostParent = parent.stateNode;\r\n          hostParentIsContainer = false;\r\n          break findParent;\r\n        }\r\n\r\n        case HostRoot: {\r\n          hostParent = parent.stateNode.containerInfo;\r\n          hostParentIsContainer = true;\r\n          break findParent;\r\n        }\r\n\r\n        case HostPortal: {\r\n          hostParent = parent.stateNode.containerInfo;\r\n          hostParentIsContainer = true;\r\n          break findParent;\r\n        }\r\n      }\r\n\r\n      parent = parent.return;\r\n    }\r\n\r\n    if (hostParent === null) {\r\n      throw new Error(\r\n        \"Expected to find a host parent. This error is likely caused by \" +\r\n          \"a bug in React. Please file an issue.\"\r\n      );\r\n    }\r\n\r\n    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);\r\n    hostParent = null;\r\n    hostParentIsContainer = false;\r\n  }\r\n\r\n  detachFiberMutation(deletedFiber);\r\n}\r\n\r\nfunction recursivelyTraverseDeletionEffects(\r\n  finishedRoot,\r\n  nearestMountedAncestor,\r\n  parent\r\n) {\r\n  // TODO: Use a static flag to skip trees that don't have unmount effects\r\n  var child = parent.child;\r\n\r\n  while (child !== null) {\r\n    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);\r\n    child = child.sibling;\r\n  }\r\n}\r\n\r\nfunction commitDeletionEffectsOnFiber(\r\n  finishedRoot,\r\n  nearestMountedAncestor,\r\n  deletedFiber\r\n) {\r\n  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse\r\n  // into their subtree. There are simpler cases in the inner switch\r\n  // that don't modify the stack.\r\n\r\n  switch (deletedFiber.tag) {\r\n    case HostComponent: {\r\n      {\r\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\r\n      } // Intentional fallthrough to next branch\r\n    }\r\n    // eslint-disable-next-line-no-fallthrough\r\n\r\n    case HostText: {\r\n      // We only need to remove the nearest host child. Set the host parent\r\n      // to `null` on the stack to indicate that nested children don't\r\n      // need to be removed.\r\n      {\r\n        var prevHostParent = hostParent;\r\n        var prevHostParentIsContainer = hostParentIsContainer;\r\n        hostParent = null;\r\n        recursivelyTraverseDeletionEffects(\r\n          finishedRoot,\r\n          nearestMountedAncestor,\r\n          deletedFiber\r\n        );\r\n        hostParent = prevHostParent;\r\n        hostParentIsContainer = prevHostParentIsContainer;\r\n\r\n        if (hostParent !== null) {\r\n          // Now that all the child effects have unmounted, we can remove the\r\n          // node from the tree.\r\n          if (hostParentIsContainer) {\r\n            removeChildFromContainer(hostParent, deletedFiber.stateNode);\r\n          } else {\r\n            removeChild(hostParent, deletedFiber.stateNode);\r\n          }\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case DehydratedFragment: {\r\n      // Delete the dehydrated suspense boundary and all of its content.\r\n\r\n      {\r\n        if (hostParent !== null) {\r\n          if (hostParentIsContainer) {\r\n            clearSuspenseBoundaryFromContainer(\r\n              hostParent,\r\n              deletedFiber.stateNode\r\n            );\r\n          } else {\r\n            clearSuspenseBoundary(hostParent, deletedFiber.stateNode);\r\n          }\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case HostPortal: {\r\n      {\r\n        // When we go into a portal, it becomes the parent to remove from.\r\n        var _prevHostParent = hostParent;\r\n        var _prevHostParentIsContainer = hostParentIsContainer;\r\n        hostParent = deletedFiber.stateNode.containerInfo;\r\n        hostParentIsContainer = true;\r\n        recursivelyTraverseDeletionEffects(\r\n          finishedRoot,\r\n          nearestMountedAncestor,\r\n          deletedFiber\r\n        );\r\n        hostParent = _prevHostParent;\r\n        hostParentIsContainer = _prevHostParentIsContainer;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent: {\r\n      {\r\n        var updateQueue = deletedFiber.updateQueue;\r\n\r\n        if (updateQueue !== null) {\r\n          var lastEffect = updateQueue.lastEffect;\r\n\r\n          if (lastEffect !== null) {\r\n            var firstEffect = lastEffect.next;\r\n            var effect = firstEffect;\r\n\r\n            do {\r\n              var _effect = effect,\r\n                destroy = _effect.destroy,\r\n                tag = _effect.tag;\r\n\r\n              if (destroy !== undefined) {\r\n                if ((tag & Insertion) !== NoFlags$1) {\r\n                  safelyCallDestroy(\r\n                    deletedFiber,\r\n                    nearestMountedAncestor,\r\n                    destroy\r\n                  );\r\n                } else if ((tag & Layout) !== NoFlags$1) {\r\n                  if (deletedFiber.mode & ProfileMode) {\r\n                    startLayoutEffectTimer();\r\n                    safelyCallDestroy(\r\n                      deletedFiber,\r\n                      nearestMountedAncestor,\r\n                      destroy\r\n                    );\r\n                    recordLayoutEffectDuration(deletedFiber);\r\n                  } else {\r\n                    safelyCallDestroy(\r\n                      deletedFiber,\r\n                      nearestMountedAncestor,\r\n                      destroy\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n\r\n              effect = effect.next;\r\n            } while (effect !== firstEffect);\r\n          }\r\n        }\r\n      }\r\n\r\n      recursivelyTraverseDeletionEffects(\r\n        finishedRoot,\r\n        nearestMountedAncestor,\r\n        deletedFiber\r\n      );\r\n      return;\r\n    }\r\n\r\n    case ClassComponent: {\r\n      {\r\n        safelyDetachRef(deletedFiber, nearestMountedAncestor);\r\n        var instance = deletedFiber.stateNode;\r\n\r\n        if (typeof instance.componentWillUnmount === \"function\") {\r\n          safelyCallComponentWillUnmount(\r\n            deletedFiber,\r\n            nearestMountedAncestor,\r\n            instance\r\n          );\r\n        }\r\n      }\r\n\r\n      recursivelyTraverseDeletionEffects(\r\n        finishedRoot,\r\n        nearestMountedAncestor,\r\n        deletedFiber\r\n      );\r\n      return;\r\n    }\r\n\r\n    case ScopeComponent: {\r\n      recursivelyTraverseDeletionEffects(\r\n        finishedRoot,\r\n        nearestMountedAncestor,\r\n        deletedFiber\r\n      );\r\n      return;\r\n    }\r\n\r\n    case OffscreenComponent: {\r\n      {\r\n        recursivelyTraverseDeletionEffects(\r\n          finishedRoot,\r\n          nearestMountedAncestor,\r\n          deletedFiber\r\n        );\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      recursivelyTraverseDeletionEffects(\r\n        finishedRoot,\r\n        nearestMountedAncestor,\r\n        deletedFiber\r\n      );\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitSuspenseCallback(finishedWork) {\r\n  // TODO: Move this to passive phase\r\n  var newState = finishedWork.memoizedState;\r\n}\r\n\r\nfunction attachSuspenseRetryListeners(finishedWork) {\r\n  // If this boundary just timed out, then it will have a set of wakeables.\r\n  // For each wakeable, attach a listener so that when it resolves, React\r\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\r\n  var wakeables = finishedWork.updateQueue;\r\n\r\n  if (wakeables !== null) {\r\n    finishedWork.updateQueue = null;\r\n    var retryCache = finishedWork.stateNode;\r\n\r\n    if (retryCache === null) {\r\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\r\n    }\r\n\r\n    wakeables.forEach(function(wakeable) {\r\n      // Memoize using the boundary fiber to prevent redundant listeners.\r\n      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\r\n\r\n      if (!retryCache.has(wakeable)) {\r\n        retryCache.add(wakeable);\r\n\r\n        {\r\n          if (isDevToolsPresent) {\r\n            if (inProgressLanes !== null && inProgressRoot !== null) {\r\n              // If we have pending work still, associate the original updaters with it.\r\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\r\n            } else {\r\n              throw Error(\r\n                \"Expected finished root and lanes to be set. This is a bug in React.\"\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        wakeable.then(retry, retry);\r\n      }\r\n    });\r\n  }\r\n} // This function detects when a Suspense boundary goes from visible to hidden.\r\nfunction commitMutationEffects(root, finishedWork, committedLanes) {\r\n  inProgressLanes = committedLanes;\r\n  inProgressRoot = root;\r\n  setCurrentFiber(finishedWork);\r\n  commitMutationEffectsOnFiber(finishedWork, root);\r\n  setCurrentFiber(finishedWork);\r\n  inProgressLanes = null;\r\n  inProgressRoot = null;\r\n}\r\n\r\nfunction recursivelyTraverseMutationEffects(root, parentFiber, lanes) {\r\n  // Deletions effects can be scheduled on any fiber type. They need to happen\r\n  // before the children effects hae fired.\r\n  var deletions = parentFiber.deletions;\r\n\r\n  if (deletions !== null) {\r\n    for (var i = 0; i < deletions.length; i++) {\r\n      var childToDelete = deletions[i];\r\n\r\n      try {\r\n        commitDeletionEffects(root, parentFiber, childToDelete);\r\n      } catch (error) {\r\n        captureCommitPhaseError(childToDelete, parentFiber, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  var prevDebugFiber = getCurrentFiber();\r\n\r\n  if (parentFiber.subtreeFlags & MutationMask) {\r\n    var child = parentFiber.child;\r\n\r\n    while (child !== null) {\r\n      setCurrentFiber(child);\r\n      commitMutationEffectsOnFiber(child, root);\r\n      child = child.sibling;\r\n    }\r\n  }\r\n\r\n  setCurrentFiber(prevDebugFiber);\r\n}\r\n\r\nfunction commitMutationEffectsOnFiber(finishedWork, root, lanes) {\r\n  var current = finishedWork.alternate;\r\n  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,\r\n  // because the fiber tag is more specific. An exception is any flag related\r\n  // to reconcilation, because those can be set on all fiber types.\r\n\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case MemoComponent:\r\n    case SimpleMemoComponent: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      if (flags & Update) {\r\n        try {\r\n          commitHookEffectListUnmount(\r\n            Insertion | HasEffect,\r\n            finishedWork,\r\n            finishedWork.return\r\n          );\r\n          commitHookEffectListMount(Insertion | HasEffect, finishedWork);\r\n        } catch (error) {\r\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n        } // Layout effects are destroyed during the mutation phase so that all\r\n        // destroy functions for all fibers are called before any create functions.\r\n        // This prevents sibling component effects from interfering with each other,\r\n        // e.g. a destroy function in one component should never override a ref set\r\n        // by a create function in another component during the same commit.\r\n\r\n        if (finishedWork.mode & ProfileMode) {\r\n          try {\r\n            startLayoutEffectTimer();\r\n            commitHookEffectListUnmount(\r\n              Layout | HasEffect,\r\n              finishedWork,\r\n              finishedWork.return\r\n            );\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n\r\n          recordLayoutEffectDuration(finishedWork);\r\n        } else {\r\n          try {\r\n            commitHookEffectListUnmount(\r\n              Layout | HasEffect,\r\n              finishedWork,\r\n              finishedWork.return\r\n            );\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case ClassComponent: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      if (flags & Ref) {\r\n        if (current !== null) {\r\n          safelyDetachRef(current, current.return);\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case HostComponent: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      if (flags & Ref) {\r\n        if (current !== null) {\r\n          safelyDetachRef(current, current.return);\r\n        }\r\n      }\r\n\r\n      {\r\n        // TODO: ContentReset gets cleared by the children during the commit\r\n        // phase. This is a refactor hazard because it means we must read\r\n        // flags the flags after `commitReconciliationEffects` has already run;\r\n        // the order matters. We should refactor so that ContentReset does not\r\n        // rely on mutating the flag during commit. Like by setting a flag\r\n        // during the render phase instead.\r\n        if (finishedWork.flags & ContentReset) {\r\n          var instance = finishedWork.stateNode;\r\n\r\n          try {\r\n            resetTextContent(instance);\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n\r\n        if (flags & Update) {\r\n          var _instance4 = finishedWork.stateNode;\r\n\r\n          if (_instance4 != null) {\r\n            // Commit the work prepared earlier.\r\n            var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\r\n            // as the newProps. The updatePayload will contain the real change in\r\n            // this case.\r\n\r\n            var oldProps = current !== null ? current.memoizedProps : newProps;\r\n            var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.\r\n\r\n            var updatePayload = finishedWork.updateQueue;\r\n            finishedWork.updateQueue = null;\r\n\r\n            if (updatePayload !== null) {\r\n              try {\r\n                commitUpdate(\r\n                  _instance4,\r\n                  updatePayload,\r\n                  type,\r\n                  oldProps,\r\n                  newProps,\r\n                  finishedWork\r\n                );\r\n              } catch (error) {\r\n                captureCommitPhaseError(\r\n                  finishedWork,\r\n                  finishedWork.return,\r\n                  error\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case HostText: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      if (flags & Update) {\r\n        {\r\n          if (finishedWork.stateNode === null) {\r\n            throw new Error(\r\n              \"This should have a text node initialized. This error is likely \" +\r\n                \"caused by a bug in React. Please file an issue.\"\r\n            );\r\n          }\r\n\r\n          var textInstance = finishedWork.stateNode;\r\n          var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps\r\n          // as the newProps. The updatePayload will contain the real change in\r\n          // this case.\r\n\r\n          var oldText = current !== null ? current.memoizedProps : newText;\r\n\r\n          try {\r\n            commitTextUpdate(textInstance, oldText, newText);\r\n          } catch (error) {\r\n            captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n          }\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case HostRoot: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      return;\r\n    }\r\n\r\n    case HostPortal: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      return;\r\n    }\r\n\r\n    case SuspenseComponent: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n      var offscreenFiber = finishedWork.child;\r\n\r\n      if (offscreenFiber.flags & Visibility) {\r\n        var offscreenInstance = offscreenFiber.stateNode;\r\n        var newState = offscreenFiber.memoizedState;\r\n        var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can\r\n        // read it during an event\r\n\r\n        offscreenInstance.isHidden = isHidden;\r\n\r\n        if (isHidden) {\r\n          var wasHidden =\r\n            offscreenFiber.alternate !== null &&\r\n            offscreenFiber.alternate.memoizedState !== null;\r\n\r\n          if (!wasHidden) {\r\n            // TODO: Move to passive phase\r\n            markCommitTimeOfFallback();\r\n          }\r\n        }\r\n      }\r\n\r\n      if (flags & Update) {\r\n        try {\r\n          commitSuspenseCallback(finishedWork);\r\n        } catch (error) {\r\n          captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n        }\r\n\r\n        attachSuspenseRetryListeners(finishedWork);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case OffscreenComponent: {\r\n      var _wasHidden = current !== null && current.memoizedState !== null;\r\n\r\n      {\r\n        recursivelyTraverseMutationEffects(root, finishedWork);\r\n      }\r\n\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      if (flags & Visibility) {\r\n        var _offscreenInstance = finishedWork.stateNode;\r\n        var _newState = finishedWork.memoizedState;\r\n\r\n        var _isHidden = _newState !== null;\r\n\r\n        var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can\r\n        // read it during an event\r\n\r\n        _offscreenInstance.isHidden = _isHidden;\r\n\r\n        {\r\n          // TODO: This needs to run whenever there's an insertion or update\r\n          // inside a hidden Offscreen tree.\r\n          hideOrUnhideAllChildren(offscreenBoundary, _isHidden);\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case SuspenseListComponent: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n\r\n      if (flags & Update) {\r\n        attachSuspenseRetryListeners(finishedWork);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    case ScopeComponent: {\r\n      return;\r\n    }\r\n\r\n    default: {\r\n      recursivelyTraverseMutationEffects(root, finishedWork);\r\n      commitReconciliationEffects(finishedWork);\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitReconciliationEffects(finishedWork) {\r\n  // Placement effects (insertions, reorders) can be scheduled on any fiber\r\n  // type. They needs to happen after the children effects have fired, but\r\n  // before the effects on this fiber have fired.\r\n  var flags = finishedWork.flags;\r\n\r\n  if (flags & Placement) {\r\n    try {\r\n      commitPlacement(finishedWork);\r\n    } catch (error) {\r\n      captureCommitPhaseError(finishedWork, finishedWork.return, error);\r\n    } // Clear the \"placement\" from effect tag so that we know that this is\r\n    // inserted, before any life-cycles like componentDidMount gets called.\r\n    // TODO: findDOMNode doesn't rely on this any more but isMounted does\r\n    // and isMounted is deprecated anyway so we should be able to kill this.\r\n\r\n    finishedWork.flags &= ~Placement;\r\n  }\r\n\r\n  if (flags & Hydrating) {\r\n    finishedWork.flags &= ~Hydrating;\r\n  }\r\n}\r\n\r\nfunction commitLayoutEffects(finishedWork, root, committedLanes) {\r\n  inProgressLanes = committedLanes;\r\n  inProgressRoot = root;\r\n  nextEffect = finishedWork;\r\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\r\n  inProgressLanes = null;\r\n  inProgressRoot = null;\r\n}\r\n\r\nfunction commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {\r\n  // Suspense layout effects semantics don't change for legacy roots.\r\n  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\r\n\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var firstChild = fiber.child;\r\n\r\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\r\n      firstChild.return = fiber;\r\n      nextEffect = firstChild;\r\n    } else {\r\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n\r\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\r\n      var current = fiber.alternate;\r\n      setCurrentFiber(fiber);\r\n\r\n      try {\r\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\r\n      } catch (error) {\r\n        captureCommitPhaseError(fiber, fiber.return, error);\r\n      }\r\n\r\n      resetCurrentFiber();\r\n    }\r\n\r\n    if (fiber === subtreeRoot) {\r\n      nextEffect = null;\r\n      return;\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitPassiveMountEffects(\r\n  root,\r\n  finishedWork,\r\n  committedLanes,\r\n  committedTransitions\r\n) {\r\n  nextEffect = finishedWork;\r\n  commitPassiveMountEffects_begin(\r\n    finishedWork,\r\n    root,\r\n    committedLanes,\r\n    committedTransitions\r\n  );\r\n}\r\n\r\nfunction commitPassiveMountEffects_begin(\r\n  subtreeRoot,\r\n  root,\r\n  committedLanes,\r\n  committedTransitions\r\n) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var firstChild = fiber.child;\r\n\r\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\r\n      firstChild.return = fiber;\r\n      nextEffect = firstChild;\r\n    } else {\r\n      commitPassiveMountEffects_complete(\r\n        subtreeRoot,\r\n        root,\r\n        committedLanes,\r\n        committedTransitions\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveMountEffects_complete(\r\n  subtreeRoot,\r\n  root,\r\n  committedLanes,\r\n  committedTransitions\r\n) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n\r\n    if ((fiber.flags & Passive) !== NoFlags) {\r\n      setCurrentFiber(fiber);\r\n\r\n      try {\r\n        commitPassiveMountOnFiber(\r\n          root,\r\n          fiber,\r\n          committedLanes,\r\n          committedTransitions\r\n        );\r\n      } catch (error) {\r\n        captureCommitPhaseError(fiber, fiber.return, error);\r\n      }\r\n\r\n      resetCurrentFiber();\r\n    }\r\n\r\n    if (fiber === subtreeRoot) {\r\n      nextEffect = null;\r\n      return;\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitPassiveMountOnFiber(\r\n  finishedRoot,\r\n  finishedWork,\r\n  committedLanes,\r\n  committedTransitions\r\n) {\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent: {\r\n      if (finishedWork.mode & ProfileMode) {\r\n        startPassiveEffectTimer();\r\n\r\n        try {\r\n          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\r\n        } finally {\r\n          recordPassiveEffectDuration(finishedWork);\r\n        }\r\n      } else {\r\n        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);\r\n      }\r\n\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffects(firstChild) {\r\n  nextEffect = firstChild;\r\n  commitPassiveUnmountEffects_begin();\r\n}\r\n\r\nfunction commitPassiveUnmountEffects_begin() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var child = fiber.child;\r\n\r\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\r\n      var deletions = fiber.deletions;\r\n\r\n      if (deletions !== null) {\r\n        for (var i = 0; i < deletions.length; i++) {\r\n          var fiberToDelete = deletions[i];\r\n          nextEffect = fiberToDelete;\r\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\r\n            fiberToDelete,\r\n            fiber\r\n          );\r\n        }\r\n\r\n        {\r\n          // A fiber was deleted from this parent fiber, but it's still part of\r\n          // the previous (alternate) parent fiber's list of children. Because\r\n          // children are a linked list, an earlier sibling that's still alive\r\n          // will be connected to the deleted fiber via its `alternate`:\r\n          //\r\n          //   live fiber\r\n          //   --alternate--> previous live fiber\r\n          //   --sibling--> deleted fiber\r\n          //\r\n          // We can't disconnect `alternate` on nodes that haven't been deleted\r\n          // yet, but we can disconnect the `sibling` and `child` pointers.\r\n          var previousFiber = fiber.alternate;\r\n\r\n          if (previousFiber !== null) {\r\n            var detachedChild = previousFiber.child;\r\n\r\n            if (detachedChild !== null) {\r\n              previousFiber.child = null;\r\n\r\n              do {\r\n                var detachedSibling = detachedChild.sibling;\r\n                detachedChild.sibling = null;\r\n                detachedChild = detachedSibling;\r\n              } while (detachedChild !== null);\r\n            }\r\n          }\r\n        }\r\n\r\n        nextEffect = fiber;\r\n      }\r\n    }\r\n\r\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\r\n      child.return = fiber;\r\n      nextEffect = child;\r\n    } else {\r\n      commitPassiveUnmountEffects_complete();\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffects_complete() {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n\r\n    if ((fiber.flags & Passive) !== NoFlags) {\r\n      setCurrentFiber(fiber);\r\n      commitPassiveUnmountOnFiber(fiber);\r\n      resetCurrentFiber();\r\n    }\r\n\r\n    var sibling = fiber.sibling;\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = fiber.return;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = fiber.return;\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountOnFiber(finishedWork) {\r\n  switch (finishedWork.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent: {\r\n      if (finishedWork.mode & ProfileMode) {\r\n        startPassiveEffectTimer();\r\n        commitHookEffectListUnmount(\r\n          Passive$1 | HasEffect,\r\n          finishedWork,\r\n          finishedWork.return\r\n        );\r\n        recordPassiveEffectDuration(finishedWork);\r\n      } else {\r\n        commitHookEffectListUnmount(\r\n          Passive$1 | HasEffect,\r\n          finishedWork,\r\n          finishedWork.return\r\n        );\r\n      }\r\n\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\r\n  deletedSubtreeRoot,\r\n  nearestMountedAncestor\r\n) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect; // Deletion effects fire in parent -> child order\r\n    // TODO: Check if fiber has a PassiveStatic flag\r\n\r\n    setCurrentFiber(fiber);\r\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\r\n    resetCurrentFiber();\r\n    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\r\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\r\n\r\n    if (child !== null) {\r\n      child.return = fiber;\r\n      nextEffect = child;\r\n    } else {\r\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\r\n        deletedSubtreeRoot\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\r\n  deletedSubtreeRoot\r\n) {\r\n  while (nextEffect !== null) {\r\n    var fiber = nextEffect;\r\n    var sibling = fiber.sibling;\r\n    var returnFiber = fiber.return;\r\n\r\n    {\r\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\r\n      // This is more aggressive than ideal, and the long term goal is to only\r\n      // have to detach the deleted tree at the root.\r\n      detachFiberAfterEffects(fiber);\r\n\r\n      if (fiber === deletedSubtreeRoot) {\r\n        nextEffect = null;\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (sibling !== null) {\r\n      sibling.return = returnFiber;\r\n      nextEffect = sibling;\r\n      return;\r\n    }\r\n\r\n    nextEffect = returnFiber;\r\n  }\r\n}\r\n\r\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\r\n  current,\r\n  nearestMountedAncestor\r\n) {\r\n  switch (current.tag) {\r\n    case FunctionComponent:\r\n    case ForwardRef:\r\n    case SimpleMemoComponent: {\r\n      if (current.mode & ProfileMode) {\r\n        startPassiveEffectTimer();\r\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\r\n        recordPassiveEffectDuration(current);\r\n      } else {\r\n        commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);\r\n      }\r\n\r\n      break;\r\n    }\r\n  }\r\n} // TODO: Reuse reappearLayoutEffects traversal here?\r\n\r\nvar COMPONENT_TYPE = 0;\r\nvar HAS_PSEUDO_CLASS_TYPE = 1;\r\nvar ROLE_TYPE = 2;\r\nvar TEST_NAME_TYPE = 3;\r\nvar TEXT_TYPE = 4;\r\n\r\nif (typeof Symbol === \"function\" && Symbol.for) {\r\n  var symbolFor = Symbol.for;\r\n  COMPONENT_TYPE = symbolFor(\"selector.component\");\r\n  HAS_PSEUDO_CLASS_TYPE = symbolFor(\"selector.has_pseudo_class\");\r\n  ROLE_TYPE = symbolFor(\"selector.role\");\r\n  TEST_NAME_TYPE = symbolFor(\"selector.test_id\");\r\n  TEXT_TYPE = symbolFor(\"selector.text\");\r\n}\r\n\r\nvar ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;\r\nfunction isLegacyActEnvironment(fiber) {\r\n  {\r\n    // Legacy mode. We preserve the behavior of React 17's act. It assumes an\r\n    // act environment whenever `jest` is defined, but you can still turn off\r\n    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly\r\n    // to false.\r\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\r\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\r\n        ? IS_REACT_ACT_ENVIRONMENT\r\n        : undefined; // $FlowExpectedError - Flow doesn't know about jest\r\n\r\n    var jestIsDefined = typeof jest !== \"undefined\";\r\n    return jestIsDefined && isReactActEnvironmentGlobal !== false;\r\n  }\r\n}\r\nfunction isConcurrentActEnvironment() {\r\n  {\r\n    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global\r\n      typeof IS_REACT_ACT_ENVIRONMENT !== \"undefined\"\r\n        ? IS_REACT_ACT_ENVIRONMENT\r\n        : undefined;\r\n\r\n    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {\r\n      // TODO: Include link to relevant documentation page.\r\n      error(\r\n        \"The current testing environment is not configured to support \" +\r\n          \"act(...)\"\r\n      );\r\n    }\r\n\r\n    return isReactActEnvironmentGlobal;\r\n  }\r\n}\r\n\r\nvar ceil = Math.ceil;\r\nvar ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,\r\n  ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,\r\n  ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig,\r\n  ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;\r\nvar NoContext =\r\n  /*             */\r\n  0;\r\nvar BatchedContext =\r\n  /*               */\r\n  1;\r\nvar RenderContext =\r\n  /*                */\r\n  2;\r\nvar CommitContext =\r\n  /*                */\r\n  4;\r\nvar RootInProgress = 0;\r\nvar RootFatalErrored = 1;\r\nvar RootErrored = 2;\r\nvar RootSuspended = 3;\r\nvar RootSuspendedWithDelay = 4;\r\nvar RootCompleted = 5;\r\nvar RootDidNotComplete = 6; // Describes where we are in the React execution stack\r\n\r\nvar executionContext = NoContext; // The root we're working on\r\n\r\nvar workInProgressRoot = null; // The fiber we're working on\r\n\r\nvar workInProgress = null; // The lanes we're rendering\r\n\r\nvar workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree\r\n// This is a superset of the lanes we started working on at the root. The only\r\n// case where it's different from `workInProgressRootRenderLanes` is when we\r\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\r\n// Offscreen component.\r\n//\r\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\r\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\r\n\r\nvar subtreeRenderLanes = NoLanes;\r\nvar subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.\r\n\r\nvar workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown\r\n\r\nvar workInProgressRootFatalError = null; // \"Included\" lanes refer to lanes that were worked on during this render. It's\r\n// slightly different than `renderLanes` because `renderLanes` can change as you\r\n// enter and exit an Offscreen tree. This value is the combination of all render\r\n// lanes for the entire render phase.\r\n\r\nvar workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only\r\n// includes unprocessed updates, not work in bailed out children.\r\n\r\nvar workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.\r\n\r\nvar workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).\r\n\r\nvar workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.\r\n\r\nvar workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.\r\n// We will log them once the tree commits.\r\n\r\nvar workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train\r\n// model where we don't commit new loading states in too quick succession.\r\n\r\nvar globalMostRecentFallbackTime = 0;\r\nvar FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering\r\n// more and prefer CPU suspense heuristics instead.\r\n\r\nvar workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU\r\n// suspense heuristics and opt out of rendering more content.\r\n\r\nvar RENDER_TIMEOUT_MS = 500;\r\nvar workInProgressTransitions = null;\r\n\r\nfunction resetRenderTimer() {\r\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\r\n}\r\n\r\nfunction getRenderTargetTime() {\r\n  return workInProgressRootRenderTargetTime;\r\n}\r\nvar hasUncaughtError = false;\r\nvar firstUncaughtError = null;\r\nvar legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;\r\nvar rootDoesHavePassiveEffects = false;\r\nvar rootWithPendingPassiveEffects = null;\r\nvar pendingPassiveEffectsLanes = NoLanes;\r\nvar pendingPassiveProfilerEffects = [];\r\nvar pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates\r\n\r\nvar NESTED_UPDATE_LIMIT = 50;\r\nvar nestedUpdateCount = 0;\r\nvar rootWithNestedUpdates = null;\r\nvar isFlushingPassiveEffects = false;\r\nvar didScheduleUpdateDuringPassiveEffects = false;\r\nvar NESTED_PASSIVE_UPDATE_LIMIT = 50;\r\nvar nestedPassiveUpdateCount = 0;\r\nvar rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their\r\n// event times as simultaneous, even if the actual clock time has advanced\r\n// between the first and second call.\r\n\r\nvar currentEventTime = NoTimestamp;\r\nvar currentEventTransitionLane = NoLanes;\r\nvar isRunningInsertionEffect = false;\r\nfunction getWorkInProgressRoot() {\r\n  return workInProgressRoot;\r\n}\r\nfunction requestEventTime() {\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    // We're inside React, so it's fine to read the actual time.\r\n    return now();\r\n  } // We're not inside React, so we may be in the middle of a browser event.\r\n\r\n  if (currentEventTime !== NoTimestamp) {\r\n    // Use the same start time for all updates until we enter React again.\r\n    return currentEventTime;\r\n  } // This is the first update since React yielded. Compute a new start time.\r\n\r\n  currentEventTime = now();\r\n  return currentEventTime;\r\n}\r\nfunction requestUpdateLane(fiber) {\r\n  // Special cases\r\n  var mode = fiber.mode;\r\n\r\n  if ((mode & ConcurrentMode) === NoMode) {\r\n    return SyncLane;\r\n  } else if (\r\n    (executionContext & RenderContext) !== NoContext &&\r\n    workInProgressRootRenderLanes !== NoLanes\r\n  ) {\r\n    // This is a render phase update. These are not officially supported. The\r\n    // old behavior is to give this the same \"thread\" (lanes) as\r\n    // whatever is currently rendering. So if you call `setState` on a component\r\n    // that happens later in the same render, it will flush. Ideally, we want to\r\n    // remove the special case and treat them as if they came from an\r\n    // interleaved event. Regardless, this pattern is not officially supported.\r\n    // This behavior is only a fallback. The flag only exists until we can roll\r\n    // out the setState warning, since existing code might accidentally rely on\r\n    // the current behavior.\r\n    return pickArbitraryLane(workInProgressRootRenderLanes);\r\n  }\r\n\r\n  var isTransition = requestCurrentTransition() !== NoTransition;\r\n\r\n  if (isTransition) {\r\n    if (ReactCurrentBatchConfig$2.transition !== null) {\r\n      var transition = ReactCurrentBatchConfig$2.transition;\r\n\r\n      if (!transition._updatedFibers) {\r\n        transition._updatedFibers = new Set();\r\n      }\r\n\r\n      transition._updatedFibers.add(fiber);\r\n    } // The algorithm for assigning an update to a lane should be stable for all\r\n    // updates at the same priority within the same event. To do this, the\r\n    // inputs to the algorithm must be the same.\r\n    //\r\n    // The trick we use is to cache the first of each of these inputs within an\r\n    // event. Then reset the cached values once we can be sure the event is\r\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\r\n\r\n    if (currentEventTransitionLane === NoLane) {\r\n      // All transitions within the same event are assigned the same lane.\r\n      currentEventTransitionLane = claimNextTransitionLane();\r\n    }\r\n\r\n    return currentEventTransitionLane;\r\n  } // Updates originating inside certain React methods, like flushSync, have\r\n  // their priority set by tracking it with a context variable.\r\n  //\r\n  // The opaque type returned by the host config is internally a lane, so we can\r\n  // use that directly.\r\n  // TODO: Move this type conversion to the event priority module.\r\n\r\n  var updateLane = getCurrentUpdatePriority();\r\n\r\n  if (updateLane !== NoLane) {\r\n    return updateLane;\r\n  } // This update originated outside React. Ask the host environment for an\r\n  // appropriate priority, based on the type of event.\r\n  //\r\n  // The opaque type returned by the host config is internally a lane, so we can\r\n  // use that directly.\r\n  // TODO: Move this type conversion to the event priority module.\r\n\r\n  var eventLane = getCurrentEventPriority();\r\n  return eventLane;\r\n}\r\n\r\nfunction requestRetryLane(fiber) {\r\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\r\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\r\n  // from its placeholder state to its primary/resolved state.\r\n  // Special cases\r\n  var mode = fiber.mode;\r\n\r\n  if ((mode & ConcurrentMode) === NoMode) {\r\n    return SyncLane;\r\n  }\r\n\r\n  return claimNextRetryLane();\r\n}\r\n\r\nfunction scheduleUpdateOnFiber(root, fiber, lane, eventTime) {\r\n  checkForNestedUpdates();\r\n\r\n  {\r\n    if (isRunningInsertionEffect) {\r\n      error(\"useInsertionEffect must not schedule updates.\");\r\n    }\r\n  }\r\n\r\n  {\r\n    if (isFlushingPassiveEffects) {\r\n      didScheduleUpdateDuringPassiveEffects = true;\r\n    }\r\n  } // Mark that the root has a pending update.\r\n\r\n  markRootUpdated(root, lane, eventTime);\r\n\r\n  if (\r\n    (executionContext & RenderContext) !== NoLanes &&\r\n    root === workInProgressRoot\r\n  ) {\r\n    // This update was dispatched during the render phase. This is a mistake\r\n    // if the update originates from user space (with the exception of local\r\n    // hook updates, which are handled differently and don't reach this\r\n    // function), but there are some internal React features that use this as\r\n    // an implementation detail, like selective hydration.\r\n    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase\r\n  } else {\r\n    // This is a normal update, scheduled from outside the render phase. For\r\n    // example, during an input event.\r\n    {\r\n      if (isDevToolsPresent) {\r\n        addFiberToLanesMap(root, fiber, lane);\r\n      }\r\n    }\r\n\r\n    warnIfUpdatesNotWrappedWithActDEV(fiber);\r\n\r\n    if (root === workInProgressRoot) {\r\n      // Received an update to a tree that's in the middle of rendering. Mark\r\n      // that there was an interleaved update work on this root. Unless the\r\n      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\r\n      // phase update. In that case, we don't treat render phase updates as if\r\n      // they were interleaved, for backwards compat reasons.\r\n      if ((executionContext & RenderContext) === NoContext) {\r\n        workInProgressRootInterleavedUpdatedLanes = mergeLanes(\r\n          workInProgressRootInterleavedUpdatedLanes,\r\n          lane\r\n        );\r\n      }\r\n\r\n      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\r\n        // The root already suspended with a delay, which means this render\r\n        // definitely won't finish. Since we have a new update, let's mark it as\r\n        // suspended now, right before marking the incoming update. This has the\r\n        // effect of interrupting the current render and switching to the update.\r\n        // TODO: Make sure this doesn't override pings that happen while we've\r\n        // already started rendering.\r\n        markRootSuspended$1(root, workInProgressRootRenderLanes);\r\n      }\r\n    }\r\n\r\n    ensureRootIsScheduled(root, eventTime);\r\n\r\n    if (\r\n      lane === SyncLane &&\r\n      executionContext === NoContext &&\r\n      (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\r\n      !ReactCurrentActQueue$1.isBatchingLegacy\r\n    ) {\r\n      // Flush the synchronous work now, unless we're already working or inside\r\n      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\r\n      // scheduleCallbackForFiber to preserve the ability to schedule a callback\r\n      // without immediately flushing it. We only do this for user-initiated\r\n      // updates, to preserve historical behavior of legacy mode.\r\n      resetRenderTimer();\r\n      flushSyncCallbacksOnlyInLegacyMode();\r\n    }\r\n  }\r\n}\r\nfunction isUnsafeClassRenderPhaseUpdate(fiber) {\r\n  // Check if this is a render phase update. Only called by class components,\r\n  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.\r\n  return (\r\n    // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We\r\n    // decided not to enable it.\r\n    (executionContext & RenderContext) !== NoContext\r\n  );\r\n} // Use this function to schedule a task for a root. There's only one task per\r\n// root; if a task was already scheduled, we'll check to make sure the priority\r\n// of the existing task is the same as the priority of the next level that the\r\n// root has work on. This function is called on every update, and right before\r\n// exiting a task.\r\n\r\nfunction ensureRootIsScheduled(root, currentTime) {\r\n  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as\r\n  // expired so we know to work on those next.\r\n\r\n  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.\r\n\r\n  var nextLanes = getNextLanes(\r\n    root,\r\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\r\n  );\r\n\r\n  if (nextLanes === NoLanes) {\r\n    // Special case: There's nothing to work on.\r\n    if (existingCallbackNode !== null) {\r\n      cancelCallback$1(existingCallbackNode);\r\n    }\r\n\r\n    root.callbackNode = null;\r\n    root.callbackPriority = NoLane;\r\n    return;\r\n  } // We use the highest priority lane to represent the priority of the callback.\r\n\r\n  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.\r\n\r\n  var existingCallbackPriority = root.callbackPriority;\r\n\r\n  if (\r\n    existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a\r\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\r\n    // on the `act` queue.\r\n    !(\r\n      ReactCurrentActQueue$1.current !== null &&\r\n      existingCallbackNode !== fakeActCallbackNode\r\n    )\r\n  ) {\r\n    {\r\n      // If we're going to re-use an existing task, it needs to exist.\r\n      // Assume that discrete update microtasks are non-cancellable and null.\r\n      // TODO: Temporary until we confirm this warning is not fired.\r\n      if (\r\n        existingCallbackNode == null &&\r\n        existingCallbackPriority !== SyncLane\r\n      ) {\r\n        error(\r\n          \"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\"\r\n        );\r\n      }\r\n    } // The priority hasn't changed. We can reuse the existing task. Exit.\r\n\r\n    return;\r\n  }\r\n\r\n  if (existingCallbackNode != null) {\r\n    // Cancel the existing callback. We'll schedule a new one below.\r\n    cancelCallback$1(existingCallbackNode);\r\n  } // Schedule a new callback.\r\n\r\n  var newCallbackNode;\r\n\r\n  if (newCallbackPriority === SyncLane) {\r\n    // Special case: Sync React callbacks are scheduled on a special\r\n    // internal queue\r\n    if (root.tag === LegacyRoot) {\r\n      if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {\r\n        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;\r\n      }\r\n\r\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\r\n    } else {\r\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\r\n    }\r\n\r\n    {\r\n      // Flush the queue in an Immediate task.\r\n      scheduleCallback$1(ImmediatePriority, flushSyncCallbacks);\r\n    }\r\n\r\n    newCallbackNode = null;\r\n  } else {\r\n    var schedulerPriorityLevel;\r\n\r\n    switch (lanesToEventPriority(nextLanes)) {\r\n      case DiscreteEventPriority:\r\n        schedulerPriorityLevel = ImmediatePriority;\r\n        break;\r\n\r\n      case ContinuousEventPriority:\r\n        schedulerPriorityLevel = UserBlockingPriority;\r\n        break;\r\n\r\n      case DefaultEventPriority:\r\n        schedulerPriorityLevel = NormalPriority;\r\n        break;\r\n\r\n      case IdleEventPriority:\r\n        schedulerPriorityLevel = IdlePriority;\r\n        break;\r\n\r\n      default:\r\n        schedulerPriorityLevel = NormalPriority;\r\n        break;\r\n    }\r\n\r\n    newCallbackNode = scheduleCallback$1(\r\n      schedulerPriorityLevel,\r\n      performConcurrentWorkOnRoot.bind(null, root)\r\n    );\r\n  }\r\n\r\n  root.callbackPriority = newCallbackPriority;\r\n  root.callbackNode = newCallbackNode;\r\n} // This is the entry point for every concurrent task, i.e. anything that\r\n// goes through Scheduler.\r\n\r\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\r\n  {\r\n    resetNestedUpdateFlag();\r\n  } // Since we know we're in a React event, we can clear the current\r\n  // event time. The next update will compute a new event time.\r\n\r\n  currentEventTime = NoTimestamp;\r\n  currentEventTransitionLane = NoLanes;\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error(\"Should not already be working.\");\r\n  } // Flush any pending passive effects before deciding which lanes to work on,\r\n  // in case they schedule additional work.\r\n\r\n  var originalCallbackNode = root.callbackNode;\r\n  var didFlushPassiveEffects = flushPassiveEffects();\r\n\r\n  if (didFlushPassiveEffects) {\r\n    // Something in the passive effect phase may have canceled the current task.\r\n    // Check if the task node for this root was changed.\r\n    if (root.callbackNode !== originalCallbackNode) {\r\n      // The current task was canceled. Exit. We don't need to call\r\n      // `ensureRootIsScheduled` because the check above implies either that\r\n      // there's a new task, or that there's no remaining work on this root.\r\n      return null;\r\n    }\r\n  } // Determine the next lanes to work on, using the fields stored\r\n  // on the root.\r\n\r\n  var lanes = getNextLanes(\r\n    root,\r\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes\r\n  );\r\n\r\n  if (lanes === NoLanes) {\r\n    // Defensive coding. This is never expected to happen.\r\n    return null;\r\n  } // We disable time-slicing in some cases: if the work has been CPU-bound\r\n  // for too long (\"expired\" work, to prevent starvation), or we're in\r\n  // sync-updates-by-default mode.\r\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\r\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\r\n  // we can remove this, since we track expiration ourselves.\r\n\r\n  var shouldTimeSlice =\r\n    !includesBlockingLane(root, lanes) &&\r\n    !includesExpiredLane(root, lanes) &&\r\n    !didTimeout;\r\n  var exitStatus = shouldTimeSlice\r\n    ? renderRootConcurrent(root, lanes)\r\n    : renderRootSync(root, lanes);\r\n\r\n  if (exitStatus !== RootInProgress) {\r\n    if (exitStatus === RootErrored) {\r\n      // If something threw an error, try rendering one more time. We'll\r\n      // render synchronously to block concurrent data mutations, and we'll\r\n      // includes all pending updates are included. If it still fails after\r\n      // the second attempt, we'll give up and commit the resulting tree.\r\n      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\r\n\r\n      if (errorRetryLanes !== NoLanes) {\r\n        lanes = errorRetryLanes;\r\n        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\r\n      }\r\n    }\r\n\r\n    if (exitStatus === RootFatalErrored) {\r\n      var fatalError = workInProgressRootFatalError;\r\n      prepareFreshStack(root, NoLanes);\r\n      markRootSuspended$1(root, lanes);\r\n      ensureRootIsScheduled(root, now());\r\n      throw fatalError;\r\n    }\r\n\r\n    if (exitStatus === RootDidNotComplete) {\r\n      // The render unwound without completing the tree. This happens in special\r\n      // cases where need to exit the current render without producing a\r\n      // consistent tree or committing.\r\n      //\r\n      // This should only happen during a concurrent render, not a discrete or\r\n      // synchronous update. We should have already checked for this when we\r\n      // unwound the stack.\r\n      markRootSuspended$1(root, lanes);\r\n    } else {\r\n      // The render completed.\r\n      // Check if this render may have yielded to a concurrent event, and if so,\r\n      // confirm that any newly rendered stores are consistent.\r\n      // TODO: It's possible that even a concurrent render may never have yielded\r\n      // to the main thread, if it was fast enough, or if it expired. We could\r\n      // skip the consistency check in that case, too.\r\n      var renderWasConcurrent = !includesBlockingLane(root, lanes);\r\n      var finishedWork = root.current.alternate;\r\n\r\n      if (\r\n        renderWasConcurrent &&\r\n        !isRenderConsistentWithExternalStores(finishedWork)\r\n      ) {\r\n        // A store was mutated in an interleaved event. Render again,\r\n        // synchronously, to block further mutations.\r\n        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw\r\n\r\n        if (exitStatus === RootErrored) {\r\n          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\r\n\r\n          if (_errorRetryLanes !== NoLanes) {\r\n            lanes = _errorRetryLanes;\r\n            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any\r\n            // concurrent events.\r\n          }\r\n        }\r\n\r\n        if (exitStatus === RootFatalErrored) {\r\n          var _fatalError = workInProgressRootFatalError;\r\n          prepareFreshStack(root, NoLanes);\r\n          markRootSuspended$1(root, lanes);\r\n          ensureRootIsScheduled(root, now());\r\n          throw _fatalError;\r\n        }\r\n      } // We now have a consistent tree. The next step is either to commit it,\r\n      // or, if something suspended, wait to commit it after a timeout.\r\n\r\n      root.finishedWork = finishedWork;\r\n      root.finishedLanes = lanes;\r\n      finishConcurrentRender(root, exitStatus, lanes);\r\n    }\r\n  }\r\n\r\n  ensureRootIsScheduled(root, now());\r\n\r\n  if (root.callbackNode === originalCallbackNode) {\r\n    // The task node scheduled for this root is the same one that's\r\n    // currently executed. Need to return a continuation.\r\n    return performConcurrentWorkOnRoot.bind(null, root);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction recoverFromConcurrentError(root, errorRetryLanes) {\r\n  // If an error occurred during hydration, discard server response and fall\r\n  // back to client side render.\r\n  // Before rendering again, save the errors from the previous attempt.\r\n  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;\r\n\r\n  if (isRootDehydrated(root)) {\r\n    // The shell failed to hydrate. Set a flag to force a client rendering\r\n    // during the next attempt. To do this, we call prepareFreshStack now\r\n    // to create the root work-in-progress fiber. This is a bit weird in terms\r\n    // of factoring, because it relies on renderRootSync not calling\r\n    // prepareFreshStack again in the call below, which happens because the\r\n    // root and lanes haven't changed.\r\n    //\r\n    // TODO: I think what we should do is set ForceClientRender inside\r\n    // throwException, like we do for nested Suspense boundaries. The reason\r\n    // it's here instead is so we can switch to the synchronous work loop, too.\r\n    // Something to consider for a future refactor.\r\n    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);\r\n    rootWorkInProgress.flags |= ForceClientRender;\r\n\r\n    {\r\n      errorHydratingContainer(root.containerInfo);\r\n    }\r\n  }\r\n\r\n  var exitStatus = renderRootSync(root, errorRetryLanes);\r\n\r\n  if (exitStatus !== RootErrored) {\r\n    // Successfully finished rendering on retry\r\n    // The errors from the failed first attempt have been recovered. Add\r\n    // them to the collection of recoverable errors. We'll log them in the\r\n    // commit phase.\r\n    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;\r\n    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors\r\n    // from the first attempt, to preserve the causal sequence.\r\n\r\n    if (errorsFromSecondAttempt !== null) {\r\n      queueRecoverableErrors(errorsFromSecondAttempt);\r\n    }\r\n  }\r\n\r\n  return exitStatus;\r\n}\r\n\r\nfunction queueRecoverableErrors(errors) {\r\n  if (workInProgressRootRecoverableErrors === null) {\r\n    workInProgressRootRecoverableErrors = errors;\r\n  } else {\r\n    workInProgressRootRecoverableErrors.push.apply(\r\n      workInProgressRootRecoverableErrors,\r\n      errors\r\n    );\r\n  }\r\n}\r\n\r\nfunction finishConcurrentRender(root, exitStatus, lanes) {\r\n  switch (exitStatus) {\r\n    case RootInProgress:\r\n    case RootFatalErrored: {\r\n      throw new Error(\"Root did not complete. This is a bug in React.\");\r\n    }\r\n    // Flow knows about invariant, so it complains if I add a break\r\n    // statement, but eslint doesn't know about invariant, so it complains\r\n    // if I do. eslint-disable-next-line no-fallthrough\r\n\r\n    case RootErrored: {\r\n      // We should have already attempted to retry this tree. If we reached\r\n      // this point, it errored again. Commit it.\r\n      commitRoot(\r\n        root,\r\n        workInProgressRootRecoverableErrors,\r\n        workInProgressTransitions\r\n      );\r\n      break;\r\n    }\r\n\r\n    case RootSuspended: {\r\n      markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we\r\n      // should immediately commit it or wait a bit.\r\n\r\n      if (\r\n        includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope\r\n        !shouldForceFlushFallbacksInDEV()\r\n      ) {\r\n        // This render only included retries, no updates. Throttle committing\r\n        // retries so that we don't show too many loading states too quickly.\r\n        var msUntilTimeout =\r\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.\r\n\r\n        if (msUntilTimeout > 10) {\r\n          var nextLanes = getNextLanes(root, NoLanes);\r\n\r\n          if (nextLanes !== NoLanes) {\r\n            // There's additional work on this root.\r\n            break;\r\n          }\r\n\r\n          var suspendedLanes = root.suspendedLanes;\r\n\r\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\r\n            // We should prefer to render the fallback of at the last\r\n            // suspended level. Ping the last suspended level to try\r\n            // rendering it again.\r\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\r\n            var eventTime = requestEventTime();\r\n            markRootPinged(root, suspendedLanes);\r\n            break;\r\n          } // The render is suspended, it hasn't timed out, and there's no\r\n          // lower priority work to do. Instead of committing the fallback\r\n          // immediately, wait for more data to arrive.\r\n\r\n          root.timeoutHandle = scheduleTimeout(\r\n            commitRoot.bind(\r\n              null,\r\n              root,\r\n              workInProgressRootRecoverableErrors,\r\n              workInProgressTransitions\r\n            ),\r\n            msUntilTimeout\r\n          );\r\n          break;\r\n        }\r\n      } // The work expired. Commit immediately.\r\n\r\n      commitRoot(\r\n        root,\r\n        workInProgressRootRecoverableErrors,\r\n        workInProgressTransitions\r\n      );\r\n      break;\r\n    }\r\n\r\n    case RootSuspendedWithDelay: {\r\n      markRootSuspended$1(root, lanes);\r\n\r\n      if (includesOnlyTransitions(lanes)) {\r\n        // This is a transition, so we should exit without committing a\r\n        // placeholder and without scheduling a timeout. Delay indefinitely\r\n        // until we receive more data.\r\n        break;\r\n      }\r\n\r\n      if (!shouldForceFlushFallbacksInDEV()) {\r\n        // This is not a transition, but we did trigger an avoided state.\r\n        // Schedule a placeholder to display after a short delay, using the Just\r\n        // Noticeable Difference.\r\n        // TODO: Is the JND optimization worth the added complexity? If this is\r\n        // the only reason we track the event time, then probably not.\r\n        // Consider removing.\r\n        var mostRecentEventTime = getMostRecentEventTime(root, lanes);\r\n        var eventTimeMs = mostRecentEventTime;\r\n        var timeElapsedMs = now() - eventTimeMs;\r\n\r\n        var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.\r\n\r\n        if (_msUntilTimeout > 10) {\r\n          // Instead of committing the fallback immediately, wait for more data\r\n          // to arrive.\r\n          root.timeoutHandle = scheduleTimeout(\r\n            commitRoot.bind(\r\n              null,\r\n              root,\r\n              workInProgressRootRecoverableErrors,\r\n              workInProgressTransitions\r\n            ),\r\n            _msUntilTimeout\r\n          );\r\n          break;\r\n        }\r\n      } // Commit the placeholder.\r\n\r\n      commitRoot(\r\n        root,\r\n        workInProgressRootRecoverableErrors,\r\n        workInProgressTransitions\r\n      );\r\n      break;\r\n    }\r\n\r\n    case RootCompleted: {\r\n      // The work completed. Ready to commit.\r\n      commitRoot(\r\n        root,\r\n        workInProgressRootRecoverableErrors,\r\n        workInProgressTransitions\r\n      );\r\n      break;\r\n    }\r\n\r\n    default: {\r\n      throw new Error(\"Unknown root exit status.\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction isRenderConsistentWithExternalStores(finishedWork) {\r\n  // Search the rendered tree for external store reads, and check whether the\r\n  // stores were mutated in a concurrent event. Intentionally using an iterative\r\n  // loop instead of recursion so we can exit early.\r\n  var node = finishedWork;\r\n\r\n  while (true) {\r\n    if (node.flags & StoreConsistency) {\r\n      var updateQueue = node.updateQueue;\r\n\r\n      if (updateQueue !== null) {\r\n        var checks = updateQueue.stores;\r\n\r\n        if (checks !== null) {\r\n          for (var i = 0; i < checks.length; i++) {\r\n            var check = checks[i];\r\n            var getSnapshot = check.getSnapshot;\r\n            var renderedValue = check.value;\r\n\r\n            try {\r\n              if (!objectIs(getSnapshot(), renderedValue)) {\r\n                // Found an inconsistent store.\r\n                return false;\r\n              }\r\n            } catch (error) {\r\n              // If `getSnapshot` throws, return `false`. This will schedule\r\n              // a re-render, and the error will be rethrown during render.\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var child = node.child;\r\n\r\n    if (node.subtreeFlags & StoreConsistency && child !== null) {\r\n      child.return = node;\r\n      node = child;\r\n      continue;\r\n    }\r\n\r\n    if (node === finishedWork) {\r\n      return true;\r\n    }\r\n\r\n    while (node.sibling === null) {\r\n      if (node.return === null || node.return === finishedWork) {\r\n        return true;\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n\r\n    node.sibling.return = node.return;\r\n    node = node.sibling;\r\n  } // Flow doesn't know this is unreachable, but eslint does\r\n  // eslint-disable-next-line no-unreachable\r\n\r\n  return true;\r\n}\r\n\r\nfunction markRootSuspended$1(root, suspendedLanes) {\r\n  // When suspending, we should always exclude lanes that were pinged or (more\r\n  // rarely, since we try to avoid it) updated during the render phase.\r\n  // TODO: Lol maybe there's a better way to factor this besides this\r\n  // obnoxiously named function :)\r\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\r\n  suspendedLanes = removeLanes(\r\n    suspendedLanes,\r\n    workInProgressRootInterleavedUpdatedLanes\r\n  );\r\n  markRootSuspended(root, suspendedLanes);\r\n} // This is the entry point for synchronous tasks that don't go\r\n// through Scheduler\r\n\r\nfunction performSyncWorkOnRoot(root) {\r\n  {\r\n    syncNestedUpdateFlag();\r\n  }\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error(\"Should not already be working.\");\r\n  }\r\n\r\n  flushPassiveEffects();\r\n  var lanes = getNextLanes(root, NoLanes);\r\n\r\n  if (!includesSomeLane(lanes, SyncLane)) {\r\n    // There's no remaining sync work left.\r\n    ensureRootIsScheduled(root, now());\r\n    return null;\r\n  }\r\n\r\n  var exitStatus = renderRootSync(root, lanes);\r\n\r\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\r\n    // If something threw an error, try rendering one more time. We'll render\r\n    // synchronously to block concurrent data mutations, and we'll includes\r\n    // all pending updates are included. If it still fails after the second\r\n    // attempt, we'll give up and commit the resulting tree.\r\n    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\r\n\r\n    if (errorRetryLanes !== NoLanes) {\r\n      lanes = errorRetryLanes;\r\n      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);\r\n    }\r\n  }\r\n\r\n  if (exitStatus === RootFatalErrored) {\r\n    var fatalError = workInProgressRootFatalError;\r\n    prepareFreshStack(root, NoLanes);\r\n    markRootSuspended$1(root, lanes);\r\n    ensureRootIsScheduled(root, now());\r\n    throw fatalError;\r\n  }\r\n\r\n  if (exitStatus === RootDidNotComplete) {\r\n    throw new Error(\"Root did not complete. This is a bug in React.\");\r\n  } // We now have a consistent tree. Because this is a sync render, we\r\n  // will commit it even if something suspended.\r\n\r\n  var finishedWork = root.current.alternate;\r\n  root.finishedWork = finishedWork;\r\n  root.finishedLanes = lanes;\r\n  commitRoot(\r\n    root,\r\n    workInProgressRootRecoverableErrors,\r\n    workInProgressTransitions\r\n  ); // Before exiting, make sure there's a callback scheduled for the next\r\n  // pending level.\r\n\r\n  ensureRootIsScheduled(root, now());\r\n  return null;\r\n}\r\nfunction batchedUpdates$1(fn, a) {\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= BatchedContext;\r\n\r\n  try {\r\n    return fn(a);\r\n  } finally {\r\n    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer\r\n    // most batchedUpdates-like method.\r\n\r\n    if (\r\n      executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\r\n      !ReactCurrentActQueue$1.isBatchingLegacy\r\n    ) {\r\n      resetRenderTimer();\r\n      flushSyncCallbacksOnlyInLegacyMode();\r\n    }\r\n  }\r\n}\r\n// Warning, this opts-out of checking the function body.\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction flushSync(fn) {\r\n  // In legacy mode, we flush pending passive effects at the beginning of the\r\n  // next event, not at the end of the previous one.\r\n  if (\r\n    rootWithPendingPassiveEffects !== null &&\r\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\r\n    (executionContext & (RenderContext | CommitContext)) === NoContext\r\n  ) {\r\n    flushPassiveEffects();\r\n  }\r\n\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= BatchedContext;\r\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n  var previousPriority = getCurrentUpdatePriority();\r\n\r\n  try {\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n\r\n    if (fn) {\r\n      return fn();\r\n    } else {\r\n      return undefined;\r\n    }\r\n  } finally {\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.\r\n    // Note that this will happen even if batchedUpdates is higher up\r\n    // the stack.\r\n\r\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\r\n      flushSyncCallbacks();\r\n    }\r\n  }\r\n}\r\nfunction pushRenderLanes(fiber, lanes) {\r\n  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\r\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\r\n  workInProgressRootIncludedLanes = mergeLanes(\r\n    workInProgressRootIncludedLanes,\r\n    lanes\r\n  );\r\n}\r\nfunction popRenderLanes(fiber) {\r\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\r\n  pop(subtreeRenderLanesCursor, fiber);\r\n}\r\n\r\nfunction prepareFreshStack(root, lanes) {\r\n  root.finishedWork = null;\r\n  root.finishedLanes = NoLanes;\r\n  var timeoutHandle = root.timeoutHandle;\r\n\r\n  if (timeoutHandle !== noTimeout) {\r\n    // The root previous suspended and scheduled a timeout to commit a fallback\r\n    // state. Now that we have additional work, cancel the timeout.\r\n    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\r\n\r\n    cancelTimeout(timeoutHandle);\r\n  }\r\n\r\n  if (workInProgress !== null) {\r\n    var interruptedWork = workInProgress.return;\r\n\r\n    while (interruptedWork !== null) {\r\n      var current = interruptedWork.alternate;\r\n      unwindInterruptedWork(current, interruptedWork);\r\n      interruptedWork = interruptedWork.return;\r\n    }\r\n  }\r\n\r\n  workInProgressRoot = root;\r\n  var rootWorkInProgress = createWorkInProgress(root.current, null);\r\n  workInProgress = rootWorkInProgress;\r\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\r\n  workInProgressRootExitStatus = RootInProgress;\r\n  workInProgressRootFatalError = null;\r\n  workInProgressRootSkippedLanes = NoLanes;\r\n  workInProgressRootInterleavedUpdatedLanes = NoLanes;\r\n  workInProgressRootPingedLanes = NoLanes;\r\n  workInProgressRootConcurrentErrors = null;\r\n  workInProgressRootRecoverableErrors = null;\r\n  finishQueueingConcurrentUpdates();\r\n\r\n  {\r\n    ReactStrictModeWarnings.discardPendingWarnings();\r\n  }\r\n\r\n  return rootWorkInProgress;\r\n}\r\n\r\nfunction handleError(root, thrownValue) {\r\n  do {\r\n    var erroredWork = workInProgress;\r\n\r\n    try {\r\n      // Reset module-level state that was set during the render phase.\r\n      resetContextDependencies();\r\n      resetHooksAfterThrow();\r\n      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a\r\n      // separate issue. Write a regression test using string refs.\r\n\r\n      ReactCurrentOwner$2.current = null;\r\n\r\n      if (erroredWork === null || erroredWork.return === null) {\r\n        // Expected to be working on a non-root fiber. This is a fatal error\r\n        // because there's no ancestor that can handle it; the root is\r\n        // supposed to capture all errors that weren't caught by an error\r\n        // boundary.\r\n        workInProgressRootExitStatus = RootFatalErrored;\r\n        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next\r\n        // sibling, or the parent if there are no siblings. But since the root\r\n        // has no siblings nor a parent, we set it to null. Usually this is\r\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\r\n        // intentionally not calling those, we need set it here.\r\n        // TODO: Consider calling `unwindWork` to pop the contexts.\r\n\r\n        workInProgress = null;\r\n        return;\r\n      }\r\n\r\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\r\n        // Record the time spent rendering before an error was thrown. This\r\n        // avoids inaccurate Profiler durations in the case of a\r\n        // suspended render.\r\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\r\n      }\r\n\r\n      if (enableSchedulingProfiler) {\r\n        markComponentRenderStopped();\r\n\r\n        if (\r\n          thrownValue !== null &&\r\n          typeof thrownValue === \"object\" &&\r\n          typeof thrownValue.then === \"function\"\r\n        ) {\r\n          var wakeable = thrownValue;\r\n          markComponentSuspended(\r\n            erroredWork,\r\n            wakeable,\r\n            workInProgressRootRenderLanes\r\n          );\r\n        } else {\r\n          markComponentErrored(\r\n            erroredWork,\r\n            thrownValue,\r\n            workInProgressRootRenderLanes\r\n          );\r\n        }\r\n      }\r\n\r\n      throwException(\r\n        root,\r\n        erroredWork.return,\r\n        erroredWork,\r\n        thrownValue,\r\n        workInProgressRootRenderLanes\r\n      );\r\n      completeUnitOfWork(erroredWork);\r\n    } catch (yetAnotherThrownValue) {\r\n      // Something in the return path also threw.\r\n      thrownValue = yetAnotherThrownValue;\r\n\r\n      if (workInProgress === erroredWork && erroredWork !== null) {\r\n        // If this boundary has already errored, then we had trouble processing\r\n        // the error. Bubble it to the next boundary.\r\n        erroredWork = erroredWork.return;\r\n        workInProgress = erroredWork;\r\n      } else {\r\n        erroredWork = workInProgress;\r\n      }\r\n\r\n      continue;\r\n    } // Return to the normal work loop.\r\n\r\n    return;\r\n  } while (true);\r\n}\r\n\r\nfunction pushDispatcher() {\r\n  var prevDispatcher = ReactCurrentDispatcher$2.current;\r\n  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;\r\n\r\n  if (prevDispatcher === null) {\r\n    // The React isomorphic package does not include a default dispatcher.\r\n    // Instead the first renderer will lazily attach one, in order to give\r\n    // nicer error messages.\r\n    return ContextOnlyDispatcher;\r\n  } else {\r\n    return prevDispatcher;\r\n  }\r\n}\r\n\r\nfunction popDispatcher(prevDispatcher) {\r\n  ReactCurrentDispatcher$2.current = prevDispatcher;\r\n}\r\n\r\nfunction markCommitTimeOfFallback() {\r\n  globalMostRecentFallbackTime = now();\r\n}\r\nfunction markSkippedUpdateLanes(lane) {\r\n  workInProgressRootSkippedLanes = mergeLanes(\r\n    lane,\r\n    workInProgressRootSkippedLanes\r\n  );\r\n}\r\nfunction renderDidSuspend() {\r\n  if (workInProgressRootExitStatus === RootInProgress) {\r\n    workInProgressRootExitStatus = RootSuspended;\r\n  }\r\n}\r\nfunction renderDidSuspendDelayIfPossible() {\r\n  if (\r\n    workInProgressRootExitStatus === RootInProgress ||\r\n    workInProgressRootExitStatus === RootSuspended ||\r\n    workInProgressRootExitStatus === RootErrored\r\n  ) {\r\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\r\n  } // Check if there are updates that we skipped tree that might have unblocked\r\n  // this render.\r\n\r\n  if (\r\n    workInProgressRoot !== null &&\r\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\r\n      includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))\r\n  ) {\r\n    // Mark the current render as suspended so that we switch to working on\r\n    // the updates that were skipped. Usually we only suspend at the end of\r\n    // the render phase.\r\n    // TODO: We should probably always mark the root as suspended immediately\r\n    // (inside this function), since by suspending at the end of the render\r\n    // phase introduces a potential mistake where we suspend lanes that were\r\n    // pinged or updated while we were rendering.\r\n    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);\r\n  }\r\n}\r\nfunction renderDidError(error) {\r\n  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {\r\n    workInProgressRootExitStatus = RootErrored;\r\n  }\r\n\r\n  if (workInProgressRootConcurrentErrors === null) {\r\n    workInProgressRootConcurrentErrors = [error];\r\n  } else {\r\n    workInProgressRootConcurrentErrors.push(error);\r\n  }\r\n} // Called during render to determine if anything has suspended.\r\n// Returns false if we're not sure.\r\n\r\nfunction renderHasNotSuspendedYet() {\r\n  // If something errored or completed, we can't really be sure,\r\n  // so those are false.\r\n  return workInProgressRootExitStatus === RootInProgress;\r\n}\r\n\r\nfunction renderRootSync(root, lanes) {\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= RenderContext;\r\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\r\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\r\n\r\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\r\n    {\r\n      if (isDevToolsPresent) {\r\n        var memoizedUpdaters = root.memoizedUpdaters;\r\n\r\n        if (memoizedUpdaters.size > 0) {\r\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\r\n          memoizedUpdaters.clear();\r\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\r\n        // If we bailout on this work, we'll move them back (like above).\r\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\r\n        // That way we can keep the current update and future updates separate.\r\n\r\n        movePendingFibersToMemoized(root, lanes);\r\n      }\r\n    }\r\n\r\n    workInProgressTransitions = getTransitionsForLanes();\r\n    prepareFreshStack(root, lanes);\r\n  }\r\n\r\n  do {\r\n    try {\r\n      workLoopSync();\r\n      break;\r\n    } catch (thrownValue) {\r\n      handleError(root, thrownValue);\r\n    }\r\n  } while (true);\r\n\r\n  resetContextDependencies();\r\n  executionContext = prevExecutionContext;\r\n  popDispatcher(prevDispatcher);\r\n\r\n  if (workInProgress !== null) {\r\n    // This is a sync render, so we should have finished the whole tree.\r\n    throw new Error(\r\n      \"Cannot commit an incomplete root. This error is likely caused by a \" +\r\n        \"bug in React. Please file an issue.\"\r\n    );\r\n  }\r\n\r\n  workInProgressRoot = null;\r\n  workInProgressRootRenderLanes = NoLanes;\r\n  return workInProgressRootExitStatus;\r\n} // The work loop is an extremely hot path. Tell Closure not to inline it.\r\n\r\n/** @noinline */\r\n\r\nfunction workLoopSync() {\r\n  // Already timed out, so perform work without checking if we need to yield.\r\n  while (workInProgress !== null) {\r\n    performUnitOfWork(workInProgress);\r\n  }\r\n}\r\n\r\nfunction renderRootConcurrent(root, lanes) {\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= RenderContext;\r\n  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack\r\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\r\n\r\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\r\n    {\r\n      if (isDevToolsPresent) {\r\n        var memoizedUpdaters = root.memoizedUpdaters;\r\n\r\n        if (memoizedUpdaters.size > 0) {\r\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\r\n          memoizedUpdaters.clear();\r\n        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\r\n        // If we bailout on this work, we'll move them back (like above).\r\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\r\n        // That way we can keep the current update and future updates separate.\r\n\r\n        movePendingFibersToMemoized(root, lanes);\r\n      }\r\n    }\r\n\r\n    workInProgressTransitions = getTransitionsForLanes();\r\n    resetRenderTimer();\r\n    prepareFreshStack(root, lanes);\r\n  }\r\n\r\n  do {\r\n    try {\r\n      workLoopConcurrent();\r\n      break;\r\n    } catch (thrownValue) {\r\n      handleError(root, thrownValue);\r\n    }\r\n  } while (true);\r\n\r\n  resetContextDependencies();\r\n  popDispatcher(prevDispatcher);\r\n  executionContext = prevExecutionContext;\r\n\r\n  if (workInProgress !== null) {\r\n    return RootInProgress;\r\n  } else {\r\n    workInProgressRoot = null;\r\n    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.\r\n\r\n    return workInProgressRootExitStatus;\r\n  }\r\n}\r\n/** @noinline */\r\n\r\nfunction workLoopConcurrent() {\r\n  // Perform work until Scheduler asks us to yield\r\n  while (workInProgress !== null && !shouldYield()) {\r\n    performUnitOfWork(workInProgress);\r\n  }\r\n}\r\n\r\nfunction performUnitOfWork(unitOfWork) {\r\n  // The current, flushed, state of this fiber is the alternate. Ideally\r\n  // nothing should rely on this, but relying on it here means that we don't\r\n  // need an additional field on the work in progress.\r\n  var current = unitOfWork.alternate;\r\n  setCurrentFiber(unitOfWork);\r\n  var next;\r\n\r\n  if ((unitOfWork.mode & ProfileMode) !== NoMode) {\r\n    startProfilerTimer(unitOfWork);\r\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\r\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\r\n  } else {\r\n    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);\r\n  }\r\n\r\n  resetCurrentFiber();\r\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\r\n\r\n  if (next === null) {\r\n    // If this doesn't spawn new work, complete the current work.\r\n    completeUnitOfWork(unitOfWork);\r\n  } else {\r\n    workInProgress = next;\r\n  }\r\n\r\n  ReactCurrentOwner$2.current = null;\r\n}\r\n\r\nfunction completeUnitOfWork(unitOfWork) {\r\n  // Attempt to complete the current unit of work, then move to the next\r\n  // sibling. If there are no more siblings, return to the parent fiber.\r\n  var completedWork = unitOfWork;\r\n\r\n  do {\r\n    // The current, flushed, state of this fiber is the alternate. Ideally\r\n    // nothing should rely on this, but relying on it here means that we don't\r\n    // need an additional field on the work in progress.\r\n    var current = completedWork.alternate;\r\n    var returnFiber = completedWork.return; // Check if the work completed or if something threw.\r\n\r\n    if ((completedWork.flags & Incomplete) === NoFlags) {\r\n      setCurrentFiber(completedWork);\r\n      var next = void 0;\r\n\r\n      if ((completedWork.mode & ProfileMode) === NoMode) {\r\n        next = completeWork(current, completedWork, subtreeRenderLanes);\r\n      } else {\r\n        startProfilerTimer(completedWork);\r\n        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.\r\n\r\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\r\n      }\r\n\r\n      resetCurrentFiber();\r\n\r\n      if (next !== null) {\r\n        // Completing this fiber spawned new work. Work on that next.\r\n        workInProgress = next;\r\n        return;\r\n      }\r\n    } else {\r\n      // This fiber did not complete because something threw. Pop values off\r\n      // the stack without entering the complete phase. If this is a boundary,\r\n      // capture values if possible.\r\n      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.\r\n\r\n      if (_next !== null) {\r\n        // If completing this work spawned new work, do that next. We'll come\r\n        // back here again.\r\n        // Since we're restarting, remove anything that is not a host effect\r\n        // from the effect tag.\r\n        _next.flags &= HostEffectMask;\r\n        workInProgress = _next;\r\n        return;\r\n      }\r\n\r\n      if ((completedWork.mode & ProfileMode) !== NoMode) {\r\n        // Record the render duration for the fiber that errored.\r\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.\r\n\r\n        var actualDuration = completedWork.actualDuration;\r\n        var child = completedWork.child;\r\n\r\n        while (child !== null) {\r\n          actualDuration += child.actualDuration;\r\n          child = child.sibling;\r\n        }\r\n\r\n        completedWork.actualDuration = actualDuration;\r\n      }\r\n\r\n      if (returnFiber !== null) {\r\n        // Mark the parent fiber as incomplete and clear its subtree flags.\r\n        returnFiber.flags |= Incomplete;\r\n        returnFiber.subtreeFlags = NoFlags;\r\n        returnFiber.deletions = null;\r\n      } else {\r\n        // We've unwound all the way to the root.\r\n        workInProgressRootExitStatus = RootDidNotComplete;\r\n        workInProgress = null;\r\n        return;\r\n      }\r\n    }\r\n\r\n    var siblingFiber = completedWork.sibling;\r\n\r\n    if (siblingFiber !== null) {\r\n      // If there is more work to do in this returnFiber, do that next.\r\n      workInProgress = siblingFiber;\r\n      return;\r\n    } // Otherwise, return to the parent\r\n\r\n    completedWork = returnFiber; // Update the next thing we're working on in case something throws.\r\n\r\n    workInProgress = completedWork;\r\n  } while (completedWork !== null); // We've reached the root.\r\n\r\n  if (workInProgressRootExitStatus === RootInProgress) {\r\n    workInProgressRootExitStatus = RootCompleted;\r\n  }\r\n}\r\n\r\nfunction commitRoot(root, recoverableErrors, transitions) {\r\n  // TODO: This no longer makes any sense. We already wrap the mutation and\r\n  // layout phases. Should be able to remove.\r\n  var previousUpdateLanePriority = getCurrentUpdatePriority();\r\n  var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n\r\n  try {\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n    commitRootImpl(\r\n      root,\r\n      recoverableErrors,\r\n      transitions,\r\n      previousUpdateLanePriority\r\n    );\r\n  } finally {\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n    setCurrentUpdatePriority(previousUpdateLanePriority);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction commitRootImpl(\r\n  root,\r\n  recoverableErrors,\r\n  transitions,\r\n  renderPriorityLevel\r\n) {\r\n  do {\r\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\r\n    // means `flushPassiveEffects` will sometimes result in additional\r\n    // passive effects. So we need to keep flushing in a loop until there are\r\n    // no more pending effects.\r\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\r\n    // flush synchronous work at the end, to avoid factoring hazards like this.\r\n    flushPassiveEffects();\r\n  } while (rootWithPendingPassiveEffects !== null);\r\n\r\n  flushRenderPhaseStrictModeWarningsInDEV();\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error(\"Should not already be working.\");\r\n  }\r\n\r\n  var finishedWork = root.finishedWork;\r\n  var lanes = root.finishedLanes;\r\n\r\n  if (finishedWork === null) {\r\n    return null;\r\n  } else {\r\n    {\r\n      if (lanes === NoLanes) {\r\n        error(\r\n          \"root.finishedLanes should not be empty during a commit. This is a \" +\r\n            \"bug in React.\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  root.finishedWork = null;\r\n  root.finishedLanes = NoLanes;\r\n\r\n  if (finishedWork === root.current) {\r\n    throw new Error(\r\n      \"Cannot commit the same tree as before. This error is likely caused by \" +\r\n        \"a bug in React. Please file an issue.\"\r\n    );\r\n  } // commitRoot never returns a continuation; it always finishes synchronously.\r\n  // So we can clear these now to allow a new callback to be scheduled.\r\n\r\n  root.callbackNode = null;\r\n  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first\r\n  // pending time is whatever is left on the root fiber.\r\n\r\n  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\r\n  markRootFinished(root, remainingLanes);\r\n\r\n  if (root === workInProgressRoot) {\r\n    // We can reset these now that they are finished.\r\n    workInProgressRoot = null;\r\n    workInProgress = null;\r\n    workInProgressRootRenderLanes = NoLanes;\r\n  } // If there are pending passive effects, schedule a callback to process them.\r\n  // Do this as early as possible, so it is queued before anything else that\r\n  // might get scheduled in the commit phase. (See #16714.)\r\n  // TODO: Delete all other places that schedule the passive effect callback\r\n  // They're redundant.\r\n\r\n  if (\r\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\r\n    (finishedWork.flags & PassiveMask) !== NoFlags\r\n  ) {\r\n    if (!rootDoesHavePassiveEffects) {\r\n      rootDoesHavePassiveEffects = true;\r\n      // to store it in pendingPassiveTransitions until they get processed\r\n      // We need to pass this through as an argument to commitRoot\r\n      // because workInProgressTransitions might have changed between\r\n      // the previous render and commit if we throttle the commit\r\n      // with setTimeout\r\n\r\n      pendingPassiveTransitions = transitions;\r\n      scheduleCallback$1(NormalPriority, function() {\r\n        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool\r\n        // *after* passive effects fire to avoid freeing a cache pool that may\r\n        // be referenced by a node in the tree (HostRoot, Cache boundary etc)\r\n\r\n        return null;\r\n      });\r\n    }\r\n  } // Check if there are any effects in the whole tree.\r\n  // TODO: This is left over from the effect list implementation, where we had\r\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\r\n  // only other reason this optimization exists is because it affects profiling.\r\n  // Reconsider whether this is necessary.\r\n\r\n  var subtreeHasEffects =\r\n    (finishedWork.subtreeFlags &\r\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\r\n    NoFlags;\r\n  var rootHasEffect =\r\n    (finishedWork.flags &\r\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\r\n    NoFlags;\r\n\r\n  if (subtreeHasEffects || rootHasEffect) {\r\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n    ReactCurrentBatchConfig$2.transition = null;\r\n    var previousPriority = getCurrentUpdatePriority();\r\n    setCurrentUpdatePriority(DiscreteEventPriority);\r\n    var prevExecutionContext = executionContext;\r\n    executionContext |= CommitContext; // Reset this to null before calling lifecycles\r\n\r\n    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass\r\n    // of the effect list for each phase: all mutation effects come before all\r\n    // layout effects, and so on.\r\n    // The first phase a \"before mutation\" phase. We use this phase to read the\r\n    // state of the host tree right before we mutate it. This is where\r\n    // getSnapshotBeforeUpdate is called.\r\n\r\n    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\r\n      root,\r\n      finishedWork\r\n    );\r\n\r\n    {\r\n      // Mark the current commit time to be shared by all Profilers in this\r\n      // batch. This enables them to be grouped later.\r\n      recordCommitTime();\r\n    }\r\n\r\n    commitMutationEffects(root, finishedWork, lanes);\r\n\r\n    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after\r\n    // the mutation phase, so that the previous tree is still current during\r\n    // componentWillUnmount, but before the layout phase, so that the finished\r\n    // work is current during componentDidMount/Update.\r\n\r\n    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read\r\n\r\n    commitLayoutEffects(finishedWork, root, lanes);\r\n    // opportunity to paint.\r\n\r\n    requestPaint();\r\n    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.\r\n\r\n    setCurrentUpdatePriority(previousPriority);\r\n    ReactCurrentBatchConfig$2.transition = prevTransition;\r\n  } else {\r\n    // No effects.\r\n    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were\r\n    // no effects.\r\n    // TODO: Maybe there's a better way to report this.\r\n\r\n    {\r\n      recordCommitTime();\r\n    }\r\n  }\r\n\r\n  if (rootDoesHavePassiveEffects) {\r\n    // This commit has passive effects. Stash a reference to them. But don't\r\n    // schedule a callback until after flushing layout work.\r\n    rootDoesHavePassiveEffects = false;\r\n    rootWithPendingPassiveEffects = root;\r\n    pendingPassiveEffectsLanes = lanes;\r\n  } else {\r\n    {\r\n      nestedPassiveUpdateCount = 0;\r\n      rootWithPassiveNestedUpdates = null;\r\n    }\r\n  } // Read this again, since an effect might have updated it\r\n\r\n  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root\r\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\r\n  // is to detect whether something might have called setState inside\r\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\r\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\r\n  // `getDerivedStateFromError` instead. However, it could be improved by\r\n  // checking if remainingLanes includes Sync work, instead of whether there's\r\n  // any work remaining at all (which would also include stuff like Suspense\r\n  // retries or transitions). It's been like this for a while, though, so fixing\r\n  // it probably isn't that urgent.\r\n\r\n  if (remainingLanes === NoLanes) {\r\n    // If there's no remaining work, we can clear the set of already failed\r\n    // error boundaries.\r\n    legacyErrorBoundariesThatAlreadyFailed = null;\r\n  }\r\n\r\n  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);\r\n\r\n  {\r\n    if (isDevToolsPresent) {\r\n      root.memoizedUpdaters.clear();\r\n    }\r\n  }\r\n  // additional work on this root is scheduled.\r\n\r\n  ensureRootIsScheduled(root, now());\r\n\r\n  if (recoverableErrors !== null) {\r\n    // There were errors during this render, but recovered from them without\r\n    // needing to surface it to the UI. We log them here.\r\n    var onRecoverableError = root.onRecoverableError;\r\n\r\n    for (var i = 0; i < recoverableErrors.length; i++) {\r\n      var recoverableError = recoverableErrors[i];\r\n      var componentStack = recoverableError.stack;\r\n      var digest = recoverableError.digest;\r\n      onRecoverableError(recoverableError.value, {\r\n        componentStack: componentStack,\r\n        digest: digest\r\n      });\r\n    }\r\n  }\r\n\r\n  if (hasUncaughtError) {\r\n    hasUncaughtError = false;\r\n    var error$1 = firstUncaughtError;\r\n    firstUncaughtError = null;\r\n    throw error$1;\r\n  } // If the passive effects are the result of a discrete render, flush them\r\n  // synchronously at the end of the current task so that the result is\r\n  // immediately observable. Otherwise, we assume that they are not\r\n  // order-dependent and do not need to be observed by external systems, so we\r\n  // can wait until after paint.\r\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\r\n  // currently schedule the callback in multiple places, will wait until those\r\n  // are consolidated.\r\n\r\n  if (\r\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\r\n    root.tag !== LegacyRoot\r\n  ) {\r\n    flushPassiveEffects();\r\n  } // Read this again, since a passive effect might have updated it\r\n\r\n  remainingLanes = root.pendingLanes;\r\n\r\n  if (includesSomeLane(remainingLanes, SyncLane)) {\r\n    {\r\n      markNestedUpdateScheduled();\r\n    } // Count the number of times the root synchronously re-renders without\r\n    // finishing. If there are too many, it indicates an infinite update loop.\r\n\r\n    if (root === rootWithNestedUpdates) {\r\n      nestedUpdateCount++;\r\n    } else {\r\n      nestedUpdateCount = 0;\r\n      rootWithNestedUpdates = root;\r\n    }\r\n  } else {\r\n    nestedUpdateCount = 0;\r\n  } // If layout work was scheduled, flush it now.\r\n\r\n  flushSyncCallbacks();\r\n\r\n  return null;\r\n}\r\n\r\nfunction flushPassiveEffects() {\r\n  // Returns whether passive effects were flushed.\r\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\r\n  // probably just combine the two functions. I believe they were only separate\r\n  // in the first place because we used to wrap it with\r\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\r\n  // priority within React itself, so we can mutate the variable directly.\r\n  if (rootWithPendingPassiveEffects !== null) {\r\n    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\r\n    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);\r\n    var prevTransition = ReactCurrentBatchConfig$2.transition;\r\n    var previousPriority = getCurrentUpdatePriority();\r\n\r\n    try {\r\n      ReactCurrentBatchConfig$2.transition = null;\r\n      setCurrentUpdatePriority(priority);\r\n      return flushPassiveEffectsImpl();\r\n    } finally {\r\n      setCurrentUpdatePriority(previousPriority);\r\n      ReactCurrentBatchConfig$2.transition = prevTransition; // Once passive effects have run for the tree - giving components a\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\nfunction enqueuePendingPassiveProfilerEffect(fiber) {\r\n  {\r\n    pendingPassiveProfilerEffects.push(fiber);\r\n\r\n    if (!rootDoesHavePassiveEffects) {\r\n      rootDoesHavePassiveEffects = true;\r\n      scheduleCallback$1(NormalPriority, function() {\r\n        flushPassiveEffects();\r\n        return null;\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushPassiveEffectsImpl() {\r\n  if (rootWithPendingPassiveEffects === null) {\r\n    return false;\r\n  } // Cache and clear the transitions flag\r\n\r\n  var transitions = pendingPassiveTransitions;\r\n  pendingPassiveTransitions = null;\r\n  var root = rootWithPendingPassiveEffects;\r\n  var lanes = pendingPassiveEffectsLanes;\r\n  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\r\n  // Figure out why and fix it. It's not causing any known issues (probably\r\n  // because it's only used for profiling), but it's a refactor hazard.\r\n\r\n  pendingPassiveEffectsLanes = NoLanes;\r\n\r\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\r\n    throw new Error(\"Cannot flush passive effects while already rendering.\");\r\n  }\r\n\r\n  {\r\n    isFlushingPassiveEffects = true;\r\n    didScheduleUpdateDuringPassiveEffects = false;\r\n  }\r\n\r\n  var prevExecutionContext = executionContext;\r\n  executionContext |= CommitContext;\r\n  commitPassiveUnmountEffects(root.current);\r\n  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects\r\n\r\n  {\r\n    var profilerEffects = pendingPassiveProfilerEffects;\r\n    pendingPassiveProfilerEffects = [];\r\n\r\n    for (var i = 0; i < profilerEffects.length; i++) {\r\n      var _fiber = profilerEffects[i];\r\n      commitPassiveEffectDurations(root, _fiber);\r\n    }\r\n  }\r\n\r\n  executionContext = prevExecutionContext;\r\n  flushSyncCallbacks();\r\n\r\n  {\r\n    // If additional passive effects were scheduled, increment a counter. If this\r\n    // exceeds the limit, we'll fire a warning.\r\n    if (didScheduleUpdateDuringPassiveEffects) {\r\n      if (root === rootWithPassiveNestedUpdates) {\r\n        nestedPassiveUpdateCount++;\r\n      } else {\r\n        nestedPassiveUpdateCount = 0;\r\n        rootWithPassiveNestedUpdates = root;\r\n      }\r\n    } else {\r\n      nestedPassiveUpdateCount = 0;\r\n    }\r\n\r\n    isFlushingPassiveEffects = false;\r\n    didScheduleUpdateDuringPassiveEffects = false;\r\n  } // TODO: Move to commitPassiveMountEffects\r\n\r\n  onPostCommitRoot(root);\r\n\r\n  {\r\n    var stateNode = root.current.stateNode;\r\n    stateNode.effectDuration = 0;\r\n    stateNode.passiveEffectDuration = 0;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction isAlreadyFailedLegacyErrorBoundary(instance) {\r\n  return (\r\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\r\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\r\n  );\r\n}\r\nfunction markLegacyErrorBoundaryAsFailed(instance) {\r\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\r\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\r\n  } else {\r\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\r\n  }\r\n}\r\n\r\nfunction prepareToThrowUncaughtError(error) {\r\n  if (!hasUncaughtError) {\r\n    hasUncaughtError = true;\r\n    firstUncaughtError = error;\r\n  }\r\n}\r\n\r\nvar onUncaughtError = prepareToThrowUncaughtError;\r\n\r\nfunction captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {\r\n  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);\r\n  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);\r\n  var root = enqueueUpdate(rootFiber, update, SyncLane);\r\n  var eventTime = requestEventTime();\r\n\r\n  if (root !== null) {\r\n    markRootUpdated(root, SyncLane, eventTime);\r\n    ensureRootIsScheduled(root, eventTime);\r\n  }\r\n}\r\n\r\nfunction captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {\r\n  {\r\n    reportUncaughtErrorInDEV(error$1);\r\n    setIsRunningInsertionEffect(false);\r\n  }\r\n\r\n  if (sourceFiber.tag === HostRoot) {\r\n    // Error was thrown at the root. There is no parent, so the root\r\n    // itself should capture it.\r\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);\r\n    return;\r\n  }\r\n\r\n  var fiber = null;\r\n\r\n  {\r\n    fiber = sourceFiber.return;\r\n  }\r\n\r\n  while (fiber !== null) {\r\n    if (fiber.tag === HostRoot) {\r\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);\r\n      return;\r\n    } else if (fiber.tag === ClassComponent) {\r\n      var ctor = fiber.type;\r\n      var instance = fiber.stateNode;\r\n\r\n      if (\r\n        typeof ctor.getDerivedStateFromError === \"function\" ||\r\n        (typeof instance.componentDidCatch === \"function\" &&\r\n          !isAlreadyFailedLegacyErrorBoundary(instance))\r\n      ) {\r\n        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);\r\n        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);\r\n        var root = enqueueUpdate(fiber, update, SyncLane);\r\n        var eventTime = requestEventTime();\r\n\r\n        if (root !== null) {\r\n          markRootUpdated(root, SyncLane, eventTime);\r\n          ensureRootIsScheduled(root, eventTime);\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    fiber = fiber.return;\r\n  }\r\n\r\n  {\r\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\r\n    // will fire for errors that are thrown by destroy functions inside deleted\r\n    // trees. What it should instead do is propagate the error to the parent of\r\n    // the deleted tree. In the meantime, do not add this warning to the\r\n    // allowlist; this is only for our internal use.\r\n    error(\r\n      \"Internal React error: Attempted to capture a commit phase error \" +\r\n        \"inside a detached tree. This indicates a bug in React. Likely \" +\r\n        \"causes include deleting the same fiber more than once, committing an \" +\r\n        \"already-finished tree, or an inconsistent return pointer.\\n\\n\" +\r\n        \"Error message:\\n\\n%s\",\r\n      error$1\r\n    );\r\n  }\r\n}\r\nfunction pingSuspendedRoot(root, wakeable, pingedLanes) {\r\n  var pingCache = root.pingCache;\r\n\r\n  if (pingCache !== null) {\r\n    // The wakeable resolved, so we no longer need to memoize, because it will\r\n    // never be thrown again.\r\n    pingCache.delete(wakeable);\r\n  }\r\n\r\n  var eventTime = requestEventTime();\r\n  markRootPinged(root, pingedLanes);\r\n  warnIfSuspenseResolutionNotWrappedWithActDEV(root);\r\n\r\n  if (\r\n    workInProgressRoot === root &&\r\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\r\n  ) {\r\n    // Received a ping at the same priority level at which we're currently\r\n    // rendering. We might want to restart this render. This should mirror\r\n    // the logic of whether or not a root suspends once it completes.\r\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\r\n    // we should probably never restart.\r\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\r\n    // so we can always restart.\r\n    if (\r\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\r\n      (workInProgressRootExitStatus === RootSuspended &&\r\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\r\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\r\n    ) {\r\n      // Restart from the root.\r\n      prepareFreshStack(root, NoLanes);\r\n    } else {\r\n      // Even though we can't restart right now, we might get an\r\n      // opportunity later. So we mark this render as having a ping.\r\n      workInProgressRootPingedLanes = mergeLanes(\r\n        workInProgressRootPingedLanes,\r\n        pingedLanes\r\n      );\r\n    }\r\n  }\r\n\r\n  ensureRootIsScheduled(root, eventTime);\r\n}\r\n\r\nfunction retryTimedOutBoundary(boundaryFiber, retryLane) {\r\n  // The boundary fiber (a Suspense component or SuspenseList component)\r\n  // previously was rendered in its fallback state. One of the promises that\r\n  // suspended it has resolved, which means at least part of the tree was\r\n  // likely unblocked. Try rendering again, at a new lanes.\r\n  if (retryLane === NoLane) {\r\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\r\n    // unnecessary entanglement?\r\n    retryLane = requestRetryLane(boundaryFiber);\r\n  } // TODO: Special case idle priority?\r\n\r\n  var eventTime = requestEventTime();\r\n  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);\r\n\r\n  if (root !== null) {\r\n    markRootUpdated(root, retryLane, eventTime);\r\n    ensureRootIsScheduled(root, eventTime);\r\n  }\r\n}\r\n\r\nfunction retryDehydratedSuspenseBoundary(boundaryFiber) {\r\n  var suspenseState = boundaryFiber.memoizedState;\r\n  var retryLane = NoLane;\r\n\r\n  if (suspenseState !== null) {\r\n    retryLane = suspenseState.retryLane;\r\n  }\r\n\r\n  retryTimedOutBoundary(boundaryFiber, retryLane);\r\n}\r\nfunction resolveRetryWakeable(boundaryFiber, wakeable) {\r\n  var retryLane = NoLane; // Default\r\n\r\n  var retryCache;\r\n\r\n  switch (boundaryFiber.tag) {\r\n    case SuspenseComponent:\r\n      retryCache = boundaryFiber.stateNode;\r\n      var suspenseState = boundaryFiber.memoizedState;\r\n\r\n      if (suspenseState !== null) {\r\n        retryLane = suspenseState.retryLane;\r\n      }\r\n\r\n      break;\r\n\r\n    case SuspenseListComponent:\r\n      retryCache = boundaryFiber.stateNode;\r\n      break;\r\n\r\n    default:\r\n      throw new Error(\r\n        \"Pinged unknown suspense boundary type. \" +\r\n          \"This is probably a bug in React.\"\r\n      );\r\n  }\r\n\r\n  if (retryCache !== null) {\r\n    // The wakeable resolved, so we no longer need to memoize, because it will\r\n    // never be thrown again.\r\n    retryCache.delete(wakeable);\r\n  }\r\n\r\n  retryTimedOutBoundary(boundaryFiber, retryLane);\r\n} // Computes the next Just Noticeable Difference (JND) boundary.\r\n// The theory is that a person can't tell the difference between small differences in time.\r\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\r\n// difference in the experience. However, waiting for longer might mean that we can avoid\r\n// showing an intermediate loading state. The longer we have already waited, the harder it\r\n// is to tell small differences in time. Therefore, the longer we've already waited,\r\n// the longer we can wait additionally. At some point we have to give up though.\r\n// We pick a train model where the next boundary commits at a consistent schedule.\r\n// These particular numbers are vague estimates. We expect to adjust them based on research.\r\n\r\nfunction jnd(timeElapsed) {\r\n  return timeElapsed < 120\r\n    ? 120\r\n    : timeElapsed < 480\r\n    ? 480\r\n    : timeElapsed < 1080\r\n    ? 1080\r\n    : timeElapsed < 1920\r\n    ? 1920\r\n    : timeElapsed < 3000\r\n    ? 3000\r\n    : timeElapsed < 4320\r\n    ? 4320\r\n    : ceil(timeElapsed / 1960) * 1960;\r\n}\r\n\r\nfunction checkForNestedUpdates() {\r\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\r\n    nestedUpdateCount = 0;\r\n    rootWithNestedUpdates = null;\r\n    throw new Error(\r\n      \"Maximum update depth exceeded. This can happen when a component \" +\r\n        \"repeatedly calls setState inside componentWillUpdate or \" +\r\n        \"componentDidUpdate. React limits the number of nested updates to \" +\r\n        \"prevent infinite loops.\"\r\n    );\r\n  }\r\n\r\n  {\r\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\r\n      nestedPassiveUpdateCount = 0;\r\n      rootWithPassiveNestedUpdates = null;\r\n\r\n      error(\r\n        \"Maximum update depth exceeded. This can happen when a component \" +\r\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\r\n          \"have a dependency array, or one of the dependencies changes on \" +\r\n          \"every render.\"\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\r\n  {\r\n    ReactStrictModeWarnings.flushLegacyContextWarning();\r\n\r\n    {\r\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\r\n    }\r\n  }\r\n}\r\n\r\nvar didWarnStateUpdateForNotYetMountedComponent = null;\r\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\r\n  {\r\n    if ((executionContext & RenderContext) !== NoContext) {\r\n      // We let the other warning about render phase updates deal with this one.\r\n      return;\r\n    }\r\n\r\n    if (!(fiber.mode & ConcurrentMode)) {\r\n      return;\r\n    }\r\n\r\n    var tag = fiber.tag;\r\n\r\n    if (\r\n      tag !== IndeterminateComponent &&\r\n      tag !== HostRoot &&\r\n      tag !== ClassComponent &&\r\n      tag !== FunctionComponent &&\r\n      tag !== ForwardRef &&\r\n      tag !== MemoComponent &&\r\n      tag !== SimpleMemoComponent\r\n    ) {\r\n      // Only warn for user-defined components, not internal ones like Suspense.\r\n      return;\r\n    } // We show the whole stack but dedupe on the top component's name because\r\n    // the problematic code almost always lies inside that component.\r\n\r\n    var componentName = getComponentNameFromFiber(fiber) || \"ReactComponent\";\r\n\r\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\r\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\r\n        return;\r\n      }\r\n\r\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\r\n    } else {\r\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\r\n    }\r\n\r\n    var previousFiber = current;\r\n\r\n    try {\r\n      setCurrentFiber(fiber);\r\n\r\n      error(\r\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\r\n          \"This indicates that you have a side-effect in your render function that \" +\r\n          \"asynchronously later calls tries to update the component. Move this work to \" +\r\n          \"useEffect instead.\"\r\n      );\r\n    } finally {\r\n      if (previousFiber) {\r\n        setCurrentFiber(fiber);\r\n      } else {\r\n        resetCurrentFiber();\r\n      }\r\n    }\r\n  }\r\n}\r\nvar beginWork$1;\r\n\r\n{\r\n  var dummyFiber = null;\r\n\r\n  beginWork$1 = function(current, unitOfWork, lanes) {\r\n    // If a component throws an error, we replay it again in a synchronously\r\n    // dispatched event, so that the debugger will treat it as an uncaught\r\n    // error See ReactErrorUtils for more information.\r\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\r\n    // fiber. If beginWork throws, we'll use this to reset the state.\r\n    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(\r\n      dummyFiber,\r\n      unitOfWork\r\n    );\r\n\r\n    try {\r\n      return beginWork(current, unitOfWork, lanes);\r\n    } catch (originalError) {\r\n      if (\r\n        didSuspendOrErrorWhileHydratingDEV() ||\r\n        (originalError !== null &&\r\n          typeof originalError === \"object\" &&\r\n          typeof originalError.then === \"function\")\r\n      ) {\r\n        // Don't replay promises.\r\n        // Don't replay errors if we are hydrating and have already suspended or handled an error\r\n        throw originalError;\r\n      } // Keep this code in sync with handleError; any changes here must have\r\n      // corresponding changes there.\r\n\r\n      resetContextDependencies();\r\n      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the\r\n      // same fiber again.\r\n      // Unwind the failed stack frame\r\n\r\n      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.\r\n\r\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\r\n\r\n      if (unitOfWork.mode & ProfileMode) {\r\n        // Reset the profiler timer.\r\n        startProfilerTimer(unitOfWork);\r\n      } // Run beginWork again.\r\n\r\n      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);\r\n\r\n      if (hasCaughtError()) {\r\n        var replayError = clearCaughtError();\r\n\r\n        if (\r\n          typeof replayError === \"object\" &&\r\n          replayError !== null &&\r\n          replayError._suppressLogging &&\r\n          typeof originalError === \"object\" &&\r\n          originalError !== null &&\r\n          !originalError._suppressLogging\r\n        ) {\r\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\r\n          originalError._suppressLogging = true;\r\n        }\r\n      } // We always throw the original error in case the second render pass is not idempotent.\r\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.\r\n\r\n      throw originalError;\r\n    }\r\n  };\r\n}\r\n\r\nvar didWarnAboutUpdateInRender = false;\r\nvar didWarnAboutUpdateInRenderForAnotherComponent;\r\n\r\n{\r\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\r\n}\r\n\r\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\r\n  {\r\n    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {\r\n      switch (fiber.tag) {\r\n        case FunctionComponent:\r\n        case ForwardRef:\r\n        case SimpleMemoComponent: {\r\n          var renderingComponentName =\r\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\r\n            \"Unknown\"; // Dedupe by the rendering component because it's the one that needs to be fixed.\r\n\r\n          var dedupeKey = renderingComponentName;\r\n\r\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\r\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\r\n            var setStateComponentName =\r\n              getComponentNameFromFiber(fiber) || \"Unknown\";\r\n\r\n            error(\r\n              \"Cannot update a component (`%s`) while rendering a \" +\r\n                \"different component (`%s`). To locate the bad setState() call inside `%s`, \" +\r\n                \"follow the stack trace as described in https://reactjs.org/link/setstate-in-render\",\r\n              setStateComponentName,\r\n              renderingComponentName,\r\n              renderingComponentName\r\n            );\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        case ClassComponent: {\r\n          if (!didWarnAboutUpdateInRender) {\r\n            error(\r\n              \"Cannot update during an existing state transition (such as \" +\r\n                \"within `render`). Render methods should be a pure \" +\r\n                \"function of props and state.\"\r\n            );\r\n\r\n            didWarnAboutUpdateInRender = true;\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction restorePendingUpdaters(root, lanes) {\r\n  {\r\n    if (isDevToolsPresent) {\r\n      var memoizedUpdaters = root.memoizedUpdaters;\r\n      memoizedUpdaters.forEach(function(schedulingFiber) {\r\n        addFiberToLanesMap(root, schedulingFiber, lanes);\r\n      }); // This function intentionally does not clear memoized updaters.\r\n      // Those may still be relevant to the current commit\r\n      // and a future one (e.g. Suspense).\r\n    }\r\n  }\r\n}\r\nvar fakeActCallbackNode = {};\r\n\r\nfunction scheduleCallback$1(priorityLevel, callback) {\r\n  {\r\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\r\n    // the `act` queue instead.\r\n    var actQueue = ReactCurrentActQueue$1.current;\r\n\r\n    if (actQueue !== null) {\r\n      actQueue.push(callback);\r\n      return fakeActCallbackNode;\r\n    } else {\r\n      return scheduleCallback(priorityLevel, callback);\r\n    }\r\n  }\r\n}\r\n\r\nfunction cancelCallback$1(callbackNode) {\r\n  if (callbackNode === fakeActCallbackNode) {\r\n    return;\r\n  } // In production, always call Scheduler. This function will be stripped out.\r\n\r\n  return cancelCallback(callbackNode);\r\n}\r\n\r\nfunction shouldForceFlushFallbacksInDEV() {\r\n  // Never force flush in production. This function should get stripped out.\r\n  return ReactCurrentActQueue$1.current !== null;\r\n}\r\n\r\nfunction warnIfUpdatesNotWrappedWithActDEV(fiber) {\r\n  {\r\n    if (fiber.mode & ConcurrentMode) {\r\n      if (!isConcurrentActEnvironment()) {\r\n        // Not in an act environment. No need to warn.\r\n        return;\r\n      }\r\n    } else {\r\n      // Legacy mode has additional cases where we suppress a warning.\r\n      if (!isLegacyActEnvironment()) {\r\n        // Not in an act environment. No need to warn.\r\n        return;\r\n      }\r\n\r\n      if (executionContext !== NoContext) {\r\n        // Legacy mode doesn't warn if the update is batched, i.e.\r\n        // batchedUpdates or flushSync.\r\n        return;\r\n      }\r\n\r\n      if (\r\n        fiber.tag !== FunctionComponent &&\r\n        fiber.tag !== ForwardRef &&\r\n        fiber.tag !== SimpleMemoComponent\r\n      ) {\r\n        // For backwards compatibility with pre-hooks code, legacy mode only\r\n        // warns for updates that originate from a hook.\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (ReactCurrentActQueue$1.current === null) {\r\n      var previousFiber = current;\r\n\r\n      try {\r\n        setCurrentFiber(fiber);\r\n\r\n        error(\r\n          \"An update to %s inside a test was not wrapped in act(...).\\n\\n\" +\r\n            \"When testing, code that causes React state updates should be \" +\r\n            \"wrapped into act(...):\\n\\n\" +\r\n            \"act(() => {\\n\" +\r\n            \"  /* fire events that update state */\\n\" +\r\n            \"});\\n\" +\r\n            \"/* assert on the output */\\n\\n\" +\r\n            \"This ensures that you're testing the behavior the user would see \" +\r\n            \"in the browser.\" +\r\n            \" Learn more at https://reactjs.org/link/wrap-tests-with-act\",\r\n          getComponentNameFromFiber(fiber)\r\n        );\r\n      } finally {\r\n        if (previousFiber) {\r\n          setCurrentFiber(fiber);\r\n        } else {\r\n          resetCurrentFiber();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction warnIfSuspenseResolutionNotWrappedWithActDEV(root) {\r\n  {\r\n    if (\r\n      root.tag !== LegacyRoot &&\r\n      isConcurrentActEnvironment() &&\r\n      ReactCurrentActQueue$1.current === null\r\n    ) {\r\n      error(\r\n        \"A suspended resource finished loading inside a test, but the event \" +\r\n          \"was not wrapped in act(...).\\n\\n\" +\r\n          \"When testing, code that resolves suspended data should be wrapped \" +\r\n          \"into act(...):\\n\\n\" +\r\n          \"act(() => {\\n\" +\r\n          \"  /* finish loading suspended data */\\n\" +\r\n          \"});\\n\" +\r\n          \"/* assert on the output */\\n\\n\" +\r\n          \"This ensures that you're testing the behavior the user would see \" +\r\n          \"in the browser.\" +\r\n          \" Learn more at https://reactjs.org/link/wrap-tests-with-act\"\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction setIsRunningInsertionEffect(isRunning) {\r\n  {\r\n    isRunningInsertionEffect = isRunning;\r\n  }\r\n}\r\n\r\n/* eslint-disable react-internal/prod-error-codes */\r\nvar resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.\r\n\r\nvar failedBoundaries = null;\r\nvar setRefreshHandler = function(handler) {\r\n  {\r\n    resolveFamily = handler;\r\n  }\r\n};\r\nfunction resolveFunctionForHotReloading(type) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return type;\r\n    }\r\n\r\n    var family = resolveFamily(type);\r\n\r\n    if (family === undefined) {\r\n      return type;\r\n    } // Use the latest known implementation.\r\n\r\n    return family.current;\r\n  }\r\n}\r\nfunction resolveClassForHotReloading(type) {\r\n  // No implementation differences.\r\n  return resolveFunctionForHotReloading(type);\r\n}\r\nfunction resolveForwardRefForHotReloading(type) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return type;\r\n    }\r\n\r\n    var family = resolveFamily(type);\r\n\r\n    if (family === undefined) {\r\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\r\n      if (\r\n        type !== null &&\r\n        type !== undefined &&\r\n        typeof type.render === \"function\"\r\n      ) {\r\n        // ForwardRef is special because its resolved .type is an object,\r\n        // but it's possible that we only have its inner render function in the map.\r\n        // If that inner render function is different, we'll build a new forwardRef type.\r\n        var currentRender = resolveFunctionForHotReloading(type.render);\r\n\r\n        if (type.render !== currentRender) {\r\n          var syntheticType = {\r\n            $$typeof: REACT_FORWARD_REF_TYPE,\r\n            render: currentRender\r\n          };\r\n\r\n          if (type.displayName !== undefined) {\r\n            syntheticType.displayName = type.displayName;\r\n          }\r\n\r\n          return syntheticType;\r\n        }\r\n      }\r\n\r\n      return type;\r\n    } // Use the latest known implementation.\r\n\r\n    return family.current;\r\n  }\r\n}\r\nfunction isCompatibleFamilyForHotReloading(fiber, element) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return false;\r\n    }\r\n\r\n    var prevType = fiber.elementType;\r\n    var nextType = element.type; // If we got here, we know types aren't === equal.\r\n\r\n    var needsCompareFamilies = false;\r\n    var $$typeofNextType =\r\n      typeof nextType === \"object\" && nextType !== null\r\n        ? nextType.$$typeof\r\n        : null;\r\n\r\n    switch (fiber.tag) {\r\n      case ClassComponent: {\r\n        if (typeof nextType === \"function\") {\r\n          needsCompareFamilies = true;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case FunctionComponent: {\r\n        if (typeof nextType === \"function\") {\r\n          needsCompareFamilies = true;\r\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\r\n          // We don't know the inner type yet.\r\n          // We're going to assume that the lazy inner type is stable,\r\n          // and so it is sufficient to avoid reconciling it away.\r\n          // We're not going to unwrap or actually use the new lazy type.\r\n          needsCompareFamilies = true;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case ForwardRef: {\r\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\r\n          needsCompareFamilies = true;\r\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\r\n          needsCompareFamilies = true;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case MemoComponent:\r\n      case SimpleMemoComponent: {\r\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\r\n          // TODO: if it was but can no longer be simple,\r\n          // we shouldn't set this.\r\n          needsCompareFamilies = true;\r\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\r\n          needsCompareFamilies = true;\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      default:\r\n        return false;\r\n    } // Check if both types have a family and it's the same one.\r\n\r\n    if (needsCompareFamilies) {\r\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\r\n      // This means both of them need to be registered to preserve state.\r\n      // If we unwrapped and compared the inner types for wrappers instead,\r\n      // then we would risk falsely saying two separate memo(Foo)\r\n      // calls are equivalent because they wrap the same Foo function.\r\n      var prevFamily = resolveFamily(prevType);\r\n\r\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\nfunction markFailedErrorBoundaryForHotReloading(fiber) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return;\r\n    }\r\n\r\n    if (typeof WeakSet !== \"function\") {\r\n      return;\r\n    }\r\n\r\n    if (failedBoundaries === null) {\r\n      failedBoundaries = new WeakSet();\r\n    }\r\n\r\n    failedBoundaries.add(fiber);\r\n  }\r\n}\r\nvar scheduleRefresh = function(root, update) {\r\n  {\r\n    if (resolveFamily === null) {\r\n      // Hot reloading is disabled.\r\n      return;\r\n    }\r\n\r\n    var staleFamilies = update.staleFamilies,\r\n      updatedFamilies = update.updatedFamilies;\r\n    flushPassiveEffects();\r\n    flushSync(function() {\r\n      scheduleFibersWithFamiliesRecursively(\r\n        root.current,\r\n        updatedFamilies,\r\n        staleFamilies\r\n      );\r\n    });\r\n  }\r\n};\r\nvar scheduleRoot = function(root, element) {\r\n  {\r\n    if (root.context !== emptyContextObject) {\r\n      // Super edge case: root has a legacy _renderSubtree context\r\n      // but we don't know the parentComponent so we can't pass it.\r\n      // Just ignore. We'll delete this with _renderSubtree code path later.\r\n      return;\r\n    }\r\n\r\n    flushPassiveEffects();\r\n    flushSync(function() {\r\n      updateContainer(element, root, null, null);\r\n    });\r\n  }\r\n};\r\n\r\nfunction scheduleFibersWithFamiliesRecursively(\r\n  fiber,\r\n  updatedFamilies,\r\n  staleFamilies\r\n) {\r\n  {\r\n    var alternate = fiber.alternate,\r\n      child = fiber.child,\r\n      sibling = fiber.sibling,\r\n      tag = fiber.tag,\r\n      type = fiber.type;\r\n    var candidateType = null;\r\n\r\n    switch (tag) {\r\n      case FunctionComponent:\r\n      case SimpleMemoComponent:\r\n      case ClassComponent:\r\n        candidateType = type;\r\n        break;\r\n\r\n      case ForwardRef:\r\n        candidateType = type.render;\r\n        break;\r\n    }\r\n\r\n    if (resolveFamily === null) {\r\n      throw new Error(\"Expected resolveFamily to be set during hot reload.\");\r\n    }\r\n\r\n    var needsRender = false;\r\n    var needsRemount = false;\r\n\r\n    if (candidateType !== null) {\r\n      var family = resolveFamily(candidateType);\r\n\r\n      if (family !== undefined) {\r\n        if (staleFamilies.has(family)) {\r\n          needsRemount = true;\r\n        } else if (updatedFamilies.has(family)) {\r\n          if (tag === ClassComponent) {\r\n            needsRemount = true;\r\n          } else {\r\n            needsRender = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (failedBoundaries !== null) {\r\n      if (\r\n        failedBoundaries.has(fiber) ||\r\n        (alternate !== null && failedBoundaries.has(alternate))\r\n      ) {\r\n        needsRemount = true;\r\n      }\r\n    }\r\n\r\n    if (needsRemount) {\r\n      fiber._debugNeedsRemount = true;\r\n    }\r\n\r\n    if (needsRemount || needsRender) {\r\n      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (_root !== null) {\r\n        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n\r\n    if (child !== null && !needsRemount) {\r\n      scheduleFibersWithFamiliesRecursively(\r\n        child,\r\n        updatedFamilies,\r\n        staleFamilies\r\n      );\r\n    }\r\n\r\n    if (sibling !== null) {\r\n      scheduleFibersWithFamiliesRecursively(\r\n        sibling,\r\n        updatedFamilies,\r\n        staleFamilies\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nvar findHostInstancesForRefresh = function(root, families) {\r\n  {\r\n    var hostInstances = new Set();\r\n    var types = new Set(\r\n      families.map(function(family) {\r\n        return family.current;\r\n      })\r\n    );\r\n    findHostInstancesForMatchingFibersRecursively(\r\n      root.current,\r\n      types,\r\n      hostInstances\r\n    );\r\n    return hostInstances;\r\n  }\r\n};\r\n\r\nfunction findHostInstancesForMatchingFibersRecursively(\r\n  fiber,\r\n  types,\r\n  hostInstances\r\n) {\r\n  {\r\n    var child = fiber.child,\r\n      sibling = fiber.sibling,\r\n      tag = fiber.tag,\r\n      type = fiber.type;\r\n    var candidateType = null;\r\n\r\n    switch (tag) {\r\n      case FunctionComponent:\r\n      case SimpleMemoComponent:\r\n      case ClassComponent:\r\n        candidateType = type;\r\n        break;\r\n\r\n      case ForwardRef:\r\n        candidateType = type.render;\r\n        break;\r\n    }\r\n\r\n    var didMatch = false;\r\n\r\n    if (candidateType !== null) {\r\n      if (types.has(candidateType)) {\r\n        didMatch = true;\r\n      }\r\n    }\r\n\r\n    if (didMatch) {\r\n      // We have a match. This only drills down to the closest host components.\r\n      // There's no need to search deeper because for the purpose of giving\r\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\r\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\r\n    } else {\r\n      // If there's no match, maybe there will be one further down in the child tree.\r\n      if (child !== null) {\r\n        findHostInstancesForMatchingFibersRecursively(\r\n          child,\r\n          types,\r\n          hostInstances\r\n        );\r\n      }\r\n    }\r\n\r\n    if (sibling !== null) {\r\n      findHostInstancesForMatchingFibersRecursively(\r\n        sibling,\r\n        types,\r\n        hostInstances\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction findHostInstancesForFiberShallowly(fiber, hostInstances) {\r\n  {\r\n    var foundHostInstances = findChildHostInstancesForFiberShallowly(\r\n      fiber,\r\n      hostInstances\r\n    );\r\n\r\n    if (foundHostInstances) {\r\n      return;\r\n    } // If we didn't find any host children, fallback to closest host parent.\r\n\r\n    var node = fiber;\r\n\r\n    while (true) {\r\n      switch (node.tag) {\r\n        case HostComponent:\r\n          hostInstances.add(node.stateNode);\r\n          return;\r\n\r\n        case HostPortal:\r\n          hostInstances.add(node.stateNode.containerInfo);\r\n          return;\r\n\r\n        case HostRoot:\r\n          hostInstances.add(node.stateNode.containerInfo);\r\n          return;\r\n      }\r\n\r\n      if (node.return === null) {\r\n        throw new Error(\"Expected to reach root first.\");\r\n      }\r\n\r\n      node = node.return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction findChildHostInstancesForFiberShallowly(fiber, hostInstances) {\r\n  {\r\n    var node = fiber;\r\n    var foundHostInstances = false;\r\n\r\n    while (true) {\r\n      if (node.tag === HostComponent) {\r\n        // We got a match.\r\n        foundHostInstances = true;\r\n        hostInstances.add(node.stateNode); // There may still be more, so keep searching.\r\n      } else if (node.child !== null) {\r\n        node.child.return = node;\r\n        node = node.child;\r\n        continue;\r\n      }\r\n\r\n      if (node === fiber) {\r\n        return foundHostInstances;\r\n      }\r\n\r\n      while (node.sibling === null) {\r\n        if (node.return === null || node.return === fiber) {\r\n          return foundHostInstances;\r\n        }\r\n\r\n        node = node.return;\r\n      }\r\n\r\n      node.sibling.return = node.return;\r\n      node = node.sibling;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nvar hasBadMapPolyfill;\r\n\r\n{\r\n  hasBadMapPolyfill = false;\r\n\r\n  try {\r\n    var nonExtensibleObject = Object.preventExtensions({});\r\n    /* eslint-disable no-new */\r\n\r\n    new Map([[nonExtensibleObject, null]]);\r\n    new Set([nonExtensibleObject]);\r\n    /* eslint-enable no-new */\r\n  } catch (e) {\r\n    // TODO: Consider warning about bad polyfills\r\n    hasBadMapPolyfill = true;\r\n  }\r\n}\r\n\r\nfunction FiberNode(tag, pendingProps, key, mode) {\r\n  // Instance\r\n  this.tag = tag;\r\n  this.key = key;\r\n  this.elementType = null;\r\n  this.type = null;\r\n  this.stateNode = null; // Fiber\r\n\r\n  this.return = null;\r\n  this.child = null;\r\n  this.sibling = null;\r\n  this.index = 0;\r\n  this.ref = null;\r\n  this.pendingProps = pendingProps;\r\n  this.memoizedProps = null;\r\n  this.updateQueue = null;\r\n  this.memoizedState = null;\r\n  this.dependencies = null;\r\n  this.mode = mode; // Effects\r\n\r\n  this.flags = NoFlags;\r\n  this.subtreeFlags = NoFlags;\r\n  this.deletions = null;\r\n  this.lanes = NoLanes;\r\n  this.childLanes = NoLanes;\r\n  this.alternate = null;\r\n\r\n  {\r\n    // Note: The following is done to avoid a v8 performance cliff.\r\n    //\r\n    // Initializing the fields below to smis and later updating them with\r\n    // double values will cause Fibers to end up having separate shapes.\r\n    // This behavior/bug has something to do with Object.preventExtension().\r\n    // Fortunately this only impacts DEV builds.\r\n    // Unfortunately it makes React unusably slow for some applications.\r\n    // To work around this, initialize the fields below with doubles.\r\n    //\r\n    // Learn more about this here:\r\n    // https://github.com/facebook/react/issues/14365\r\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\r\n    this.actualDuration = Number.NaN;\r\n    this.actualStartTime = Number.NaN;\r\n    this.selfBaseDuration = Number.NaN;\r\n    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.\r\n    // This won't trigger the performance cliff mentioned above,\r\n    // and it simplifies other profiler code (including DevTools).\r\n\r\n    this.actualDuration = 0;\r\n    this.actualStartTime = -1;\r\n    this.selfBaseDuration = 0;\r\n    this.treeBaseDuration = 0;\r\n  }\r\n\r\n  {\r\n    // This isn't directly used but is handy for debugging internals:\r\n    this._debugSource = null;\r\n    this._debugOwner = null;\r\n    this._debugNeedsRemount = false;\r\n    this._debugHookTypes = null;\r\n\r\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === \"function\") {\r\n      Object.preventExtensions(this);\r\n    }\r\n  }\r\n} // This is a constructor function, rather than a POJO constructor, still\r\n// please ensure we do the following:\r\n// 1) Nobody should add any instance methods on this. Instance methods can be\r\n//    more difficult to predict when they get optimized and they are almost\r\n//    never inlined properly in static compilers.\r\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\r\n//    always know when it is a fiber.\r\n// 3) We might want to experiment with using numeric keys since they are easier\r\n//    to optimize in a non-JIT environment.\r\n// 4) We can easily go from a constructor to a createFiber object literal if that\r\n//    is faster.\r\n// 5) It should be easy to port this to a C struct and keep a C implementation\r\n//    compatible.\r\n\r\nvar createFiber = function(tag, pendingProps, key, mode) {\r\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\r\n  return new FiberNode(tag, pendingProps, key, mode);\r\n};\r\n\r\nfunction shouldConstruct(Component) {\r\n  var prototype = Component.prototype;\r\n  return !!(prototype && prototype.isReactComponent);\r\n}\r\n\r\nfunction isSimpleFunctionComponent(type) {\r\n  return (\r\n    typeof type === \"function\" &&\r\n    !shouldConstruct(type) &&\r\n    type.defaultProps === undefined\r\n  );\r\n}\r\nfunction resolveLazyComponentTag(Component) {\r\n  if (typeof Component === \"function\") {\r\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\r\n  } else if (Component !== undefined && Component !== null) {\r\n    var $$typeof = Component.$$typeof;\r\n\r\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\r\n      return ForwardRef;\r\n    }\r\n\r\n    if ($$typeof === REACT_MEMO_TYPE) {\r\n      return MemoComponent;\r\n    }\r\n  }\r\n\r\n  return IndeterminateComponent;\r\n} // This is used to create an alternate fiber to do work on.\r\n\r\nfunction createWorkInProgress(current, pendingProps) {\r\n  var workInProgress = current.alternate;\r\n\r\n  if (workInProgress === null) {\r\n    // We use a double buffering pooling technique because we know that we'll\r\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\r\n    // node that we're free to reuse. This is lazily created to avoid allocating\r\n    // extra objects for things that are never updated. It also allow us to\r\n    // reclaim the extra memory if needed.\r\n    workInProgress = createFiber(\r\n      current.tag,\r\n      pendingProps,\r\n      current.key,\r\n      current.mode\r\n    );\r\n    workInProgress.elementType = current.elementType;\r\n    workInProgress.type = current.type;\r\n    workInProgress.stateNode = current.stateNode;\r\n\r\n    {\r\n      // DEV-only fields\r\n      workInProgress._debugSource = current._debugSource;\r\n      workInProgress._debugOwner = current._debugOwner;\r\n      workInProgress._debugHookTypes = current._debugHookTypes;\r\n    }\r\n\r\n    workInProgress.alternate = current;\r\n    current.alternate = workInProgress;\r\n  } else {\r\n    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.\r\n\r\n    workInProgress.type = current.type; // We already have an alternate.\r\n    // Reset the effect tag.\r\n\r\n    workInProgress.flags = NoFlags; // The effects are no longer valid.\r\n\r\n    workInProgress.subtreeFlags = NoFlags;\r\n    workInProgress.deletions = null;\r\n\r\n    {\r\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\r\n      // This prevents time from endlessly accumulating in new commits.\r\n      // This has the downside of resetting values for different priority renders,\r\n      // But works for yielding (the common case) and should support resuming.\r\n      workInProgress.actualDuration = 0;\r\n      workInProgress.actualStartTime = -1;\r\n    }\r\n  } // Reset all effects except static ones.\r\n  // Static effects are not specific to a render.\r\n\r\n  workInProgress.flags = current.flags & StaticMask;\r\n  workInProgress.childLanes = current.childLanes;\r\n  workInProgress.lanes = current.lanes;\r\n  workInProgress.child = current.child;\r\n  workInProgress.memoizedProps = current.memoizedProps;\r\n  workInProgress.memoizedState = current.memoizedState;\r\n  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so\r\n  // it cannot be shared with the current fiber.\r\n\r\n  var currentDependencies = current.dependencies;\r\n  workInProgress.dependencies =\r\n    currentDependencies === null\r\n      ? null\r\n      : {\r\n          lanes: currentDependencies.lanes,\r\n          firstContext: currentDependencies.firstContext\r\n        }; // These will be overridden during the parent's reconciliation\r\n\r\n  workInProgress.sibling = current.sibling;\r\n  workInProgress.index = current.index;\r\n  workInProgress.ref = current.ref;\r\n\r\n  {\r\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\r\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\r\n  }\r\n\r\n  {\r\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\r\n\r\n    switch (workInProgress.tag) {\r\n      case IndeterminateComponent:\r\n      case FunctionComponent:\r\n      case SimpleMemoComponent:\r\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\r\n        break;\r\n\r\n      case ClassComponent:\r\n        workInProgress.type = resolveClassForHotReloading(current.type);\r\n        break;\r\n\r\n      case ForwardRef:\r\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return workInProgress;\r\n} // Used to reuse a Fiber for a second pass.\r\n\r\nfunction resetWorkInProgress(workInProgress, renderLanes) {\r\n  // This resets the Fiber to what createFiber or createWorkInProgress would\r\n  // have set the values to before during the first pass. Ideally this wouldn't\r\n  // be necessary but unfortunately many code paths reads from the workInProgress\r\n  // when they should be reading from current and writing to workInProgress.\r\n  // We assume pendingProps, index, key, ref, return are still untouched to\r\n  // avoid doing another reconciliation.\r\n  // Reset the effect flags but keep any Placement tags, since that's something\r\n  // that child fiber is setting, not the reconciliation.\r\n  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.\r\n\r\n  var current = workInProgress.alternate;\r\n\r\n  if (current === null) {\r\n    // Reset to createFiber's initial values.\r\n    workInProgress.childLanes = NoLanes;\r\n    workInProgress.lanes = renderLanes;\r\n    workInProgress.child = null;\r\n    workInProgress.subtreeFlags = NoFlags;\r\n    workInProgress.memoizedProps = null;\r\n    workInProgress.memoizedState = null;\r\n    workInProgress.updateQueue = null;\r\n    workInProgress.dependencies = null;\r\n    workInProgress.stateNode = null;\r\n\r\n    {\r\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\r\n      // actual time across multiple render passes.\r\n      workInProgress.selfBaseDuration = 0;\r\n      workInProgress.treeBaseDuration = 0;\r\n    }\r\n  } else {\r\n    // Reset to the cloned values that createWorkInProgress would've.\r\n    workInProgress.childLanes = current.childLanes;\r\n    workInProgress.lanes = current.lanes;\r\n    workInProgress.child = current.child;\r\n    workInProgress.subtreeFlags = NoFlags;\r\n    workInProgress.deletions = null;\r\n    workInProgress.memoizedProps = current.memoizedProps;\r\n    workInProgress.memoizedState = current.memoizedState;\r\n    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.\r\n\r\n    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so\r\n    // it cannot be shared with the current fiber.\r\n\r\n    var currentDependencies = current.dependencies;\r\n    workInProgress.dependencies =\r\n      currentDependencies === null\r\n        ? null\r\n        : {\r\n            lanes: currentDependencies.lanes,\r\n            firstContext: currentDependencies.firstContext\r\n          };\r\n\r\n    {\r\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\r\n      // actual time across multiple render passes.\r\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\r\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\r\n    }\r\n  }\r\n\r\n  return workInProgress;\r\n}\r\nfunction createHostRootFiber(\r\n  tag,\r\n  isStrictMode,\r\n  concurrentUpdatesByDefaultOverride\r\n) {\r\n  var mode;\r\n\r\n  if (tag === ConcurrentRoot) {\r\n    mode = ConcurrentMode;\r\n\r\n    if (isStrictMode === true) {\r\n      mode |= StrictLegacyMode;\r\n    }\r\n  } else {\r\n    mode = NoMode;\r\n  }\r\n\r\n  if (isDevToolsPresent) {\r\n    // Always collect profile timings when DevTools are present.\r\n    // This enables DevTools to start capturing timing at any point–\r\n    // Without some nodes in the tree having empty base times.\r\n    mode |= ProfileMode;\r\n  }\r\n\r\n  return createFiber(HostRoot, null, null, mode);\r\n}\r\nfunction createFiberFromTypeAndProps(\r\n  type, // React$ElementType\r\n  key,\r\n  pendingProps,\r\n  owner,\r\n  mode,\r\n  lanes\r\n) {\r\n  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\r\n\r\n  var resolvedType = type;\r\n\r\n  if (typeof type === \"function\") {\r\n    if (shouldConstruct(type)) {\r\n      fiberTag = ClassComponent;\r\n\r\n      {\r\n        resolvedType = resolveClassForHotReloading(resolvedType);\r\n      }\r\n    } else {\r\n      {\r\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\r\n      }\r\n    }\r\n  } else if (typeof type === \"string\") {\r\n    fiberTag = HostComponent;\r\n  } else {\r\n    getTag: switch (type) {\r\n      case REACT_FRAGMENT_TYPE:\r\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\r\n\r\n      case REACT_STRICT_MODE_TYPE:\r\n        fiberTag = Mode;\r\n        mode |= StrictLegacyMode;\r\n\r\n        break;\r\n\r\n      case REACT_PROFILER_TYPE:\r\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_SUSPENSE_TYPE:\r\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_SUSPENSE_LIST_TYPE:\r\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_OFFSCREEN_TYPE:\r\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\r\n\r\n      case REACT_LEGACY_HIDDEN_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_SCOPE_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_CACHE_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_TRACING_MARKER_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      case REACT_DEBUG_TRACING_MODE_TYPE:\r\n\r\n      // eslint-disable-next-line no-fallthrough\r\n\r\n      default: {\r\n        if (typeof type === \"object\" && type !== null) {\r\n          switch (type.$$typeof) {\r\n            case REACT_PROVIDER_TYPE:\r\n              fiberTag = ContextProvider;\r\n              break getTag;\r\n\r\n            case REACT_CONTEXT_TYPE:\r\n              // This is a consumer\r\n              fiberTag = ContextConsumer;\r\n              break getTag;\r\n\r\n            case REACT_FORWARD_REF_TYPE:\r\n              fiberTag = ForwardRef;\r\n\r\n              {\r\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\r\n              }\r\n\r\n              break getTag;\r\n\r\n            case REACT_MEMO_TYPE:\r\n              fiberTag = MemoComponent;\r\n              break getTag;\r\n\r\n            case REACT_LAZY_TYPE:\r\n              fiberTag = LazyComponent;\r\n              resolvedType = null;\r\n              break getTag;\r\n          }\r\n        }\r\n\r\n        var info = \"\";\r\n\r\n        {\r\n          if (\r\n            type === undefined ||\r\n            (typeof type === \"object\" &&\r\n              type !== null &&\r\n              Object.keys(type).length === 0)\r\n          ) {\r\n            info +=\r\n              \" You likely forgot to export your component from the file \" +\r\n              \"it's defined in, or you might have mixed up default and \" +\r\n              \"named imports.\";\r\n          }\r\n\r\n          var ownerName = owner ? getComponentNameFromFiber(owner) : null;\r\n\r\n          if (ownerName) {\r\n            info += \"\\n\\nCheck the render method of `\" + ownerName + \"`.\";\r\n          }\r\n        }\r\n\r\n        throw new Error(\r\n          \"Element type is invalid: expected a string (for built-in \" +\r\n            \"components) or a class/function (for composite components) \" +\r\n            (\"but got: \" + (type == null ? type : typeof type) + \".\" + info)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  var fiber = createFiber(fiberTag, pendingProps, key, mode);\r\n  fiber.elementType = type;\r\n  fiber.type = resolvedType;\r\n  fiber.lanes = lanes;\r\n\r\n  {\r\n    fiber._debugOwner = owner;\r\n  }\r\n\r\n  return fiber;\r\n}\r\nfunction createFiberFromElement(element, mode, lanes) {\r\n  var owner = null;\r\n\r\n  {\r\n    owner = element._owner;\r\n  }\r\n\r\n  var type = element.type;\r\n  var key = element.key;\r\n  var pendingProps = element.props;\r\n  var fiber = createFiberFromTypeAndProps(\r\n    type,\r\n    key,\r\n    pendingProps,\r\n    owner,\r\n    mode,\r\n    lanes\r\n  );\r\n\r\n  {\r\n    fiber._debugSource = element._source;\r\n    fiber._debugOwner = element._owner;\r\n  }\r\n\r\n  return fiber;\r\n}\r\nfunction createFiberFromFragment(elements, mode, lanes, key) {\r\n  var fiber = createFiber(Fragment, elements, key, mode);\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromProfiler(pendingProps, mode, lanes, key) {\r\n  {\r\n    if (typeof pendingProps.id !== \"string\") {\r\n      error(\r\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\r\n        typeof pendingProps.id\r\n      );\r\n    }\r\n  }\r\n\r\n  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\r\n  fiber.elementType = REACT_PROFILER_TYPE;\r\n  fiber.lanes = lanes;\r\n\r\n  {\r\n    fiber.stateNode = {\r\n      effectDuration: 0,\r\n      passiveEffectDuration: 0\r\n    };\r\n  }\r\n\r\n  return fiber;\r\n}\r\n\r\nfunction createFiberFromSuspense(pendingProps, mode, lanes, key) {\r\n  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\r\n  fiber.elementType = REACT_SUSPENSE_TYPE;\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\nfunction createFiberFromSuspenseList(pendingProps, mode, lanes, key) {\r\n  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\r\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\nfunction createFiberFromOffscreen(pendingProps, mode, lanes, key) {\r\n  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\r\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\r\n  fiber.lanes = lanes;\r\n  var primaryChildInstance = {\r\n    isHidden: false\r\n  };\r\n  fiber.stateNode = primaryChildInstance;\r\n  return fiber;\r\n}\r\nfunction createFiberFromText(content, mode, lanes) {\r\n  var fiber = createFiber(HostText, content, null, mode);\r\n  fiber.lanes = lanes;\r\n  return fiber;\r\n}\r\nfunction createFiberFromPortal(portal, mode, lanes) {\r\n  var pendingProps = portal.children !== null ? portal.children : [];\r\n  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\r\n  fiber.lanes = lanes;\r\n  fiber.stateNode = {\r\n    containerInfo: portal.containerInfo,\r\n    pendingChildren: null,\r\n    // Used by persistent updates\r\n    implementation: portal.implementation\r\n  };\r\n  return fiber;\r\n} // Used for stashing WIP properties to replay failed work in DEV.\r\n\r\nfunction assignFiberPropertiesInDEV(target, source) {\r\n  if (target === null) {\r\n    // This Fiber's initial properties will always be overwritten.\r\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\r\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\r\n  } // This is intentionally written as a list of all properties.\r\n  // We tried to use Object.assign() instead but this is called in\r\n  // the hottest path, and Object.assign() was too slow:\r\n  // https://github.com/facebook/react/issues/12502\r\n  // This code is DEV-only so size is not a concern.\r\n\r\n  target.tag = source.tag;\r\n  target.key = source.key;\r\n  target.elementType = source.elementType;\r\n  target.type = source.type;\r\n  target.stateNode = source.stateNode;\r\n  target.return = source.return;\r\n  target.child = source.child;\r\n  target.sibling = source.sibling;\r\n  target.index = source.index;\r\n  target.ref = source.ref;\r\n  target.pendingProps = source.pendingProps;\r\n  target.memoizedProps = source.memoizedProps;\r\n  target.updateQueue = source.updateQueue;\r\n  target.memoizedState = source.memoizedState;\r\n  target.dependencies = source.dependencies;\r\n  target.mode = source.mode;\r\n  target.flags = source.flags;\r\n  target.subtreeFlags = source.subtreeFlags;\r\n  target.deletions = source.deletions;\r\n  target.lanes = source.lanes;\r\n  target.childLanes = source.childLanes;\r\n  target.alternate = source.alternate;\r\n\r\n  {\r\n    target.actualDuration = source.actualDuration;\r\n    target.actualStartTime = source.actualStartTime;\r\n    target.selfBaseDuration = source.selfBaseDuration;\r\n    target.treeBaseDuration = source.treeBaseDuration;\r\n  }\r\n\r\n  target._debugSource = source._debugSource;\r\n  target._debugOwner = source._debugOwner;\r\n  target._debugNeedsRemount = source._debugNeedsRemount;\r\n  target._debugHookTypes = source._debugHookTypes;\r\n  return target;\r\n}\r\n\r\nfunction FiberRootNode(\r\n  containerInfo,\r\n  tag,\r\n  hydrate,\r\n  identifierPrefix,\r\n  onRecoverableError\r\n) {\r\n  this.tag = tag;\r\n  this.containerInfo = containerInfo;\r\n  this.pendingChildren = null;\r\n  this.current = null;\r\n  this.pingCache = null;\r\n  this.finishedWork = null;\r\n  this.timeoutHandle = noTimeout;\r\n  this.context = null;\r\n  this.pendingContext = null;\r\n  this.callbackNode = null;\r\n  this.callbackPriority = NoLane;\r\n  this.eventTimes = createLaneMap(NoLanes);\r\n  this.expirationTimes = createLaneMap(NoTimestamp);\r\n  this.pendingLanes = NoLanes;\r\n  this.suspendedLanes = NoLanes;\r\n  this.pingedLanes = NoLanes;\r\n  this.expiredLanes = NoLanes;\r\n  this.mutableReadLanes = NoLanes;\r\n  this.finishedLanes = NoLanes;\r\n  this.entangledLanes = NoLanes;\r\n  this.entanglements = createLaneMap(NoLanes);\r\n  this.identifierPrefix = identifierPrefix;\r\n  this.onRecoverableError = onRecoverableError;\r\n\r\n  {\r\n    this.effectDuration = 0;\r\n    this.passiveEffectDuration = 0;\r\n  }\r\n\r\n  {\r\n    this.memoizedUpdaters = new Set();\r\n    var pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\r\n\r\n    for (var _i = 0; _i < TotalLanes; _i++) {\r\n      pendingUpdatersLaneMap.push(new Set());\r\n    }\r\n  }\r\n\r\n  {\r\n    switch (tag) {\r\n      case ConcurrentRoot:\r\n        this._debugRootType = hydrate ? \"hydrateRoot()\" : \"createRoot()\";\r\n        break;\r\n\r\n      case LegacyRoot:\r\n        this._debugRootType = hydrate ? \"hydrate()\" : \"render()\";\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nfunction createFiberRoot(\r\n  containerInfo,\r\n  tag,\r\n  hydrate,\r\n  initialChildren,\r\n  hydrationCallbacks,\r\n  isStrictMode,\r\n  concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the\r\n  // host config, but because they are passed in at runtime, we have to thread\r\n  // them through the root constructor. Perhaps we should put them all into a\r\n  // single type, like a DynamicHostConfig that is defined by the renderer.\r\n  identifierPrefix,\r\n  onRecoverableError,\r\n  transitionCallbacks\r\n) {\r\n  var root = new FiberRootNode(\r\n    containerInfo,\r\n    tag,\r\n    hydrate,\r\n    identifierPrefix,\r\n    onRecoverableError\r\n  );\r\n  // stateNode is any.\r\n\r\n  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);\r\n  root.current = uninitializedFiber;\r\n  uninitializedFiber.stateNode = root;\r\n\r\n  {\r\n    var _initialState = {\r\n      element: initialChildren,\r\n      isDehydrated: hydrate,\r\n      cache: null,\r\n      // not enabled yet\r\n      transitions: null,\r\n      pendingSuspenseBoundaries: null\r\n    };\r\n    uninitializedFiber.memoizedState = _initialState;\r\n  }\r\n\r\n  initializeUpdateQueue(uninitializedFiber);\r\n  return root;\r\n}\r\n\r\nvar ReactVersion = \"18.2.0-next-9e3b772b8-20220608\";\r\n\r\nfunction createPortal(\r\n  children,\r\n  containerInfo, // TODO: figure out the API for cross-renderer implementation.\r\n  implementation\r\n) {\r\n  var key =\r\n    arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n\r\n  {\r\n    checkKeyStringCoercion(key);\r\n  }\r\n\r\n  return {\r\n    // This tag allow us to uniquely identify this as a React Portal\r\n    $$typeof: REACT_PORTAL_TYPE,\r\n    key: key == null ? null : \"\" + key,\r\n    children: children,\r\n    containerInfo: containerInfo,\r\n    implementation: implementation\r\n  };\r\n}\r\n\r\nvar didWarnAboutNestedUpdates;\r\nvar didWarnAboutFindNodeInStrictMode;\r\n\r\n{\r\n  didWarnAboutNestedUpdates = false;\r\n  didWarnAboutFindNodeInStrictMode = {};\r\n}\r\n\r\nfunction getContextForSubtree(parentComponent) {\r\n  if (!parentComponent) {\r\n    return emptyContextObject;\r\n  }\r\n\r\n  var fiber = get(parentComponent);\r\n  var parentContext = findCurrentUnmaskedContext(fiber);\r\n\r\n  if (fiber.tag === ClassComponent) {\r\n    var Component = fiber.type;\r\n\r\n    if (isContextProvider(Component)) {\r\n      return processChildContext(fiber, Component, parentContext);\r\n    }\r\n  }\r\n\r\n  return parentContext;\r\n}\r\n\r\nfunction findHostInstanceWithWarning(component, methodName) {\r\n  {\r\n    var fiber = get(component);\r\n\r\n    if (fiber === undefined) {\r\n      if (typeof component.render === \"function\") {\r\n        throw new Error(\"Unable to find node on an unmounted component.\");\r\n      } else {\r\n        var keys = Object.keys(component).join(\",\");\r\n        throw new Error(\r\n          \"Argument appears to not be a ReactComponent. Keys: \" + keys\r\n        );\r\n      }\r\n    }\r\n\r\n    var hostFiber = findCurrentHostFiber(fiber);\r\n\r\n    if (hostFiber === null) {\r\n      return null;\r\n    }\r\n\r\n    if (hostFiber.mode & StrictLegacyMode) {\r\n      var componentName = getComponentNameFromFiber(fiber) || \"Component\";\r\n\r\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\r\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\r\n        var previousFiber = current;\r\n\r\n        try {\r\n          setCurrentFiber(hostFiber);\r\n\r\n          if (fiber.mode & StrictLegacyMode) {\r\n            error(\r\n              \"%s is deprecated in StrictMode. \" +\r\n                \"%s was passed an instance of %s which is inside StrictMode. \" +\r\n                \"Instead, add a ref directly to the element you want to reference. \" +\r\n                \"Learn more about using refs safely here: \" +\r\n                \"https://reactjs.org/link/strict-mode-find-node\",\r\n              methodName,\r\n              methodName,\r\n              componentName\r\n            );\r\n          } else {\r\n            error(\r\n              \"%s is deprecated in StrictMode. \" +\r\n                \"%s was passed an instance of %s which renders StrictMode children. \" +\r\n                \"Instead, add a ref directly to the element you want to reference. \" +\r\n                \"Learn more about using refs safely here: \" +\r\n                \"https://reactjs.org/link/strict-mode-find-node\",\r\n              methodName,\r\n              methodName,\r\n              componentName\r\n            );\r\n          }\r\n        } finally {\r\n          // Ideally this should reset to previous but this shouldn't be called in\r\n          // render and there's another warning for that anyway.\r\n          if (previousFiber) {\r\n            setCurrentFiber(previousFiber);\r\n          } else {\r\n            resetCurrentFiber();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return hostFiber.stateNode;\r\n  }\r\n}\r\n\r\nfunction createContainer(\r\n  containerInfo,\r\n  tag,\r\n  hydrationCallbacks,\r\n  isStrictMode,\r\n  concurrentUpdatesByDefaultOverride,\r\n  identifierPrefix,\r\n  onRecoverableError,\r\n  transitionCallbacks\r\n) {\r\n  var hydrate = false;\r\n  var initialChildren = null;\r\n  return createFiberRoot(\r\n    containerInfo,\r\n    tag,\r\n    hydrate,\r\n    initialChildren,\r\n    hydrationCallbacks,\r\n    isStrictMode,\r\n    concurrentUpdatesByDefaultOverride,\r\n    identifierPrefix,\r\n    onRecoverableError\r\n  );\r\n}\r\nfunction updateContainer(element, container, parentComponent, callback) {\r\n  {\r\n    onScheduleRoot(container, element);\r\n  }\r\n\r\n  var current$1 = container.current;\r\n  var eventTime = requestEventTime();\r\n  var lane = requestUpdateLane(current$1);\r\n\r\n  var context = getContextForSubtree(parentComponent);\r\n\r\n  if (container.context === null) {\r\n    container.context = context;\r\n  } else {\r\n    container.pendingContext = context;\r\n  }\r\n\r\n  {\r\n    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {\r\n      didWarnAboutNestedUpdates = true;\r\n\r\n      error(\r\n        \"Render methods should be a pure function of props and state; \" +\r\n          \"triggering nested component updates from render is not allowed. \" +\r\n          \"If necessary, trigger nested updates in componentDidUpdate.\\n\\n\" +\r\n          \"Check the render method of %s.\",\r\n        getComponentNameFromFiber(current) || \"Unknown\"\r\n      );\r\n    }\r\n  }\r\n\r\n  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property\r\n  // being called \"element\".\r\n\r\n  update.payload = {\r\n    element: element\r\n  };\r\n  callback = callback === undefined ? null : callback;\r\n\r\n  if (callback !== null) {\r\n    {\r\n      if (typeof callback !== \"function\") {\r\n        error(\r\n          \"render(...): Expected the last optional `callback` argument to be a \" +\r\n            \"function. Instead received: %s.\",\r\n          callback\r\n        );\r\n      }\r\n    }\r\n\r\n    update.callback = callback;\r\n  }\r\n\r\n  var root = enqueueUpdate(current$1, update, lane);\r\n\r\n  if (root !== null) {\r\n    scheduleUpdateOnFiber(root, current$1, lane, eventTime);\r\n    entangleTransitions(root, current$1, lane);\r\n  }\r\n\r\n  return lane;\r\n}\r\nfunction getPublicRootInstance(container) {\r\n  var containerFiber = container.current;\r\n\r\n  if (!containerFiber.child) {\r\n    return null;\r\n  }\r\n\r\n  switch (containerFiber.child.tag) {\r\n    case HostComponent:\r\n      return getPublicInstance(containerFiber.child.stateNode);\r\n\r\n    default:\r\n      return containerFiber.child.stateNode;\r\n  }\r\n}\r\n\r\nvar shouldErrorImpl = function(fiber) {\r\n  return null;\r\n};\r\n\r\nfunction shouldError(fiber) {\r\n  return shouldErrorImpl(fiber);\r\n}\r\n\r\nvar shouldSuspendImpl = function(fiber) {\r\n  return false;\r\n};\r\n\r\nfunction shouldSuspend(fiber) {\r\n  return shouldSuspendImpl(fiber);\r\n}\r\nvar overrideHookState = null;\r\nvar overrideHookStateDeletePath = null;\r\nvar overrideHookStateRenamePath = null;\r\nvar overrideProps = null;\r\nvar overridePropsDeletePath = null;\r\nvar overridePropsRenamePath = null;\r\nvar scheduleUpdate = null;\r\nvar setErrorHandler = null;\r\nvar setSuspenseHandler = null;\r\n\r\n{\r\n  var copyWithDeleteImpl = function(obj, path, index) {\r\n    var key = path[index];\r\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\r\n\r\n    if (index + 1 === path.length) {\r\n      if (isArray(updated)) {\r\n        updated.splice(key, 1);\r\n      } else {\r\n        delete updated[key];\r\n      }\r\n\r\n      return updated;\r\n    } // $FlowFixMe number or string is fine here\r\n\r\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\r\n    return updated;\r\n  };\r\n\r\n  var copyWithDelete = function(obj, path) {\r\n    return copyWithDeleteImpl(obj, path, 0);\r\n  };\r\n\r\n  var copyWithRenameImpl = function(obj, oldPath, newPath, index) {\r\n    var oldKey = oldPath[index];\r\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj);\r\n\r\n    if (index + 1 === oldPath.length) {\r\n      var newKey = newPath[index]; // $FlowFixMe number or string is fine here\r\n\r\n      updated[newKey] = updated[oldKey];\r\n\r\n      if (isArray(updated)) {\r\n        updated.splice(oldKey, 1);\r\n      } else {\r\n        delete updated[oldKey];\r\n      }\r\n    } else {\r\n      // $FlowFixMe number or string is fine here\r\n      updated[oldKey] = copyWithRenameImpl(\r\n        // $FlowFixMe number or string is fine here\r\n        obj[oldKey],\r\n        oldPath,\r\n        newPath,\r\n        index + 1\r\n      );\r\n    }\r\n\r\n    return updated;\r\n  };\r\n\r\n  var copyWithRename = function(obj, oldPath, newPath) {\r\n    if (oldPath.length !== newPath.length) {\r\n      warn(\"copyWithRename() expects paths of the same length\");\r\n\r\n      return;\r\n    } else {\r\n      for (var i = 0; i < newPath.length - 1; i++) {\r\n        if (oldPath[i] !== newPath[i]) {\r\n          warn(\r\n            \"copyWithRename() expects paths to be the same except for the deepest key\"\r\n          );\r\n\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\r\n  };\r\n\r\n  var copyWithSetImpl = function(obj, path, index, value) {\r\n    if (index >= path.length) {\r\n      return value;\r\n    }\r\n\r\n    var key = path[index];\r\n    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here\r\n\r\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\r\n    return updated;\r\n  };\r\n\r\n  var copyWithSet = function(obj, path, value) {\r\n    return copyWithSetImpl(obj, path, 0, value);\r\n  };\r\n\r\n  var findHook = function(fiber, id) {\r\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\r\n    // This may change in the future with e.g. nested hooks.\r\n    var currentHook = fiber.memoizedState;\r\n\r\n    while (currentHook !== null && id > 0) {\r\n      currentHook = currentHook.next;\r\n      id--;\r\n    }\r\n\r\n    return currentHook;\r\n  }; // Support DevTools editable values for useState and useReducer.\r\n\r\n  overrideHookState = function(fiber, id, path, value) {\r\n    var hook = findHook(fiber, id);\r\n\r\n    if (hook !== null) {\r\n      var newState = copyWithSet(hook.memoizedState, path, value);\r\n      hook.memoizedState = newState;\r\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\r\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\r\n      // (There's no appropriate action type for DevTools overrides.)\r\n      // As a result though, React will see the scheduled update as a noop and bailout.\r\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\r\n\r\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\r\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (root !== null) {\r\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n  };\r\n\r\n  overrideHookStateDeletePath = function(fiber, id, path) {\r\n    var hook = findHook(fiber, id);\r\n\r\n    if (hook !== null) {\r\n      var newState = copyWithDelete(hook.memoizedState, path);\r\n      hook.memoizedState = newState;\r\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\r\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\r\n      // (There's no appropriate action type for DevTools overrides.)\r\n      // As a result though, React will see the scheduled update as a noop and bailout.\r\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\r\n\r\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\r\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (root !== null) {\r\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n  };\r\n\r\n  overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {\r\n    var hook = findHook(fiber, id);\r\n\r\n    if (hook !== null) {\r\n      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);\r\n      hook.memoizedState = newState;\r\n      hook.baseState = newState; // We aren't actually adding an update to the queue,\r\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\r\n      // (There's no appropriate action type for DevTools overrides.)\r\n      // As a result though, React will see the scheduled update as a noop and bailout.\r\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\r\n\r\n      fiber.memoizedProps = assign({}, fiber.memoizedProps);\r\n      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n      if (root !== null) {\r\n        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n      }\r\n    }\r\n  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.\r\n\r\n  overrideProps = function(fiber, path, value) {\r\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\r\n\r\n    if (fiber.alternate) {\r\n      fiber.alternate.pendingProps = fiber.pendingProps;\r\n    }\r\n\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  overridePropsDeletePath = function(fiber, path) {\r\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\r\n\r\n    if (fiber.alternate) {\r\n      fiber.alternate.pendingProps = fiber.pendingProps;\r\n    }\r\n\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  overridePropsRenamePath = function(fiber, oldPath, newPath) {\r\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\r\n\r\n    if (fiber.alternate) {\r\n      fiber.alternate.pendingProps = fiber.pendingProps;\r\n    }\r\n\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  scheduleUpdate = function(fiber) {\r\n    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);\r\n\r\n    if (root !== null) {\r\n      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);\r\n    }\r\n  };\r\n\r\n  setErrorHandler = function(newShouldErrorImpl) {\r\n    shouldErrorImpl = newShouldErrorImpl;\r\n  };\r\n\r\n  setSuspenseHandler = function(newShouldSuspendImpl) {\r\n    shouldSuspendImpl = newShouldSuspendImpl;\r\n  };\r\n}\r\n\r\nfunction findHostInstanceByFiber(fiber) {\r\n  var hostFiber = findCurrentHostFiber(fiber);\r\n\r\n  if (hostFiber === null) {\r\n    return null;\r\n  }\r\n\r\n  return hostFiber.stateNode;\r\n}\r\n\r\nfunction emptyFindFiberByHostInstance(instance) {\r\n  return null;\r\n}\r\n\r\nfunction getCurrentFiberForDevTools() {\r\n  return current;\r\n}\r\n\r\nfunction injectIntoDevTools(devToolsConfig) {\r\n  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;\r\n  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\r\n  return injectInternals({\r\n    bundleType: devToolsConfig.bundleType,\r\n    version: devToolsConfig.version,\r\n    rendererPackageName: devToolsConfig.rendererPackageName,\r\n    rendererConfig: devToolsConfig.rendererConfig,\r\n    overrideHookState: overrideHookState,\r\n    overrideHookStateDeletePath: overrideHookStateDeletePath,\r\n    overrideHookStateRenamePath: overrideHookStateRenamePath,\r\n    overrideProps: overrideProps,\r\n    overridePropsDeletePath: overridePropsDeletePath,\r\n    overridePropsRenamePath: overridePropsRenamePath,\r\n    setErrorHandler: setErrorHandler,\r\n    setSuspenseHandler: setSuspenseHandler,\r\n    scheduleUpdate: scheduleUpdate,\r\n    currentDispatcherRef: ReactCurrentDispatcher,\r\n    findHostInstanceByFiber: findHostInstanceByFiber,\r\n    findFiberByHostInstance:\r\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\r\n    // React Refresh\r\n    findHostInstancesForRefresh: findHostInstancesForRefresh,\r\n    scheduleRefresh: scheduleRefresh,\r\n    scheduleRoot: scheduleRoot,\r\n    setRefreshHandler: setRefreshHandler,\r\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\r\n    getCurrentFiber: getCurrentFiberForDevTools,\r\n    // Enables DevTools to detect reconciler version rather than renderer version\r\n    // which may not match for third party renderers.\r\n    reconcilerVersion: ReactVersion\r\n  });\r\n}\r\n\r\nvar emptyObject$1 = {};\r\n\r\n{\r\n  Object.freeze(emptyObject$1);\r\n}\r\n\r\nvar createHierarchy;\r\nvar getHostNode;\r\nvar getHostProps;\r\nvar lastNonHostInstance;\r\n\r\nvar getOwnerHierarchy;\r\nvar traverseOwnerTreeUp;\r\n\r\n{\r\n  createHierarchy = function(fiberHierarchy) {\r\n    return fiberHierarchy.map(function(fiber) {\r\n      return {\r\n        name: getComponentNameFromType(fiber.type),\r\n        getInspectorData: function(findNodeHandle) {\r\n          return {\r\n            props: getHostProps(fiber),\r\n            source: fiber._debugSource,\r\n            measure: function(callback) {\r\n              // If this is Fabric, we'll find a ShadowNode and use that to measure.\r\n              var hostFiber = findCurrentHostFiber(fiber);\r\n              var shadowNode =\r\n                hostFiber != null &&\r\n                hostFiber.stateNode !== null &&\r\n                hostFiber.stateNode.node;\r\n\r\n              if (shadowNode) {\r\n                nativeFabricUIManager.measure(shadowNode, callback);\r\n              } else {\r\n                return ReactNativePrivateInterface.UIManager.measure(\r\n                  getHostNode(fiber, findNodeHandle),\r\n                  callback\r\n                );\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  getHostNode = function(fiber, findNodeHandle) {\r\n    var hostNode; // look for children first for the hostNode\r\n    // as composite fibers do not have a hostNode\r\n\r\n    while (fiber) {\r\n      if (fiber.stateNode !== null && fiber.tag === HostComponent) {\r\n        hostNode = findNodeHandle(fiber.stateNode);\r\n      }\r\n\r\n      if (hostNode) {\r\n        return hostNode;\r\n      }\r\n\r\n      fiber = fiber.child;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  getHostProps = function(fiber) {\r\n    var host = findCurrentHostFiber(fiber);\r\n\r\n    if (host) {\r\n      return host.memoizedProps || emptyObject$1;\r\n    }\r\n\r\n    return emptyObject$1;\r\n  };\r\n\r\n  exports.getInspectorDataForInstance = function(closestInstance) {\r\n    // Handle case where user clicks outside of ReactNative\r\n    if (!closestInstance) {\r\n      return {\r\n        hierarchy: [],\r\n        props: emptyObject$1,\r\n        selectedIndex: null,\r\n        source: null\r\n      };\r\n    }\r\n\r\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\r\n    var fiberHierarchy = getOwnerHierarchy(fiber);\r\n    var instance = lastNonHostInstance(fiberHierarchy);\r\n    var hierarchy = createHierarchy(fiberHierarchy);\r\n    var props = getHostProps(instance);\r\n    var source = instance._debugSource;\r\n    var selectedIndex = fiberHierarchy.indexOf(instance);\r\n    return {\r\n      hierarchy: hierarchy,\r\n      props: props,\r\n      selectedIndex: selectedIndex,\r\n      source: source\r\n    };\r\n  };\r\n\r\n  getOwnerHierarchy = function(instance) {\r\n    var hierarchy = [];\r\n    traverseOwnerTreeUp(hierarchy, instance);\r\n    return hierarchy;\r\n  };\r\n\r\n  lastNonHostInstance = function(hierarchy) {\r\n    for (var i = hierarchy.length - 1; i > 1; i--) {\r\n      var instance = hierarchy[i];\r\n\r\n      if (instance.tag !== HostComponent) {\r\n        return instance;\r\n      }\r\n    }\r\n\r\n    return hierarchy[0];\r\n  };\r\n\r\n  traverseOwnerTreeUp = function(hierarchy, instance) {\r\n    if (instance) {\r\n      hierarchy.unshift(instance);\r\n      traverseOwnerTreeUp(hierarchy, instance._debugOwner);\r\n    }\r\n  };\r\n}\r\n\r\nvar getInspectorDataForViewTag;\r\nvar getInspectorDataForViewAtPoint;\r\n\r\n{\r\n  getInspectorDataForViewTag = function(viewTag) {\r\n    var closestInstance = getInstanceFromTag(viewTag); // Handle case where user clicks outside of ReactNative\r\n\r\n    if (!closestInstance) {\r\n      return {\r\n        hierarchy: [],\r\n        props: emptyObject$1,\r\n        selectedIndex: null,\r\n        source: null\r\n      };\r\n    }\r\n\r\n    var fiber = findCurrentFiberUsingSlowPath(closestInstance);\r\n    var fiberHierarchy = getOwnerHierarchy(fiber);\r\n    var instance = lastNonHostInstance(fiberHierarchy);\r\n    var hierarchy = createHierarchy(fiberHierarchy);\r\n    var props = getHostProps(instance);\r\n    var source = instance._debugSource;\r\n    var selectedIndex = fiberHierarchy.indexOf(instance);\r\n    return {\r\n      hierarchy: hierarchy,\r\n      props: props,\r\n      selectedIndex: selectedIndex,\r\n      source: source\r\n    };\r\n  };\r\n\r\n  getInspectorDataForViewAtPoint = function(\r\n    findNodeHandle,\r\n    inspectedView,\r\n    locationX,\r\n    locationY,\r\n    callback\r\n  ) {\r\n    var closestInstance = null;\r\n\r\n    if (inspectedView._internalInstanceHandle != null) {\r\n      // For Fabric we can look up the instance handle directly and measure it.\r\n      nativeFabricUIManager.findNodeAtPoint(\r\n        inspectedView._internalInstanceHandle.stateNode.node,\r\n        locationX,\r\n        locationY,\r\n        function(internalInstanceHandle) {\r\n          if (internalInstanceHandle == null) {\r\n            callback(\r\n              assign(\r\n                {\r\n                  pointerY: locationY,\r\n                  frame: {\r\n                    left: 0,\r\n                    top: 0,\r\n                    width: 0,\r\n                    height: 0\r\n                  }\r\n                },\r\n                exports.getInspectorDataForInstance(closestInstance)\r\n              )\r\n            );\r\n          }\r\n\r\n          closestInstance =\r\n            internalInstanceHandle.stateNode.canonical._internalInstanceHandle; // Note: this is deprecated and we want to remove it ASAP. Keeping it here for React DevTools compatibility for now.\r\n\r\n          var nativeViewTag =\r\n            internalInstanceHandle.stateNode.canonical._nativeTag;\r\n          nativeFabricUIManager.measure(\r\n            internalInstanceHandle.stateNode.node,\r\n            function(x, y, width, height, pageX, pageY) {\r\n              var inspectorData = exports.getInspectorDataForInstance(\r\n                closestInstance\r\n              );\r\n              callback(\r\n                assign({}, inspectorData, {\r\n                  pointerY: locationY,\r\n                  frame: {\r\n                    left: pageX,\r\n                    top: pageY,\r\n                    width: width,\r\n                    height: height\r\n                  },\r\n                  touchedViewTag: nativeViewTag\r\n                })\r\n              );\r\n            }\r\n          );\r\n        }\r\n      );\r\n    } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\r\n      // For Paper we fall back to the old strategy using the React tag.\r\n      ReactNativePrivateInterface.UIManager.findSubviewIn(\r\n        findNodeHandle(inspectedView),\r\n        [locationX, locationY],\r\n        function(nativeViewTag, left, top, width, height) {\r\n          var inspectorData = exports.getInspectorDataForInstance(\r\n            getInstanceFromTag(nativeViewTag)\r\n          );\r\n          callback(\r\n            assign({}, inspectorData, {\r\n              pointerY: locationY,\r\n              frame: {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height\r\n              },\r\n              touchedViewTag: nativeViewTag\r\n            })\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      error(\r\n        \"getInspectorDataForViewAtPoint expects to receive a host component\"\r\n      );\r\n\r\n      return;\r\n    }\r\n  };\r\n}\r\n\r\nvar ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;\r\n\r\nfunction findHostInstance_DEPRECATED(componentOrHandle) {\r\n  {\r\n    var owner = ReactCurrentOwner$3.current;\r\n\r\n    if (owner !== null && owner.stateNode !== null) {\r\n      if (!owner.stateNode._warnedAboutRefsInRender) {\r\n        error(\r\n          \"%s is accessing findNodeHandle inside its render(). \" +\r\n            \"render() should be a pure function of props and state. It should \" +\r\n            \"never access something that requires stale data from the previous \" +\r\n            \"render, such as refs. Move this logic to componentDidMount and \" +\r\n            \"componentDidUpdate instead.\",\r\n          getComponentNameFromType(owner.type) || \"A component\"\r\n        );\r\n      }\r\n\r\n      owner.stateNode._warnedAboutRefsInRender = true;\r\n    }\r\n  }\r\n\r\n  if (componentOrHandle == null) {\r\n    return null;\r\n  }\r\n\r\n  if (componentOrHandle._nativeTag) {\r\n    return componentOrHandle;\r\n  }\r\n\r\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\r\n    return componentOrHandle.canonical;\r\n  }\r\n\r\n  var hostInstance;\r\n\r\n  {\r\n    hostInstance = findHostInstanceWithWarning(\r\n      componentOrHandle,\r\n      \"findHostInstance_DEPRECATED\"\r\n    );\r\n  }\r\n\r\n  if (hostInstance == null) {\r\n    return hostInstance;\r\n  }\r\n\r\n  if (hostInstance.canonical) {\r\n    // Fabric\r\n    return hostInstance.canonical;\r\n  } // $FlowFixMe[incompatible-return]\r\n\r\n  return hostInstance;\r\n}\r\n\r\nfunction findNodeHandle(componentOrHandle) {\r\n  {\r\n    var owner = ReactCurrentOwner$3.current;\r\n\r\n    if (owner !== null && owner.stateNode !== null) {\r\n      if (!owner.stateNode._warnedAboutRefsInRender) {\r\n        error(\r\n          \"%s is accessing findNodeHandle inside its render(). \" +\r\n            \"render() should be a pure function of props and state. It should \" +\r\n            \"never access something that requires stale data from the previous \" +\r\n            \"render, such as refs. Move this logic to componentDidMount and \" +\r\n            \"componentDidUpdate instead.\",\r\n          getComponentNameFromType(owner.type) || \"A component\"\r\n        );\r\n      }\r\n\r\n      owner.stateNode._warnedAboutRefsInRender = true;\r\n    }\r\n  }\r\n\r\n  if (componentOrHandle == null) {\r\n    return null;\r\n  }\r\n\r\n  if (typeof componentOrHandle === \"number\") {\r\n    // Already a node handle\r\n    return componentOrHandle;\r\n  }\r\n\r\n  if (componentOrHandle._nativeTag) {\r\n    return componentOrHandle._nativeTag;\r\n  }\r\n\r\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\r\n    return componentOrHandle.canonical._nativeTag;\r\n  }\r\n\r\n  var hostInstance;\r\n\r\n  {\r\n    hostInstance = findHostInstanceWithWarning(\r\n      componentOrHandle,\r\n      \"findNodeHandle\"\r\n    );\r\n  }\r\n\r\n  if (hostInstance == null) {\r\n    return hostInstance;\r\n  }\r\n\r\n  if (hostInstance.canonical) {\r\n    // Fabric\r\n    return hostInstance.canonical._nativeTag;\r\n  }\r\n\r\n  return hostInstance._nativeTag;\r\n}\r\n\r\nfunction dispatchCommand(handle, command, args) {\r\n  if (handle._nativeTag == null) {\r\n    {\r\n      error(\r\n        \"dispatchCommand was called with a ref that isn't a \" +\r\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\r\n      );\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if (handle._internalInstanceHandle != null) {\r\n    var stateNode = handle._internalInstanceHandle.stateNode;\r\n\r\n    if (stateNode != null) {\r\n      nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\r\n    }\r\n  } else {\r\n    ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(\r\n      handle._nativeTag,\r\n      command,\r\n      args\r\n    );\r\n  }\r\n}\r\n\r\nfunction sendAccessibilityEvent(handle, eventType) {\r\n  if (handle._nativeTag == null) {\r\n    {\r\n      error(\r\n        \"sendAccessibilityEvent was called with a ref that isn't a \" +\r\n          \"native component. Use React.forwardRef to get access to the underlying native component\"\r\n      );\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  if (handle._internalInstanceHandle != null) {\r\n    var stateNode = handle._internalInstanceHandle.stateNode;\r\n\r\n    if (stateNode != null) {\r\n      nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\r\n    }\r\n  } else {\r\n    ReactNativePrivateInterface.legacySendAccessibilityEvent(\r\n      handle._nativeTag,\r\n      eventType\r\n    );\r\n  }\r\n}\r\n\r\nfunction onRecoverableError(error$1) {\r\n  // TODO: Expose onRecoverableError option to userspace\r\n  // eslint-disable-next-line react-internal/no-production-logging, react-internal/warning-args\r\n  error(error$1);\r\n}\r\n\r\nfunction render(element, containerTag, callback) {\r\n  var root = roots.get(containerTag);\r\n\r\n  if (!root) {\r\n    // TODO (bvaughn): If we decide to keep the wrapper component,\r\n    // We could create a wrapper for containerTag as well to reduce special casing.\r\n    root = createContainer(\r\n      containerTag,\r\n      LegacyRoot,\r\n      null,\r\n      false,\r\n      null,\r\n      \"\",\r\n      onRecoverableError\r\n    );\r\n    roots.set(containerTag, root);\r\n  }\r\n\r\n  updateContainer(element, root, null, callback); // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\r\n\r\n  return getPublicRootInstance(root);\r\n}\r\n\r\nfunction unmountComponentAtNode(containerTag) {\r\n  var root = roots.get(containerTag);\r\n\r\n  if (root) {\r\n    // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\r\n    updateContainer(null, root, null, function() {\r\n      roots.delete(containerTag);\r\n    });\r\n  }\r\n}\r\n\r\nfunction unmountComponentAtNodeAndRemoveContainer(containerTag) {\r\n  unmountComponentAtNode(containerTag); // Call back into native to remove all of the subviews from this container\r\n\r\n  ReactNativePrivateInterface.UIManager.removeRootView(containerTag);\r\n}\r\n\r\nfunction createPortal$1(children, containerTag) {\r\n  var key =\r\n    arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\r\n  return createPortal(children, containerTag, null, key);\r\n}\r\n\r\nsetBatchingImplementation(batchedUpdates$1);\r\n\r\nfunction computeComponentStackForErrorReporting(reactTag) {\r\n  var fiber = getInstanceFromTag(reactTag);\r\n\r\n  if (!fiber) {\r\n    return \"\";\r\n  }\r\n\r\n  return getStackByFiberInDevAndProd(fiber);\r\n}\r\n\r\nvar roots = new Map();\r\nvar Internals = {\r\n  computeComponentStackForErrorReporting: computeComponentStackForErrorReporting\r\n};\r\ninjectIntoDevTools({\r\n  findFiberByHostInstance: getInstanceFromTag,\r\n  bundleType: 1,\r\n  version: ReactVersion,\r\n  rendererPackageName: \"react-native-renderer\",\r\n  rendererConfig: {\r\n    getInspectorDataForViewTag: getInspectorDataForViewTag,\r\n    getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(\r\n      null,\r\n      findNodeHandle\r\n    )\r\n  }\r\n});\r\n\r\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;\r\nexports.createPortal = createPortal$1;\r\nexports.dispatchCommand = dispatchCommand;\r\nexports.findHostInstance_DEPRECATED = findHostInstance_DEPRECATED;\r\nexports.findNodeHandle = findNodeHandle;\r\nexports.render = render;\r\nexports.sendAccessibilityEvent = sendAccessibilityEvent;\r\nexports.unmountComponentAtNode = unmountComponentAtNode;\r\nexports.unmountComponentAtNodeAndRemoveContainer = unmountComponentAtNodeAndRemoveContainer;\r\nexports.unstable_batchedUpdates = batchedUpdates;\r\n\r\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\r\nif (\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\r\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\r\n    'function'\r\n) {\r\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\r\n}\r\n        \r\n  })();\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}