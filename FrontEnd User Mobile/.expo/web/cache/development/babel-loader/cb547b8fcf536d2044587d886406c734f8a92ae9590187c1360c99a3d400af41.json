{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar infoLog = require(\"../Utilities/infoLog\");\nvar invariant = require('invariant');\nvar DEBUG = false;\nvar TaskQueue = function () {\n  function TaskQueue(_ref) {\n    var onMoreTasks = _ref.onMoreTasks;\n    _classCallCheck(this, TaskQueue);\n    this._onMoreTasks = onMoreTasks;\n    this._queueStack = [{\n      tasks: [],\n      popable: false\n    }];\n  }\n  _createClass(TaskQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(task) {\n      this._getCurrentQueue().push(task);\n    }\n  }, {\n    key: \"enqueueTasks\",\n    value: function enqueueTasks(tasks) {\n      var _this = this;\n      tasks.forEach(function (task) {\n        return _this.enqueue(task);\n      });\n    }\n  }, {\n    key: \"cancelTasks\",\n    value: function cancelTasks(tasksToCancel) {\n      this._queueStack = this._queueStack.map(function (queue) {\n        return _objectSpread(_objectSpread({}, queue), {}, {\n          tasks: queue.tasks.filter(function (task) {\n            return tasksToCancel.indexOf(task) === -1;\n          })\n        });\n      }).filter(function (queue, idx) {\n        return queue.tasks.length > 0 || idx === 0;\n      });\n    }\n  }, {\n    key: \"hasTasksToProcess\",\n    value: function hasTasksToProcess() {\n      return this._getCurrentQueue().length > 0;\n    }\n  }, {\n    key: \"processNext\",\n    value: function processNext() {\n      var queue = this._getCurrentQueue();\n      if (queue.length) {\n        var task = queue.shift();\n        try {\n          if (typeof task === 'object' && task.gen) {\n            DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\n            this._genPromise(task);\n          } else if (typeof task === 'object' && task.run) {\n            DEBUG && infoLog('TaskQueue: run task ' + task.name);\n            task.run();\n          } else {\n            invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n            DEBUG && infoLog('TaskQueue: run anonymous task');\n            task();\n          }\n        } catch (e) {\n          e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n          throw e;\n        }\n      }\n    }\n  }, {\n    key: \"_getCurrentQueue\",\n    value: function _getCurrentQueue() {\n      var stackIdx = this._queueStack.length - 1;\n      var queue = this._queueStack[stackIdx];\n      if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n        this._queueStack.pop();\n        DEBUG && infoLog('TaskQueue: popped queue: ', {\n          stackIdx: stackIdx,\n          queueStackSize: this._queueStack.length\n        });\n        return this._getCurrentQueue();\n      } else {\n        return queue.tasks;\n      }\n    }\n  }, {\n    key: \"_genPromise\",\n    value: function _genPromise(task) {\n      var _this2 = this;\n      this._queueStack.push({\n        tasks: [],\n        popable: false\n      });\n      var stackIdx = this._queueStack.length - 1;\n      var stackItem = this._queueStack[stackIdx];\n      DEBUG && infoLog('TaskQueue: push new queue: ', {\n        stackIdx: stackIdx\n      });\n      DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\n      task.gen().then(function () {\n        DEBUG && infoLog('TaskQueue: onThen for gen task ' + task.name, {\n          stackIdx: stackIdx,\n          queueStackSize: _this2._queueStack.length\n        });\n        stackItem.popable = true;\n        _this2.hasTasksToProcess() && _this2._onMoreTasks();\n      }).catch(function (ex) {\n        setTimeout(function () {\n          ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\n          throw ex;\n        }, 0);\n      });\n    }\n  }]);\n  return TaskQueue;\n}();\nmodule.exports = TaskQueue;","map":{"version":3,"names":["_defineProperty","require","_classCallCheck","_createClass","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","infoLog","invariant","DEBUG","TaskQueue","_ref","onMoreTasks","_onMoreTasks","_queueStack","tasks","popable","key","value","enqueue","task","_getCurrentQueue","enqueueTasks","_this","cancelTasks","tasksToCancel","map","queue","indexOf","idx","hasTasksToProcess","processNext","shift","gen","name","_genPromise","run","JSON","stringify","message","stackIdx","pop","queueStackSize","_this2","stackItem","then","catch","ex","setTimeout","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Interaction/TaskQueue.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\n'use strict';\r\n\r\nconst infoLog = require('../Utilities/infoLog');\r\nconst invariant = require('invariant');\r\n\r\ntype SimpleTask = {\r\n  name: string,\r\n  run: () => void,\r\n};\r\ntype PromiseTask = {\r\n  name: string,\r\n  gen: () => Promise<void>,\r\n};\r\nexport type Task = SimpleTask | PromiseTask | (() => void);\r\n\r\nconst DEBUG: false = false;\r\n\r\n/**\r\n * TaskQueue - A system for queueing and executing a mix of simple callbacks and\r\n * trees of dependent tasks based on Promises. No tasks are executed unless\r\n * `processNext` is called.\r\n *\r\n * `enqueue` takes a Task object with either a simple `run` callback, or a\r\n * `gen` function that returns a `Promise` and puts it in the queue.  If a gen\r\n * function is supplied, then the promise it returns will block execution of\r\n * tasks already in the queue until it resolves. This can be used to make sure\r\n * the first task is fully resolved (including asynchronous dependencies that\r\n * also schedule more tasks via `enqueue`) before starting on the next task.\r\n * The `onMoreTasks` constructor argument is used to inform the owner that an\r\n * async task has resolved and that the queue should be processed again.\r\n *\r\n * Note: Tasks are only actually executed with explicit calls to `processNext`.\r\n */\r\nclass TaskQueue {\r\n  /**\r\n   * TaskQueue instances are self contained and independent, so multiple tasks\r\n   * of varying semantics and priority can operate together.\r\n   *\r\n   * `onMoreTasks` is invoked when `PromiseTask`s resolve if there are more\r\n   * tasks to process.\r\n   */\r\n  constructor({onMoreTasks}: {onMoreTasks: () => void, ...}) {\r\n    this._onMoreTasks = onMoreTasks;\r\n    this._queueStack = [{tasks: [], popable: false}];\r\n  }\r\n\r\n  /**\r\n   * Add a task to the queue.  It is recommended to name your tasks for easier\r\n   * async debugging. Tasks will not be executed until `processNext` is called\r\n   * explicitly.\r\n   */\r\n  enqueue(task: Task): void {\r\n    this._getCurrentQueue().push(task);\r\n  }\r\n\r\n  enqueueTasks(tasks: Array<Task>): void {\r\n    tasks.forEach(task => this.enqueue(task));\r\n  }\r\n\r\n  cancelTasks(tasksToCancel: Array<Task>): void {\r\n    // search through all tasks and remove them.\r\n    this._queueStack = this._queueStack\r\n      .map(queue => ({\r\n        ...queue,\r\n        tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1),\r\n      }))\r\n      .filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\r\n  }\r\n\r\n  /**\r\n   * Check to see if `processNext` should be called.\r\n   *\r\n   * @returns {boolean} Returns true if there are tasks that are ready to be\r\n   * processed with `processNext`, or returns false if there are no more tasks\r\n   * to be processed right now, although there may be tasks in the queue that\r\n   * are blocked by earlier `PromiseTask`s that haven't resolved yet.\r\n   * `onMoreTasks` will be called after each `PromiseTask` resolves if there are\r\n   * tasks ready to run at that point.\r\n   */\r\n  hasTasksToProcess(): boolean {\r\n    return this._getCurrentQueue().length > 0;\r\n  }\r\n\r\n  /**\r\n   * Executes the next task in the queue.\r\n   */\r\n  processNext(): void {\r\n    const queue = this._getCurrentQueue();\r\n    if (queue.length) {\r\n      const task = queue.shift();\r\n      try {\r\n        if (typeof task === 'object' && task.gen) {\r\n          DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\r\n          this._genPromise(task);\r\n        } else if (typeof task === 'object' && task.run) {\r\n          DEBUG && infoLog('TaskQueue: run task ' + task.name);\r\n          task.run();\r\n        } else {\r\n          invariant(\r\n            typeof task === 'function',\r\n            'Expected Function, SimpleTask, or PromiseTask, but got:\\n' +\r\n              JSON.stringify(task, null, 2),\r\n          );\r\n          DEBUG && infoLog('TaskQueue: run anonymous task');\r\n          task();\r\n        }\r\n      } catch (e) {\r\n        e.message =\r\n          'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  _queueStack: Array<{\r\n    tasks: Array<Task>,\r\n    popable: boolean,\r\n    ...\r\n  }>;\r\n  _onMoreTasks: () => void;\r\n\r\n  _getCurrentQueue(): Array<Task> {\r\n    const stackIdx = this._queueStack.length - 1;\r\n    const queue = this._queueStack[stackIdx];\r\n    if (\r\n      queue.popable &&\r\n      queue.tasks.length === 0 &&\r\n      this._queueStack.length > 1\r\n    ) {\r\n      this._queueStack.pop();\r\n      DEBUG &&\r\n        infoLog('TaskQueue: popped queue: ', {\r\n          stackIdx,\r\n          queueStackSize: this._queueStack.length,\r\n        });\r\n      return this._getCurrentQueue();\r\n    } else {\r\n      return queue.tasks;\r\n    }\r\n  }\r\n\r\n  _genPromise(task: PromiseTask) {\r\n    // Each async task pushes it's own queue onto the queue stack. This\r\n    // effectively defers execution of previously queued tasks until the promise\r\n    // resolves, at which point we allow the new queue to be popped, which\r\n    // happens once it is fully processed.\r\n    this._queueStack.push({tasks: [], popable: false});\r\n    const stackIdx = this._queueStack.length - 1;\r\n    const stackItem = this._queueStack[stackIdx];\r\n    DEBUG && infoLog('TaskQueue: push new queue: ', {stackIdx});\r\n    DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\r\n    task\r\n      .gen()\r\n      .then(() => {\r\n        DEBUG &&\r\n          infoLog('TaskQueue: onThen for gen task ' + task.name, {\r\n            stackIdx,\r\n            queueStackSize: this._queueStack.length,\r\n          });\r\n        stackItem.popable = true;\r\n        this.hasTasksToProcess() && this._onMoreTasks();\r\n      })\r\n      .catch(ex => {\r\n        setTimeout(() => {\r\n          ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\r\n          throw ex;\r\n        }, 0);\r\n      });\r\n  }\r\n}\r\n\r\nmodule.exports = TaskQueue;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}