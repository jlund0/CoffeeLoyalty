{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Animated from \"../../Animated/Animated\";\nimport Easing from \"../../Animated/Easing\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport LogBoxButton from \"./LogBoxButton\";\nimport * as LogBoxStyle from \"./LogBoxStyle\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LogBoxInspectorSourceMapStatus(props) {\n  var _React$useState = React.useState({\n      animation: null,\n      rotate: null\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  React.useEffect(function () {\n    if (props.status === 'PENDING') {\n      if (state.animation == null) {\n        var animated = new Animated.Value(0);\n        var animation = Animated.loop(Animated.timing(animated, {\n          duration: 2000,\n          easing: Easing.linear,\n          toValue: 1,\n          useNativeDriver: true\n        }));\n        setState({\n          animation: animation,\n          rotate: animated.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg']\n          })\n        });\n        animation.start();\n      }\n    } else {\n      if (state.animation != null) {\n        state.animation.stop();\n        setState({\n          animation: null,\n          rotate: null\n        });\n      }\n    }\n    return function () {\n      if (state.animation != null) {\n        state.animation.stop();\n      }\n    };\n  }, [props.status, state.animation]);\n  var image;\n  var color;\n  switch (props.status) {\n    case 'FAILED':\n      image = require(\"./LogBoxImages/alert-triangle.png\");\n      color = LogBoxStyle.getErrorColor(1);\n      break;\n    case 'PENDING':\n      image = require(\"./LogBoxImages/loader.png\");\n      color = LogBoxStyle.getWarningColor(1);\n      break;\n  }\n  if (props.status === 'COMPLETE' || image == null) {\n    return null;\n  }\n  return _jsxs(LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getBackgroundColor(1)\n    },\n    hitSlop: {\n      bottom: 8,\n      left: 8,\n      right: 8,\n      top: 8\n    },\n    onPress: props.onPress,\n    style: styles.root,\n    children: [_jsx(Animated.Image, {\n      source: image,\n      style: [styles.image, {\n        tintColor: color\n      }, state.rotate == null || props.status !== 'PENDING' ? null : {\n        transform: [{\n          rotate: state.rotate\n        }]\n      }]\n    }), _jsx(Text, {\n      style: [styles.text, {\n        color: color\n      }],\n      children: \"Source Map\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8\n  },\n  image: {\n    height: 14,\n    width: 16,\n    marginEnd: 4,\n    tintColor: LogBoxStyle.getTextColor(0.4)\n  },\n  text: {\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16\n  }\n});\nexport default LogBoxInspectorSourceMapStatus;","map":{"version":3,"names":["Animated","Easing","StyleSheet","Text","LogBoxButton","LogBoxStyle","React","jsx","_jsx","jsxs","_jsxs","LogBoxInspectorSourceMapStatus","props","_React$useState","useState","animation","rotate","_React$useState2","_slicedToArray","state","setState","useEffect","status","animated","Value","loop","timing","duration","easing","linear","toValue","useNativeDriver","interpolate","inputRange","outputRange","start","stop","image","color","require","getErrorColor","getWarningColor","backgroundColor","default","pressed","getBackgroundColor","hitSlop","bottom","left","right","top","onPress","style","styles","root","children","Image","source","tintColor","transform","text","create","alignItems","borderRadius","flexDirection","height","paddingHorizontal","width","marginEnd","getTextColor","fontSize","includeFontPadding","lineHeight"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/LogBox/UI/LogBoxInspectorSourceMapStatus.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {PressEvent} from '../../Types/CoreEventTypes';\r\n\r\nimport Animated from '../../Animated/Animated';\r\nimport Easing from '../../Animated/Easing';\r\nimport StyleSheet from '../../StyleSheet/StyleSheet';\r\nimport Text from '../../Text/Text';\r\nimport LogBoxButton from './LogBoxButton';\r\nimport * as LogBoxStyle from './LogBoxStyle';\r\nimport * as React from 'react';\r\n\r\ntype Props = $ReadOnly<{|\r\n  onPress?: ?(event: PressEvent) => void,\r\n  status: 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING',\r\n|}>;\r\n\r\nfunction LogBoxInspectorSourceMapStatus(props: Props): React.Node {\r\n  const [state, setState] = React.useState({\r\n    animation: null,\r\n    rotate: null,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (props.status === 'PENDING') {\r\n      if (state.animation == null) {\r\n        const animated = new Animated.Value(0);\r\n        const animation = Animated.loop(\r\n          Animated.timing(animated, {\r\n            duration: 2000,\r\n            easing: Easing.linear,\r\n            toValue: 1,\r\n            useNativeDriver: true,\r\n          }),\r\n        );\r\n        // $FlowFixMe[incompatible-call]\r\n        setState({\r\n          animation,\r\n          rotate: animated.interpolate({\r\n            inputRange: [0, 1],\r\n            outputRange: ['0deg', '360deg'],\r\n          }),\r\n        });\r\n        animation.start();\r\n      }\r\n    } else {\r\n      if (state.animation != null) {\r\n        state.animation.stop();\r\n        setState({\r\n          animation: null,\r\n          rotate: null,\r\n        });\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (state.animation != null) {\r\n        state.animation.stop();\r\n      }\r\n    };\r\n  }, [props.status, state.animation]);\r\n\r\n  let image;\r\n  let color;\r\n  switch (props.status) {\r\n    case 'FAILED':\r\n      image = require('./LogBoxImages/alert-triangle.png');\r\n      color = LogBoxStyle.getErrorColor(1);\r\n      break;\r\n    case 'PENDING':\r\n      image = require('./LogBoxImages/loader.png');\r\n      color = LogBoxStyle.getWarningColor(1);\r\n      break;\r\n  }\r\n\r\n  if (props.status === 'COMPLETE' || image == null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <LogBoxButton\r\n      backgroundColor={{\r\n        default: 'transparent',\r\n        pressed: LogBoxStyle.getBackgroundColor(1),\r\n      }}\r\n      hitSlop={{bottom: 8, left: 8, right: 8, top: 8}}\r\n      onPress={props.onPress}\r\n      style={styles.root}>\r\n      <Animated.Image\r\n        source={image}\r\n        style={[\r\n          styles.image,\r\n          {tintColor: color},\r\n          state.rotate == null || props.status !== 'PENDING'\r\n            ? null\r\n            : {transform: [{rotate: state.rotate}]},\r\n        ]}\r\n      />\r\n      <Text style={[styles.text, {color}]}>Source Map</Text>\r\n    </LogBoxButton>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    borderRadius: 12,\r\n    flexDirection: 'row',\r\n    height: 24,\r\n    paddingHorizontal: 8,\r\n  },\r\n  image: {\r\n    height: 14,\r\n    width: 16,\r\n    marginEnd: 4,\r\n    tintColor: LogBoxStyle.getTextColor(0.4),\r\n  },\r\n  text: {\r\n    fontSize: 12,\r\n    includeFontPadding: false,\r\n    lineHeight: 16,\r\n  },\r\n});\r\n\r\nexport default LogBoxInspectorSourceMapStatus;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}