{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport NavBar from \"../components/NavBar\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from \"react-native-maps\";\nimport * as Location from 'expo-location';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getStoreLogo, getStores } from \"../firebasefunctions\";\nimport FontAwesomeIcon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar CARD_HEIGHT = height / 6;\nvar CARD_WIDTH = width * 0.8;\nexport function MapScreen(_ref) {\n  var _this = this;\n  var navigation = _ref.navigation;\n  console.log(\"Map\");\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentLocation = _useState2[0],\n    setCurrentLocation = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    initialRegion = _useState4[0],\n    setInitialRegion = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    markers = _useState6[0],\n    setMarkers = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var mapRef = useRef(null);\n  var scrollRef = useRef(null);\n  var scrollX = useRef(new Animated.Value(0)).current;\n  var mapMarkers = function mapMarkers() {\n    return markers.map(function (marker, index) {\n      return _jsx(Marker, {\n        coordinate: {\n          latitude: marker.coords.latitude,\n          longitude: marker.coords.longitude\n        },\n        title: marker.name,\n        image: require(\"../assets/coffeemarker.png\"),\n        onPress: function onPress(e) {\n          return scrollRef.current.scrollTo({\n            x: index * CARD_WIDTH,\n            animated: true\n          });\n        }\n      }, index);\n    });\n  };\n  useEffect(function () {\n    var getLocation = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        if (status !== \"granted\") {\n          console.log(\"Permission to access location was denied\");\n          return;\n        }\n        var location = yield Location.getCurrentPositionAsync({});\n        setCurrentLocation(location.coords);\n        var storefetch = yield getStores(location.coords.latitude, location.coords.longitude);\n        setMarkers(storefetch.sort(function (p1, p2) {\n          return p1.distanceAway > p2.distanceAway ? 1 : p1.distanceAway < p2.distanceAway ? -1 : 0;\n        }));\n        setInitialRegion({\n          latitude: location.coords.latitude,\n          longitude: location.coords.longitude,\n          latitudeDelta: 0.005,\n          longitudeDelta: 0.005\n        });\n        setLoading(false);\n      });\n      return function getLocation() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getLocation();\n  }, []);\n  useEffect(function () {\n    scrollX.addListener(function (_ref3) {\n      var value = _ref3.value;\n      if (markers != null) {\n        var index = Math.floor(value / CARD_WIDTH + 0.3);\n        if (index >= markers.length) {\n          index = markers.length - 1;\n        }\n        if (index <= 0) {\n          index = 0;\n        }\n        clearTimeout(_this.regionTimeout);\n        _this.regionTimeout = setTimeout(function () {\n          if (_this.index !== index) {\n            _this.index = index;\n            var coords = markers[index].coords;\n            mapRef.current.animateToRegion({\n              latitude: coords.latitude,\n              longitude: coords.longitude,\n              latitudeDelta: 0.005,\n              longitudeDelta: 0.005\n            }, 350);\n          }\n        }, 10);\n      }\n    });\n  }, [scrollX]);\n  var goToCurrentLocation = function goToCurrentLocation() {\n    mapRef.current.animateToRegion(initialRegion, 1000);\n  };\n  var goToStore = function goToStore(coords) {\n    mapRef.current.animateToRegion({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      latitudeDelta: 0.005,\n      longitudeDelta: 0.005\n    }, 1000);\n  };\n  return _jsxs(View, {\n    style: styles.mainContainer,\n    children: [_jsxs(View, {\n      id: \"map\",\n      style: styles.map,\n      children: [_jsx(MapView, {\n        ref: mapRef,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        initialRegion: initialRegion,\n        showsUserLocation: true,\n        loadingEnabled: true,\n        loadingIndicatorColor: \"#666666\",\n        loadingBackgroundColor: \"#eeeeee\",\n        followsUserLocation: true,\n        showsMyLocationButton: true,\n        children: markers != null && mapMarkers()\n      }), _jsx(Pressable, {\n        style: styles.currentLocation,\n        onPress: goToCurrentLocation,\n        children: _jsx(FontAwesomeIcon, {\n          name: \"location-arrow\",\n          size: 40,\n          color: \"blue\"\n        })\n      })]\n    }), _jsx(Animated.ScrollView, {\n      style: styles.scrollView,\n      horizontal: true,\n      scrollEventThrottle: 1,\n      showsHorizontalScrollIndicator: false,\n      snapToInterval: CARD_WIDTH,\n      contentContainerStyle: styles.endPadding,\n      ref: scrollRef,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: scrollX\n          }\n        }\n      }], {\n        useNativeDriver: true\n      }),\n      children: markers != null ? markers.map(function (marker, index) {\n        return _jsxs(Pressable, {\n          style: styles.card,\n          onPress: function onPress() {\n            goToStore(marker.coords);\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: marker.logo\n            },\n            style: styles.logo\n          }), _jsxs(View, {\n            style: styles.textBox,\n            children: [_jsx(Text, {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: 18\n              },\n              children: marker.name\n            }), _jsx(Text, {\n              children: marker.location\n            }), _jsxs(Text, {\n              children: [Math.floor(marker.distanceAway), \" meters away\"]\n            })]\n          })]\n        }, `markercard-${index}`);\n      }) : _jsx(View, {\n        style: styles.card,\n        children: _jsx(ActivityIndicator, {})\n      })\n    }), _jsx(NavBar, {\n      navigation: navigation,\n      isFocused: \"map\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: \"#936748\"\n  },\n  map: {\n    flex: 3,\n    margin: 10,\n    marginBottom: 0,\n    borderRadius: 20\n  },\n  currentLocation: {\n    position: \"absolute\",\n    zIndex: 1,\n    bottom: 0,\n    right: 0,\n    backgroundColor: \"white\",\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    borderRadius: 60,\n    margin: 30,\n    alignItems: \"center\"\n  },\n  scrollView: {\n    paddingVertical: 10,\n    zIndex: 2,\n    flex: 1\n  },\n  card: {\n    padding: 20,\n    elevation: 2,\n    backgroundColor: \"#C4A484\",\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      x: 2,\n      y: -2\n    },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n    borderRadius: 20,\n    alignContent: \"stretch\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      x: 2,\n      y: -2\n    },\n    marginHorizontal: 10\n  },\n  logo: {\n    width: CARD_WIDTH,\n    height: CARD_HEIGHT * 0.7,\n    position: \"absolute\",\n    resizeMode: \"contain\",\n    left: 0\n  },\n  textBox: {\n    backgroundColor: \"rgba(255,255,255,0.8)\",\n    padding: 20,\n    borderRadius: 10\n  },\n  endPadding: {\n    paddingRight: width * 0.05,\n    paddingLeft: width * 0.08\n  }\n});","map":{"version":3,"names":["NavBar","MapView","PROVIDER_GOOGLE","Marker","Location","React","useState","useEffect","useRef","getStoreLogo","getStores","FontAwesomeIcon","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","MapScreen","_ref","_this","navigation","console","log","_useState","_useState2","_slicedToArray","currentLocation","setCurrentLocation","_useState3","_useState4","initialRegion","setInitialRegion","_useState5","_useState6","markers","setMarkers","_useState7","_useState8","loading","setLoading","mapRef","scrollRef","scrollX","Animated","Value","current","mapMarkers","map","marker","index","coordinate","latitude","coords","longitude","title","name","image","require","onPress","e","scrollTo","x","animated","getLocation","_ref2","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","location","getCurrentPositionAsync","storefetch","sort","p1","p2","distanceAway","latitudeDelta","longitudeDelta","apply","arguments","addListener","_ref3","value","Math","floor","length","clearTimeout","regionTimeout","setTimeout","animateToRegion","goToCurrentLocation","goToStore","View","style","styles","mainContainer","children","id","ref","showsUserLocation","loadingEnabled","loadingIndicatorColor","loadingBackgroundColor","followsUserLocation","showsMyLocationButton","Pressable","size","color","ScrollView","scrollView","horizontal","scrollEventThrottle","showsHorizontalScrollIndicator","snapToInterval","contentContainerStyle","endPadding","onScroll","event","nativeEvent","contentOffset","useNativeDriver","card","Image","source","uri","logo","textBox","Text","fontWeight","fontSize","ActivityIndicator","isFocused","StyleSheet","create","flex","backgroundColor","margin","marginBottom","borderRadius","position","zIndex","bottom","right","paddingHorizontal","paddingVertical","alignItems","padding","elevation","shadowColor","shadowRadius","shadowOpacity","shadowOffset","y","overflow","alignContent","justifyContent","marginHorizontal","resizeMode","left","paddingRight","paddingLeft"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/screens/maps.js"],"sourcesContent":["import { View ,StyleSheet,Text,Pressable ,ScrollView,Image,\r\n  Animated,Button,\r\n  Dimensions,\r\n  ActivityIndicator, } from \"react-native\";\r\nimport NavBar from \"../components/NavBar\";\r\n// import {  } from \"react-native-maps\";\r\nimport MapView, {PROVIDER_GOOGLE,Marker } from \"react-native-maps\";\r\nimport * as Location from 'expo-location';\r\nimport React, { useState, useEffect,useRef } from 'react';\r\nimport { getStoreLogo, getStores } from \"../firebasefunctions\";\r\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\"\r\n\r\n\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst CARD_HEIGHT = height/6;\r\nconst CARD_WIDTH = width*0.8;\r\n\r\nexport function MapScreen({ navigation }) {\r\n  console.log(\"Map\")\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n  const [initialRegion, setInitialRegion] = useState(null);\r\n  const [markers ,setMarkers] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const mapRef = useRef(null);\r\n  const scrollRef = useRef(null)\r\n  // const interpolations = markers.map((marker, index) => {\r\n  //   const inputRange = [\r\n  //     (index - 1) * CARD_WIDTH,\r\n  //     index * CARD_WIDTH,\r\n  //     (index + 1) * CARD_WIDTH,\r\n  //   ];\r\n  // })\r\n\r\n  const scrollX = useRef(new Animated.Value(0)).current;\r\n\r\n\r\n \r\n\r\n  const mapMarkers=()=>{\r\n   \r\n    return markers.map((marker, index) => {\r\n      return(\r\n      <Marker coordinate={{latitude: marker.coords.latitude, longitude: marker.coords.longitude}} title={marker.name} key={index} image={require('../assets/coffeemarker.png')}\r\n      onPress={(e) => scrollRef.current.scrollTo({x: (index*CARD_WIDTH), animated: true})}\r\n      \r\n      ></Marker>)})\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getLocation = async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== \"granted\") {\r\n        console.log(\"Permission to access location was denied\");\r\n        return;\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setCurrentLocation(location.coords);\r\n      const storefetch = await getStores(location.coords.latitude,\r\n         location.coords.longitude)\r\n      setMarkers(storefetch.sort((p1,p2)=>(p1.distanceAway > p2.distanceAway) ? 1 : (p1.distanceAway < p2.distanceAway) ? -1 : 0))\r\n      setInitialRegion({\r\n        latitude: location.coords.latitude,\r\n        longitude: location.coords.longitude,\r\n        latitudeDelta: 0.005,\r\n        longitudeDelta: 0.005,\r\n      });\r\n      setLoading(false)\r\n    };\r\n    getLocation();\r\n  \r\n  }, []);\r\n  useEffect(()=>{\r\n    scrollX.addListener(({ value }) => {\r\n      if(markers != null){\r\n      let index = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item\r\n      if (index >= markers.length) {\r\n        index = markers.length - 1;\r\n      }\r\n      if (index <= 0) {\r\n        index = 0;\r\n      }\r\n\r\n      clearTimeout(this.regionTimeout);\r\n      this.regionTimeout = setTimeout(() => {\r\n        if (this.index !== index) {\r\n          this.index = index;\r\n          const { coords } = markers[index];\r\n          mapRef.current.animateToRegion(\r\n            {\r\n              latitude: coords.latitude, \r\n              longitude: coords.longitude,\r\n              latitudeDelta: 0.005,\r\n              longitudeDelta: 0.005,\r\n            },\r\n            350\r\n          );\r\n        }\r\n      }, 10);}\r\n  })},[scrollX])\r\n\r\n  const goToCurrentLocation = () => {\r\n    mapRef.current.animateToRegion(initialRegion, 1000);}\r\n\r\n  const goToStore = (coords) =>{\r\n    mapRef.current.animateToRegion({latitude:coords.latitude,longitude:coords.longitude,latitudeDelta: 0.005,\r\n      longitudeDelta: 0.005,}, 1000);\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n     <View id=\"map\"style={styles.map}>\r\n        <MapView ref={mapRef} style={{width:\"100%\",height:\"100%\"}} \r\n        initialRegion={initialRegion} \r\n        showsUserLocation={true} \r\n        loadingEnabled = {true}\r\n         loadingIndicatorColor=\"#666666\"\r\n         loadingBackgroundColor=\"#eeeeee\"\r\n         followsUserLocation={true}\r\n         showsMyLocationButton={true}\r\n         >\r\n           {markers != null && mapMarkers()}\r\n        </MapView>\r\n        <Pressable style={styles.currentLocation} onPress={goToCurrentLocation}>\r\n          <FontAwesomeIcon name=\"location-arrow\" size={40} color=\"blue\"/>\r\n        </Pressable></View>\r\n      <Animated.ScrollView style={styles.scrollView} horizontal={true}\r\n      scrollEventThrottle={1}\r\n      showsHorizontalScrollIndicator={false}\r\n      snapToInterval={CARD_WIDTH}\r\n      contentContainerStyle={styles.endPadding}\r\n      ref={scrollRef}\r\n      onScroll={Animated.event(\r\n        [\r\n          {\r\n            nativeEvent: {\r\n              contentOffset: {\r\n                x: scrollX,\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        { useNativeDriver: true }\r\n      )}\r\n        >\r\n      {markers != null ?  \r\n      markers.map((marker, index) => {\r\n        return(\r\n          <Pressable style={styles.card} key={`markercard-${index}`} onPress={()=>{goToStore(marker.coords)}}>\r\n          <Image source={{uri:marker.logo}} style={styles.logo}></Image>\r\n          <View style={styles.textBox}>\r\n           <Text style={{fontWeight:\"bold\", fontSize:18}}>{marker.name}</Text> \r\n          <Text>{marker.location}</Text>\r\n          <Text>{Math.floor(marker.distanceAway)} meters away</Text></View>\r\n        </Pressable>   \r\n       )\r\n      }):<View style={styles.card}><ActivityIndicator/></View>}\r\n      </Animated.ScrollView>\r\n\r\n      <NavBar navigation={navigation} isFocused={\"map\"} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer:{\r\n    flex: 1,\r\n    backgroundColor: \"#936748\",\r\n  },\r\n  map:{\r\n    flex:3,\r\n    margin:10,\r\n    marginBottom:0,\r\n    borderRadius:20,\r\n    \r\n  },\r\n  currentLocation:\r\n  {\r\n    position:\"absolute\",\r\n    zIndex:1,\r\n    bottom:0,\r\n    right:0,\r\n    backgroundColor:\"white\",\r\n    paddingHorizontal:20,\r\n    paddingVertical:15,\r\n    borderRadius:60,\r\n    margin:30,\r\n    alignItems:\"center\"\r\n  }\r\n  ,  \r\n  scrollView: {\r\n    // position: \"absolute\",\r\n    // bottom: 100,\r\n    // left: 0,\r\n    // right: 0,\r\n    paddingVertical: 10,\r\n    zIndex:2,\r\n    flex:1\r\n\r\n  },  card: {\r\n    padding:20,\r\n    elevation: 2,\r\n    backgroundColor: \"#C4A484\",\r\n    shadowColor: \"#000\",\r\n    shadowRadius: 5,\r\n    shadowOpacity: 0.3,\r\n    shadowOffset: { x: 2, y: -2 },\r\n    height: CARD_HEIGHT,\r\n    width: CARD_WIDTH,\r\n    overflow: \"hidden\",\r\n    borderRadius:20,\r\n    alignContent:\"stretch\",\r\n    alignItems:\"stretch\",\r\n    justifyContent:\"center\", \r\n    shadowColor: \"#000\",\r\n    shadowRadius: 5,\r\n    shadowOpacity: 0.3,\r\n    shadowOffset: { x: 2, y: -2 },marginHorizontal: 10,\r\n  },\r\n  logo:{\r\n    width:CARD_WIDTH,\r\n    height:CARD_HEIGHT * 0.7,\r\n    position:\"absolute\",\r\n    resizeMode:\"contain\",\r\n    left:0,\r\n  \r\n  },\r\n  textBox:{\r\n    backgroundColor:\"rgba(255,255,255,0.8)\",\r\n    padding:20,\r\n    borderRadius:10\r\n  },  endPadding: {\r\n    paddingRight: width *0.05,\r\n    paddingLeft: width*0.08,\r\n  },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}