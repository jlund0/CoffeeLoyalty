{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as React from \"react\";\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { app, signOut } from \"./firebase.js\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport Home from \"./screens/Home\";\nimport CardScreen from \"./screens/Card\";\nimport StoresScreen from \"./screens/Shops\";\nimport SettingsScreen from \"./screens/Settings\";\nimport SignInScreen from \"./screens/SignIn\";\nimport SignUpScreen from \"./screens/SignUp\";\nimport LoyaltyCard from \"./screens/loyaltyCard\";\nimport { getUserInfo, getUserCards } from \"./firebasefunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar auth = getAuth(app);\nvar TopBanner = {\n  title: \"CupCount\",\n  headerStyle: {\n    backgroundColor: \"#5E3023\"\n  },\n  headerTintColor: \"#F3E9DC\",\n  headerTitleStyle: {\n    fontWeight: \"bold\",\n    fontSize: 40\n  },\n  headerTitleAlign: \"center\",\n  headerBackTitleVisible: false,\n  headerLargeStyle: true\n};\nfunction SplashScreen() {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Image, {\n      source: require(\"./assets/3dCup.png\"),\n      width: 50,\n      height: 50\n    }), _jsx(Text, {\n      children: \"Roasting Coffee...\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\"\n    })]\n  });\n}\nexport default function App() {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userToken = _React$useState2[0],\n    setUserToken = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    loading = _React$useState4[0],\n    setLoading = _React$useState4[1];\n  onAuthStateChanged(auth, function (user) {\n    if (user) {\n      console.log(user);\n      setLoading(false);\n      if (user.role !== \"customer\") {\n        signOut(auth).then(function () {\n          console.log(\"Sign-out successful.\");\n        }).catch(function (error) {\n          console.log(\"sign out error\" + error);\n        });\n      } else {\n        setUserToken(user.uid);\n      }\n    } else {\n      setUserToken(null);\n      setLoading(false);\n    }\n  });\n  if (loading) {\n    console.log(\"loading\");\n    return _jsx(SplashScreen, {});\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: userToken == null ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: SignInScreen,\n          options: TopBanner\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: SignUpScreen,\n          options: TopBanner\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: TopBanner,\n          initialParams: {\n            userid: userToken\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"card\",\n          component: CardScreen,\n          options: TopBanner\n        }), _jsx(Stack.Screen, {\n          name: \"settings\",\n          component: SettingsScreen,\n          options: TopBanner\n        }), _jsx(Stack.Screen, {\n          name: \"loyaltyCard\",\n          component: LoyaltyCard,\n          options: TopBanner\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 18\n  },\n  icon: {\n    width: 40,\n    height: 40\n  },\n  button: {\n    borderRadius: 50,\n    backgroundColor: \"0\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","useIsFocused","createNativeStackNavigator","app","signOut","getAuth","onAuthStateChanged","Home","CardScreen","StoresScreen","SettingsScreen","SignInScreen","SignUpScreen","LoyaltyCard","getUserInfo","getUserCards","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","auth","TopBanner","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerTitleAlign","headerBackTitleVisible","headerLargeStyle","SplashScreen","View","style","flex","alignItems","justifyContent","children","Image","source","require","width","height","Text","ActivityIndicator","size","App","_React$useState","useState","_React$useState2","_slicedToArray","userToken","setUserToken","_React$useState3","_React$useState4","loading","setLoading","user","console","log","role","then","catch","error","uid","Navigator","initialRouteName","Screen","name","component","options","initialParams","userid","styles","StyleSheet","create","image","borderRadius","icon","button","borderWidth","alignSelf"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/FrontEnd User Mobile/App.js"],"sourcesContent":["import { StyleSheet, View, ActivityIndicator, Text, Image } from \"react-native\";\n\nimport * as React from \"react\";\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { app, signOut } from \"./firebase.js\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n//SCREENS\nimport Home from \"./screens/Home\";\nimport CardScreen from \"./screens/Card\";\nimport StoresScreen from \"./screens/Shops\";\nimport SettingsScreen from \"./screens/Settings\";\nimport SignInScreen from \"./screens/SignIn\";\nimport SignUpScreen from \"./screens/SignUp\";\nimport LoyaltyCard from \"./screens/loyaltyCard\";\nimport { getUserInfo, getUserCards } from \"./firebasefunctions\";\n\nconst Stack = createNativeStackNavigator();\nconst auth = getAuth(app);\n\nconst TopBanner = {\n  title: \"CupCount\",\n  headerStyle: { backgroundColor: \"#5E3023\" },\n  headerTintColor: \"#F3E9DC\",\n  headerTitleStyle: { fontWeight: \"bold\", fontSize: 40 },\n  headerTitleAlign: \"center\",\n  headerBackTitleVisible: false,\n  headerLargeStyle: true,\n};\n\nfunction SplashScreen() {\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Image source={require(\"./assets/3dCup.png\")} width={50} height={50} />\n      <Text>Roasting Coffee...</Text>\n      <ActivityIndicator size=\"large\" />\n    </View>\n  );\n}\n\nexport default function App() {\n  const [userToken, setUserToken] = React.useState(null);\n  // const [userInfo, setUserInfo] = React.useState(null);\n  // const [userCards, setUserCards] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  // React.useEffect(() => {\n  //   console.log(\"checking user auth\");\n  onAuthStateChanged(auth, (user) => {\n    if (user) {\n      console.log(user);\n      setLoading(false);\n      if (user.role !== \"customer\") {\n        signOut(auth)\n          .then(() => {\n            // Sign-out successful.\n            console.log(\"Sign-out successful.\");\n          })\n          .catch((error) => {\n            // An error happened.\n            console.log(\"sign out error\" + error);\n          });\n      } else {\n        setUserToken(user.uid);\n      }\n    } else {\n      setUserToken(null);\n      setLoading(false);\n    }\n  });\n  // }, []);\n\n  if (loading) {\n    // We haven't finished checking for the token yet\n    console.log(\"loading\");\n    return <SplashScreen />;\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        {userToken == null ? (\n          <>\n            <Stack.Screen\n              name=\"Login\"\n              component={SignInScreen}\n              options={TopBanner}\n            />\n            <Stack.Screen\n              name=\"Register\"\n              component={SignUpScreen}\n              options={TopBanner}\n            />\n          </>\n        ) : (\n          <>\n            <Stack.Screen\n              name=\"Home\"\n              component={Home}\n              options={TopBanner}\n              initialParams={{ userid: userToken }}\n            />\n            <Stack.Screen\n              name=\"card\"\n              component={CardScreen}\n              options={TopBanner}\n              // initialParams={userCards}\n            />\n            {/* <Stack.Screen\n              name=\"stores\"\n              component={StoresScreen}\n              options={{\n            TopBanner,                animation: \"slide_from_left\",\n              }}\n            /> */}\n            <Stack.Screen\n              name=\"settings\"\n              component={SettingsScreen}\n              options={TopBanner}\n            />\n            <Stack.Screen\n              name=\"loyaltyCard\"\n              component={LoyaltyCard}\n              options={TopBanner}\n            />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 18,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n\n  button: {\n    borderRadius: 50,\n    backgroundColor: \"0\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}