{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as React from \"react\";\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { app, signOut, auth } from \"./firebase.js\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport Home from \"./screens/Home\";\nimport CardScreen from \"./screens/Card\";\nimport SettingsScreen from \"./screens/Settings\";\nimport SignInScreen from \"./screens/SignIn\";\nimport SignUpScreen from \"./screens/SignUp\";\nimport LoyaltyCard from \"./screens/loyaltyCard\";\nimport { getUserInfo, getUserCards } from \"./firebasefunctions\";\nimport { MapScreen } from \"./screens/maps.js\";\nimport { EnterName } from \"./screens/name.js\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction SplashScreen() {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Roasting Coffee...\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\"\n    })]\n  });\n}\nexport default function App() {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userToken = _React$useState2[0],\n    setUserToken = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    loading = _React$useState4[0],\n    setLoading = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    hasDisplayName = _React$useState6[0],\n    setHasDisplayName = _React$useState6[1];\n  var _useFonts = useFonts({\n      'Lobster-Regular': require(\"./assets/fonts/Lobster-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    fontError = _useFonts2[1];\n  var TopBanner = {\n    title: \"CupCount\",\n    headerStyle: {\n      backgroundColor: \"#5E3023\"\n    },\n    headerTintColor: \"#F3E9DC\",\n    headerTitleStyle: {\n      fontWeight: \"bold\",\n      fontSize: 36,\n      fontFamily: \"Lobster-Regular\"\n    },\n    headerTitleAlign: \"center\",\n    headerBackTitleVisible: false,\n    headerLargeStyle: true,\n    animation: \"none\",\n    headerBackVisible: false\n  };\n  var TopBannerLoyaltyCard = {\n    title: \"CupCount\",\n    headerStyle: {\n      backgroundColor: \"#5E3023\"\n    },\n    headerTintColor: \"#F3E9DC\",\n    headerTitleStyle: {\n      fontWeight: \"bold\",\n      fontSize: 36,\n      fontFamily: \"Lobster-Regular\"\n    },\n    headerTitleAlign: \"center\",\n    headerBackTitleVisible: false,\n    headerLargeStyle: true,\n    animation: \"none\"\n  };\n  onAuthStateChanged(auth, function (user) {\n    if (user) {\n      setLoading(false);\n      setUserToken(user.uid);\n      if (user.displayName !== null) {\n        setHasDisplayName(true);\n      }\n    } else {\n      setUserToken(null);\n      setLoading(false);\n    }\n  });\n  if (loading) {\n    console.log(\"loading\");\n    return _jsx(SplashScreen, {});\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: userToken == null ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: SignInScreen,\n          options: TopBanner\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: SignUpScreen,\n          options: TopBanner\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [!hasDisplayName && _jsx(Stack.Screen, {\n          name: \"EnterName\",\n          component: EnterName,\n          options: TopBanner\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: TopBanner,\n          initialParams: {\n            userid: userToken\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"card\",\n          component: CardScreen,\n          options: TopBanner\n        }), _jsx(Stack.Screen, {\n          name: \"settings\",\n          component: SettingsScreen,\n          options: TopBanner\n        }), _jsx(Stack.Screen, {\n          name: \"loyaltyCard\",\n          component: LoyaltyCard,\n          options: TopBannerLoyaltyCard\n        }), _jsx(Stack.Screen, {\n          name: \"map\",\n          component: MapScreen,\n          options: TopBanner\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 18\n  },\n  icon: {\n    width: 40,\n    height: 40\n  },\n  button: {\n    borderRadius: 50,\n    backgroundColor: \"0\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","useIsFocused","createNativeStackNavigator","app","signOut","auth","getAuth","onAuthStateChanged","Home","CardScreen","SettingsScreen","SignInScreen","SignUpScreen","LoyaltyCard","getUserInfo","getUserCards","MapScreen","EnterName","useFonts","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","SplashScreen","View","style","flex","alignItems","justifyContent","children","Text","ActivityIndicator","size","App","_React$useState","useState","_React$useState2","_slicedToArray","userToken","setUserToken","_React$useState3","_React$useState4","loading","setLoading","_React$useState5","_React$useState6","hasDisplayName","setHasDisplayName","_useFonts","require","_useFonts2","fontsLoaded","fontError","TopBanner","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","fontFamily","headerTitleAlign","headerBackTitleVisible","headerLargeStyle","animation","headerBackVisible","TopBannerLoyaltyCard","user","uid","displayName","console","log","Navigator","initialRouteName","Screen","name","component","options","initialParams","userid","styles","StyleSheet","create","image","width","height","borderRadius","icon","button","borderWidth","alignSelf"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/App.js"],"sourcesContent":["import { StyleSheet, View, ActivityIndicator, Text, Image } from \"react-native\";\r\n\r\nimport * as React from \"react\";\r\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { app, signOut, auth } from \"./firebase.js\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n//SCREENS\r\nimport Home from \"./screens/Home\";\r\nimport CardScreen from \"./screens/Card\";\r\nimport SettingsScreen from \"./screens/Settings\";\r\nimport SignInScreen from \"./screens/SignIn\";\r\nimport SignUpScreen from \"./screens/SignUp\";\r\nimport LoyaltyCard from \"./screens/loyaltyCard\";\r\nimport { getUserInfo, getUserCards } from \"./firebasefunctions\";\r\nimport { MapScreen } from \"./screens/maps.js\";\r\nimport { EnterName } from \"./screens/name.js\";\r\nimport { useFonts } from \"expo-font\";\r\nconst Stack = createNativeStackNavigator();\r\n\r\n//Workaround\r\n// window.navigator.userAgent = \"ReactNative\";\r\n\r\n// const auth = getAuth(app);\r\n\r\n\r\n\r\n\r\nfunction SplashScreen() {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n      <Text>Roasting Coffee...</Text>\r\n      <ActivityIndicator size=\"large\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [userToken, setUserToken] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [hasDisplayName, setHasDisplayName] = React.useState(false);\r\n\r\n  const [fontsLoaded, fontError] = useFonts({\r\n    'Lobster-Regular': require('./assets/fonts/Lobster-Regular.ttf'),\r\n  });\r\n\r\n  const TopBanner = {\r\n    title: \"CupCount\",\r\n    headerStyle: { backgroundColor: \"#5E3023\" },\r\n    headerTintColor: \"#F3E9DC\",\r\n    headerTitleStyle: { fontWeight: \"bold\", fontSize: 36 ,fontFamily:\"Lobster-Regular\"},\r\n    headerTitleAlign: \"center\",\r\n    headerBackTitleVisible: false,\r\n    headerLargeStyle: true,\r\n    animation: \"none\",\r\n    headerBackVisible:false,\r\n\r\n   \r\n  };\r\n  const TopBannerLoyaltyCard = {\r\n    title: \"CupCount\",\r\n    headerStyle: { backgroundColor: \"#5E3023\" },\r\n    headerTintColor: \"#F3E9DC\",\r\n    headerTitleStyle: { fontWeight: \"bold\", fontSize: 36 ,fontFamily:\"Lobster-Regular\"},\r\n    headerTitleAlign: \"center\",\r\n    headerBackTitleVisible: false,\r\n    headerLargeStyle: true,\r\n    animation: \"none\",\r\n   \r\n  };\r\n  \r\n  \r\n  onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n      setLoading(false);\r\n      setUserToken(user.uid);\r\n      if (user.displayName !== null) {\r\n        setHasDisplayName(true);\r\n      }\r\n    } else {\r\n      setUserToken(null);\r\n      setLoading(false);\r\n    }\r\n  });\r\n  // }, []);\r\n\r\n  if (loading) {\r\n    // We haven't finished checking for the token yet\r\n    console.log(\"loading\");\r\n    return <SplashScreen />;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Login\">\r\n        {userToken == null ? (\r\n          <>\r\n            <Stack.Screen\r\n              name=\"Login\"\r\n              component={SignInScreen}\r\n              options={TopBanner}\r\n            />\r\n            <Stack.Screen\r\n              name=\"Register\"\r\n              component={SignUpScreen}\r\n              options={TopBanner}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {!hasDisplayName && (\r\n              <Stack.Screen\r\n                name=\"EnterName\"\r\n                component={EnterName}\r\n                options={TopBanner}\r\n              />\r\n            )}\r\n            <Stack.Screen\r\n              name=\"Home\"\r\n              component={Home}\r\n              options={TopBanner}\r\n              initialParams={{ userid: userToken }}\r\n              \r\n            />\r\n            <Stack.Screen\r\n              name=\"card\"\r\n              component={CardScreen}\r\n              options={TopBanner}\r\n              // initialParams={userCards}\r\n            />\r\n            {/* <Stack.Screen\r\n              name=\"stores\"\r\n              component={StoresScreen}\r\n              options={{\r\n            TopBanner,                animation: \"slide_from_left\",\r\n              }}\r\n            /> */}\r\n            <Stack.Screen\r\n              name=\"settings\"\r\n              component={SettingsScreen}\r\n              options={TopBanner}\r\n            />\r\n            <Stack.Screen\r\n              name=\"loyaltyCard\"\r\n              component={LoyaltyCard}\r\n              options={TopBannerLoyaltyCard}\r\n\r\n            />\r\n            <Stack.Screen\r\n              name=\"map\"\r\n              component={MapScreen}\r\n              options={TopBanner}\r\n\r\n            />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 18,\r\n  },\r\n  icon: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n\r\n  button: {\r\n    borderRadius: 50,\r\n    backgroundColor: \"0\",\r\n    borderWidth: 2,\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}