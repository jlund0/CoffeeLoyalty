{"ast":null,"code":"import * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nexport default TurboModuleRegistry.get('NativePerformanceObserverCxx');","map":{"version":3,"names":["TurboModuleRegistry","get"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/WebPerformance/NativePerformanceObserver.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\nimport type {TurboModule} from '../TurboModule/RCTExport';\r\n\r\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\r\n\r\nexport type RawPerformanceEntryType = number;\r\n\r\nexport type RawPerformanceEntry = {|\r\n  name: string,\r\n  entryType: RawPerformanceEntryType,\r\n  startTime: number,\r\n  duration: number,\r\n  // For \"event\" entries only:\r\n  processingStart?: number,\r\n  processingEnd?: number,\r\n  interactionId?: number,\r\n|};\r\n\r\nexport type GetPendingEntriesResult = {|\r\n  entries: $ReadOnlyArray<RawPerformanceEntry>,\r\n  droppedEntriesCount: number,\r\n|};\r\n\r\nexport interface Spec extends TurboModule {\r\n  +startReporting: (entryType: RawPerformanceEntryType) => void;\r\n  +stopReporting: (entryType: RawPerformanceEntryType) => void;\r\n  +popPendingEntries: () => GetPendingEntriesResult;\r\n  +setOnPerformanceEntryCallback: (callback?: () => void) => void;\r\n  +logRawEntry: (entry: RawPerformanceEntry) => void;\r\n  +getEventCounts: () => $ReadOnlyArray<[string, number]>;\r\n  +setDurationThreshold: (\r\n    entryType: RawPerformanceEntryType,\r\n    durationThreshold: number,\r\n  ) => void;\r\n  +clearEntries: (\r\n    entryType: RawPerformanceEntryType,\r\n    entryName?: string,\r\n  ) => void;\r\n  +getEntries: (\r\n    entryType?: RawPerformanceEntryType,\r\n    entryName?: string,\r\n  ) => $ReadOnlyArray<RawPerformanceEntry>;\r\n}\r\n\r\nexport default (TurboModuleRegistry.get<Spec>(\r\n  'NativePerformanceObserverCxx',\r\n): ?Spec);\r\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAmB;AAyC/B,eAAgBA,mBAAmB,CAACC,GAAG,CACrC,8BACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}