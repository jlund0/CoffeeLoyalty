{"ast":null,"code":"'use strict';\n\nif (__DEV__) {\n  var isWebSocketOpen = false;\n  var ws = null;\n  var reactDevTools = require('react-devtools-core');\n  var connectToDevTools = function connectToDevTools() {\n    if (ws !== null && isWebSocketOpen) {\n      return;\n    }\n    if (!window.document) {\n      var AppState = require(\"../AppState/AppState\");\n      var getDevServer = require(\"./Devtools/getDevServer\");\n      var isAppActive = function isAppActive() {\n        return AppState.currentState !== 'background';\n      };\n      var devServer = getDevServer();\n      var host = devServer.bundleLoadedFromServer ? devServer.url.replace(/https?:\\/\\//, '').replace(/\\/$/, '').split(':')[0] : 'localhost';\n      var port = window.__REACT_DEVTOOLS_PORT__ != null ? window.__REACT_DEVTOOLS_PORT__ : 8097;\n      var WebSocket = require(\"../WebSocket/WebSocket\");\n      ws = new WebSocket('ws://' + host + ':' + port);\n      ws.addEventListener('close', function (event) {\n        isWebSocketOpen = false;\n      });\n      ws.addEventListener('open', function (event) {\n        isWebSocketOpen = true;\n      });\n      var ReactNativeStyleAttributes = require(\"../Components/View/ReactNativeStyleAttributes\");\n      var devToolsSettingsManager = require(\"../DevToolsSettings/DevToolsSettingsManager\");\n      reactDevTools.connectToDevTools({\n        isAppActive: isAppActive,\n        resolveRNStyle: require(\"../StyleSheet/flattenStyle\"),\n        nativeStyleEditorValidAttributes: Object.keys(ReactNativeStyleAttributes),\n        websocket: ws,\n        devToolsSettingsManager: devToolsSettingsManager\n      });\n    }\n  };\n  var RCTNativeAppEventEmitter = require(\"../EventEmitter/RCTNativeAppEventEmitter\");\n  RCTNativeAppEventEmitter.addListener('RCTDevMenuShown', connectToDevTools);\n  connectToDevTools();\n}","map":{"version":3,"names":["__DEV__","isWebSocketOpen","ws","reactDevTools","require","connectToDevTools","window","document","AppState","getDevServer","isAppActive","currentState","devServer","host","bundleLoadedFromServer","url","replace","split","port","__REACT_DEVTOOLS_PORT__","WebSocket","addEventListener","event","ReactNativeStyleAttributes","devToolsSettingsManager","resolveRNStyle","nativeStyleEditorValidAttributes","Object","keys","websocket","RCTNativeAppEventEmitter","addListener"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Core/setUpReactDevTools.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nif (__DEV__) {\r\n  let isWebSocketOpen = false;\r\n  let ws = null;\r\n\r\n  const reactDevTools = require('react-devtools-core');\r\n  const connectToDevTools = () => {\r\n    if (ws !== null && isWebSocketOpen) {\r\n      // If the DevTools backend is already connected, don't recreate the WebSocket.\r\n      // This would break the connection.\r\n      // If there isn't an active connection, a backend may be waiting to connect,\r\n      // in which case it's okay to make a new one.\r\n      return;\r\n    }\r\n\r\n    // not when debugging in chrome\r\n    // TODO(t12832058) This check is broken\r\n    if (!window.document) {\r\n      const AppState = require('../AppState/AppState');\r\n      const getDevServer = require('./Devtools/getDevServer');\r\n\r\n      // Don't steal the DevTools from currently active app.\r\n      // Note: if you add any AppState subscriptions to this file,\r\n      // you will also need to guard against `AppState.isAvailable`,\r\n      // or the code will throw for bundles that don't have it.\r\n      const isAppActive = () => AppState.currentState !== 'background';\r\n\r\n      // Get hostname from development server (packager)\r\n      const devServer = getDevServer();\r\n      const host = devServer.bundleLoadedFromServer\r\n        ? devServer.url\r\n            .replace(/https?:\\/\\//, '')\r\n            .replace(/\\/$/, '')\r\n            .split(':')[0]\r\n        : 'localhost';\r\n\r\n      // Read the optional global variable for backward compatibility.\r\n      // It was added in https://github.com/facebook/react-native/commit/bf2b435322e89d0aeee8792b1c6e04656c2719a0.\r\n      const port =\r\n        window.__REACT_DEVTOOLS_PORT__ != null\r\n          ? window.__REACT_DEVTOOLS_PORT__\r\n          : 8097;\r\n\r\n      const WebSocket = require('../WebSocket/WebSocket');\r\n      ws = new WebSocket('ws://' + host + ':' + port);\r\n      ws.addEventListener('close', event => {\r\n        isWebSocketOpen = false;\r\n      });\r\n      ws.addEventListener('open', event => {\r\n        isWebSocketOpen = true;\r\n      });\r\n\r\n      const ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\r\n      const devToolsSettingsManager = require('../DevToolsSettings/DevToolsSettingsManager');\r\n\r\n      reactDevTools.connectToDevTools({\r\n        isAppActive,\r\n        resolveRNStyle: require('../StyleSheet/flattenStyle'),\r\n        nativeStyleEditorValidAttributes: Object.keys(\r\n          ReactNativeStyleAttributes,\r\n        ),\r\n        websocket: ws,\r\n        devToolsSettingsManager,\r\n      });\r\n    }\r\n  };\r\n\r\n  const RCTNativeAppEventEmitter = require('../EventEmitter/RCTNativeAppEventEmitter');\r\n  RCTNativeAppEventEmitter.addListener('RCTDevMenuShown', connectToDevTools);\r\n  connectToDevTools(); // Try connecting once on load\r\n}\r\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAIA,OAAO,EAAE;EACX,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,EAAE,GAAG,IAAI;EAEb,IAAMC,aAAa,GAAGC,OAAO,CAAC,qBAAqB,CAAC;EACpD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B,IAAIH,EAAE,KAAK,IAAI,IAAID,eAAe,EAAE;MAKlC;IACF;IAIA,IAAI,CAACK,MAAM,CAACC,QAAQ,EAAE;MACpB,IAAMC,QAAQ,GAAGJ,OAAO,uBAAuB,CAAC;MAChD,IAAMK,YAAY,GAAGL,OAAO,0BAA0B,CAAC;MAMvD,IAAMM,WAAW,GAAG,SAAdA,WAAWA,CAAA;QAAA,OAASF,QAAQ,CAACG,YAAY,KAAK,YAAY;MAAA;MAGhE,IAAMC,SAAS,GAAGH,YAAY,CAAC,CAAC;MAChC,IAAMI,IAAI,GAAGD,SAAS,CAACE,sBAAsB,GACzCF,SAAS,CAACG,GAAG,CACVC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAC1BA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAChB,WAAW;MAIf,IAAMC,IAAI,GACRZ,MAAM,CAACa,uBAAuB,IAAI,IAAI,GAClCb,MAAM,CAACa,uBAAuB,GAC9B,IAAI;MAEV,IAAMC,SAAS,GAAGhB,OAAO,yBAAyB,CAAC;MACnDF,EAAE,GAAG,IAAIkB,SAAS,CAAC,OAAO,GAAGP,IAAI,GAAG,GAAG,GAAGK,IAAI,CAAC;MAC/ChB,EAAE,CAACmB,gBAAgB,CAAC,OAAO,EAAE,UAAAC,KAAK,EAAI;QACpCrB,eAAe,GAAG,KAAK;MACzB,CAAC,CAAC;MACFC,EAAE,CAACmB,gBAAgB,CAAC,MAAM,EAAE,UAAAC,KAAK,EAAI;QACnCrB,eAAe,GAAG,IAAI;MACxB,CAAC,CAAC;MAEF,IAAMsB,0BAA0B,GAAGnB,OAAO,gDAAgD,CAAC;MAC3F,IAAMoB,uBAAuB,GAAGpB,OAAO,8CAA8C,CAAC;MAEtFD,aAAa,CAACE,iBAAiB,CAAC;QAC9BK,WAAW,EAAXA,WAAW;QACXe,cAAc,EAAErB,OAAO,6BAA6B,CAAC;QACrDsB,gCAAgC,EAAEC,MAAM,CAACC,IAAI,CAC3CL,0BACF,CAAC;QACDM,SAAS,EAAE3B,EAAE;QACbsB,uBAAuB,EAAvBA;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED,IAAMM,wBAAwB,GAAG1B,OAAO,2CAA2C,CAAC;EACpF0B,wBAAwB,CAACC,WAAW,CAAC,iBAAiB,EAAE1B,iBAAiB,CAAC;EAC1EA,iBAAiB,CAAC,CAAC;AACrB"},"metadata":{},"sourceType":"script","externalDependencies":[]}