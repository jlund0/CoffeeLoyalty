{"ast":null,"code":"import EventEmitter from \"../vendor/emitter/EventEmitter\";\nvar RawEventEmitter = new EventEmitter();\nexport default RawEventEmitter;","map":{"version":3,"names":["EventEmitter","RawEventEmitter"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Core/RawEventEmitter.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {IEventEmitter} from '../vendor/emitter/EventEmitter';\r\n\r\nimport EventEmitter from '../vendor/emitter/EventEmitter';\r\n\r\nexport type RawEventEmitterEvent = $ReadOnly<{|\r\n  eventName: string,\r\n  // We expect, but do not/cannot require, that nativeEvent is an object\r\n  // with the properties: key, elementType (string), type (string), tag (numeric),\r\n  // and a stateNode of the native element/Fiber the event was emitted to.\r\n  nativeEvent: {[string]: mixed},\r\n|}>;\r\n\r\ntype RawEventDefinitions = {\r\n  [eventChannel: string]: [RawEventEmitterEvent],\r\n};\r\n\r\nconst RawEventEmitter: IEventEmitter<RawEventDefinitions> =\r\n  new EventEmitter<RawEventDefinitions>();\r\n\r\n// See the React renderer / react repo for how this is used.\r\n// Raw events are emitted here when they are received in JS\r\n// and before any event Plugins process them or before components\r\n// have a chance to respond to them. This allows you to implement\r\n// app-specific perf monitoring, which is unimplemented by default,\r\n// making this entire RawEventEmitter do nothing by default until\r\n// *you* add listeners for your own app.\r\n// Besides perf monitoring and maybe debugging, this RawEventEmitter\r\n// should not be used.\r\nexport default RawEventEmitter;\r\n"],"mappings":"AAYA,OAAOA,YAAY;AAcnB,IAAMC,eAAmD,GACvD,IAAID,YAAY,CAAsB,CAAC;AAWzC,eAAeC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}