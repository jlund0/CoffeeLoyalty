{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createUserWithEmailAndPassword, getAuth, updateProfile, TwitterAuthProvider, FacebookAuthProvider, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { app } from \"../firebase\";\nimport { FacebookSVG, TwitterSVG, GoogleSVG } from \"../assets/socialSVG\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { AddUser } from \"../firebasefunctions\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\nauth.languageCode = \"it\";\nvar GoogleProvider = new GoogleAuthProvider();\nvar TwitterProvider = new TwitterAuthProvider();\nvar FacebookProvider = new FacebookAuthProvider();\nfunction addUser(_x) {\n  return _addUser.apply(this, arguments);\n}\nfunction _addUser() {\n  _addUser = _asyncToGenerator(function* (_ref) {\n    var user = _ref.user;\n    var docRef = doc(db, \"user\", id);\n    var docSnap = yield getDoc(docRef);\n    if (docSnap.exists()) {\n      console.log(\"user already added with\");\n      console.log(\"Document data:\", docSnap.data());\n    } else {\n      console.log(\"adding user \" + user.uid);\n      AddUser({\n        created_at: new Date(),\n        name: user.displayName,\n        email: user.email,\n        earnt_coffees: 0\n      }, user.uid);\n    }\n  });\n  return _addUser.apply(this, arguments);\n}\nvar HandleGmailLogin = function HandleGmailLogin(_ref2) {\n  _objectDestructuringEmpty(_ref2);\n  console.log(\"Login in Gmail\");\n  signInWithPopup(auth, GoogleProvider).then(function (result) {\n    var credential = GoogleAuthProvider.credentialFromResult(result);\n    var token = credential.accessToken;\n    var user = result.user;\n    AddUser(user);\n    console.log(\"Logged in with:\", user.email, user, token);\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    var email = error.customData.email;\n    var credential = GoogleAuthProvider.credentialFromError(error);\n  });\n};\nvar HandleFacebookLogin = function HandleFacebookLogin() {\n  console.log(\"Login in Facebook\");\n  signInWithPopup(auth, FacebookProvider).then(function (result) {\n    var credential = FacebookProvider.credentialFromResult(result);\n    var token = credential.accessToken;\n    var user = result.user;\n    AddUser({\n      created_at: new Date(),\n      userID: user.uid,\n      name: user.displayName,\n      email: user.email,\n      earnt_coffees: 0\n    });\n    console.log(\"Logged in with:\", user.email, user, token);\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    var email = error.customData.email;\n    var credential = GoogleAuthProvider.credentialFromError(error);\n  });\n};\nvar HandleTwitterLogin = function HandleTwitterLogin() {\n  console.log(\"Login in Twitter\");\n  signInWithPopup(auth, TwitterProvider).then(function (result) {\n    var credential = TwitterAuthProvider.credentialFromResult(result);\n    var token = credential.accessToken;\n    var user = result.user;\n    AddUser({\n      created_at: new Date(),\n      userID: user.uid,\n      name: user.displayName,\n      email: user.email,\n      earnt_coffees: 0\n    });\n    console.log(\"Logged in with:\", user.email, user, token);\n  }).catch(function (error) {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    var email = error.customData.email;\n    var credential = GoogleAuthProvider.credentialFromError(error);\n  });\n};\nfunction SocialButton(_ref3) {\n  var _onPress = _ref3.onPress,\n    SVG = _ref3.SVG,\n    name = _ref3.name;\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress(name);\n    },\n    style: {\n      borderColor: \"#ddd\",\n      borderWidth: 2,\n      borderRadius: 10,\n      paddingHorizontal: 30,\n      paddingVertical: 10\n    },\n    children: _jsx(SVG, {\n      height: 24,\n      width: 24\n    })\n  });\n}\nexport function SocialButtons() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(SocialButton, {\n      onPress: HandleGmailLogin,\n      SVG: GoogleSVG,\n      name: \"Google\"\n    }), _jsx(SocialButton, {\n      onPress: HandleFacebookLogin,\n      SVG: FacebookSVG,\n      name: \"Facebook\"\n    }), _jsx(SocialButton, {\n      onPress: HandleTwitterLogin,\n      SVG: TwitterSVG,\n      name: \"Twitter\"\n    })]\n  });\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","getAuth","updateProfile","TwitterAuthProvider","FacebookAuthProvider","GoogleAuthProvider","signInWithPopup","app","FacebookSVG","TwitterSVG","GoogleSVG","View","TextInput","Button","Text","TouchableOpacity","StyleSheet","SafeAreaView","Image","AddUser","doc","getDoc","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","auth","languageCode","GoogleProvider","TwitterProvider","FacebookProvider","addUser","_x","_addUser","apply","arguments","_asyncToGenerator","_ref","user","docRef","db","id","docSnap","exists","console","log","data","uid","created_at","Date","name","displayName","email","earnt_coffees","HandleGmailLogin","_ref2","_objectDestructuringEmpty","then","result","credential","credentialFromResult","token","accessToken","catch","error","errorCode","code","errorMessage","message","customData","credentialFromError","HandleFacebookLogin","userID","HandleTwitterLogin","SocialButton","_ref3","onPress","SVG","style","borderColor","borderWidth","borderRadius","paddingHorizontal","paddingVertical","children","height","width","SocialButtons"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/FrontEnd User Mobile/components/socialSignin.js"],"sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  getAuth,\r\n  updateProfile,\r\n  TwitterAuthProvider,\r\n  FacebookAuthProvider,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport { app } from \"../firebase\";\r\nimport { FacebookSVG, TwitterSVG, GoogleSVG } from \"../assets/socialSVG\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nimport { AddUser } from \"../firebasefunctions\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nconst auth = getAuth(app);\r\nauth.languageCode = \"it\";\r\nconst GoogleProvider = new GoogleAuthProvider();\r\nconst TwitterProvider = new TwitterAuthProvider();\r\nconst FacebookProvider = new FacebookAuthProvider();\r\n\r\nasync function addUser({ user }) {\r\n  const docRef = doc(db, \"user\", id);\r\n  const docSnap = await getDoc(docRef);\r\n\r\n  if (docSnap.exists()) {\r\n    console.log(\"user already added with\");\r\n    console.log(\"Document data:\", docSnap.data());\r\n  } else {\r\n    console.log(\"adding user \" + user.uid);\r\n    AddUser(\r\n      {\r\n        created_at: new Date(),\r\n        name: user.displayName,\r\n        email: user.email,\r\n        earnt_coffees: 0,\r\n      },\r\n      user.uid\r\n    );\r\n  }\r\n}\r\n\r\nconst HandleGmailLogin = ({}) => {\r\n  console.log(\"Login in Gmail\");\r\n  signInWithPopup(auth, GoogleProvider)\r\n    .then((result) => {\r\n      const credential = GoogleAuthProvider.credentialFromResult(result);\r\n      const token = credential.accessToken;\r\n      // The signed-in user info.\r\n      const user = result.user;\r\n      AddUser(user);\r\n\r\n      console.log(\"Logged in with:\", user.email, user, token);\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      const email = error.customData.email;\r\n      // The AuthCredential type that was used.\r\n      const credential = GoogleAuthProvider.credentialFromError(error);\r\n      // ...\r\n    });\r\n};\r\nconst HandleFacebookLogin = () => {\r\n  console.log(\"Login in Facebook\");\r\n  signInWithPopup(auth, FacebookProvider)\r\n    .then((result) => {\r\n      const credential = FacebookProvider.credentialFromResult(result);\r\n      const token = credential.accessToken;\r\n      // The signed-in user info.\r\n      const user = result.user;\r\n      AddUser({\r\n        created_at: new Date(),\r\n        userID: user.uid,\r\n        name: user.displayName,\r\n        email: user.email,\r\n        earnt_coffees: 0,\r\n      });\r\n\r\n      console.log(\"Logged in with:\", user.email, user, token);\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      const email = error.customData.email;\r\n      // The AuthCredential type that was used.\r\n      const credential = GoogleAuthProvider.credentialFromError(error);\r\n      // ...\r\n    });\r\n};\r\nconst HandleTwitterLogin = () => {\r\n  console.log(\"Login in Twitter\");\r\n  signInWithPopup(auth, TwitterProvider)\r\n    .then((result) => {\r\n      const credential = TwitterAuthProvider.credentialFromResult(result);\r\n      const token = credential.accessToken;\r\n      // The signed-in user info.\r\n      const user = result.user;\r\n      AddUser({\r\n        created_at: new Date(),\r\n        userID: user.uid,\r\n        name: user.displayName,\r\n        email: user.email,\r\n        earnt_coffees: 0,\r\n      });\r\n\r\n      console.log(\"Logged in with:\", user.email, user, token);\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      const email = error.customData.email;\r\n      // The AuthCredential type that was used.\r\n      const credential = GoogleAuthProvider.credentialFromError(error);\r\n      // ...\r\n    });\r\n};\r\n\r\nfunction SocialButton({ onPress, SVG, name }) {\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => onPress(name)}\r\n      style={{\r\n        borderColor: \"#ddd\",\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 10,\r\n      }}\r\n    >\r\n      <SVG height={24} width={24} />\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nexport function SocialButtons() {\r\n  return (\r\n    <>\r\n      <SocialButton onPress={HandleGmailLogin} SVG={GoogleSVG} name=\"Google\" />\r\n      <SocialButton\r\n        onPress={HandleFacebookLogin}\r\n        SVG={FacebookSVG}\r\n        name=\"Facebook\"\r\n      />\r\n      <SocialButton\r\n        onPress={HandleTwitterLogin}\r\n        SVG={TwitterSVG}\r\n        name=\"Twitter\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}