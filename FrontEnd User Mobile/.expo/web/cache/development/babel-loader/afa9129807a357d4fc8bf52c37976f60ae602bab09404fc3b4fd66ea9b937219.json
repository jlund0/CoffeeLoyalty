{"ast":null,"code":"import View from \"../Components/View/View\";\nimport normalizeColor from \"../StyleSheet/normalizeColor\";\nimport { normalizeRect } from \"../StyleSheet/Rect\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function PressabilityDebugView(props) {\n  if (__DEV__) {\n    if (isEnabled()) {\n      var _hitSlop$bottom, _hitSlop$left, _hitSlop$right, _hitSlop$top;\n      var normalizedColor = normalizeColor(props.color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      var baseColor = '#' + (normalizedColor != null ? normalizedColor : 0).toString(16).padStart(8, '0');\n      var hitSlop = normalizeRect(props.hitSlop);\n      return _jsx(View, {\n        pointerEvents: \"none\",\n        style: {\n          backgroundColor: baseColor.slice(0, -2) + '0F',\n          borderColor: baseColor.slice(0, -2) + '55',\n          borderStyle: 'dashed',\n          borderWidth: 1,\n          bottom: -((_hitSlop$bottom = hitSlop == null ? void 0 : hitSlop.bottom) != null ? _hitSlop$bottom : 0),\n          left: -((_hitSlop$left = hitSlop == null ? void 0 : hitSlop.left) != null ? _hitSlop$left : 0),\n          position: 'absolute',\n          right: -((_hitSlop$right = hitSlop == null ? void 0 : hitSlop.right) != null ? _hitSlop$right : 0),\n          top: -((_hitSlop$top = hitSlop == null ? void 0 : hitSlop.top) != null ? _hitSlop$top : 0)\n        }\n      });\n    }\n  }\n  return null;\n}\nvar isDebugEnabled = false;\nexport function isEnabled() {\n  if (__DEV__) {\n    return isDebugEnabled;\n  }\n  return false;\n}\nexport function setEnabled(value) {\n  if (__DEV__) {\n    isDebugEnabled = value;\n  }\n}","map":{"version":3,"names":["View","normalizeColor","normalizeRect","React","jsx","_jsx","PressabilityDebugView","props","__DEV__","isEnabled","_hitSlop$bottom","_hitSlop$left","_hitSlop$right","_hitSlop$top","normalizedColor","color","baseColor","toString","padStart","hitSlop","pointerEvents","style","backgroundColor","slice","borderColor","borderStyle","borderWidth","bottom","left","position","right","top","isDebugEnabled","setEnabled","value"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Pressability/PressabilityDebug.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {ColorValue} from '../StyleSheet/StyleSheet';\r\n\r\nimport View from '../Components/View/View';\r\nimport normalizeColor from '../StyleSheet/normalizeColor';\r\nimport {type RectOrSize, normalizeRect} from '../StyleSheet/Rect';\r\nimport * as React from 'react';\r\n\r\ntype Props = $ReadOnly<{|\r\n  color: ColorValue,\r\n  hitSlop: ?RectOrSize,\r\n|}>;\r\n\r\n/**\r\n * Displays a debug overlay to visualize press targets when enabled via the\r\n * React Native Inspector. Calls to this module should be guarded by `__DEV__`,\r\n * for example:\r\n *\r\n *   return (\r\n *     <View>\r\n *       {children}\r\n *       {__DEV__ ? (\r\n *         <PressabilityDebugView color=\"...\" hitSlop={props.hitSlop} />\r\n *       ) : null}\r\n *     </View>\r\n *   );\r\n *\r\n */\r\nexport function PressabilityDebugView(props: Props): React.Node {\r\n  if (__DEV__) {\r\n    if (isEnabled()) {\r\n      const normalizedColor = normalizeColor(props.color);\r\n      if (typeof normalizedColor !== 'number') {\r\n        return null;\r\n      }\r\n      const baseColor =\r\n        '#' + (normalizedColor ?? 0).toString(16).padStart(8, '0');\r\n      const hitSlop = normalizeRect(props.hitSlop);\r\n      return (\r\n        <View\r\n          pointerEvents=\"none\"\r\n          style={\r\n            // eslint-disable-next-line react-native/no-inline-styles\r\n            {\r\n              backgroundColor: baseColor.slice(0, -2) + '0F', // 15%\r\n              borderColor: baseColor.slice(0, -2) + '55', // 85%\r\n              borderStyle: 'dashed',\r\n              borderWidth: 1,\r\n              bottom: -(hitSlop?.bottom ?? 0),\r\n              left: -(hitSlop?.left ?? 0),\r\n              position: 'absolute',\r\n              right: -(hitSlop?.right ?? 0),\r\n              top: -(hitSlop?.top ?? 0),\r\n            }\r\n          }\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nlet isDebugEnabled = false;\r\n\r\nexport function isEnabled(): boolean {\r\n  if (__DEV__) {\r\n    return isDebugEnabled;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function setEnabled(value: boolean): void {\r\n  if (__DEV__) {\r\n    isDebugEnabled = value;\r\n  }\r\n}\r\n"],"mappings":"AAYA,OAAOA,IAAI;AACX,OAAOC,cAAc;AACrB,SAAyBC,aAAa;AACtC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAsB/B,OAAO,SAASC,qBAAqBA,CAACC,KAAY,EAAc;EAC9D,IAAIC,OAAO,EAAE;IACX,IAAIC,SAAS,CAAC,CAAC,EAAE;MAAA,IAAAC,eAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,YAAA;MACf,IAAMC,eAAe,GAAGb,cAAc,CAACM,KAAK,CAACQ,KAAK,CAAC;MACnD,IAAI,OAAOD,eAAe,KAAK,QAAQ,EAAE;QACvC,OAAO,IAAI;MACb;MACA,IAAME,SAAS,GACb,GAAG,GAAG,CAACF,eAAe,WAAfA,eAAe,GAAI,CAAC,EAAEG,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC5D,IAAMC,OAAO,GAAGjB,aAAa,CAACK,KAAK,CAACY,OAAO,CAAC;MAC5C,OACEd,IAAA,CAACL,IAAI;QACHoB,aAAa,EAAC,MAAM;QACpBC,KAAK,EAEH;UACEC,eAAe,EAAEN,SAAS,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;UAC9CC,WAAW,EAAER,SAAS,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;UAC1CE,WAAW,EAAE,QAAQ;UACrBC,WAAW,EAAE,CAAC;UACdC,MAAM,EAAE,GAAAjB,eAAA,GAAES,OAAO,oBAAPA,OAAO,CAAEQ,MAAM,YAAAjB,eAAA,GAAI,CAAC,CAAC;UAC/BkB,IAAI,EAAE,GAAAjB,aAAA,GAAEQ,OAAO,oBAAPA,OAAO,CAAES,IAAI,YAAAjB,aAAA,GAAI,CAAC,CAAC;UAC3BkB,QAAQ,EAAE,UAAU;UACpBC,KAAK,EAAE,GAAAlB,cAAA,GAAEO,OAAO,oBAAPA,OAAO,CAAEW,KAAK,YAAAlB,cAAA,GAAI,CAAC,CAAC;UAC7BmB,GAAG,EAAE,GAAAlB,YAAA,GAAEM,OAAO,oBAAPA,OAAO,CAAEY,GAAG,YAAAlB,YAAA,GAAI,CAAC;QAC1B;MACD,CACF,CAAC;IAEN;EACF;EACA,OAAO,IAAI;AACb;AAEA,IAAImB,cAAc,GAAG,KAAK;AAE1B,OAAO,SAASvB,SAASA,CAAA,EAAY;EACnC,IAAID,OAAO,EAAE;IACX,OAAOwB,cAAc;EACvB;EACA,OAAO,KAAK;AACd;AAEA,OAAO,SAASC,UAAUA,CAACC,KAAc,EAAQ;EAC/C,IAAI1B,OAAO,EAAE;IACXwB,cAAc,GAAGE,KAAK;EACxB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}