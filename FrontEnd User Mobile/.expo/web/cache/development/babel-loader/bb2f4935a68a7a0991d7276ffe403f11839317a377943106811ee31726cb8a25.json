{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport NativeEventEmitter from \"../EventEmitter/NativeEventEmitter\";\nimport RCTDeviceEventEmitter from \"../EventEmitter/RCTDeviceEventEmitter\";\nimport ReactNativeFeatureFlags from \"../ReactNative/ReactNativeFeatureFlags\";\nimport Platform from \"../Utilities/Platform\";\nimport NativeAnimatedNonTurboModule from \"./NativeAnimatedModule\";\nimport NativeAnimatedTurboModule from \"./NativeAnimatedTurboModule\";\nimport invariant from 'invariant';\nvar NativeAnimatedModule = Platform.OS === 'ios' && global.RN$Bridgeless === true ? NativeAnimatedTurboModule : NativeAnimatedNonTurboModule;\nvar __nativeAnimatedNodeTagCount = 1;\nvar __nativeAnimationIdCount = 1;\nvar nativeEventEmitter;\nvar waitingForQueuedOperations = new Set();\nvar queueOperations = false;\nvar queue = [];\nvar singleOpQueue = [];\nvar useSingleOpBatching = Platform.OS === 'android' && !!(NativeAnimatedModule != null && NativeAnimatedModule.queueAndExecuteBatchedOperations) && ReactNativeFeatureFlags.animatedShouldUseSingleOp();\nvar flushQueueTimeout = null;\nvar eventListenerGetValueCallbacks = {};\nvar eventListenerAnimationFinishedCallbacks = {};\nvar globalEventEmitterGetValueListener = null;\nvar globalEventEmitterAnimationFinishedListener = null;\nvar nativeOps = useSingleOpBatching ? function () {\n  var apis = ['createAnimatedNode', 'updateAnimatedNodeConfig', 'getValue', 'startListeningToAnimatedNodeValue', 'stopListeningToAnimatedNodeValue', 'connectAnimatedNodes', 'disconnectAnimatedNodes', 'startAnimatingNode', 'stopAnimation', 'setAnimatedNodeValue', 'setAnimatedNodeOffset', 'flattenAnimatedNodeOffset', 'extractAnimatedNodeOffset', 'connectAnimatedNodeToView', 'disconnectAnimatedNodeFromView', 'restoreDefaultValues', 'dropAnimatedNode', 'addAnimatedEventToView', 'removeAnimatedEventFromView', 'addListener', 'removeListener'];\n  return apis.reduce(function (acc, functionName, i) {\n    acc[functionName] = i + 1;\n    return acc;\n  }, {});\n}() : NativeAnimatedModule;\nvar API = {\n  getValue: function getValue(tag, saveValueCallback) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (saveValueCallback) {\n        eventListenerGetValueCallbacks[tag] = saveValueCallback;\n      }\n      API.queueOperation(nativeOps.getValue, tag);\n    } else {\n      API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n    }\n  },\n  setWaitingForIdentifier: function setWaitingForIdentifier(id) {\n    waitingForQueuedOperations.add(id);\n    queueOperations = true;\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n      clearTimeout(flushQueueTimeout);\n    }\n  },\n  unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {\n    waitingForQueuedOperations.delete(id);\n    if (waitingForQueuedOperations.size === 0) {\n      queueOperations = false;\n      API.disableQueue();\n    }\n  },\n  disableQueue: function disableQueue() {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n      var prevTimeout = flushQueueTimeout;\n      clearImmediate(prevTimeout);\n      flushQueueTimeout = setImmediate(API.flushQueue);\n    } else {\n      API.flushQueue();\n    }\n  },\n  flushQueue: function flushQueue() {\n    invariant(NativeAnimatedModule || process.env.NODE_ENV === 'test', 'Native animated module is not available');\n    flushQueueTimeout = null;\n    if (useSingleOpBatching && singleOpQueue.length === 0) {\n      return;\n    }\n    if (!useSingleOpBatching && queue.length === 0) {\n      return;\n    }\n    if (useSingleOpBatching) {\n      if (!globalEventEmitterGetValueListener || !globalEventEmitterAnimationFinishedListener) {\n        setupGlobalEventEmitterListeners();\n      }\n      NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.queueAndExecuteBatchedOperations == null ? void 0 : NativeAnimatedModule.queueAndExecuteBatchedOperations(singleOpQueue);\n      singleOpQueue.length = 0;\n    } else {\n      Platform.OS === 'android' && (NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.startOperationBatch == null ? void 0 : NativeAnimatedModule.startOperationBatch());\n      for (var q = 0, l = queue.length; q < l; q++) {\n        queue[q]();\n      }\n      queue.length = 0;\n      Platform.OS === 'android' && (NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.finishOperationBatch == null ? void 0 : NativeAnimatedModule.finishOperationBatch());\n    }\n  },\n  queueOperation: function queueOperation(fn) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (useSingleOpBatching) {\n      singleOpQueue.push.apply(singleOpQueue, [fn].concat(args));\n      return;\n    }\n    if (queueOperations || queue.length !== 0) {\n      queue.push(function () {\n        return fn.apply(void 0, args);\n      });\n    } else {\n      fn.apply(void 0, args);\n    }\n  },\n  createAnimatedNode: function createAnimatedNode(tag, config) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n  },\n  updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (nativeOps.updateAnimatedNodeConfig) {\n      API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n    }\n  },\n  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n  },\n  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n  },\n  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n  },\n  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (endCallback) {\n        eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n      }\n      API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config);\n    } else {\n      API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n    }\n  },\n  stopAnimation: function stopAnimation(animationId) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopAnimation, animationId);\n  },\n  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n  },\n  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n  },\n  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n  },\n  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n  },\n  restoreDefaultValues: function restoreDefaultValues(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (nativeOps.restoreDefaultValues != null) {\n      API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n    }\n  },\n  dropAnimatedNode: function dropAnimatedNode(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.dropAnimatedNode, tag);\n  },\n  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n  },\n  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n  }\n};\nfunction setupGlobalEventEmitterListeners() {\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleGetValue', function (params) {\n    var tag = params.tag;\n    var callback = eventListenerGetValueCallbacks[tag];\n    if (!callback) {\n      return;\n    }\n    callback(params.value);\n    delete eventListenerGetValueCallbacks[tag];\n  });\n  globalEventEmitterAnimationFinishedListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {\n    var animationId = params.animationId;\n    var callback = eventListenerAnimationFinishedCallbacks[animationId];\n    if (!callback) {\n      return;\n    }\n    callback(params);\n    delete eventListenerAnimationFinishedCallbacks[animationId];\n  });\n}\nvar SUPPORTED_COLOR_STYLES = {\n  backgroundColor: true,\n  borderBottomColor: true,\n  borderColor: true,\n  borderEndColor: true,\n  borderLeftColor: true,\n  borderRightColor: true,\n  borderStartColor: true,\n  borderTopColor: true,\n  color: true,\n  tintColor: true\n};\nvar SUPPORTED_STYLES = _objectSpread(_objectSpread({}, SUPPORTED_COLOR_STYLES), {}, {\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  elevation: true,\n  opacity: true,\n  transform: true,\n  zIndex: true,\n  shadowOpacity: true,\n  shadowRadius: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true\n});\nvar SUPPORTED_TRANSFORMS = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  rotateZ: true,\n  perspective: true\n};\nvar SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true\n};\nfunction addWhitelistedStyleProp(prop) {\n  SUPPORTED_STYLES[prop] = true;\n}\nfunction addWhitelistedTransformProp(prop) {\n  SUPPORTED_TRANSFORMS[prop] = true;\n}\nfunction addWhitelistedInterpolationParam(param) {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\nfunction isSupportedColorStyleProp(prop) {\n  return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\n}\nfunction isSupportedStyleProp(prop) {\n  return SUPPORTED_STYLES.hasOwnProperty(prop);\n}\nfunction isSupportedTransformProp(prop) {\n  return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\n}\nfunction isSupportedInterpolationParam(param) {\n  return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\n}\nfunction validateTransform(configs) {\n  configs.forEach(function (config) {\n    if (!isSupportedTransformProp(config.property)) {\n      throw new Error(`Property '${config.property}' is not supported by native animated module`);\n    }\n  });\n}\nfunction validateStyles(styles) {\n  for (var _key2 in styles) {\n    if (!isSupportedStyleProp(_key2)) {\n      throw new Error(`Style property '${_key2}' is not supported by native animated module`);\n    }\n  }\n}\nfunction validateInterpolation(config) {\n  for (var _key3 in config) {\n    if (!isSupportedInterpolationParam(_key3)) {\n      throw new Error(`Interpolation property '${_key3}' is not supported by native animated module`);\n    }\n  }\n}\nfunction generateNewNodeTag() {\n  return __nativeAnimatedNodeTagCount++;\n}\nfunction generateNewAnimationId() {\n  return __nativeAnimationIdCount++;\n}\nfunction assertNativeAnimatedModule() {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\nvar _warnedMissingNativeAnimated = false;\nfunction shouldUseNativeDriver(config) {\n  if (config.useNativeDriver == null) {\n    console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n  }\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    if (process.env.NODE_ENV !== 'test') {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n        _warnedMissingNativeAnimated = true;\n      }\n    }\n    return false;\n  }\n  return config.useNativeDriver || false;\n}\nfunction transformDataType(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  if (/deg$/.test(value)) {\n    var degrees = parseFloat(value) || 0;\n    var radians = degrees * Math.PI / 180.0;\n    return radians;\n  } else {\n    return value;\n  }\n}\nexport default {\n  API: API,\n  isSupportedColorStyleProp: isSupportedColorStyleProp,\n  isSupportedStyleProp: isSupportedStyleProp,\n  isSupportedTransformProp: isSupportedTransformProp,\n  isSupportedInterpolationParam: isSupportedInterpolationParam,\n  addWhitelistedStyleProp: addWhitelistedStyleProp,\n  addWhitelistedTransformProp: addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n  validateStyles: validateStyles,\n  validateTransform: validateTransform,\n  validateInterpolation: validateInterpolation,\n  generateNewNodeTag: generateNewNodeTag,\n  generateNewAnimationId: generateNewAnimationId,\n  assertNativeAnimatedModule: assertNativeAnimatedModule,\n  shouldUseNativeDriver: shouldUseNativeDriver,\n  transformDataType: transformDataType,\n  get nativeEventEmitter() {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(Platform.OS !== 'ios' ? null : NativeAnimatedModule);\n    }\n    return nativeEventEmitter;\n  }\n};","map":{"version":3,"names":["NativeEventEmitter","RCTDeviceEventEmitter","ReactNativeFeatureFlags","Platform","NativeAnimatedNonTurboModule","NativeAnimatedTurboModule","invariant","NativeAnimatedModule","OS","global","RN$Bridgeless","__nativeAnimatedNodeTagCount","__nativeAnimationIdCount","nativeEventEmitter","waitingForQueuedOperations","Set","queueOperations","queue","singleOpQueue","useSingleOpBatching","queueAndExecuteBatchedOperations","animatedShouldUseSingleOp","flushQueueTimeout","eventListenerGetValueCallbacks","eventListenerAnimationFinishedCallbacks","globalEventEmitterGetValueListener","globalEventEmitterAnimationFinishedListener","nativeOps","apis","reduce","acc","functionName","i","API","getValue","tag","saveValueCallback","queueOperation","setWaitingForIdentifier","id","add","animatedShouldDebounceQueueFlush","clearTimeout","unsetWaitingForIdentifier","delete","size","disableQueue","prevTimeout","clearImmediate","setImmediate","flushQueue","process","env","NODE_ENV","length","setupGlobalEventEmitterListeners","startOperationBatch","q","l","finishOperationBatch","fn","_len","arguments","args","Array","_key","push","apply","concat","createAnimatedNode","config","updateAnimatedNodeConfig","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","connectAnimatedNodes","parentTag","childTag","disconnectAnimatedNodes","startAnimatingNode","animationId","nodeTag","endCallback","stopAnimation","setAnimatedNodeValue","value","setAnimatedNodeOffset","offset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","viewTag","disconnectAnimatedNodeFromView","restoreDefaultValues","dropAnimatedNode","addAnimatedEventToView","eventName","eventMapping","removeAnimatedEventFromView","animatedNodeTag","addListener","params","callback","SUPPORTED_COLOR_STYLES","backgroundColor","borderBottomColor","borderColor","borderEndColor","borderLeftColor","borderRightColor","borderStartColor","borderTopColor","color","tintColor","SUPPORTED_STYLES","_objectSpread","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderEndEndRadius","borderEndStartRadius","borderRadius","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderStartEndRadius","borderStartStartRadius","elevation","opacity","transform","zIndex","shadowOpacity","shadowRadius","scaleX","scaleY","translateX","translateY","SUPPORTED_TRANSFORMS","scale","rotate","rotateX","rotateY","rotateZ","perspective","SUPPORTED_INTERPOLATION_PARAMS","inputRange","outputRange","extrapolate","extrapolateRight","extrapolateLeft","addWhitelistedStyleProp","prop","addWhitelistedTransformProp","addWhitelistedInterpolationParam","param","isSupportedColorStyleProp","hasOwnProperty","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs","forEach","property","Error","validateStyles","styles","key","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","_warnedMissingNativeAnimated","shouldUseNativeDriver","useNativeDriver","console","warn","transformDataType","test","degrees","parseFloat","radians","Math","PI"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Animated/NativeAnimatedHelper.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\r\nimport type {EventConfig} from './AnimatedEvent';\r\nimport type {AnimationConfig, EndCallback} from './animations/Animation';\r\nimport type {\r\n  AnimatedNodeConfig,\r\n  AnimatingNodeConfig,\r\n  EventMapping,\r\n} from './NativeAnimatedModule';\r\nimport type {InterpolationConfigType} from './nodes/AnimatedInterpolation';\r\n\r\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\r\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\r\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\r\nimport Platform from '../Utilities/Platform';\r\nimport NativeAnimatedNonTurboModule from './NativeAnimatedModule';\r\nimport NativeAnimatedTurboModule from './NativeAnimatedTurboModule';\r\nimport invariant from 'invariant';\r\n\r\n// TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\r\nconst NativeAnimatedModule =\r\n  Platform.OS === 'ios' && global.RN$Bridgeless === true\r\n    ? NativeAnimatedTurboModule\r\n    : NativeAnimatedNonTurboModule;\r\n\r\nlet __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\r\nlet __nativeAnimationIdCount = 1; /* used for started animations */\r\n\r\nlet nativeEventEmitter;\r\n\r\nlet waitingForQueuedOperations = new Set<string>();\r\nlet queueOperations = false;\r\nlet queue: Array<() => void> = [];\r\n// $FlowFixMe\r\nlet singleOpQueue: Array<any> = [];\r\n\r\nconst useSingleOpBatching =\r\n  Platform.OS === 'android' &&\r\n  !!NativeAnimatedModule?.queueAndExecuteBatchedOperations &&\r\n  ReactNativeFeatureFlags.animatedShouldUseSingleOp();\r\nlet flushQueueTimeout = null;\r\n\r\nconst eventListenerGetValueCallbacks: {\r\n  [$FlowFixMe | number]: ((value: number) => void) | void,\r\n} = {};\r\nconst eventListenerAnimationFinishedCallbacks: {\r\n  [$FlowFixMe | number]: EndCallback | void,\r\n} = {};\r\nlet globalEventEmitterGetValueListener: ?EventSubscription = null;\r\nlet globalEventEmitterAnimationFinishedListener: ?EventSubscription = null;\r\n\r\nconst nativeOps: ?typeof NativeAnimatedModule = useSingleOpBatching\r\n  ? ((function () {\r\n      const apis = [\r\n        'createAnimatedNode', // 1\r\n        'updateAnimatedNodeConfig', // 2\r\n        'getValue', // 3\r\n        'startListeningToAnimatedNodeValue', // 4\r\n        'stopListeningToAnimatedNodeValue', // 5\r\n        'connectAnimatedNodes', // 6\r\n        'disconnectAnimatedNodes', // 7\r\n        'startAnimatingNode', // 8\r\n        'stopAnimation', // 9\r\n        'setAnimatedNodeValue', // 10\r\n        'setAnimatedNodeOffset', // 11\r\n        'flattenAnimatedNodeOffset', // 12\r\n        'extractAnimatedNodeOffset', // 13\r\n        'connectAnimatedNodeToView', // 14\r\n        'disconnectAnimatedNodeFromView', // 15\r\n        'restoreDefaultValues', // 16\r\n        'dropAnimatedNode', // 17\r\n        'addAnimatedEventToView', // 18\r\n        'removeAnimatedEventFromView', // 19\r\n        'addListener', // 20\r\n        'removeListener', // 21\r\n      ];\r\n      return apis.reduce<{[string]: number}>((acc, functionName, i) => {\r\n        // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\r\n        // $FlowFixMe[prop-missing]\r\n        acc[functionName] = i + 1;\r\n        return acc;\r\n      }, {});\r\n    })(): $FlowFixMe)\r\n  : NativeAnimatedModule;\r\n\r\n/**\r\n * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\r\n * the native module methods, and automatic queue management on Android\r\n */\r\nconst API = {\r\n  getValue: function (\r\n    tag: number,\r\n    saveValueCallback: (value: number) => void,\r\n  ): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    if (useSingleOpBatching) {\r\n      if (saveValueCallback) {\r\n        eventListenerGetValueCallbacks[tag] = saveValueCallback;\r\n      }\r\n      // $FlowFixMe\r\n      API.queueOperation(nativeOps.getValue, tag);\r\n    } else {\r\n      API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\r\n    }\r\n  },\r\n  setWaitingForIdentifier: function (id: string): void {\r\n    waitingForQueuedOperations.add(id);\r\n    queueOperations = true;\r\n    if (\r\n      ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() &&\r\n      flushQueueTimeout\r\n    ) {\r\n      clearTimeout(flushQueueTimeout);\r\n    }\r\n  },\r\n  unsetWaitingForIdentifier: function (id: string): void {\r\n    waitingForQueuedOperations.delete(id);\r\n\r\n    if (waitingForQueuedOperations.size === 0) {\r\n      queueOperations = false;\r\n      API.disableQueue();\r\n    }\r\n  },\r\n  disableQueue: function (): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n\r\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\r\n      const prevTimeout = flushQueueTimeout;\r\n      clearImmediate(prevTimeout);\r\n      flushQueueTimeout = setImmediate(API.flushQueue);\r\n    } else {\r\n      API.flushQueue();\r\n    }\r\n  },\r\n  flushQueue: function (): void {\r\n    // TODO: (T136971132)\r\n    invariant(\r\n      NativeAnimatedModule || process.env.NODE_ENV === 'test',\r\n      'Native animated module is not available',\r\n    );\r\n    flushQueueTimeout = null;\r\n\r\n    // Early returns before calling any APIs\r\n    if (useSingleOpBatching && singleOpQueue.length === 0) {\r\n      return;\r\n    }\r\n    if (!useSingleOpBatching && queue.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (useSingleOpBatching) {\r\n      // Set up event listener for callbacks if it's not set up\r\n      if (\r\n        !globalEventEmitterGetValueListener ||\r\n        !globalEventEmitterAnimationFinishedListener\r\n      ) {\r\n        setupGlobalEventEmitterListeners();\r\n      }\r\n      // Single op batching doesn't use callback functions, instead we\r\n      // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\r\n      // JSI functions across to native code; but also, TM infrastructure currently\r\n      // does not support packing a function into native arrays.\r\n      NativeAnimatedModule?.queueAndExecuteBatchedOperations?.(singleOpQueue);\r\n      singleOpQueue.length = 0;\r\n    } else {\r\n      Platform.OS === 'android' &&\r\n        NativeAnimatedModule?.startOperationBatch?.();\r\n\r\n      for (let q = 0, l = queue.length; q < l; q++) {\r\n        queue[q]();\r\n      }\r\n      queue.length = 0;\r\n      Platform.OS === 'android' &&\r\n        NativeAnimatedModule?.finishOperationBatch?.();\r\n    }\r\n  },\r\n  queueOperation: <Args: $ReadOnlyArray<mixed>, Fn: (...Args) => void>(\r\n    fn: Fn,\r\n    ...args: Args\r\n  ): void => {\r\n    if (useSingleOpBatching) {\r\n      // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\r\n      // $FlowFixMe: surprise, fn is actually a number\r\n      singleOpQueue.push(fn, ...args);\r\n      return;\r\n    }\r\n\r\n    // If queueing is explicitly on, *or* the queue has not yet\r\n    // been flushed, use the queue. This is to prevent operations\r\n    // from being executed out of order.\r\n    if (queueOperations || queue.length !== 0) {\r\n      queue.push(() => fn(...args));\r\n    } else {\r\n      fn(...args);\r\n    }\r\n  },\r\n  createAnimatedNode: function (tag: number, config: AnimatedNodeConfig): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.createAnimatedNode, tag, config);\r\n  },\r\n  updateAnimatedNodeConfig: function (\r\n    tag: number,\r\n    config: AnimatedNodeConfig,\r\n  ): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    if (nativeOps.updateAnimatedNodeConfig) {\r\n      API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\r\n    }\r\n  },\r\n  startListeningToAnimatedNodeValue: function (tag: number) {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\r\n  },\r\n  stopListeningToAnimatedNodeValue: function (tag: number) {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\r\n  },\r\n  connectAnimatedNodes: function (parentTag: number, childTag: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\r\n  },\r\n  disconnectAnimatedNodes: function (\r\n    parentTag: number,\r\n    childTag: number,\r\n  ): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\r\n  },\r\n  startAnimatingNode: function (\r\n    animationId: number,\r\n    nodeTag: number,\r\n    config: AnimatingNodeConfig,\r\n    endCallback: EndCallback,\r\n  ): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    if (useSingleOpBatching) {\r\n      if (endCallback) {\r\n        eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\r\n      }\r\n      // $FlowFixMe\r\n      API.queueOperation(\r\n        // $FlowFixMe[incompatible-call]\r\n        nativeOps.startAnimatingNode,\r\n        animationId,\r\n        nodeTag,\r\n        config,\r\n      );\r\n    } else {\r\n      API.queueOperation(\r\n        nativeOps.startAnimatingNode,\r\n        animationId,\r\n        nodeTag,\r\n        config,\r\n        endCallback,\r\n      );\r\n    }\r\n  },\r\n  stopAnimation: function (animationId: number) {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.stopAnimation, animationId);\r\n  },\r\n  setAnimatedNodeValue: function (nodeTag: number, value: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\r\n  },\r\n  setAnimatedNodeOffset: function (nodeTag: number, offset: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\r\n  },\r\n  flattenAnimatedNodeOffset: function (nodeTag: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\r\n  },\r\n  extractAnimatedNodeOffset: function (nodeTag: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\r\n  },\r\n  connectAnimatedNodeToView: function (nodeTag: number, viewTag: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\r\n  },\r\n  disconnectAnimatedNodeFromView: function (\r\n    nodeTag: number,\r\n    viewTag: number,\r\n  ): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(\r\n      nativeOps.disconnectAnimatedNodeFromView,\r\n      nodeTag,\r\n      viewTag,\r\n    );\r\n  },\r\n  restoreDefaultValues: function (nodeTag: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    // Backwards compat with older native runtimes, can be removed later.\r\n    if (nativeOps.restoreDefaultValues != null) {\r\n      API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\r\n    }\r\n  },\r\n  dropAnimatedNode: function (tag: number): void {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(nativeOps.dropAnimatedNode, tag);\r\n  },\r\n  addAnimatedEventToView: function (\r\n    viewTag: number,\r\n    eventName: string,\r\n    eventMapping: EventMapping,\r\n  ) {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(\r\n      nativeOps.addAnimatedEventToView,\r\n      viewTag,\r\n      eventName,\r\n      eventMapping,\r\n    );\r\n  },\r\n  removeAnimatedEventFromView(\r\n    viewTag: number,\r\n    eventName: string,\r\n    animatedNodeTag: number,\r\n  ) {\r\n    invariant(nativeOps, 'Native animated module is not available');\r\n    API.queueOperation(\r\n      nativeOps.removeAnimatedEventFromView,\r\n      viewTag,\r\n      eventName,\r\n      animatedNodeTag,\r\n    );\r\n  },\r\n};\r\n\r\nfunction setupGlobalEventEmitterListeners() {\r\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener(\r\n    'onNativeAnimatedModuleGetValue',\r\n    function (params) {\r\n      const {tag} = params;\r\n      const callback = eventListenerGetValueCallbacks[tag];\r\n      if (!callback) {\r\n        return;\r\n      }\r\n      callback(params.value);\r\n      delete eventListenerGetValueCallbacks[tag];\r\n    },\r\n  );\r\n  globalEventEmitterAnimationFinishedListener =\r\n    RCTDeviceEventEmitter.addListener(\r\n      'onNativeAnimatedModuleAnimationFinished',\r\n      function (params) {\r\n        const {animationId} = params;\r\n        const callback = eventListenerAnimationFinishedCallbacks[animationId];\r\n        if (!callback) {\r\n          return;\r\n        }\r\n        callback(params);\r\n        delete eventListenerAnimationFinishedCallbacks[animationId];\r\n      },\r\n    );\r\n}\r\n\r\n/**\r\n * Styles allowed by the native animated implementation.\r\n *\r\n * In general native animated implementation should support any numeric or color property that\r\n * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\r\n */\r\nconst SUPPORTED_COLOR_STYLES = {\r\n  backgroundColor: true,\r\n  borderBottomColor: true,\r\n  borderColor: true,\r\n  borderEndColor: true,\r\n  borderLeftColor: true,\r\n  borderRightColor: true,\r\n  borderStartColor: true,\r\n  borderTopColor: true,\r\n  color: true,\r\n  tintColor: true,\r\n};\r\n\r\nconst SUPPORTED_STYLES = {\r\n  ...SUPPORTED_COLOR_STYLES,\r\n  borderBottomEndRadius: true,\r\n  borderBottomLeftRadius: true,\r\n  borderBottomRightRadius: true,\r\n  borderBottomStartRadius: true,\r\n  borderEndEndRadius: true,\r\n  borderEndStartRadius: true,\r\n  borderRadius: true,\r\n  borderTopEndRadius: true,\r\n  borderTopLeftRadius: true,\r\n  borderTopRightRadius: true,\r\n  borderTopStartRadius: true,\r\n  borderStartEndRadius: true,\r\n  borderStartStartRadius: true,\r\n  elevation: true,\r\n  opacity: true,\r\n  transform: true,\r\n  zIndex: true,\r\n  /* ios styles */\r\n  shadowOpacity: true,\r\n  shadowRadius: true,\r\n  /* legacy android transform properties */\r\n  scaleX: true,\r\n  scaleY: true,\r\n  translateX: true,\r\n  translateY: true,\r\n};\r\n\r\nconst SUPPORTED_TRANSFORMS = {\r\n  translateX: true,\r\n  translateY: true,\r\n  scale: true,\r\n  scaleX: true,\r\n  scaleY: true,\r\n  rotate: true,\r\n  rotateX: true,\r\n  rotateY: true,\r\n  rotateZ: true,\r\n  perspective: true,\r\n};\r\n\r\nconst SUPPORTED_INTERPOLATION_PARAMS = {\r\n  inputRange: true,\r\n  outputRange: true,\r\n  extrapolate: true,\r\n  extrapolateRight: true,\r\n  extrapolateLeft: true,\r\n};\r\n\r\nfunction addWhitelistedStyleProp(prop: string): void {\r\n  // $FlowFixMe[prop-missing]\r\n  SUPPORTED_STYLES[prop] = true;\r\n}\r\n\r\nfunction addWhitelistedTransformProp(prop: string): void {\r\n  // $FlowFixMe[prop-missing]\r\n  SUPPORTED_TRANSFORMS[prop] = true;\r\n}\r\n\r\nfunction addWhitelistedInterpolationParam(param: string): void {\r\n  // $FlowFixMe[prop-missing]\r\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\r\n}\r\n\r\nfunction isSupportedColorStyleProp(prop: string): boolean {\r\n  return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\r\n}\r\n\r\nfunction isSupportedStyleProp(prop: string): boolean {\r\n  return SUPPORTED_STYLES.hasOwnProperty(prop);\r\n}\r\n\r\nfunction isSupportedTransformProp(prop: string): boolean {\r\n  return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\r\n}\r\n\r\nfunction isSupportedInterpolationParam(param: string): boolean {\r\n  return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\r\n}\r\n\r\nfunction validateTransform(\r\n  configs: Array<\r\n    | {\r\n        type: 'animated',\r\n        property: string,\r\n        nodeTag: ?number,\r\n        ...\r\n      }\r\n    | {\r\n        type: 'static',\r\n        property: string,\r\n        value: number | string,\r\n        ...\r\n      },\r\n  >,\r\n): void {\r\n  configs.forEach(config => {\r\n    if (!isSupportedTransformProp(config.property)) {\r\n      throw new Error(\r\n        `Property '${config.property}' is not supported by native animated module`,\r\n      );\r\n    }\r\n  });\r\n}\r\n\r\nfunction validateStyles(styles: {[key: string]: ?number, ...}): void {\r\n  for (const key in styles) {\r\n    if (!isSupportedStyleProp(key)) {\r\n      throw new Error(\r\n        `Style property '${key}' is not supported by native animated module`,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction validateInterpolation<OutputT: number | string>(\r\n  config: InterpolationConfigType<OutputT>,\r\n): void {\r\n  for (const key in config) {\r\n    if (!isSupportedInterpolationParam(key)) {\r\n      throw new Error(\r\n        `Interpolation property '${key}' is not supported by native animated module`,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction generateNewNodeTag(): number {\r\n  return __nativeAnimatedNodeTagCount++;\r\n}\r\n\r\nfunction generateNewAnimationId(): number {\r\n  return __nativeAnimationIdCount++;\r\n}\r\n\r\nfunction assertNativeAnimatedModule(): void {\r\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\r\n}\r\n\r\nlet _warnedMissingNativeAnimated = false;\r\n\r\nfunction shouldUseNativeDriver(\r\n  config: $ReadOnly<{...AnimationConfig, ...}> | EventConfig,\r\n): boolean {\r\n  if (config.useNativeDriver == null) {\r\n    console.warn(\r\n      'Animated: `useNativeDriver` was not specified. This is a required ' +\r\n        'option and must be explicitly set to `true` or `false`',\r\n    );\r\n  }\r\n\r\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\r\n    if (process.env.NODE_ENV !== 'test') {\r\n      if (!_warnedMissingNativeAnimated) {\r\n        console.warn(\r\n          'Animated: `useNativeDriver` is not supported because the native ' +\r\n            'animated module is missing. Falling back to JS-based animation. To ' +\r\n            'resolve this, add `RCTAnimation` module to this app, or remove ' +\r\n            '`useNativeDriver`. ' +\r\n            'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md',\r\n        );\r\n        _warnedMissingNativeAnimated = true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return config.useNativeDriver || false;\r\n}\r\n\r\nfunction transformDataType(value: number | string): number | string {\r\n  // Change the string type to number type so we can reuse the same logic in\r\n  // iOS and Android platform\r\n  if (typeof value !== 'string') {\r\n    return value;\r\n  }\r\n  if (/deg$/.test(value)) {\r\n    const degrees = parseFloat(value) || 0;\r\n    const radians = (degrees * Math.PI) / 180.0;\r\n    return radians;\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\n\r\nexport default {\r\n  API,\r\n  isSupportedColorStyleProp,\r\n  isSupportedStyleProp,\r\n  isSupportedTransformProp,\r\n  isSupportedInterpolationParam,\r\n  addWhitelistedStyleProp,\r\n  addWhitelistedTransformProp,\r\n  addWhitelistedInterpolationParam,\r\n  validateStyles,\r\n  validateTransform,\r\n  validateInterpolation,\r\n  generateNewNodeTag,\r\n  generateNewAnimationId,\r\n  assertNativeAnimatedModule,\r\n  shouldUseNativeDriver,\r\n  transformDataType,\r\n  // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppression\r\n  // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppression\r\n  get nativeEventEmitter(): NativeEventEmitter {\r\n    if (!nativeEventEmitter) {\r\n      // $FlowFixMe[underconstrained-implicit-instantiation]\r\n      nativeEventEmitter = new NativeEventEmitter(\r\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\r\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\r\n        Platform.OS !== 'ios' ? null : NativeAnimatedModule,\r\n      );\r\n    }\r\n    return nativeEventEmitter;\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}