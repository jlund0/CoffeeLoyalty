{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar EventPolyfill = function () {\n  function EventPolyfill(type, eventInitDict) {\n    _classCallCheck(this, EventPolyfill);\n    this.type = type;\n    this.bubbles = !!(eventInitDict != null && eventInitDict.bubbles || false);\n    this.cancelable = !!(eventInitDict != null && eventInitDict.cancelable || false);\n    this.composed = !!(eventInitDict != null && eventInitDict.composed || false);\n    this.scoped = !!(eventInitDict != null && eventInitDict.scoped || false);\n    this.isTrusted = false;\n    this.timeStamp = Date.now();\n    this.defaultPrevented = false;\n    this.NONE = 0;\n    this.AT_TARGET = 1;\n    this.BUBBLING_PHASE = 2;\n    this.CAPTURING_PHASE = 3;\n    this.eventPhase = this.NONE;\n    this.currentTarget = null;\n    this.target = null;\n    this.srcElement = null;\n  }\n  _createClass(EventPolyfill, [{\n    key: \"composedPath\",\n    value: function composedPath() {\n      throw new Error('TODO: not yet implemented');\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n      if (this._syntheticEvent != null) {\n        this._syntheticEvent.preventDefault();\n      }\n    }\n  }, {\n    key: \"initEvent\",\n    value: function initEvent(type, bubbles, cancelable) {\n      throw new Error('TODO: not yet implemented. This method is also deprecated.');\n    }\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      throw new Error('TODO: not yet implemented');\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      if (this._syntheticEvent != null) {\n        this._syntheticEvent.stopPropagation();\n      }\n    }\n  }, {\n    key: \"setSyntheticEvent\",\n    value: function setSyntheticEvent(value) {\n      this._syntheticEvent = value;\n    }\n  }]);\n  return EventPolyfill;\n}();\nglobal.Event = EventPolyfill;\nexport default EventPolyfill;","map":{"version":3,"names":["EventPolyfill","type","eventInitDict","_classCallCheck","bubbles","cancelable","composed","scoped","isTrusted","timeStamp","Date","now","defaultPrevented","NONE","AT_TARGET","BUBBLING_PHASE","CAPTURING_PHASE","eventPhase","currentTarget","target","srcElement","_createClass","key","value","composedPath","Error","preventDefault","_syntheticEvent","initEvent","stopImmediatePropagation","stopPropagation","setSyntheticEvent","global","Event"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Events/EventPolyfill.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n */\r\n\r\n// https://dom.spec.whatwg.org/#dictdef-eventinit\r\ntype Event$Init = {\r\n  bubbles?: boolean,\r\n  cancelable?: boolean,\r\n  composed?: boolean,\r\n  /** Non-standard. See `composed` instead. */\r\n  scoped?: boolean,\r\n  ...\r\n};\r\n\r\n/**\r\n * This is a copy of the Event interface defined in Flow:\r\n * https://github.com/facebook/flow/blob/741104e69c43057ebd32804dd6bcc1b5e97548ea/lib/dom.js\r\n * which is itself a faithful interface of the W3 spec:\r\n * https://dom.spec.whatwg.org/#interface-event\r\n *\r\n * Since Flow assumes that Event is provided and is on the global object,\r\n * we must provide an implementation of Event for CustomEvent (and future\r\n * alignment of React Native's event system with the W3 spec).\r\n */\r\ninterface IEvent {\r\n  constructor(type: string, eventInitDict?: Event$Init): void;\r\n  /**\r\n   * Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".\r\n   */\r\n  +type: string;\r\n  /**\r\n   * Returns the object to which event is dispatched (its target).\r\n   */\r\n  +target: EventTarget; // TODO: nullable\r\n  /** @deprecated */\r\n  +srcElement: Element; // TODO: nullable\r\n  /**\r\n   * Returns the object whose event listener's callback is currently being invoked.\r\n   */\r\n  +currentTarget: EventTarget; // TODO: nullable\r\n  /**\r\n   * Returns the invocation target objects of event's path (objects on which\r\n   * listeners will be invoked), except for any nodes in shadow trees of which\r\n   * the shadow root's mode is \"closed\" that are not reachable from event's\r\n   * currentTarget.\r\n   */\r\n  composedPath(): Array<EventTarget>;\r\n\r\n  +NONE: number;\r\n  +AT_TARGET: number;\r\n  +BUBBLING_PHASE: number;\r\n  +CAPTURING_PHASE: number;\r\n  /**\r\n   * Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET,\r\n   * and BUBBLING_PHASE.\r\n   */\r\n  +eventPhase: number;\r\n\r\n  /**\r\n   * When dispatched in a tree, invoking this method prevents event from reaching\r\n   * any objects other than the current object.\r\n   */\r\n  stopPropagation(): void;\r\n  /**\r\n   * Invoking this method prevents event from reaching any registered event\r\n   * listeners after the current one finishes running and, when dispatched in a\r\n   * tree, also prevents event from reaching any other objects.\r\n   */\r\n  stopImmediatePropagation(): void;\r\n\r\n  /**\r\n   * Returns true or false depending on how event was initialized. True if\r\n   * event goes through its target's ancestors in reverse tree order, and\r\n   * false otherwise.\r\n   */\r\n  +bubbles: boolean;\r\n  /**\r\n   * Returns true or false depending on how event was initialized. Its\r\n   * return value does not always carry meaning, but true can indicate\r\n   * that part of the operation during which event was dispatched, can\r\n   * be canceled by invoking the preventDefault() method.\r\n   */\r\n  +cancelable: boolean;\r\n  // returnValue: boolean; // legacy, and some subclasses still define it as a string!\r\n  /**\r\n   * If invoked when the cancelable attribute value is true, and while\r\n   * executing a listener for the event with passive set to false, signals to\r\n   * the operation that caused event to be dispatched that it needs to be\r\n   * canceled.\r\n   */\r\n  preventDefault(): void;\r\n  /**\r\n   * Returns true if preventDefault() was invoked successfully to indicate\r\n   * cancelation, and false otherwise.\r\n   */\r\n  +defaultPrevented: boolean;\r\n  /**\r\n   * Returns true or false depending on how event was initialized. True if\r\n   * event invokes listeners past a ShadowRoot node that is the root of its\r\n   * target, and false otherwise.\r\n   */\r\n  +composed: boolean;\r\n\r\n  /**\r\n   * Returns true if event was dispatched by the user agent, and false otherwise.\r\n   */\r\n  +isTrusted: boolean;\r\n  /**\r\n   * Returns the event's timestamp as the number of milliseconds measured relative\r\n   * to the time origin.\r\n   */\r\n  +timeStamp: number;\r\n\r\n  /** Non-standard. See Event.prototype.composedPath */\r\n  +deepPath?: () => EventTarget[];\r\n  /** Non-standard. See Event.prototype.composed */\r\n  +scoped: boolean;\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void;\r\n}\r\n\r\nclass EventPolyfill implements IEvent {\r\n  type: string;\r\n  bubbles: boolean;\r\n  cancelable: boolean;\r\n  composed: boolean;\r\n  // Non-standard. See `composed` instead.\r\n  scoped: boolean;\r\n  isTrusted: boolean;\r\n  defaultPrevented: boolean;\r\n  timeStamp: number;\r\n\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\r\n  NONE: number;\r\n  AT_TARGET: number;\r\n  BUBBLING_PHASE: number;\r\n  CAPTURING_PHASE: number;\r\n\r\n  eventPhase: number;\r\n\r\n  currentTarget: EventTarget; // TODO: nullable\r\n  target: EventTarget; // TODO: nullable\r\n  /** @deprecated */\r\n  srcElement: Element; // TODO: nullable\r\n\r\n  // React Native-specific: proxy data to a SyntheticEvent when\r\n  // certain methods are called.\r\n  // SyntheticEvent will also have a reference to this instance -\r\n  // it is circular - and both classes use this reference to keep\r\n  // data with the other in sync.\r\n  _syntheticEvent: mixed;\r\n\r\n  constructor(type: string, eventInitDict?: Event$Init) {\r\n    this.type = type;\r\n    this.bubbles = !!(eventInitDict?.bubbles || false);\r\n    this.cancelable = !!(eventInitDict?.cancelable || false);\r\n    this.composed = !!(eventInitDict?.composed || false);\r\n    this.scoped = !!(eventInitDict?.scoped || false);\r\n\r\n    // TODO: somehow guarantee that only \"private\" instantiations of Event\r\n    // can set this to true\r\n    this.isTrusted = false;\r\n\r\n    // TODO: in the future we'll want to make sure this has the same\r\n    // time-basis as events originating from native\r\n    this.timeStamp = Date.now();\r\n\r\n    this.defaultPrevented = false;\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/eventPhase\r\n    this.NONE = 0;\r\n    this.AT_TARGET = 1;\r\n    this.BUBBLING_PHASE = 2;\r\n    this.CAPTURING_PHASE = 3;\r\n    this.eventPhase = this.NONE;\r\n\r\n    // $FlowFixMe\r\n    this.currentTarget = null;\r\n    // $FlowFixMe\r\n    this.target = null;\r\n    // $FlowFixMe\r\n    this.srcElement = null;\r\n  }\r\n\r\n  composedPath(): Array<EventTarget> {\r\n    throw new Error('TODO: not yet implemented');\r\n  }\r\n\r\n  preventDefault(): void {\r\n    this.defaultPrevented = true;\r\n\r\n    if (this._syntheticEvent != null) {\r\n      // $FlowFixMe\r\n      this._syntheticEvent.preventDefault();\r\n    }\r\n  }\r\n\r\n  initEvent(type: string, bubbles: boolean, cancelable: boolean): void {\r\n    throw new Error(\r\n      'TODO: not yet implemented. This method is also deprecated.',\r\n    );\r\n  }\r\n\r\n  stopImmediatePropagation(): void {\r\n    throw new Error('TODO: not yet implemented');\r\n  }\r\n\r\n  stopPropagation(): void {\r\n    if (this._syntheticEvent != null) {\r\n      // $FlowFixMe\r\n      this._syntheticEvent.stopPropagation();\r\n    }\r\n  }\r\n\r\n  setSyntheticEvent(value: mixed): void {\r\n    this._syntheticEvent = value;\r\n  }\r\n}\r\n\r\n// Assertion magic for polyfill follows.\r\ndeclare var checkEvent: Event; // eslint-disable-line no-unused-vars\r\n\r\n/*::\r\n// This can be a strict mode error at runtime so put it in a Flow comment.\r\n(checkEvent: IEvent);\r\n*/\r\n\r\nglobal.Event = EventPolyfill;\r\n\r\nexport default EventPolyfill;\r\n"],"mappings":";;IAkIMA,aAAa;EA+BjB,SAAAA,cAAYC,IAAY,EAAEC,aAA0B,EAAE;IAAAC,eAAA,OAAAH,aAAA;IACpD,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACG,OAAO,GAAG,CAAC,EAAEF,aAAa,YAAbA,aAAa,CAAEE,OAAO,IAAI,KAAK,CAAC;IAClD,IAAI,CAACC,UAAU,GAAG,CAAC,EAAEH,aAAa,YAAbA,aAAa,CAAEG,UAAU,IAAI,KAAK,CAAC;IACxD,IAAI,CAACC,QAAQ,GAAG,CAAC,EAAEJ,aAAa,YAAbA,aAAa,CAAEI,QAAQ,IAAI,KAAK,CAAC;IACpD,IAAI,CAACC,MAAM,GAAG,CAAC,EAAEL,aAAa,YAAbA,aAAa,CAAEK,MAAM,IAAI,KAAK,CAAC;IAIhD,IAAI,CAACC,SAAS,GAAG,KAAK;IAItB,IAAI,CAACC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAE3B,IAAI,CAACC,gBAAgB,GAAG,KAAK;IAG7B,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,eAAe,GAAG,CAAC;IACxB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,IAAI;IAG3B,IAAI,CAACK,aAAa,GAAG,IAAI;IAEzB,IAAI,CAACC,MAAM,GAAG,IAAI;IAElB,IAAI,CAACC,UAAU,GAAG,IAAI;EACxB;EAACC,YAAA,CAAArB,aAAA;IAAAsB,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAA,EAAmC;MACjC,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,eAAA,EAAuB;MACrB,IAAI,CAACd,gBAAgB,GAAG,IAAI;MAE5B,IAAI,IAAI,CAACe,eAAe,IAAI,IAAI,EAAE;QAEhC,IAAI,CAACA,eAAe,CAACD,cAAc,CAAC,CAAC;MACvC;IACF;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAK,UAAU3B,IAAY,EAAEG,OAAgB,EAAEC,UAAmB,EAAQ;MACnE,MAAM,IAAIoB,KAAK,CACb,4DACF,CAAC;IACH;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAM,yBAAA,EAAiC;MAC/B,MAAM,IAAIJ,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAO,gBAAA,EAAwB;MACtB,IAAI,IAAI,CAACH,eAAe,IAAI,IAAI,EAAE;QAEhC,IAAI,CAACA,eAAe,CAACG,eAAe,CAAC,CAAC;MACxC;IACF;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAQ,kBAAkBR,KAAY,EAAQ;MACpC,IAAI,CAACI,eAAe,GAAGJ,KAAK;IAC9B;EAAC;EAAA,OAAAvB,aAAA;AAAA;AAWHgC,MAAM,CAACC,KAAK,GAAGjC,aAAa;AAE5B,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}