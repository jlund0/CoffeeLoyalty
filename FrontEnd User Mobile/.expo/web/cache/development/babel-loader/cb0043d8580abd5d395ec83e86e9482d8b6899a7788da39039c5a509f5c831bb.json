{"ast":null,"code":"'use strict';\n\nvar BatchedBridge = require(\"../BatchedBridge/BatchedBridge\");\nvar RCTEventEmitter = {\n  register: function register(eventEmitter) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', function () {\n        return eventEmitter;\n      });\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  }\n};\nmodule.exports = RCTEventEmitter;","map":{"version":3,"names":["BatchedBridge","require","RCTEventEmitter","register","eventEmitter","global","RN$Bridgeless","RN$registerCallableModule","registerCallableModule","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/EventEmitter/RCTEventEmitter.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n'use strict';\r\n\r\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\r\n\r\nconst RCTEventEmitter = {\r\n  register(eventEmitter: any) {\r\n    if (global.RN$Bridgeless) {\r\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\r\n    } else {\r\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = RCTEventEmitter;\r\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,aAAa,GAAGC,OAAO,iCAAiC,CAAC;AAE/D,IAAMC,eAAe,GAAG;EACtBC,QAAQ,WAAAA,SAACC,YAAiB,EAAE;IAC1B,IAAIC,MAAM,CAACC,aAAa,EAAE;MACxBD,MAAM,CAACE,yBAAyB,CAAC,iBAAiB,EAAE;QAAA,OAAMH,YAAY;MAAA,EAAC;IACzE,CAAC,MAAM;MACLJ,aAAa,CAACQ,sBAAsB,CAAC,iBAAiB,EAAEJ,YAAY,CAAC;IACvE;EACF;AACF,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAGR,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}