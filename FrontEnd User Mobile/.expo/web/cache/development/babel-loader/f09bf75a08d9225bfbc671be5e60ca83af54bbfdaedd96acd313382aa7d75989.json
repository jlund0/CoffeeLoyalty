{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from \"../Components/View/View\";\nimport useMergeRefs from \"../Utilities/useMergeRefs\";\nimport useAnimatedProps from \"./useAnimatedProps\";\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createAnimatedComponent(Component) {\n  return React.forwardRef(function (props, forwardedRef) {\n    var _useAnimatedProps = useAnimatedProps(props),\n      _useAnimatedProps2 = _slicedToArray(_useAnimatedProps, 2),\n      reducedProps = _useAnimatedProps2[0],\n      callbackRef = _useAnimatedProps2[1];\n    var ref = useMergeRefs(callbackRef, forwardedRef);\n    var passthroughAnimatedPropExplicitValues = reducedProps.passthroughAnimatedPropExplicitValues,\n      style = reducedProps.style;\n    var _ref = passthroughAnimatedPropExplicitValues != null ? passthroughAnimatedPropExplicitValues : {},\n      passthroughStyle = _ref.style,\n      passthroughProps = _objectWithoutProperties(_ref, _excluded);\n    var mergedStyle = _objectSpread(_objectSpread({}, style), passthroughStyle);\n    return _jsx(Component, _objectSpread(_objectSpread(_objectSpread({}, reducedProps), passthroughProps), {}, {\n      style: mergedStyle,\n      ref: ref\n    }));\n  });\n}","map":{"version":3,"names":["View","useMergeRefs","useAnimatedProps","React","jsx","_jsx","createAnimatedComponent","Component","forwardRef","props","forwardedRef","_useAnimatedProps","_useAnimatedProps2","_slicedToArray","reducedProps","callbackRef","ref","passthroughAnimatedPropExplicitValues","style","_ref","passthroughStyle","passthroughProps","_objectWithoutProperties","_excluded","mergedStyle","_objectSpread"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\nimport View from '../Components/View/View';\r\nimport useMergeRefs from '../Utilities/useMergeRefs';\r\nimport useAnimatedProps from './useAnimatedProps';\r\nimport * as React from 'react';\r\n\r\nexport type AnimatedComponentType<\r\n  -Props: {+[string]: mixed, ...},\r\n  +Instance = mixed,\r\n> = React.AbstractComponent<\r\n  $ObjMap<\r\n    Props &\r\n      $ReadOnly<{\r\n        passthroughAnimatedPropExplicitValues?: React.ElementConfig<\r\n          typeof View,\r\n        >,\r\n      }>,\r\n    () => any,\r\n  >,\r\n  Instance,\r\n>;\r\n\r\nexport default function createAnimatedComponent<TProps: {...}, TInstance>(\r\n  Component: React.AbstractComponent<TProps, TInstance>,\r\n): AnimatedComponentType<TProps, TInstance> {\r\n  return React.forwardRef((props, forwardedRef) => {\r\n    const [reducedProps, callbackRef] = useAnimatedProps<TProps, TInstance>(\r\n      // $FlowFixMe[incompatible-call]\r\n      props,\r\n    );\r\n    const ref = useMergeRefs<TInstance | null>(callbackRef, forwardedRef);\r\n\r\n    // Some components require explicit passthrough values for animation\r\n    // to work properly. For example, if an animated component is\r\n    // transformed and Pressable, onPress will not work after transform\r\n    // without these passthrough values.\r\n    // $FlowFixMe[prop-missing]\r\n    const {passthroughAnimatedPropExplicitValues, style} = reducedProps;\r\n    const {style: passthroughStyle, ...passthroughProps} =\r\n      passthroughAnimatedPropExplicitValues ?? {};\r\n    const mergedStyle = {...style, ...passthroughStyle};\r\n\r\n    return (\r\n      <Component\r\n        {...reducedProps}\r\n        {...passthroughProps}\r\n        style={mergedStyle}\r\n        ref={ref}\r\n      />\r\n    );\r\n  });\r\n}\r\n"],"mappings":";;;;;;AAUA,OAAOA,IAAI;AACX,OAAOC,YAAY;AACnB,OAAOC,gBAAgB;AACvB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAkB/B,eAAe,SAASC,uBAAuBA,CAC7CC,SAAqD,EACX;EAC1C,OAAOJ,KAAK,CAACK,UAAU,CAAC,UAACC,KAAK,EAAEC,YAAY,EAAK;IAC/C,IAAAC,iBAAA,GAAoCT,gBAAgB,CAElDO,KACF,CAAC;MAAAG,kBAAA,GAAAC,cAAA,CAAAF,iBAAA;MAHMG,YAAY,GAAAF,kBAAA;MAAEG,WAAW,GAAAH,kBAAA;IAIhC,IAAMI,GAAG,GAAGf,YAAY,CAAmBc,WAAW,EAAEL,YAAY,CAAC;IAOrE,IAAOO,qCAAqC,GAAWH,YAAY,CAA5DG,qCAAqC;MAAEC,KAAK,GAAIJ,YAAY,CAArBI,KAAK;IACnD,IAAAC,IAAA,GACEF,qCAAqC,WAArCA,qCAAqC,GAAI,CAAC,CAAC;MAD/BG,gBAAgB,GAAAD,IAAA,CAAvBD,KAAK;MAAuBG,gBAAgB,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;IAEnD,IAAMC,WAAW,GAAAC,aAAA,CAAAA,aAAA,KAAOP,KAAK,GAAKE,gBAAgB,CAAC;IAEnD,OACEf,IAAA,CAACE,SAAS,EAAAkB,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACJX,YAAY,GACZO,gBAAgB;MACpBH,KAAK,EAAEM,WAAY;MACnBR,GAAG,EAAEA;IAAI,EACV,CAAC;EAEN,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}