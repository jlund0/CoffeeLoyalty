{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignInScreen() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n  return _jsxs(View, {\n    children: [_jsx(FontAwesome, {\n      name: \"at\",\n      size: 20\n    }), _jsx(TextInput, {\n      placeholder: \"Email ID\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      placeholder: _jsx(FontAwesome, {\n        name: \"lock\",\n        size: 20\n      }) + \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      title: \"Login\"\n    }), _jsx(Text, {\n      children: \"Forgot your password?\"\n    }), _jsx(Text, {\n      children: \"Not Registered yet?\"\n    }), _jsx(Button, {\n      title: \"Sign up\"\n    })]\n  });\n}\nexport function SignUpScreen() {\n  var _React$useState5 = React.useState(\"\"),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    password = _React$useState6[0],\n    setPassword = _React$useState6[1];\n  var _React$useState7 = React.useState(\"\"),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    firstname = _React$useState8[0],\n    setFirstmame = _React$useState8[1];\n  var _React$useState9 = React.useState(\"\"),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    lastname = _React$useState10[0],\n    setLastname = _React$useState10[1];\n  var _React$useState11 = React.useState(\"\"),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    email = _React$useState12[0],\n    setEmail = _React$useState12[1];\n  return _jsxs(View, {\n    children: [_jsx(Tex, {\n      children: \"Sign Up\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"First Name\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Last Name\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      value: email,\n      onChangeText: setEmail,\n      placeholder: \"Email\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(Button, {\n      title: \"Sign Up\"\n    })]\n  });\n}","map":{"version":3,"names":["React","View","TextInput","Button","Text","FontAwesome","jsx","_jsx","jsxs","_jsxs","SignInScreen","_React$useState","useState","_React$useState2","_slicedToArray","email","setEmail","_React$useState3","_React$useState4","password","setPassword","children","name","size","placeholder","value","onChangeText","secureTextEntry","title","SignUpScreen","_React$useState5","_React$useState6","_React$useState7","_React$useState8","firstname","setFirstmame","_React$useState9","_React$useState10","lastname","setLastname","_React$useState11","_React$useState12","Tex","style","styles","input"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/LoyalCoffee/SignIn.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { View, TextInput, Button, Text } from \"react-native\";\r\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\r\n\r\nexport function SignInScreen() {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  return (\r\n    <View>\r\n      <FontAwesome name=\"at\" size={20} />\r\n      <TextInput\r\n        placeholder={\"Email ID\"}\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <TextInput\r\n        placeholder={<FontAwesome name=\"lock\" size={20} /> + \"Password\"}\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n      />\r\n      <Button title=\"Login\" />\r\n      <Text>Forgot your password?</Text>\r\n      <Text>Not Registered yet?</Text>\r\n\r\n      <Button title=\"Sign up\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function SignUpScreen() {\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [firstname, setFirstmame] = React.useState(\"\");\r\n  const [lastname, setLastname] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n\r\n  return (\r\n    <View>\r\n      <Tex>Sign Up</Tex>\r\n      <TextInput style={styles.input} placeholder=\"First Name\"></TextInput>\r\n      <TextInput style={styles.input} placeholder=\"Last Name\"></TextInput>\r\n      <TextInput\r\n        style={styles.input}\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        placeholder=\"Email\"\r\n      ></TextInput>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      ></TextInput>\r\n      <Button title=\"Sign Up\"></Button>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}