{"ast":null,"code":"import NativeSourceCode from \"../../NativeModules/specs/NativeSourceCode\";\nvar _cachedDevServerURL;\nvar _cachedFullBundleURL;\nvar FALLBACK = 'http://localhost:8081/';\nfunction getDevServer() {\n  var _cachedDevServerURL2;\n  if (_cachedDevServerURL === undefined) {\n    var scriptUrl = NativeSourceCode.getConstants().scriptURL;\n    var match = scriptUrl.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n    _cachedFullBundleURL = match ? scriptUrl : null;\n  }\n  return {\n    url: (_cachedDevServerURL2 = _cachedDevServerURL) != null ? _cachedDevServerURL2 : FALLBACK,\n    fullBundleUrl: _cachedFullBundleURL,\n    bundleLoadedFromServer: _cachedDevServerURL !== null\n  };\n}\nmodule.exports = getDevServer;","map":{"version":3,"names":["NativeSourceCode","_cachedDevServerURL","_cachedFullBundleURL","FALLBACK","getDevServer","_cachedDevServerURL2","undefined","scriptUrl","getConstants","scriptURL","match","url","fullBundleUrl","bundleLoadedFromServer","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Core/Devtools/getDevServer.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict\r\n */\r\n\r\nimport NativeSourceCode from '../../NativeModules/specs/NativeSourceCode';\r\n\r\nlet _cachedDevServerURL: ?string;\r\nlet _cachedFullBundleURL: ?string;\r\nconst FALLBACK = 'http://localhost:8081/';\r\n\r\ntype DevServerInfo = {\r\n  url: string,\r\n  fullBundleUrl: ?string,\r\n  bundleLoadedFromServer: boolean,\r\n  ...\r\n};\r\n\r\n/**\r\n * Many RN development tools rely on the development server (packager) running\r\n * @return URL to packager with trailing slash\r\n */\r\nfunction getDevServer(): DevServerInfo {\r\n  if (_cachedDevServerURL === undefined) {\r\n    const scriptUrl = NativeSourceCode.getConstants().scriptURL;\r\n    const match = scriptUrl.match(/^https?:\\/\\/.*?\\//);\r\n    _cachedDevServerURL = match ? match[0] : null;\r\n    _cachedFullBundleURL = match ? scriptUrl : null;\r\n  }\r\n\r\n  return {\r\n    url: _cachedDevServerURL ?? FALLBACK,\r\n    fullBundleUrl: _cachedFullBundleURL,\r\n    bundleLoadedFromServer: _cachedDevServerURL !== null,\r\n  };\r\n}\r\n\r\nmodule.exports = getDevServer;\r\n"],"mappings":"AAUA,OAAOA,gBAAgB;AAEvB,IAAIC,mBAA4B;AAChC,IAAIC,oBAA6B;AACjC,IAAMC,QAAQ,GAAG,wBAAwB;AAazC,SAASC,YAAYA,CAAA,EAAkB;EAAA,IAAAC,oBAAA;EACrC,IAAIJ,mBAAmB,KAAKK,SAAS,EAAE;IACrC,IAAMC,SAAS,GAAGP,gBAAgB,CAACQ,YAAY,CAAC,CAAC,CAACC,SAAS;IAC3D,IAAMC,KAAK,GAAGH,SAAS,CAACG,KAAK,CAAC,mBAAmB,CAAC;IAClDT,mBAAmB,GAAGS,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;IAC7CR,oBAAoB,GAAGQ,KAAK,GAAGH,SAAS,GAAG,IAAI;EACjD;EAEA,OAAO;IACLI,GAAG,GAAAN,oBAAA,GAAEJ,mBAAmB,YAAAI,oBAAA,GAAIF,QAAQ;IACpCS,aAAa,EAAEV,oBAAoB;IACnCW,sBAAsB,EAAEZ,mBAAmB,KAAK;EAClD,CAAC;AACH;AAEAa,MAAM,CAACC,OAAO,GAAGX,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}