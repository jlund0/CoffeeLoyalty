{"ast":null,"code":"import codegenNativeCommands from \"../../Utilities/codegenNativeCommands\";\nimport codegenNativeComponent from \"../../Utilities/codegenNativeComponent\";\nimport * as React from 'react';\nexport var Commands = codegenNativeCommands({\n  supportedCommands: ['setNativeRefreshing']\n});\nexport default codegenNativeComponent('PullToRefreshView', {\n  paperComponentName: 'RCTRefreshControl',\n  excludedPlatforms: ['android']\n});","map":{"version":3,"names":["codegenNativeCommands","codegenNativeComponent","React","Commands","supportedCommands","paperComponentName","excludedPlatforms"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Components/RefreshControl/PullToRefreshViewNativeComponent.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n */\r\n\r\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\r\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\r\nimport type {\r\n  DirectEventHandler,\r\n  Float,\r\n  WithDefault,\r\n} from '../../Types/CodegenTypes';\r\nimport type {ViewProps} from '../View/ViewPropTypes';\r\n\r\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\r\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\r\nimport * as React from 'react';\r\n\r\ntype NativeProps = $ReadOnly<{|\r\n  ...ViewProps,\r\n\r\n  /**\r\n   * The color of the refresh indicator.\r\n   */\r\n  tintColor?: ?ColorValue,\r\n  /**\r\n   * Title color.\r\n   */\r\n  titleColor?: ?ColorValue,\r\n  /**\r\n   * The title displayed under the refresh indicator.\r\n   */\r\n  title?: WithDefault<string, null>,\r\n  /**\r\n   * Progress view top offset\r\n   */\r\n  progressViewOffset?: WithDefault<Float, 0>,\r\n\r\n  /**\r\n   * Called when the view starts refreshing.\r\n   */\r\n  onRefresh?: ?DirectEventHandler<null>,\r\n\r\n  /**\r\n   * Whether the view should be indicating an active refresh.\r\n   */\r\n  refreshing: boolean,\r\n|}>;\r\n\r\ntype ComponentType = HostComponent<NativeProps>;\r\n\r\ninterface NativeCommands {\r\n  +setNativeRefreshing: (\r\n    viewRef: React.ElementRef<ComponentType>,\r\n    refreshing: boolean,\r\n  ) => void;\r\n}\r\n\r\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\r\n  supportedCommands: ['setNativeRefreshing'],\r\n});\r\n\r\nexport default (codegenNativeComponent<NativeProps>('PullToRefreshView', {\r\n  paperComponentName: 'RCTRefreshControl',\r\n  excludedPlatforms: ['android'],\r\n}): HostComponent<NativeProps>);\r\n"],"mappings":"AAmBA,OAAOA,qBAAqB;AAC5B,OAAOC,sBAAsB;AAC7B,OAAO,KAAKC,KAAK,MAAM,OAAO;AA0C9B,OAAO,IAAMC,QAAwB,GAAGH,qBAAqB,CAAiB;EAC5EI,iBAAiB,EAAE,CAAC,qBAAqB;AAC3C,CAAC,CAAC;AAEF,eAAgBH,sBAAsB,CAAc,mBAAmB,EAAE;EACvEI,kBAAkB,EAAE,mBAAmB;EACvCC,iBAAiB,EAAE,CAAC,SAAS;AAC/B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}