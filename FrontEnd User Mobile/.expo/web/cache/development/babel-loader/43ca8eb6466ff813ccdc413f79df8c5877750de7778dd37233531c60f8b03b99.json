{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport * as React from \"react\";\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AuthStack from \"./AuthStack\";\nimport AppStack from \"./AppStack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar IsSignedIn = function IsSignedIn() {\n  return true;\n};\nexport default function App() {\n  var isSignedIn = IsSignedIn();\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      children: isSignedIn ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            headerStyle: {\n              opacity: 0,\n              height: 0\n            },\n            animation: \"slide_from_left\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"card\",\n          component: CardScreen,\n          options: {\n            headerStyle: {},\n            animation: \"slide_from_left\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"stores\",\n          component: StoresScreen,\n          options: {\n            headerStyle: {\n              opacity: 0,\n              height: 0\n            },\n            animation: \"slide_from_left\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"settings\",\n          component: SettingsScreen,\n          options: {\n            headerStyle: {\n              opacity: 0,\n              height: 0\n            }\n          }\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: SignInScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: SignUpScreen\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 18\n  },\n  icon: {\n    width: 40,\n    height: 40\n  },\n  button: {\n    borderRadius: 50,\n    backgroundColor: \"0\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","useIsFocused","createNativeStackNavigator","AuthStack","AppStack","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","IsSignedIn","App","isSignedIn","children","Navigator","initialRouteName","Screen","name","component","Home","options","headerStyle","opacity","height","animation","CardScreen","StoresScreen","SettingsScreen","SignInScreen","SignUpScreen","styles","StyleSheet","create","image","width","borderRadius","icon","button","backgroundColor","borderWidth","justifyContent","alignSelf"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/LoyalCoffee/App.js"],"sourcesContent":["import { StyleSheet, Text, View, Image, Button, Pressable } from \"react-native\";\n\nimport * as React from \"react\";\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AuthStack from \"./AuthStack\";\nimport AppStack from \"./AppStack\";\n\n//\n\nconst Stack = createNativeStackNavigator();\n\nconst IsSignedIn = () => {\n  // custom logic\n  return true;\n};\n\nexport default function App() {\n  const isSignedIn = IsSignedIn();\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Login\">\n        {/*        */}\n        {isSignedIn ? (\n          <>\n            <Stack.Screen\n              name=\"Home\"\n              component={Home}\n              options={{\n                headerStyle: {\n                  opacity: 0,\n                  height: 0,\n                },\n                animation: \"slide_from_left\",\n              }}\n            />\n            <Stack.Screen\n              name=\"card\"\n              component={CardScreen}\n              options={{\n                headerStyle: {},\n                animation: \"slide_from_left\",\n              }}\n            />\n            <Stack.Screen\n              name=\"stores\"\n              component={StoresScreen}\n              options={{\n                headerStyle: {\n                  opacity: 0,\n                  height: 0,\n                },\n                animation: \"slide_from_left\",\n              }}\n            />\n            <Stack.Screen\n              name=\"settings\"\n              component={SettingsScreen}\n              options={{\n                headerStyle: {\n                  opacity: 0,\n                  height: 0,\n                },\n              }}\n            />\n          </>\n        ) : (\n          <>\n            <Stack.Screen name=\"Login\" component={SignInScreen} />\n            <Stack.Screen name=\"Register\" component={SignUpScreen} />\n          </>\n        )}\n        {/*       \n    \n    }\n        <AppStack /> <AuthStack /> */}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 18,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n  },\n\n  button: {\n    borderRadius: 50,\n    backgroundColor: \"0\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n});\n"],"mappings":";;;;;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,0BAA0B;AAC5E,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,SAAS;AAChB,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIlC,IAAMC,KAAK,GAAGT,0BAA0B,CAAC,CAAC;AAE1C,IAAMU,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAEvB,OAAO,IAAI;AACb,CAAC;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,UAAU,GAAGF,UAAU,CAAC,CAAC;EAC/B,OACEN,IAAA,CAACN,mBAAmB;IAAAe,QAAA,EAClBT,IAAA,CAACK,KAAK,CAACK,SAAS;MAACC,gBAAgB,EAAC,OAAO;MAAAF,QAAA,EAEtCD,UAAU,GACTJ,KAAA,CAAAF,SAAA;QAAAO,QAAA,GACET,IAAA,CAACK,KAAK,CAACO,MAAM;UACXC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAEC,IAAK;UAChBC,OAAO,EAAE;YACPC,WAAW,EAAE;cACXC,OAAO,EAAE,CAAC;cACVC,MAAM,EAAE;YACV,CAAC;YACDC,SAAS,EAAE;UACb;QAAE,CACH,CAAC,EACFpB,IAAA,CAACK,KAAK,CAACO,MAAM;UACXC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAEO,UAAW;UACtBL,OAAO,EAAE;YACPC,WAAW,EAAE,CAAC,CAAC;YACfG,SAAS,EAAE;UACb;QAAE,CACH,CAAC,EACFpB,IAAA,CAACK,KAAK,CAACO,MAAM;UACXC,IAAI,EAAC,QAAQ;UACbC,SAAS,EAAEQ,YAAa;UACxBN,OAAO,EAAE;YACPC,WAAW,EAAE;cACXC,OAAO,EAAE,CAAC;cACVC,MAAM,EAAE;YACV,CAAC;YACDC,SAAS,EAAE;UACb;QAAE,CACH,CAAC,EACFpB,IAAA,CAACK,KAAK,CAACO,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAES,cAAe;UAC1BP,OAAO,EAAE;YACPC,WAAW,EAAE;cACXC,OAAO,EAAE,CAAC;cACVC,MAAM,EAAE;YACV;UACF;QAAE,CACH,CAAC;MAAA,CACF,CAAC,GAEHf,KAAA,CAAAF,SAAA;QAAAO,QAAA,GACET,IAAA,CAACK,KAAK,CAACO,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAEU;QAAa,CAAE,CAAC,EACtDxB,IAAA,CAACK,KAAK,CAACO,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,SAAS,EAAEW;QAAa,CAAE,CAAC;MAAA,CACzD;IACH,CAKc;EAAC,CACC,CAAC;AAE1B;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,KAAK,EAAE;IACLC,KAAK,EAAE,GAAG;IACVX,MAAM,EAAE,GAAG;IACXY,YAAY,EAAE;EAChB,CAAC;EACDC,IAAI,EAAE;IACJF,KAAK,EAAE,EAAE;IACTX,MAAM,EAAE;EACV,CAAC;EAEDc,MAAM,EAAE;IACNF,YAAY,EAAE,EAAE;IAChBG,eAAe,EAAE,GAAG;IACpBC,WAAW,EAAE,CAAC;IACdC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}