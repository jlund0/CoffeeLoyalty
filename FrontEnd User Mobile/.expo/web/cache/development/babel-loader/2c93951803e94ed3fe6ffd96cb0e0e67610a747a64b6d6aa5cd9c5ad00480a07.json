{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { ConditionallyIgnoredEventHandlers } from \"../../NativeComponent/ViewConfigIgnore\";\nvar RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture'\n      }\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture'\n      }\n    },\n    topContentSizeChange: {\n      phasedRegistrationNames: {\n        captured: 'onContentSizeChangeCapture',\n        bubbled: 'onContentSizeChange'\n      }\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture'\n      }\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture'\n      }\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture'\n      }\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture'\n      }\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture'\n      }\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture'\n      }\n    },\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture'\n      }\n    }\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput'\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync'\n    },\n    topScroll: {\n      registrationName: 'onScroll'\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange'\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync'\n    }\n  },\n  validAttributes: _objectSpread({\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    textShadowOffset: {\n      diff: require(\"../../Utilities/differ/sizesDiffer\")\n    },\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require(\"../../StyleSheet/processColor\").default\n    },\n    color: {\n      process: require(\"../../StyleSheet/processColor\").default\n    },\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require(\"../../StyleSheet/processColor\").default\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require(\"../../StyleSheet/processColor\").default\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    submitBehavior: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {\n      process: require(\"../../StyleSheet/processColor\").default\n    },\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n    lineBreakStrategyIOS: true\n  }, ConditionallyIgnoredEventHandlers({\n    onChange: true,\n    onSelectionChange: true,\n    onContentSizeChange: true,\n    onScroll: true,\n    onChangeSync: true,\n    onKeyPressSync: true,\n    onTextInput: true\n  }))\n};\nmodule.exports = RCTTextInputViewConfig;","map":{"version":3,"names":["ConditionallyIgnoredEventHandlers","RCTTextInputViewConfig","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topChange","topContentSizeChange","topEndEditing","topFocus","topKeyPress","topSubmitEditing","topTouchCancel","topTouchEnd","topTouchMove","directEventTypes","topTextInput","registrationName","topKeyPressSync","topScroll","topSelectionChange","topChangeSync","validAttributes","_objectSpread","fontSize","fontWeight","fontVariant","textShadowOffset","diff","require","allowFontScaling","fontStyle","textTransform","textAlign","fontFamily","lineHeight","isHighlighted","writingDirection","textDecorationLine","textShadowRadius","letterSpacing","textDecorationStyle","textDecorationColor","process","default","color","maxFontSizeMultiplier","textShadowColor","editable","inputAccessoryViewID","caretHidden","enablesReturnKeyAutomatically","placeholderTextColor","clearButtonMode","keyboardType","selection","returnKeyType","submitBehavior","mostRecentEventCount","scrollEnabled","selectionColor","contextMenuHidden","secureTextEntry","placeholder","autoCorrect","multiline","textContentType","maxLength","autoCapitalize","keyboardAppearance","passwordRules","spellCheck","selectTextOnFocus","text","clearTextOnFocus","showSoftInputOnFocus","autoFocus","lineBreakStrategyIOS","onChange","onSelectionChange","onContentSizeChange","onScroll","onChangeSync","onKeyPressSync","onTextInput","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {PartialViewConfig} from '../../Renderer/shims/ReactNativeTypes';\r\n\r\nimport {ConditionallyIgnoredEventHandlers} from '../../NativeComponent/ViewConfigIgnore';\r\n\r\ntype PartialViewConfigWithoutName = $Rest<\r\n  PartialViewConfig,\r\n  {uiViewClassName: string},\r\n>;\r\n\r\nconst RCTTextInputViewConfig = {\r\n  bubblingEventTypes: {\r\n    topBlur: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onBlur',\r\n        captured: 'onBlurCapture',\r\n      },\r\n    },\r\n    topChange: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onChange',\r\n        captured: 'onChangeCapture',\r\n      },\r\n    },\r\n    topContentSizeChange: {\r\n      phasedRegistrationNames: {\r\n        captured: 'onContentSizeChangeCapture',\r\n        bubbled: 'onContentSizeChange',\r\n      },\r\n    },\r\n    topEndEditing: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onEndEditing',\r\n        captured: 'onEndEditingCapture',\r\n      },\r\n    },\r\n    topFocus: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onFocus',\r\n        captured: 'onFocusCapture',\r\n      },\r\n    },\r\n    topKeyPress: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onKeyPress',\r\n        captured: 'onKeyPressCapture',\r\n      },\r\n    },\r\n    topSubmitEditing: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onSubmitEditing',\r\n        captured: 'onSubmitEditingCapture',\r\n      },\r\n    },\r\n    topTouchCancel: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onTouchCancel',\r\n        captured: 'onTouchCancelCapture',\r\n      },\r\n    },\r\n    topTouchEnd: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onTouchEnd',\r\n        captured: 'onTouchEndCapture',\r\n      },\r\n    },\r\n\r\n    topTouchMove: {\r\n      phasedRegistrationNames: {\r\n        bubbled: 'onTouchMove',\r\n        captured: 'onTouchMoveCapture',\r\n      },\r\n    },\r\n  },\r\n  directEventTypes: {\r\n    topTextInput: {\r\n      registrationName: 'onTextInput',\r\n    },\r\n    topKeyPressSync: {\r\n      registrationName: 'onKeyPressSync',\r\n    },\r\n    topScroll: {\r\n      registrationName: 'onScroll',\r\n    },\r\n    topSelectionChange: {\r\n      registrationName: 'onSelectionChange',\r\n    },\r\n    topChangeSync: {\r\n      registrationName: 'onChangeSync',\r\n    },\r\n  },\r\n  validAttributes: {\r\n    fontSize: true,\r\n    fontWeight: true,\r\n    fontVariant: true,\r\n    // flowlint-next-line untyped-import:off\r\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\r\n    allowFontScaling: true,\r\n    fontStyle: true,\r\n    textTransform: true,\r\n    textAlign: true,\r\n    fontFamily: true,\r\n    lineHeight: true,\r\n    isHighlighted: true,\r\n    writingDirection: true,\r\n    textDecorationLine: true,\r\n    textShadowRadius: true,\r\n    letterSpacing: true,\r\n    textDecorationStyle: true,\r\n    textDecorationColor: {\r\n      process: require('../../StyleSheet/processColor').default,\r\n    },\r\n    color: {process: require('../../StyleSheet/processColor').default},\r\n    maxFontSizeMultiplier: true,\r\n    textShadowColor: {\r\n      process: require('../../StyleSheet/processColor').default,\r\n    },\r\n    editable: true,\r\n    inputAccessoryViewID: true,\r\n    caretHidden: true,\r\n    enablesReturnKeyAutomatically: true,\r\n    placeholderTextColor: {\r\n      process: require('../../StyleSheet/processColor').default,\r\n    },\r\n    clearButtonMode: true,\r\n    keyboardType: true,\r\n    selection: true,\r\n    returnKeyType: true,\r\n    submitBehavior: true,\r\n    mostRecentEventCount: true,\r\n    scrollEnabled: true,\r\n    selectionColor: {process: require('../../StyleSheet/processColor').default},\r\n    contextMenuHidden: true,\r\n    secureTextEntry: true,\r\n    placeholder: true,\r\n    autoCorrect: true,\r\n    multiline: true,\r\n    textContentType: true,\r\n    maxLength: true,\r\n    autoCapitalize: true,\r\n    keyboardAppearance: true,\r\n    passwordRules: true,\r\n    spellCheck: true,\r\n    selectTextOnFocus: true,\r\n    text: true,\r\n    clearTextOnFocus: true,\r\n    showSoftInputOnFocus: true,\r\n    autoFocus: true,\r\n    lineBreakStrategyIOS: true,\r\n    ...ConditionallyIgnoredEventHandlers({\r\n      onChange: true,\r\n      onSelectionChange: true,\r\n      onContentSizeChange: true,\r\n      onScroll: true,\r\n      onChangeSync: true,\r\n      onKeyPressSync: true,\r\n      onTextInput: true,\r\n    }),\r\n  },\r\n};\r\n\r\nmodule.exports = (RCTTextInputViewConfig: PartialViewConfigWithoutName);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}