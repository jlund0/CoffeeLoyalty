{"ast":null,"code":"import View from \"../../Components/View/View\";\nimport StyleSheet from \"../../StyleSheet/StyleSheet\";\nimport Text from \"../../Text/Text\";\nimport { ansiToJson } from 'anser';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)'\n};\nexport default function Ansi(_ref) {\n  var text = _ref.text,\n    style = _ref.style;\n  var commonWhitespaceLength = Infinity;\n  var parsedLines = text.split(/\\n/).map(function (line) {\n    return ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true\n    });\n  });\n  parsedLines.map(function (lines) {\n    var _lines$, _lines$$content, _match$;\n    var match = lines[2] && ((_lines$ = lines[2]) == null ? void 0 : (_lines$$content = _lines$.content) == null ? void 0 : _lines$$content.match(/^ +/));\n    var whitespaceLength = match && ((_match$ = match[0]) == null ? void 0 : _match$.length) || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n  var getText = function getText(content, key) {\n    if (key === 1) {\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      return content.substr(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n  return _jsx(View, {\n    children: parsedLines.map(function (items, i) {\n      return _jsx(View, {\n        style: styles.line,\n        children: items.map(function (bundle, key) {\n          var textStyle = bundle.fg && COLORS[bundle.fg] ? {\n            backgroundColor: bundle.bg && COLORS[bundle.bg],\n            color: bundle.fg && COLORS[bundle.fg]\n          } : {\n            backgroundColor: bundle.bg && COLORS[bundle.bg]\n          };\n          return _jsx(Text, {\n            style: [style, textStyle],\n            children: getText(bundle.content, key)\n          }, key);\n        })\n      }, i);\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["View","StyleSheet","Text","ansiToJson","React","jsx","_jsx","COLORS","Ansi","_ref","text","style","commonWhitespaceLength","Infinity","parsedLines","split","map","line","json","remove_empty","use_classes","lines","_lines$","_lines$$content","_match$","match","content","whitespaceLength","length","getText","key","replace","substr","children","items","i","styles","bundle","textStyle","fg","backgroundColor","bg","color","create","flexDirection"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\r\n\r\nimport View from '../../Components/View/View';\r\nimport StyleSheet from '../../StyleSheet/StyleSheet';\r\nimport Text from '../../Text/Text';\r\nimport {ansiToJson} from 'anser';\r\nimport * as React from 'react';\r\n\r\n// Afterglow theme from https://iterm2colorschemes.com/\r\nconst COLORS = {\r\n  'ansi-black': 'rgb(27, 27, 27)',\r\n  'ansi-red': 'rgb(187, 86, 83)',\r\n  'ansi-green': 'rgb(144, 157, 98)',\r\n  'ansi-yellow': 'rgb(234, 193, 121)',\r\n  'ansi-blue': 'rgb(125, 169, 199)',\r\n  'ansi-magenta': 'rgb(176, 101, 151)',\r\n  'ansi-cyan': 'rgb(140, 220, 216)',\r\n  // Instead of white, use the default color provided to the component\r\n  // 'ansi-white': 'rgb(216, 216, 216)',\r\n  'ansi-bright-black': 'rgb(98, 98, 98)',\r\n  'ansi-bright-red': 'rgb(187, 86, 83)',\r\n  'ansi-bright-green': 'rgb(144, 157, 98)',\r\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\r\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\r\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\r\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\r\n  'ansi-bright-white': 'rgb(247, 247, 247)',\r\n};\r\n\r\nexport default function Ansi({\r\n  text,\r\n  style,\r\n}: {\r\n  text: string,\r\n  style: TextStyleProp,\r\n  ...\r\n}): React.Node {\r\n  let commonWhitespaceLength = Infinity;\r\n  const parsedLines = text.split(/\\n/).map(line =>\r\n    ansiToJson(line, {\r\n      json: true,\r\n      remove_empty: true,\r\n      use_classes: true,\r\n    }),\r\n  );\r\n\r\n  parsedLines.map(lines => {\r\n    // The third item on each line includes the whitespace of the source code.\r\n    // We are looking for the least amount of common whitespace to trim all lines.\r\n    // Example: Array [\" \", \" 96 |\", \"     text\", ...]\r\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\r\n    const whitespaceLength = (match && match[0]?.length) || 0;\r\n    if (whitespaceLength < commonWhitespaceLength) {\r\n      commonWhitespaceLength = whitespaceLength;\r\n    }\r\n  });\r\n\r\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\r\n   * LTI update could not be added via codemod */\r\n  const getText = (content, key) => {\r\n    if (key === 1) {\r\n      // Remove the vertical bar after line numbers\r\n      return content.replace(/\\| $/, ' ');\r\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\r\n      // Remove common whitespace at the beginning of the line\r\n      return content.substr(commonWhitespaceLength);\r\n    } else {\r\n      return content;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {parsedLines.map((items, i) => (\r\n        <View style={styles.line} key={i}>\r\n          {items.map((bundle, key) => {\r\n            const textStyle =\r\n              bundle.fg && COLORS[bundle.fg]\r\n                ? {\r\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\r\n                    color: bundle.fg && COLORS[bundle.fg],\r\n                  }\r\n                : {\r\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\r\n                  };\r\n            return (\r\n              <Text style={[style, textStyle]} key={key}>\r\n                {getText(bundle.content, key)}\r\n              </Text>\r\n            );\r\n          })}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  line: {\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}