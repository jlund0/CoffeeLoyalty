{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as Location from \"expo-location\";\nexport function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n  var R = 6371;\n  var dLat = deg2rad(lat2 - lat1);\n  var dLon = deg2rad(lon2 - lon1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n}\nfunction deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\nexport var geocode = function () {\n  var _ref = _asyncToGenerator(function* (address) {\n    var geocodedLocation = yield Location.geocodeAsync(\"9 Philp avenue como\");\n    console.log(\"Geocoded Address:\");\n    console.log(geocodedLocation);\n  });\n  return function geocode(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["Location","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","deg","PI","geocode","_ref","_asyncToGenerator","address","geocodedLocation","geocodeAsync","console","log","_x","apply","arguments"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/FrontEnd User Mobile/components/location.js"],"sourcesContent":["import * as Location from \"expo-location\";\r\n\r\nexport function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\r\n  var R = 6371; // Radius of the earth in km\r\n  var dLat = deg2rad(lat2 - lat1); // deg2rad below\r\n  var dLon = deg2rad(lon2 - lon1);\r\n  var a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(deg2rad(lat1)) *\r\n      Math.cos(deg2rad(lat2)) *\r\n      Math.sin(dLon / 2) *\r\n      Math.sin(dLon / 2);\r\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  var d = R * c; // Distance in km\r\n  return d;\r\n}\r\n\r\nfunction deg2rad(deg) {\r\n  return deg * (Math.PI / 180);\r\n}\r\n\r\nexport const geocode = async (address) => {\r\n  // const geocodedLocation = await Location.geocodeAsync(address);\r\n  const geocodedLocation = await Location.geocodeAsync(\"9 Philp avenue como\");\r\n  console.log(\"Geocoded Address:\");\r\n  console.log(geocodedLocation);\r\n};\r\n"],"mappings":";AAAA,OAAO,KAAKA,QAAQ,MAAM,eAAe;AAEzC,OAAO,SAASC,yBAAyBA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAChE,IAAIC,CAAC,GAAG,IAAI;EACZ,IAAIC,IAAI,GAAGC,OAAO,CAACJ,IAAI,GAAGF,IAAI,CAAC;EAC/B,IAAIO,IAAI,GAAGD,OAAO,CAACH,IAAI,GAAGF,IAAI,CAAC;EAC/B,IAAIO,CAAC,GACHC,IAAI,CAACC,GAAG,CAACL,IAAI,GAAG,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACL,IAAI,GAAG,CAAC,CAAC,GACvCI,IAAI,CAACE,GAAG,CAACL,OAAO,CAACN,IAAI,CAAC,CAAC,GACrBS,IAAI,CAACE,GAAG,CAACL,OAAO,CAACJ,IAAI,CAAC,CAAC,GACvBO,IAAI,CAACC,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC,GAClBE,IAAI,CAACC,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC;EACtB,IAAIK,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACI,KAAK,CAACJ,IAAI,CAACK,IAAI,CAACN,CAAC,CAAC,EAAEC,IAAI,CAACK,IAAI,CAAC,CAAC,GAAGN,CAAC,CAAC,CAAC;EACtD,IAAIO,CAAC,GAAGX,CAAC,GAAGQ,CAAC;EACb,OAAOG,CAAC;AACV;AAEA,SAAST,OAAOA,CAACU,GAAG,EAAE;EACpB,OAAOA,GAAG,IAAIP,IAAI,CAACQ,EAAE,GAAG,GAAG,CAAC;AAC9B;AAEA,OAAO,IAAMC,OAAO;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAO,EAAK;IAExC,IAAMC,gBAAgB,SAASxB,QAAQ,CAACyB,YAAY,CAAC,qBAAqB,CAAC;IAC3EC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCD,OAAO,CAACC,GAAG,CAACH,gBAAgB,CAAC;EAC/B,CAAC;EAAA,gBALYJ,OAAOA,CAAAQ,EAAA;IAAA,OAAAP,IAAA,CAAAQ,KAAA,OAAAC,SAAA;EAAA;AAAA,GAKnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}