{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport app from \"./firebase\";\nimport { collection, doc, addDoc, getFirestore, query, where, getDoc, setDoc } from \"firebase/firestore\";\nvar db = getFirestore(app);\nexport function AddUser(_x, _x2, _x3) {\n  return _AddUser.apply(this, arguments);\n}\nfunction _AddUser() {\n  _AddUser = _asyncToGenerator(function* (name, email, id) {\n    var docRef = doc(db, \"user\", id);\n    var docSnap = yield getDoc(docRef);\n    if (docSnap.exists()) {\n      console.log(\"user already added with\");\n      console.log(\"Document data:\", docSnap.data());\n    } else {\n      console.log(\"adding user \" + id);\n      var userData = {\n        name: name,\n        email: email,\n        coffee_earnt: 0,\n        created_at: new Date()\n      };\n      try {\n        var _docRef = setDoc(doc(db, \"users\", id), userData);\n        console.log(\"User written with ID: \", _docRef.id);\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n    }\n  });\n  return _AddUser.apply(this, arguments);\n}\nexport function getUserInfo(_x4) {\n  return _getUserInfo.apply(this, arguments);\n}\nfunction _getUserInfo() {\n  _getUserInfo = _asyncToGenerator(function* (userid) {\n    console.log(`fetching ${userid} details`);\n    var docRef = doc(db, \"user\", userid);\n    var docSnap = yield getDoc(docRef);\n    if (docSnap.exists()) {\n      console.log(\"Users data:\", docSnap.data());\n      return docSnap.data();\n    } else {\n      console.log(\"No such document!\");\n    }\n  });\n  return _getUserInfo.apply(this, arguments);\n}\nexport function getUserCards(_x5) {\n  return _getUserCards.apply(this, arguments);\n}\nfunction _getUserCards() {\n  _getUserCards = _asyncToGenerator(function* (userid) {\n    var cards = [];\n    console.log(`fetching ${userid} cards`);\n    var q = query(collection(db, \"cards\"), where(\"user\", \"==\", userid));\n    var querySnapshot = yield getDocs(q);\n    querySnapshot.forEach(function (doc) {\n      console.log(doc.id, \" => \", doc.data());\n      cards.push(doc.data());\n    });\n    console.log(\"users cards\" + cards);\n    return cards;\n  });\n  return _getUserCards.apply(this, arguments);\n}\nexport function getStoreInfo(storeid) {\n  console.log(`fetching ${storeid} info`);\n}\nexport function getStores(filter) {\n  console.log(`fetching stores in filter ${filter}`);\n}\nexport function addCard(cardid, userid) {\n  console.log(\"adding card with\" + cardid + \"to\" + userid);\n}","map":{"version":3,"names":["app","collection","doc","addDoc","getFirestore","query","where","getDoc","setDoc","db","AddUser","_x","_x2","_x3","_AddUser","apply","arguments","_asyncToGenerator","name","email","id","docRef","docSnap","exists","console","log","data","userData","coffee_earnt","created_at","Date","e","error","getUserInfo","_x4","_getUserInfo","userid","getUserCards","_x5","_getUserCards","cards","q","querySnapshot","getDocs","forEach","push","getStoreInfo","storeid","getStores","filter","addCard","cardid"],"sources":["C:/Users/julia/OneDrive/CoffeeLoyality/FrontEnd User Mobile/firebasefunctions.js"],"sourcesContent":["import app from \"./firebase\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  addDoc,\r\n  getFirestore,\r\n  query,\r\n  where,\r\n  getDoc,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport async function AddUser(name, email, id) {\r\n  const docRef = doc(db, \"user\", id);\r\n  const docSnap = await getDoc(docRef);\r\n\r\n  if (docSnap.exists()) {\r\n    console.log(\"user already added with\");\r\n    console.log(\"Document data:\", docSnap.data());\r\n  } else {\r\n    console.log(\"adding user \" + id);\r\n    const userData = {\r\n      name: name,\r\n      email: email,\r\n      coffee_earnt: 0,\r\n      created_at: new Date(),\r\n    };\r\n    try {\r\n      const docRef = setDoc(doc(db, \"users\", id), userData);\r\n      console.log(\"User written with ID: \", docRef.id);\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getUserInfo(userid) {\r\n  console.log(`fetching ${userid} details`);\r\n  const docRef = doc(db, \"user\", userid);\r\n  const docSnap = await getDoc(docRef);\r\n\r\n  if (docSnap.exists()) {\r\n    console.log(\"Users data:\", docSnap.data());\r\n    return docSnap.data();\r\n  } else {\r\n    console.log(\"No such document!\");\r\n  }\r\n}\r\n\r\nexport async function getUserCards(userid) {\r\n  let cards = [];\r\n  console.log(`fetching ${userid} cards`);\r\n  const q = query(collection(db, \"cards\"), where(\"user\", \"==\", userid));\r\n  const querySnapshot = await getDocs(q);\r\n  querySnapshot.forEach((doc) => {\r\n    // doc.data() is never undefined for query doc snapshots\r\n    console.log(doc.id, \" => \", doc.data());\r\n    cards.push(doc.data());\r\n  });\r\n  console.log(\"users cards\" + cards);\r\n  return cards;\r\n}\r\n\r\nexport function getStoreInfo(storeid) {\r\n  console.log(`fetching ${storeid} info`);\r\n}\r\n\r\nexport function getStores(filter) {\r\n  console.log(`fetching stores in filter ${filter}`);\r\n}\r\n\r\nexport function addCard(cardid, userid) {\r\n  console.log(\"adding card with\" + cardid + \"to\" + userid);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}