{"ast":null,"code":"import * as TurboModuleRegistry from \"../TurboModule/TurboModuleRegistry\";\nexport default TurboModuleRegistry.getEnforcing('UIManager');","map":{"version":3,"names":["TurboModuleRegistry","getEnforcing"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/ReactNative/NativeUIManager.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n * @format\r\n */\r\n\r\nimport type {RootTag} from '../TurboModule/RCTExport';\r\nimport type {TurboModule} from '../TurboModule/RCTExport';\r\n\r\nimport * as TurboModuleRegistry from '../TurboModule/TurboModuleRegistry';\r\n\r\nexport interface Spec extends TurboModule {\r\n  +getConstants: () => Object;\r\n  +getConstantsForViewManager: (viewManagerName: string) => Object;\r\n  +getDefaultEventTypes: () => Array<string>;\r\n  +lazilyLoadView: (name: string) => Object; // revisit return\r\n  +createView: (\r\n    reactTag: ?number,\r\n    viewName: string,\r\n    rootTag: RootTag,\r\n    props: Object,\r\n  ) => void;\r\n  +updateView: (reactTag: number, viewName: string, props: Object) => void;\r\n  +focus: (reactTag: ?number) => void;\r\n  +blur: (reactTag: ?number) => void;\r\n  +findSubviewIn: (\r\n    reactTag: ?number,\r\n    point: Array<number>,\r\n    callback: (\r\n      nativeViewTag: number,\r\n      left: number,\r\n      top: number,\r\n      width: number,\r\n      height: number,\r\n    ) => void,\r\n  ) => void;\r\n  +dispatchViewManagerCommand: (\r\n    reactTag: ?number,\r\n    commandID: number,\r\n    commandArgs: ?Array<any>,\r\n  ) => void;\r\n  +measure: (\r\n    reactTag: number,\r\n    callback: (\r\n      left: number,\r\n      top: number,\r\n      width: number,\r\n      height: number,\r\n      pageX: number,\r\n      pageY: number,\r\n    ) => void,\r\n  ) => void;\r\n  +measureInWindow: (\r\n    reactTag: number,\r\n    callback: (x: number, y: number, width: number, height: number) => void,\r\n  ) => void;\r\n  +viewIsDescendantOf: (\r\n    reactTag: ?number,\r\n    ancestorReactTag: ?number,\r\n    callback: (result: Array<boolean>) => void,\r\n  ) => void;\r\n  +measureLayout: (\r\n    reactTag: number,\r\n    ancestorReactTag: number,\r\n    errorCallback: (error: Object) => void,\r\n    callback: (\r\n      left: number,\r\n      top: number,\r\n      width: number,\r\n      height: number,\r\n    ) => void,\r\n  ) => void;\r\n  +measureLayoutRelativeToParent: (\r\n    reactTag: number,\r\n    errorCallback: (error: Object) => void,\r\n    callback: (\r\n      left: number,\r\n      top: number,\r\n      width: number,\r\n      height: number,\r\n    ) => void,\r\n  ) => void;\r\n  +setJSResponder: (reactTag: ?number, blockNativeResponder: boolean) => void;\r\n  +clearJSResponder: () => void;\r\n  +configureNextLayoutAnimation: (\r\n    config: Object,\r\n    callback: () => void, // check what is returned here\r\n    errorCallback: (error: Object) => void,\r\n  ) => void;\r\n  +removeSubviewsFromContainerWithID: (containerID: number) => void;\r\n  +replaceExistingNonRootView: (\r\n    reactTag: ?number,\r\n    newReactTag: ?number,\r\n  ) => void;\r\n  +setChildren: (containerTag: ?number, reactTags: Array<number>) => void;\r\n  +manageChildren: (\r\n    containerTag: ?number,\r\n    moveFromIndices: Array<number>,\r\n    moveToIndices: Array<number>,\r\n    addChildReactTags: Array<number>,\r\n    addAtIndices: Array<number>,\r\n    removeAtIndices: Array<number>,\r\n  ) => void;\r\n\r\n  // Android only\r\n  +setLayoutAnimationEnabledExperimental: (enabled: boolean) => void;\r\n  +sendAccessibilityEvent: (reactTag: ?number, eventType: number) => void;\r\n  +showPopupMenu: (\r\n    reactTag: ?number,\r\n    items: Array<string>,\r\n    error: (error: Object) => void,\r\n    success: (event: string, selected?: number) => void,\r\n  ) => void;\r\n  +dismissPopupMenu: () => void;\r\n}\r\n\r\nexport default (TurboModuleRegistry.getEnforcing<Spec>('UIManager'): Spec);\r\n"],"mappings":"AAaA,OAAO,KAAKA,mBAAmB;AA2G/B,eAAgBA,mBAAmB,CAACC,YAAY,CAAO,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}