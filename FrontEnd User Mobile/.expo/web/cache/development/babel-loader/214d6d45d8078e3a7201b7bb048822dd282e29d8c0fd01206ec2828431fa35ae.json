{"ast":null,"code":"import * as TurboModuleRegistry from \"../../TurboModule/TurboModuleRegistry\";\nvar NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');\nvar constants = null;\nvar NativeStatusBarManager = {\n  getConstants: function getConstants() {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n  setColor: function setColor(color, animated) {\n    NativeModule.setColor(color, animated);\n  },\n  setTranslucent: function setTranslucent(translucent) {\n    NativeModule.setTranslucent(translucent);\n  },\n  setStyle: function setStyle(statusBarStyle) {\n    NativeModule.setStyle(statusBarStyle);\n  },\n  setHidden: function setHidden(hidden) {\n    NativeModule.setHidden(hidden);\n  }\n};\nexport default NativeStatusBarManager;","map":{"version":3,"names":["TurboModuleRegistry","NativeModule","getEnforcing","constants","NativeStatusBarManager","getConstants","setColor","color","animated","setTranslucent","translucent","setStyle","statusBarStyle","setHidden","hidden"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Components/StatusBar/NativeStatusBarManagerAndroid.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\nimport type {TurboModule} from '../../TurboModule/RCTExport';\r\n\r\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\r\n\r\nexport interface Spec extends TurboModule {\r\n  +getConstants: () => {|\r\n    +HEIGHT: number,\r\n    +DEFAULT_BACKGROUND_COLOR: number,\r\n  |};\r\n  +setColor: (color: number, animated: boolean) => void;\r\n  +setTranslucent: (translucent: boolean) => void;\r\n\r\n  /**\r\n   *  - statusBarStyles can be:\r\n   *    - 'default'\r\n   *    - 'dark-content'\r\n   */\r\n  +setStyle: (statusBarStyle?: ?string) => void;\r\n  +setHidden: (hidden: boolean) => void;\r\n}\r\n\r\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\r\nlet constants = null;\r\n\r\nconst NativeStatusBarManager = {\r\n  getConstants(): {|\r\n    +HEIGHT: number,\r\n    +DEFAULT_BACKGROUND_COLOR?: number,\r\n  |} {\r\n    if (constants == null) {\r\n      constants = NativeModule.getConstants();\r\n    }\r\n    return constants;\r\n  },\r\n\r\n  setColor(color: number, animated: boolean): void {\r\n    NativeModule.setColor(color, animated);\r\n  },\r\n\r\n  setTranslucent(translucent: boolean): void {\r\n    NativeModule.setTranslucent(translucent);\r\n  },\r\n\r\n  /**\r\n   *  - statusBarStyles can be:\r\n   *    - 'default'\r\n   *    - 'dark-content'\r\n   */\r\n  setStyle(statusBarStyle?: ?string): void {\r\n    NativeModule.setStyle(statusBarStyle);\r\n  },\r\n\r\n  setHidden(hidden: boolean): void {\r\n    NativeModule.setHidden(hidden);\r\n  },\r\n};\r\n\r\nexport default NativeStatusBarManager;\r\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAmB;AAmB/B,IAAMC,YAAY,GAAGD,mBAAmB,CAACE,YAAY,CAAO,kBAAkB,CAAC;AAC/E,IAAIC,SAAS,GAAG,IAAI;AAEpB,IAAMC,sBAAsB,GAAG;EAC7BC,YAAY,WAAAA,aAAA,EAGT;IACD,IAAIF,SAAS,IAAI,IAAI,EAAE;MACrBA,SAAS,GAAGF,YAAY,CAACI,YAAY,CAAC,CAAC;IACzC;IACA,OAAOF,SAAS;EAClB,CAAC;EAEDG,QAAQ,WAAAA,SAACC,KAAa,EAAEC,QAAiB,EAAQ;IAC/CP,YAAY,CAACK,QAAQ,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACxC,CAAC;EAEDC,cAAc,WAAAA,eAACC,WAAoB,EAAQ;IACzCT,YAAY,CAACQ,cAAc,CAACC,WAAW,CAAC;EAC1C,CAAC;EAODC,QAAQ,WAAAA,SAACC,cAAwB,EAAQ;IACvCX,YAAY,CAACU,QAAQ,CAACC,cAAc,CAAC;EACvC,CAAC;EAEDC,SAAS,WAAAA,UAACC,MAAe,EAAQ;IAC/Bb,YAAY,CAACY,SAAS,CAACC,MAAM,CAAC;EAChC;AACF,CAAC;AAED,eAAeV,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}