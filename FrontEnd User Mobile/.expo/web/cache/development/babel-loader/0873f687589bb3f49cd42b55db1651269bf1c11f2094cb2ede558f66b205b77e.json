{"ast":null,"code":"import symbolicateStackTrace from \"../../Core/Devtools/symbolicateStackTrace\";\nvar cache = new Map();\nvar sanitize = function sanitize(_ref) {\n  var maybeStack = _ref.stack,\n    codeFrame = _ref.codeFrame;\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  var stack = [];\n  for (var maybeFrame of maybeStack) {\n    var collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse: collapse\n    });\n  }\n  return {\n    stack: stack,\n    codeFrame: codeFrame\n  };\n};\nexport function deleteStack(stack) {\n  cache.delete(stack);\n}\nexport function symbolicate(stack) {\n  var promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n  return promise;\n}","map":{"version":3,"names":["symbolicateStackTrace","cache","Map","sanitize","_ref","maybeStack","stack","codeFrame","Array","isArray","Error","maybeFrame","collapse","push","column","file","lineNumber","methodName","deleteStack","delete","symbolicate","promise","get","then","set"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/LogBox/Data/LogBoxSymbolication.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n * @format\r\n */\r\n\r\nimport type {SymbolicatedStackTrace} from '../../Core/Devtools/symbolicateStackTrace';\r\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\r\n\r\nimport symbolicateStackTrace from '../../Core/Devtools/symbolicateStackTrace';\r\n\r\nexport type Stack = Array<StackFrame>;\r\n\r\nconst cache: Map<Stack, Promise<SymbolicatedStackTrace>> = new Map();\r\n\r\n/**\r\n * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\r\n */\r\nconst sanitize = ({\r\n  stack: maybeStack,\r\n  codeFrame,\r\n}: SymbolicatedStackTrace): SymbolicatedStackTrace => {\r\n  if (!Array.isArray(maybeStack)) {\r\n    throw new Error('Expected stack to be an array.');\r\n  }\r\n  const stack: Array<StackFrame> = [];\r\n  for (const maybeFrame of maybeStack) {\r\n    let collapse = false;\r\n    if ('collapse' in maybeFrame) {\r\n      if (typeof maybeFrame.collapse !== 'boolean') {\r\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\r\n      }\r\n      collapse = maybeFrame.collapse;\r\n    }\r\n    stack.push({\r\n      column: maybeFrame.column,\r\n      file: maybeFrame.file,\r\n      lineNumber: maybeFrame.lineNumber,\r\n      methodName: maybeFrame.methodName,\r\n      collapse,\r\n    });\r\n  }\r\n  return {stack, codeFrame};\r\n};\r\n\r\nexport function deleteStack(stack: Stack): void {\r\n  cache.delete(stack);\r\n}\r\n\r\nexport function symbolicate(stack: Stack): Promise<SymbolicatedStackTrace> {\r\n  let promise = cache.get(stack);\r\n  if (promise == null) {\r\n    promise = symbolicateStackTrace(stack).then(sanitize);\r\n    cache.set(stack, promise);\r\n  }\r\n\r\n  return promise;\r\n}\r\n"],"mappings":"AAaA,OAAOA,qBAAqB;AAI5B,IAAMC,KAAkD,GAAG,IAAIC,GAAG,CAAC,CAAC;AAKpE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAGwC;EAAA,IAF7CC,UAAU,GAAAD,IAAA,CAAjBE,KAAK;IACLC,SAAS,GAAAH,IAAA,CAATG,SAAS;EAET,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,EAAE;IAC9B,MAAM,IAAIK,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACA,IAAMJ,KAAwB,GAAG,EAAE;EACnC,KAAK,IAAMK,UAAU,IAAIN,UAAU,EAAE;IACnC,IAAIO,QAAQ,GAAG,KAAK;IACpB,IAAI,UAAU,IAAID,UAAU,EAAE;MAC5B,IAAI,OAAOA,UAAU,CAACC,QAAQ,KAAK,SAAS,EAAE;QAC5C,MAAM,IAAIF,KAAK,CAAC,kDAAkD,CAAC;MACrE;MACAE,QAAQ,GAAGD,UAAU,CAACC,QAAQ;IAChC;IACAN,KAAK,CAACO,IAAI,CAAC;MACTC,MAAM,EAAEH,UAAU,CAACG,MAAM;MACzBC,IAAI,EAAEJ,UAAU,CAACI,IAAI;MACrBC,UAAU,EAAEL,UAAU,CAACK,UAAU;MACjCC,UAAU,EAAEN,UAAU,CAACM,UAAU;MACjCL,QAAQ,EAARA;IACF,CAAC,CAAC;EACJ;EACA,OAAO;IAACN,KAAK,EAALA,KAAK;IAAEC,SAAS,EAATA;EAAS,CAAC;AAC3B,CAAC;AAED,OAAO,SAASW,WAAWA,CAACZ,KAAY,EAAQ;EAC9CL,KAAK,CAACkB,MAAM,CAACb,KAAK,CAAC;AACrB;AAEA,OAAO,SAASc,WAAWA,CAACd,KAAY,EAAmC;EACzE,IAAIe,OAAO,GAAGpB,KAAK,CAACqB,GAAG,CAAChB,KAAK,CAAC;EAC9B,IAAIe,OAAO,IAAI,IAAI,EAAE;IACnBA,OAAO,GAAGrB,qBAAqB,CAACM,KAAK,CAAC,CAACiB,IAAI,CAACpB,QAAQ,CAAC;IACrDF,KAAK,CAACuB,GAAG,CAAClB,KAAK,EAAEe,OAAO,CAAC;EAC3B;EAEA,OAAOA,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}