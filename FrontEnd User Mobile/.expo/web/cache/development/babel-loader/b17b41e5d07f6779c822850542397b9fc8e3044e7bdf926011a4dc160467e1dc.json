{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessible\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityState\", \"allowFontScaling\", \"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-label\", \"aria-selected\", \"ellipsizeMode\", \"id\", \"nativeID\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onResponderGrant\", \"onResponderMove\", \"onResponderRelease\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onStartShouldSetResponder\", \"pressRetentionOffset\", \"role\", \"suppressHighlighting\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as PressabilityDebug from \"../Pressability/PressabilityDebug\";\nimport usePressability from \"../Pressability/usePressability\";\nimport flattenStyle from \"../StyleSheet/flattenStyle\";\nimport processColor from \"../StyleSheet/processColor\";\nimport { getAccessibilityRoleFromRole } from \"../Utilities/AcessibilityMapping\";\nimport Platform from \"../Utilities/Platform\";\nimport TextAncestor from \"./TextAncestor\";\nimport { NativeText, NativeVirtualText } from \"./TextNativeComponent\";\nimport * as React from 'react';\nimport { useContext, useMemo, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Text = React.forwardRef(function (props, forwardedRef) {\n  var _accessibilityState2, _accessibilityState3, _style, _style3, _style4;\n  var accessible = props.accessible,\n    accessibilityLabel = props.accessibilityLabel,\n    accessibilityRole = props.accessibilityRole,\n    accessibilityState = props.accessibilityState,\n    allowFontScaling = props.allowFontScaling,\n    ariaBusy = props['aria-busy'],\n    ariaChecked = props['aria-checked'],\n    ariaDisabled = props['aria-disabled'],\n    ariaExpanded = props['aria-expanded'],\n    ariaLabel = props['aria-label'],\n    ariaSelected = props['aria-selected'],\n    ellipsizeMode = props.ellipsizeMode,\n    id = props.id,\n    nativeID = props.nativeID,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    _onPressIn = props.onPressIn,\n    _onPressOut = props.onPressOut,\n    _onResponderGrant = props.onResponderGrant,\n    _onResponderMove = props.onResponderMove,\n    _onResponderRelease = props.onResponderRelease,\n    _onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    pressRetentionOffset = props.pressRetentionOffset,\n    role = props.role,\n    suppressHighlighting = props.suppressHighlighting,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isHighlighted = _useState2[0],\n    setHighlighted = _useState2[1];\n  var _accessibilityState;\n  if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n    _accessibilityState = {\n      busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? void 0 : accessibilityState.busy,\n      checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? void 0 : accessibilityState.checked,\n      disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? void 0 : accessibilityState.disabled,\n      expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? void 0 : accessibilityState.expanded,\n      selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? void 0 : accessibilityState.selected\n    };\n  }\n  var _disabled = restProps.disabled != null ? restProps.disabled : (_accessibilityState2 = _accessibilityState) == null ? void 0 : _accessibilityState2.disabled;\n  var nativeTextAccessibilityState = _disabled !== ((_accessibilityState3 = _accessibilityState) == null ? void 0 : _accessibilityState3.disabled) ? _objectSpread(_objectSpread({}, _accessibilityState), {}, {\n    disabled: _disabled\n  }) : _accessibilityState;\n  var isPressable = (onPress != null || onLongPress != null || onStartShouldSetResponder != null) && _disabled !== true;\n  var initialized = useLazyInitialization(isPressable);\n  var config = useMemo(function () {\n    return initialized ? {\n      disabled: !isPressable,\n      pressRectOffset: pressRetentionOffset,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressIn: function onPressIn(event) {\n        setHighlighted(!suppressHighlighting);\n        _onPressIn == null ? void 0 : _onPressIn(event);\n      },\n      onPressOut: function onPressOut(event) {\n        setHighlighted(false);\n        _onPressOut == null ? void 0 : _onPressOut(event);\n      },\n      onResponderTerminationRequest_DEPRECATED: onResponderTerminationRequest,\n      onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder\n    } : null;\n  }, [initialized, isPressable, pressRetentionOffset, onLongPress, onPress, _onPressIn, _onPressOut, onResponderTerminationRequest, onStartShouldSetResponder, suppressHighlighting]);\n  var eventHandlers = usePressability(config);\n  var eventHandlersForText = useMemo(function () {\n    return eventHandlers == null ? null : {\n      onResponderGrant: function onResponderGrant(event) {\n        eventHandlers.onResponderGrant(event);\n        if (_onResponderGrant != null) {\n          _onResponderGrant(event);\n        }\n      },\n      onResponderMove: function onResponderMove(event) {\n        eventHandlers.onResponderMove(event);\n        if (_onResponderMove != null) {\n          _onResponderMove(event);\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        eventHandlers.onResponderRelease(event);\n        if (_onResponderRelease != null) {\n          _onResponderRelease(event);\n        }\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        eventHandlers.onResponderTerminate(event);\n        if (_onResponderTerminate != null) {\n          _onResponderTerminate(event);\n        }\n      },\n      onClick: eventHandlers.onClick,\n      onResponderTerminationRequest: eventHandlers.onResponderTerminationRequest,\n      onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder\n    };\n  }, [eventHandlers, _onResponderGrant, _onResponderMove, _onResponderRelease, _onResponderTerminate]);\n  var selectionColor = restProps.selectionColor == null ? null : processColor(restProps.selectionColor);\n  var style = restProps.style;\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = [restProps.style, {\n        color: 'magenta'\n      }];\n    }\n  }\n  var numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(`'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`);\n    numberOfLines = 0;\n  }\n  var hasTextAncestor = useContext(TextAncestor);\n  var _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible\n  });\n  style = flattenStyle(style);\n  if (typeof ((_style = style) == null ? void 0 : _style.fontWeight) === 'number') {\n    var _style2;\n    style.fontWeight = (_style2 = style) == null ? void 0 : _style2.fontWeight.toString();\n  }\n  var _selectable = restProps.selectable;\n  if (((_style3 = style) == null ? void 0 : _style3.userSelect) != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n    delete style.userSelect;\n  }\n  if (((_style4 = style) == null ? void 0 : _style4.verticalAlign) != null) {\n    style.textAlignVertical = verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n    delete style.verticalAlign;\n  }\n  var _hasOnPressOrOnLongPress = props.onPress != null || props.onLongPress != null;\n  return hasTextAncestor ? _jsx(NativeVirtualText, _objectSpread(_objectSpread(_objectSpread({}, restProps), eventHandlersForText), {}, {\n    accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n    accessibilityRole: role ? getAccessibilityRoleFromRole(role) : accessibilityRole,\n    accessibilityState: _accessibilityState,\n    isHighlighted: isHighlighted,\n    isPressable: isPressable,\n    nativeID: id != null ? id : nativeID,\n    numberOfLines: numberOfLines,\n    ref: forwardedRef,\n    selectable: _selectable,\n    selectionColor: selectionColor,\n    style: style\n  })) : _jsx(TextAncestor.Provider, {\n    value: true,\n    children: _jsx(NativeText, _objectSpread(_objectSpread(_objectSpread({}, restProps), eventHandlersForText), {}, {\n      accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n      accessibilityRole: role ? getAccessibilityRoleFromRole(role) : accessibilityRole,\n      accessibilityState: nativeTextAccessibilityState,\n      accessible: accessible == null && Platform.OS === 'android' ? _hasOnPressOrOnLongPress : _accessible,\n      allowFontScaling: allowFontScaling !== false,\n      disabled: _disabled,\n      ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',\n      isHighlighted: isHighlighted,\n      nativeID: id != null ? id : nativeID,\n      numberOfLines: numberOfLines,\n      ref: forwardedRef,\n      selectable: _selectable,\n      selectionColor: selectionColor,\n      style: style\n    }))\n  });\n});\nText.displayName = 'Text';\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\nfunction useLazyInitialization(newValue) {\n  var _useState3 = useState(newValue),\n    _useState4 = _slicedToArray(_useState3, 2),\n    oldValue = _useState4[0],\n    setValue = _useState4[1];\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\nvar userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true\n};\nvar verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center'\n};\nmodule.exports = Text;","map":{"version":3,"names":["PressabilityDebug","usePressability","flattenStyle","processColor","getAccessibilityRoleFromRole","Platform","TextAncestor","NativeText","NativeVirtualText","React","useContext","useMemo","useState","jsx","_jsx","Text","forwardRef","props","forwardedRef","_accessibilityState2","_accessibilityState3","_style","_style3","_style4","accessible","accessibilityLabel","accessibilityRole","accessibilityState","allowFontScaling","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","ellipsizeMode","id","nativeID","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","role","suppressHighlighting","restProps","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","isHighlighted","setHighlighted","_accessibilityState","busy","checked","disabled","expanded","selected","_disabled","nativeTextAccessibilityState","_objectSpread","isPressable","initialized","useLazyInitialization","config","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","eventHandlersForText","onClick","selectionColor","style","__DEV__","isEnabled","color","numberOfLines","console","error","hasTextAncestor","_accessible","select","ios","default","fontWeight","_style2","toString","_selectable","selectable","userSelect","userSelectToSelectableMap","verticalAlign","textAlignVertical","verticalAlignToTextAlignVerticalMap","_hasOnPressOrOnLongPress","ref","Provider","value","children","OS","displayName","propTypes","require","TextPropTypes","newValue","_useState3","_useState4","oldValue","setValue","auto","text","none","contain","all","top","bottom","middle","module","exports"],"sources":["D:/Users/julian/GIT/CoffeeLoyalty/FrontEnd User Mobile/node_modules/react-native/Libraries/Text/Text.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict-local\r\n * @format\r\n */\r\n\r\nimport type {PressEvent} from '../Types/CoreEventTypes';\r\nimport type {TextProps} from './TextProps';\r\n\r\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\r\nimport usePressability from '../Pressability/usePressability';\r\nimport flattenStyle from '../StyleSheet/flattenStyle';\r\nimport processColor from '../StyleSheet/processColor';\r\nimport {getAccessibilityRoleFromRole} from '../Utilities/AcessibilityMapping';\r\nimport Platform from '../Utilities/Platform';\r\nimport TextAncestor from './TextAncestor';\r\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\r\nimport * as React from 'react';\r\nimport {useContext, useMemo, useState} from 'react';\r\n\r\n/**\r\n * Text is the fundamental component for displaying text.\r\n *\r\n * @see https://reactnative.dev/docs/text\r\n */\r\nconst Text: React.AbstractComponent<\r\n  TextProps,\r\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\r\n> = React.forwardRef((props: TextProps, forwardedRef) => {\r\n  const {\r\n    accessible,\r\n    accessibilityLabel,\r\n    accessibilityRole,\r\n    accessibilityState,\r\n    allowFontScaling,\r\n    'aria-busy': ariaBusy,\r\n    'aria-checked': ariaChecked,\r\n    'aria-disabled': ariaDisabled,\r\n    'aria-expanded': ariaExpanded,\r\n    'aria-label': ariaLabel,\r\n    'aria-selected': ariaSelected,\r\n    ellipsizeMode,\r\n    id,\r\n    nativeID,\r\n    onLongPress,\r\n    onPress,\r\n    onPressIn,\r\n    onPressOut,\r\n    onResponderGrant,\r\n    onResponderMove,\r\n    onResponderRelease,\r\n    onResponderTerminate,\r\n    onResponderTerminationRequest,\r\n    onStartShouldSetResponder,\r\n    pressRetentionOffset,\r\n    role,\r\n    suppressHighlighting,\r\n    ...restProps\r\n  } = props;\r\n\r\n  const [isHighlighted, setHighlighted] = useState(false);\r\n\r\n  let _accessibilityState;\r\n  if (\r\n    accessibilityState != null ||\r\n    ariaBusy != null ||\r\n    ariaChecked != null ||\r\n    ariaDisabled != null ||\r\n    ariaExpanded != null ||\r\n    ariaSelected != null\r\n  ) {\r\n    _accessibilityState = {\r\n      busy: ariaBusy ?? accessibilityState?.busy,\r\n      checked: ariaChecked ?? accessibilityState?.checked,\r\n      disabled: ariaDisabled ?? accessibilityState?.disabled,\r\n      expanded: ariaExpanded ?? accessibilityState?.expanded,\r\n      selected: ariaSelected ?? accessibilityState?.selected,\r\n    };\r\n  }\r\n\r\n  const _disabled =\r\n    restProps.disabled != null\r\n      ? restProps.disabled\r\n      : _accessibilityState?.disabled;\r\n\r\n  const nativeTextAccessibilityState =\r\n    _disabled !== _accessibilityState?.disabled\r\n      ? {..._accessibilityState, disabled: _disabled}\r\n      : _accessibilityState;\r\n\r\n  const isPressable =\r\n    (onPress != null ||\r\n      onLongPress != null ||\r\n      onStartShouldSetResponder != null) &&\r\n    _disabled !== true;\r\n\r\n  const initialized = useLazyInitialization(isPressable);\r\n  const config = useMemo(\r\n    () =>\r\n      initialized\r\n        ? {\r\n            disabled: !isPressable,\r\n            pressRectOffset: pressRetentionOffset,\r\n            onLongPress,\r\n            onPress,\r\n            onPressIn(event: PressEvent) {\r\n              setHighlighted(!suppressHighlighting);\r\n              onPressIn?.(event);\r\n            },\r\n            onPressOut(event: PressEvent) {\r\n              setHighlighted(false);\r\n              onPressOut?.(event);\r\n            },\r\n            onResponderTerminationRequest_DEPRECATED:\r\n              onResponderTerminationRequest,\r\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\r\n          }\r\n        : null,\r\n    [\r\n      initialized,\r\n      isPressable,\r\n      pressRetentionOffset,\r\n      onLongPress,\r\n      onPress,\r\n      onPressIn,\r\n      onPressOut,\r\n      onResponderTerminationRequest,\r\n      onStartShouldSetResponder,\r\n      suppressHighlighting,\r\n    ],\r\n  );\r\n\r\n  const eventHandlers = usePressability(config);\r\n  const eventHandlersForText = useMemo(\r\n    () =>\r\n      eventHandlers == null\r\n        ? null\r\n        : {\r\n            onResponderGrant(event: PressEvent) {\r\n              eventHandlers.onResponderGrant(event);\r\n              if (onResponderGrant != null) {\r\n                onResponderGrant(event);\r\n              }\r\n            },\r\n            onResponderMove(event: PressEvent) {\r\n              eventHandlers.onResponderMove(event);\r\n              if (onResponderMove != null) {\r\n                onResponderMove(event);\r\n              }\r\n            },\r\n            onResponderRelease(event: PressEvent) {\r\n              eventHandlers.onResponderRelease(event);\r\n              if (onResponderRelease != null) {\r\n                onResponderRelease(event);\r\n              }\r\n            },\r\n            onResponderTerminate(event: PressEvent) {\r\n              eventHandlers.onResponderTerminate(event);\r\n              if (onResponderTerminate != null) {\r\n                onResponderTerminate(event);\r\n              }\r\n            },\r\n            onClick: eventHandlers.onClick,\r\n            onResponderTerminationRequest:\r\n              eventHandlers.onResponderTerminationRequest,\r\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\r\n          },\r\n    [\r\n      eventHandlers,\r\n      onResponderGrant,\r\n      onResponderMove,\r\n      onResponderRelease,\r\n      onResponderTerminate,\r\n    ],\r\n  );\r\n\r\n  // TODO: Move this processing to the view configuration.\r\n  const selectionColor =\r\n    restProps.selectionColor == null\r\n      ? null\r\n      : processColor(restProps.selectionColor);\r\n\r\n  let style = restProps.style;\r\n\r\n  if (__DEV__) {\r\n    if (PressabilityDebug.isEnabled() && onPress != null) {\r\n      style = [restProps.style, {color: 'magenta'}];\r\n    }\r\n  }\r\n\r\n  let numberOfLines = restProps.numberOfLines;\r\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\r\n    console.error(\r\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\r\n    );\r\n    numberOfLines = 0;\r\n  }\r\n\r\n  const hasTextAncestor = useContext(TextAncestor);\r\n\r\n  const _accessible = Platform.select({\r\n    ios: accessible !== false,\r\n    default: accessible,\r\n  });\r\n\r\n  // $FlowFixMe[underconstrained-implicit-instantiation]\r\n  style = flattenStyle(style);\r\n\r\n  if (typeof style?.fontWeight === 'number') {\r\n    style.fontWeight = style?.fontWeight.toString();\r\n  }\r\n\r\n  let _selectable = restProps.selectable;\r\n  if (style?.userSelect != null) {\r\n    _selectable = userSelectToSelectableMap[style.userSelect];\r\n    delete style.userSelect;\r\n  }\r\n\r\n  if (style?.verticalAlign != null) {\r\n    style.textAlignVertical =\r\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\r\n    delete style.verticalAlign;\r\n  }\r\n\r\n  const _hasOnPressOrOnLongPress =\r\n    props.onPress != null || props.onLongPress != null;\r\n\r\n  return hasTextAncestor ? (\r\n    <NativeVirtualText\r\n      {...restProps}\r\n      {...eventHandlersForText}\r\n      accessibilityLabel={ariaLabel ?? accessibilityLabel}\r\n      accessibilityRole={\r\n        role ? getAccessibilityRoleFromRole(role) : accessibilityRole\r\n      }\r\n      accessibilityState={_accessibilityState}\r\n      isHighlighted={isHighlighted}\r\n      isPressable={isPressable}\r\n      nativeID={id ?? nativeID}\r\n      numberOfLines={numberOfLines}\r\n      ref={forwardedRef}\r\n      selectable={_selectable}\r\n      selectionColor={selectionColor}\r\n      style={style}\r\n    />\r\n  ) : (\r\n    <TextAncestor.Provider value={true}>\r\n      <NativeText\r\n        {...restProps}\r\n        {...eventHandlersForText}\r\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\r\n        accessibilityRole={\r\n          role ? getAccessibilityRoleFromRole(role) : accessibilityRole\r\n        }\r\n        accessibilityState={nativeTextAccessibilityState}\r\n        accessible={\r\n          accessible == null && Platform.OS === 'android'\r\n            ? _hasOnPressOrOnLongPress\r\n            : _accessible\r\n        }\r\n        allowFontScaling={allowFontScaling !== false}\r\n        disabled={_disabled}\r\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\r\n        isHighlighted={isHighlighted}\r\n        nativeID={id ?? nativeID}\r\n        numberOfLines={numberOfLines}\r\n        ref={forwardedRef}\r\n        selectable={_selectable}\r\n        selectionColor={selectionColor}\r\n        style={style}\r\n      />\r\n    </TextAncestor.Provider>\r\n  );\r\n});\r\n\r\nText.displayName = 'Text';\r\n\r\n/**\r\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\r\n * releases. This is deprecated and will be removed in the future.\r\n */\r\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\r\n\r\n/**\r\n * Returns false until the first time `newValue` is true, after which this will\r\n * always return true. This is necessary to lazily initialize `Pressability` so\r\n * we do not eagerly create one for every pressable `Text` component.\r\n */\r\nfunction useLazyInitialization(newValue: boolean): boolean {\r\n  const [oldValue, setValue] = useState(newValue);\r\n  if (!oldValue && newValue) {\r\n    setValue(newValue);\r\n  }\r\n  return oldValue;\r\n}\r\n\r\nconst userSelectToSelectableMap = {\r\n  auto: true,\r\n  text: true,\r\n  none: false,\r\n  contain: true,\r\n  all: true,\r\n};\r\n\r\nconst verticalAlignToTextAlignVerticalMap = {\r\n  auto: 'auto',\r\n  top: 'top',\r\n  bottom: 'bottom',\r\n  middle: 'center',\r\n};\r\n\r\nmodule.exports = Text;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}